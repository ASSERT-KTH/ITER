bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][i];  for(int  i  =  0;  i  <  c.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][i];  for(int  i  =  0;  i  <  c.length;  ++i)  {  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[stages][i];  for(int  i  =  0;  i  <  c.length;  ++i)  {	  if(stages!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    final    double[][]    yDotK    =    new    double[stages][i];    for(int    i    =    0;    i    <    c.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
2	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c][3];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c][3];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c][3];	  final    double[][]    yDotK    =    new    double[stages][3];    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
3	[BUG]  [BUGGY]  final  int[][]  stages  =  t0.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  stages  =  t0.length;  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  stages  =  t0.length;	  final    double[][]    stages    =    t0.length;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
4	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[y.length][];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  yDotK  =  new  int[y.length][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  yDotK  =  new  int[y.length][];	  final    double[][]    yDotK    =    new    double[y.length][];    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
5	[BUG]  [BUGGY]  final  int  yDotK  =  new  int[y.length][];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int  yDotK  =  new  int[y.length][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int  yDotK  =  new  int[y.length][];	  final    double[][]    yDotK    =    new    double[y.length][];    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
6	[BUG]  [BUGGY]  final  int  yDotK  =  new  double[y.length][];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int  yDotK  =  new  double[y.length][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int  yDotK  =  new  double[y.length][];	  final    double[][]    yDotK    =    new    double[y.length][];    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
7	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages.length;  ++i)  {  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages.length;  ++i)  {	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    Stages.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
8	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  Stages.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  Stages.length;  ++i)  {  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  Stages.length;  ++i)  {	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    Stages.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
9	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][2];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][2];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c.length][2];	  final    double[][]    yDotK    =    new    double[c.length][1];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
10	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][3];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][3];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c.length][3];	  final    double[][]    yDotK    =    new    double[c.length][1];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(c,  0,  y0,  0,  y0.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  System.arraycopy(c,  0,  y0,  0,  y0.length);  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	System.arraycopy(c,  0,  y0,  0,  y0.length);	  System.arraycopy(y0,    0,    y,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
12	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y,  0,  c.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  System.arraycopy(y0,  0,  y,  0,  c.length);  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	System.arraycopy(y0,  0,  y,  0,  c.length);	  System.arraycopy(y0,    0,    y,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
13	[BUG]  [BUGGY]  System.arraycopy(c,  0,  y0,  0,  c.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  System.arraycopy(c,  0,  y0,  0,  c.length);  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	System.arraycopy(c,  0,  y0,  0,  c.length);	  System.arraycopy(y0,    0,    y,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  y0.length);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  y0.length);  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	System.arraycopy(y0,  0,  y1,  0,  y0.length);	  System.arraycopy(y0,    0,    y,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
15	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stages  *  1][];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stages  *  1][];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stages  *  1][];	  final    double[][]    stages    =    new    double[stages    +    1][];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
16	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stages  +  2][];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stages  +  2][];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stages  +  2][];	  final    double[][]    stages    =    new    double[stages    +    1][];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
17	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {	  final    double[][]    yDotk    =    new    double[stages][];    for(int    i    =    0;    i    <    c.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
18	[BUG]  [BUGGY]  final  double[][]  yDotk  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotk  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotk  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {	  final    double[][]    yDotk    =    new    double[stages][];    for(int    i    =    0;    i    <    c.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
19	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[c.length  +  4][];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[c.length  +  4][];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[c.length  +  4][];	  final    double[][]    stages    =    new    double[c.length    +    2][];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
20	[BUG]  [BUGGY]  if(c.length  ==  0)  {  if(t  >  t0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c.length  ==  0)  {  if(t  >  t0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c.length  ==  0)  {  if(t  >  t0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }	  if(t    >    t0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
21	[BUG]  [BUGGY]  if(c.length  ==  0)  {  if(t  >  t0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c.length  ==  0)  {  if(t  >  t0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c.length  ==  0)  {  if(t  >  t0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  }	  if(t    >    t0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
22	[BUG]  [BUGGY]  Context.checkState(t  >  t0);  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  Context.checkState(t  >  t0);  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	Context.checkState(t  >  t0);  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }	  if(t    >    t0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
23	[BUG]  [BUGGY]  final  int  yDotK  =  new  int[a.length][];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int  yDotK  =  new  int[a.length][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int  yDotK  =  new  int[a.length][];	  final    double[][]    yDotK    =    new    double[a.length][];    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
24	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[a.length][];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  yDotK  =  new  int[a.length][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  yDotK  =  new  int[a.length][];	  final    double[][]    yDotK    =    new    double[a.length][];    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
25	[BUG]  [BUGGY]  final  int  yDotK  =  new  double[a.length][];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int  yDotK  =  new  double[a.length][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int  yDotK  =  new  double[a.length][];	  final    double[][]    yDotK    =    new    double[a.length][];    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
26	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[stack.length][];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  yDotK  =  new  int[stack.length][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  yDotK  =  new  int[stack.length][];	  final    double[][]    yDotK    =    new    double[stack.length][];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
27	[BUG]  [BUGGY]  final  int  yDotK  =  new  int[stack.length][];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int  yDotK  =  new  int[stack.length][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int  yDotK  =  new  int[stack.length][];	  final    double[][]    yDotK    =    new    double[stack.length][];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
28	[BUG]  [BUGGY]  final  int  yDotK  =  new  double[stack.length][];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int  yDotK  =  new  double[stack.length][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int  yDotK  =  new  double[stack.length][];	  final    double[][]    yDotK    =    new    double[stack.length][];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
29	[BUG]  [BUGGY]  final  int[]stages  =  new  int[y0.length][1];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[]stages  =  new  int[y0.length][1];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[]stages  =  new  int[y0.length][1];	  final    double[][]stages    =    new    double[y0.length][1];    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
30	[BUG]  [BUGGY]  final  int[][]stages  =  new  int[y0.length][1];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]stages  =  new  int[y0.length][1];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]stages  =  new  int[y0.length][1];	  final    double[][]stages    =    new    double[y0.length][1];    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
31	[BUG]  [BUGGY]  final  double[][]stages  =  new  double[y0.length][0];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]stages  =  new  double[y0.length][0];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]stages  =  new  double[y0.length][0];	  final    double[][]stages    =    new    double[y0.length][1];    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  System.arraycopy(c,  0,  c,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  System.arraycopy(c,  0,  c,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  System.arraycopy(c,  0,  c,  0,  c.length);  }	  if(t    >    t0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    System.arraycopy(c,    0,    c,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  System.arraycopy(b,  0,  c,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  System.arraycopy(b,  0,  c,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  System.arraycopy(b,  0,  c,  0,  c.length);  }	  if(t    >    t0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    System.arraycopy(c,    0,    c,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
34	[BUG]  [BUGGY]  final  int[][]  stages  =  new  int[stack.length  +  1][];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  stages  =  new  int[stack.length  +  1][];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  stages  =  new  int[stack.length  +  1][];	  final    double[][]    stages    =    new    double[stack.length    +    1][];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
35	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stack.length  +  2][];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stack.length  +  2][];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stack.length  +  2][];	  final    double[][]    stages    =    new    double[stack.length    +    1][];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
36	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[str.length  +  1][];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[str.length  +  1][];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[str.length  +  1][];	  final    double[][]    stages    =    new    double[strates.length    +    1][];    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
37	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(t0,  c);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(t0,  c);  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	StageHandler  handler  =  prototype.getStepHandler(t0,  c);	  StageHandler    handler    =    prototype.getStepHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y0,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
39	[BUG]  [BUGGY]  final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y0,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
40	[BUG]  [BUGGY]  final  int[][]  stages  =  y0.length;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  stages  =  y0.length;  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  stages  =  y0.length;	  final    double[][]    stages    =    y0.length;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
41	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  1][0];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  1][0];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c.length  +  1][0];	  final    double[][]    yDotK    =    new    double[c.length][0];    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
42	[BUG]  [BUGGY]  final  int[][]  stages  =  t.length;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  stages  =  t.length;  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  stages  =  t.length;	  final    double[][]    stages    =    t.length;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
43	[BUG]  [BUGGY]  final  int[][]  stages  =  y.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  stages  =  y.length;  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  stages  =  y.length;	  final    double[][]    stages    =    y.length;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
44	[BUG]  [BUGGY]  final  double[][]  stages  =  y.length  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  y.length  +  1;  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  y.length  +  1;	  final    double[][]    stages    =    y.length;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
45	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  3][];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  3][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c.length  +  3][];	  final    double[][]    yDotK    =    new    double[c.length    +    2][];    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
46	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  4][];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  4][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c.length  +  4][];	  final    double[][]    yDotK    =    new    double[c.length    +    2][];    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
47	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(c,  stages);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(c,  stages);  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	StageHandler  handler  =  prototype.getStepHandler(c,  stages);	  StageHandler    handler    =    prototype.getStepHandler(c);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages.length;  ++i)  {  System.arraycopy(stages,  0,  stages[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  stages.length;  ++i)  {  System.arraycopy(stages,  0,  stages[i]);  }  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  stages.length;  ++i)  {  System.arraycopy(stages,  0,  stages[i]);  }	  if(stages!=    null)    {    for(int    i    =    0;    i    <    Stages.length;    ++i)    {    System.arraycopy(stages,    0,    stages[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
49	[BUG]  [BUGGY]  if(stages!=  null)  {  for(int  i  =  0;  i  <  stages.length;  ++i)  {  System.arraycopy(stages,  0,  stages[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(stages!=  null)  {  for(int  i  =  0;  i  <  stages.length;  ++i)  {  System.arraycopy(stages,  0,  stages[i]);  }  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(stages!=  null)  {  for(int  i  =  0;  i  <  stages.length;  ++i)  {  System.arraycopy(stages,  0,  stages[i]);  }	  if(stages!=    null)    {    for(int    i    =    0;    i    <    Stages.length;    ++i)    {    System.arraycopy(stages,    0,    stages[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  Stages.length;  ++i)  {  System.arraycopy(stages,  0,  stages[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  Stages.length;  ++i)  {  System.arraycopy(stages,  0,  stages[i]);  }  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  Stages.length;  ++i)  {  System.arraycopy(stages,  0,  stages[i]);  }	  if(stages!=    null)    {    for(int    i    =    0;    i    <    Stages.length;    ++i)    {    System.arraycopy(stages,    0,    stages[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
52	[BUG]  [BUGGY]  final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
53	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[c.length  +  1];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  yDotK  [i]  =  new  double[c.length  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	yDotK  [i]  =  new  double[c.length  +  1];	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
54	[BUG]  [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
55	[BUG]  [BUGGY]  final  int[][]stages  =  new  int[c.length][1];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]stages  =  new  int[c.length][1];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]stages  =  new  int[c.length][1];	  final    int[][]stages    =    new    int[t0.length][1];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
56	[BUG]  [BUGGY]  final  int[][]  stages  =  y0.length  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  stages  =  y0.length  +  1;  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  stages  =  y0.length  +  1;	  final    double[][]    stages    =    y0.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
57	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(stages,  c);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(stages,  c);  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	StageHandler  handler  =  prototype.getStepHandler(stages,  c);	  StageHandler    handler    =    prototype.getStepHandler(stages);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
58	[BUG]  [BUGGY]  if(c.length  ==  1)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c.length  ==  1)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c.length  ==  1)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }	  if(c.length    ==    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
59	[BUG]  [BUGGY]  if(c.length!=  1)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c.length!=  1)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c.length!=  1)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }	  if(c.length    ==    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  System.arraycopy(stages,  0,  c[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  System.arraycopy(stages,  0,  c[i]);  }  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  System.arraycopy(stages,  0,  c[i]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    System.arraycopy(stages,    0,    stages[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  System.arraycopy(stages,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  System.arraycopy(stages,  0,  c.length);  }  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  System.arraycopy(stages,  0,  c.length);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    System.arraycopy(stages,    0,    stages[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
62	[BUG]  [BUGGY]  final  double[][]stages  =  new  double[c.length][0];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]stages  =  new  double[c.length][0];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]stages  =  new  double[c.length][0];	  final    double[][]stages    =    new    double[c.length][1];    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
63	[BUG]  [BUGGY]  final  double[][]stages  =  new  double[c.length][2];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]stages  =  new  double[c.length][2];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]stages  =  new  double[c.length][2];	  final    double[][]stages    =    new    double[c.length][1];    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
64	[BUG]  [BUGGY]  final  int[][]  stages  =  c.length  +  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  stages  =  c.length  +  2;  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  stages  =  c.length  +  2;	  final    int[][]    stages    =    c.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
65	[BUG]  [BUGGY]  final  int[][]  stages  =  c.length  +  3;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  stages  =  c.length  +  3;  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  stages  =  c.length  +  3;	  final    int[][]    stages    =    c.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
66	[BUG]  [BUGGY]  final  int[][]  stages  =  new  int[t0.length  +  1][];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  stages  =  new  int[t0.length  +  1][];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  stages  =  new  int[t0.length  +  1][];	  final    double[][]    stages    =    new    double[t0.length    +    1][];    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
67	[BUG]  [BUGGY]  final  int[][]  stages  =  new  double[t0.length  +  1][];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  stages  =  new  double[t0.length  +  1][];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  stages  =  new  double[t0.length  +  1][];	  final    double[][]    stages    =    new    double[t0.length    +    1][];    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
68	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(t0,  stages,  c);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(t0,  stages,  c);  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	StageHandler  handler  =  prototype.getStepHandler(t0,  stages,  c);	  StageHandler    handler    =    prototype.getStepHandler(t0,    stages);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
69	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stages.length  +  2][];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stages.length  +  2][];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stages.length  +  2][];	  final    double[][]    stages    =    new    double[stages.length    +    1][];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
70	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stages.length  +  3][];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stages.length  +  3][];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stages.length  +  3][];	  final    double[][]    stages    =    new    double[stages.length    +    1][];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
71	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stages.length  +  2][0];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stages.length  +  2][0];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stages.length  +  2][0];	  final    double[][]    stages    =    new    double[stages.length    +    1][0];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
72	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stages.length  +  3][0];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stages.length  +  3][0];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stages.length  +  3][0];	  final    double[][]    stages    =    new    double[stages.length    +    1][0];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
73	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  1];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c.length  +  1];	  final    double[][]    yDotK    =    new    double[c.length];    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
74	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  -  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  -  1];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c.length  -  1];	  final    double[][]    yDotK    =    new    double[c.length];    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
75	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  2];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  2];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c.length  +  2];	  final    double[][]    yDotK    =    new    double[c.length];    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
76	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  *  2];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  *  2];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c.length  *  2];	  final    double[][]    yDotK    =    new    double[c.length];    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
77	[BUG]  [BUGGY]  final  int[][]  stages  =  t.length  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  stages  =  t.length  +  1;  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  stages  =  t.length  +  1;	  final    double[][]    stages    =    t.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
78	[BUG]  [BUGGY]  final  double[][]  stages  =  t.length  +  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  t.length  +  2;  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  t.length  +  2;	  final    double[][]    stages    =    t.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
79	[BUG]  [BUGGY]  final  double[][]  yTmp  =(double[][])c.clone();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yTmp  =(double[][])c.clone();  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yTmp  =(double[][])c.clone();	  final    double[][]    yTmp    =(double[][])equations.clone();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
80	[BUG]  [BUGGY]  final  double[][]  yTmp  =(double[][])a.clone();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yTmp  =(double[][])a.clone();  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yTmp  =(double[][])a.clone();	  final    double[][]    yTmp    =(double[][])equations.clone();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
81	[BUG]  [BUGGY]  final  double[][]  yTmp  =(double[][])equires.clone();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yTmp  =(double[][])equires.clone();  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yTmp  =(double[][])equires.clone();	  final    double[][]    yTmp    =(double[][])equations.clone();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
82	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stages  *  1][0];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stages  *  1][0];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stages  *  1][0];	  final    double[][]    stages    =    new    double[stages    +    1][0];    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
83	[BUG]  [BUGGY]  final  int[][]  stages  =  t0.length  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  stages  =  t0.length  +  1;  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  stages  =  t0.length  +  1;	  final    double[][]    stages    =    t0.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
84	[BUG]  [BUGGY]  final  double[][]  stages  =  a.length  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  a.length  +  1;  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  a.length  +  1;	  final    double[][]    stages    =    a.length;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
85	[BUG]  [BUGGY]  final  int[][]  stages  =  a.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  stages  =  a.length;  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  stages  =  a.length;	  final    double[][]    stages    =    a.length;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
86	[BUG]  [BUGGY]  final  int[][]  stages  =  new  int[stack.length  +  1][1];  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  stages  =  new  int[stack.length  +  1][1];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  stages  =  new  int[stack.length  +  1][1];	  final    double[][]    stages    =    new    double[stack.length    +    1][1];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
87	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stack.length  +  2][1];  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stack.length  +  2][1];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stack.length  +  2][1];	  final    double[][]    stages    =    new    double[stack.length    +    1][1];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
88	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
89	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
90	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  Stages;  ++i)  {	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    Stages;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
91	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    Stages;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
92	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  -  2][];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  -  2][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c.length  -  2][];	  final    double[][]    yDotK    =    new    double[c.length    -    1][];    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
93	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  -  3][];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  -  3][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c.length  -  3][];	  final    double[][]    yDotK    =    new    double[c.length    -    1][];    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
94	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c1][0];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c1][0];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c1][0];	  final    double[][]    yDotK    =    new    double[c][0];    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
95	[BUG]  [BUGGY]  final  double[][]stages  =  new  double[stages.length][0];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]stages  =  new  double[stages.length][0];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]stages  =  new  double[stages.length][0];	  final    double[][]stages    =    new    double[stages.length][1];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
96	[BUG]  [BUGGY]  final  double[][]stages  =  new  double[stages.length][2];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]stages  =  new  double[stages.length][2];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]stages  =  new  double[stages.length][2];	  final    double[][]stages    =    new    double[stages.length][1];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
97	[BUG]  [BUGGY]  final  int[][]stages  =  new  int[t0.length][0];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]stages  =  new  int[t0.length][0];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]stages  =  new  int[t0.length][0];	  final    double[][]stages    =    new    double[t0.length][0];    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
98	[BUG]  [BUGGY]  final  int[]stages  =  new  int[t0.length][0];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[]stages  =  new  int[t0.length][0];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[]stages  =  new  int[t0.length][0];	  final    double[][]stages    =    new    double[t0.length][0];    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
99	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStdHandler(c);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  StageHandler  handler  =  prototype.getStdHandler(c);  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	StageHandler  handler  =  prototype.getStdHandler(c);	  StageHandler    handler    =    prototype.getStdHandler();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
100	[BUG]  [BUGGY]  StageHandler  handler  =  c.getStdHandler();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  StageHandler  handler  =  c.getStdHandler();  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	StageHandler  handler  =  c.getStdHandler();	  StageHandler    handler    =    prototype.getStdHandler();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
101	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getHandler();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  StageHandler  handler  =  prototype.getHandler();  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	StageHandler  handler  =  prototype.getHandler();	  StageHandler    handler    =    prototype.getStdHandler();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
102	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  2];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  2];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  2];  System.arraycopy(y,  0,  y,  0,  c.length);  }	  if(c.length    ==    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
103	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  yDot  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  yDot  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  yDot  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }	  if(c.length    ==    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
104	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotk  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotk  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  yDotk  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }	  if(c.length    ==    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
105	[BUG]  [BUGGY]  System.arraycopy(c,  0,  y,  0,  c.length  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  System.arraycopy(c,  0,  y,  0,  c.length  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	System.arraycopy(c,  0,  y,  0,  c.length  +  1);	  System.arraycopy(c,    0,    y,    0,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
106	[BUG]  [BUGGY]  System.arraycopy(c,  0,  b,  0,  c.length);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  System.arraycopy(c,  0,  b,  0,  c.length);  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	System.arraycopy(c,  0,  b,  0,  c.length);	  System.arraycopy(c,    0,    y,    0,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
107	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[c.length  +  4][0];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[c.length  +  4][0];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[c.length  +  4][0];	  final    double[][]    stages    =    new    double[c.length    +    3][0];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
108	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stages.length  +  2][1];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stages.length  +  2][1];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stages.length  +  2][1];	  final    double[][]    stages    =    new    double[stages.length    +    1][1];    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
109	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages.length;  ++i)  {  System.arraycopy(stages[i],  0,  stages[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  stages.length;  ++i)  {  System.arraycopy(stages[i],  0,  stages[i]);  }  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  stages.length;  ++i)  {  System.arraycopy(stages[i],  0,  stages[i]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    System.arraycopy(stages[i],    0,    stages[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
110	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  System.arraycopy(stages[i],  0,  stages[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  System.arraycopy(stages[i],  0,  stages[i]);  }  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  System.arraycopy(stages[i],  0,  stages[i]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    System.arraycopy(stages[i],    0,    stages[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
111	[BUG]  [BUGGY]  System.arraycopy(c,  0,  c,  0,  c.length  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  System.arraycopy(c,  0,  c,  0,  c.length  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	System.arraycopy(c,  0,  c,  0,  c.length  +  1);	  System.arraycopy(c,    0,    c,    0,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(c,  0,  c,  0,  c.length  +  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  System.arraycopy(c,  0,  c,  0,  c.length  +  2);  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	System.arraycopy(c,  0,  c,  0,  c.length  +  2);	  System.arraycopy(c,    0,    c,    0,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
113	[BUG]  [BUGGY]  System.arraycopy(c,  0,  c,  1,  c.length);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  System.arraycopy(c,  0,  c,  1,  c.length);  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	System.arraycopy(c,  0,  c,  1,  c.length);	  System.arraycopy(c,    0,    c,    0,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
115	[BUG]  [BUGGY]  final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  2];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  2];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  2];  System.arraycopy(y,  0,  y,  0,  c.length);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
117	[BUG]  [BUGGY]  final  int[][]  stages  =  new  double[t0.length  +  1][0];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  stages  =  new  double[t0.length  +  1][0];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  stages  =  new  double[t0.length  +  1][0];	  final    double[][]    stages    =    new    double[t0.length    +    1][0];    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
118	[BUG]  [BUGGY]  final  int[][]  stages  =  new  int[t0.length  +  1][0];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  stages  =  new  int[t0.length  +  1][0];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  stages  =  new  int[t0.length  +  1][0];	  final    double[][]    stages    =    new    double[t0.length    +    1][0];    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
119	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stages  *  1][1];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stages  *  1][1];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stages  *  1][1];	  final    double[][]    stages    =    new    double[stages    +    1][1];    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
120	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stages  +  1][2];  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stages  +  1][2];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stages  +  1][2];	  final    double[][]    stages    =    new    double[stages    +    1][1];    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
121	[BUG]  [BUGGY]  final  int  i  =  0;  i  <  stages.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int  i  =  0;  i  <  stages.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int  i  =  0;  i  <  stages.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }	  for(int    i    =    0;    i    <    stages.length;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y0,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
122	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  2];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  stages.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  2];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  stages.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  2];  System.arraycopy(y0,  0,  y,  0,  c.length);  }	  for(int    i    =    0;    i    <    stages.length;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y0,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
123	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[y0.length][];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  yDotK  =  new  int[y0.length][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  yDotK  =  new  int[y0.length][];	  final    double[][]    yDotK    =    new    double[y0.length][];    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
124	[BUG]  [BUGGY]  final  int  yDotK  =  new  int[y0.length][];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int  yDotK  =  new  int[y0.length][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int  yDotK  =  new  int[y0.length][];	  final    double[][]    yDotK    =    new    double[y0.length][];    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
125	[BUG]  [BUGGY]  final  int  yDotK  =  new  double[y0.length][];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int  yDotK  =  new  double[y0.length][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int  yDotK  =  new  double[y0.length][];	  final    double[][]    yDotK    =    new    double[y0.length][];    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
126	[BUG]  [BUGGY]  final  int[][]  stages  =  new  int[stack.length  +  1][0];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  stages  =  new  int[stack.length  +  1][0];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  stages  =  new  int[stack.length  +  1][0];	  final    double[][]    stages    =    new    double[stack.length    +    1][0];    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
127	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stack.length  +  2][0];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stack.length  +  2][0];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stack.length  +  2][0];	  final    double[][]    stages    =    new    double[stack.length    +    1][0];    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
128	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[std.length][];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  yDotK  =  new  int[std.length][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  yDotK  =  new  int[std.length][];	  final    double[][]    yDotK    =    new    double[std.length][];    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
129	[BUG]  [BUGGY]  final  int  yDotK  =  new  int[std.length][];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int  yDotK  =  new  int[std.length][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int  yDotK  =  new  int[std.length][];	  final    double[][]    yDotK    =    new    double[std.length][];    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
130	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[dt.length][];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[dt.length][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[dt.length][];	  final    double[][]    yDotK    =    new    double[std.length][];    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
131	[BUG]  [BUGGY]  System.arraycopy(c,  0,  dt,  0,  c.length);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  System.arraycopy(c,  0,  dt,  0,  c.length);  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	System.arraycopy(c,  0,  dt,  0,  c.length);	  System.arraycopy(c,    0,    y,    0,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
132	[BUG]  [BUGGY]  System.arraycopy(t0,  0,  y,  0,  y0.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  System.arraycopy(t0,  0,  y,  0,  y0.length);  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	System.arraycopy(t0,  0,  y,  0,  y0.length);	  System.arraycopy(y0,    0,    y,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
133	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[a.length  +  1][];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[a.length  +  1][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[a.length  +  1][];	  final    double[][]    yDotK    =    new    double[a.length][];    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
134	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[a.length][0];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[a.length][0];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[a.length][0];	  final    double[][]    yDotK    =    new    double[a.length][];    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
135	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][0];  for(int  i  =  0;  i  <  Stages;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][0];  for(int  i  =  0;  i  <  Stages;  ++i)  {  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[stages][0];  for(int  i  =  0;  i  <  Stages;  ++i)  {	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    Stages;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
136	[BUG]  [BUGGY]  final  double[][]stages  =  new  double[stages][1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]stages  =  new  double[stages][1];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]stages  =  new  double[stages][1];	  final    double[][]stages    =    new    double[c.length][1];    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
137	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][0];  for(int  i  =  0;  i  <  Stages.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][0];  for(int  i  =  0;  i  <  Stages.length;  ++i)  {  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[stages][0];  for(int  i  =  0;  i  <  Stages.length;  ++i)  {	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    Stages.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
138	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages.length;  ++i)  {  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages.length;  ++i)  {	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    Stages.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
139	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[y.length];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[y.length];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[y.length];	  final    double[][]    yDotK    =    new    double[c.length];    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
140	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[y0.length];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[y0.length];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[y0.length];	  final    double[][]    yDotK    =    new    double[c.length];    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
141	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stack.length];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stack.length];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[stack.length];	  final    double[][]    yDotK    =    new    double[c.length];    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
142	[BUG]  [BUGGY]  final  double[][]  yTmp  =(double[][])equations.toArray(new  double[equations.size()  ]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yTmp  =(double[][])equations.toArray(new  double[equations.size()  ]);  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yTmp  =(double[][])equations.toArray(new  double[equations.size()  ]);	  final    double[][]    yTmp    =(double[][])equations.clone();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
143	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(y0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(y0);  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	StageHandler  handler  =  prototype.getStepHandler(y0);	  StageHandler    handler    =    prototype.getStepHandler(c);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
144	[BUG]  [BUGGY]  System.arraycopy(stages[i],  0,  stages[i]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  System.arraycopy(stages[i],  0,  stages[i]);  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	System.arraycopy(stages[i],  0,  stages[i]);	  if(stages!=    null)    {    for(int    i    =    0;    i    <    stages.length;    ++i)    {    System.arraycopy(stages[i],    0,    stages[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
145	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][0];  for(int  i  =  0;  i  <  stages;  ++i)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][0];  for(int  i  =  0;  i  <  stages;  ++i)  {  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[stages][0];  for(int  i  =  0;  i  <  stages;  ++i)  {	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
146	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[y0.length][0];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[y0.length][0];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[y0.length][0];	  final    double[][]    yDotK    =    new    double[c][0];    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
147	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[std.length][0];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[std.length][0];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[std.length][0];	  final    double[][]    yDotK    =    new    double[c][0];    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
148	[BUG]  [BUGGY]  final  double[][]stages  =  new  double[stages].[1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]stages  =  new  double[stages].[1];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]stages  =  new  double[stages].[1];	  final    double[][]stages    =    new    double[stages.length][1];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
149	[BUG]  [BUGGY]  final  double[][]  stages  =  y0.length  +  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  y0.length  +  2;  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  y0.length  +  2;	  final    double[][]    stages    =    y0.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
150	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stages  +  2][0];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stages  +  2][0];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stages  +  2][0];	  final    double[][]    stages    =    new    double[stages    +    1][0];    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
151	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  -  1][0];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  -  1][0];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c.length  -  1][0];	  final    double[][]    yDotK    =    new    double[c.length    -    1][];    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
152	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[std.length  +  1][];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[std.length  +  1][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[std.length  +  1][];	  final    double[][]    yDotK    =    new    double[std.length][];    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
153	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c!=  null)  {  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }	  if(c.length    ==    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
154	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[y0.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[y0.length  +  1];  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c!=  null)  {  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[y0.length  +  1];  }	  if(c.length    ==    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
155	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }	  if(c.length    ==    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
156	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[y.length][0];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[y.length][0];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[y.length][0];	  final    double[][]    yDotK    =    new    double[y.length][];    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
157	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[y.length  +  1][];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[y.length  +  1][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[y.length  +  1][];	  final    double[][]    yDotK    =    new    double[y.length][];    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[y0.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[y0.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[y0.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y0,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
159	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[dt  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[dt  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[dt  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y0,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
160	[BUG]  [BUGGY]  final  int[][]stages  =  new  double[t0.length][0];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]stages  =  new  double[t0.length][0];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]stages  =  new  double[t0.length][0];	  final    double[][]stages    =    new    double[t0.length][0];    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
161	[BUG]  [BUGGY]  final  int  i  =  0;  cs.length  =  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int  i  =  0;  cs.length  =  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int  i  =  0;  cs.length  =  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }	  for(int    i    =    0;    i    <    stages.length;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y0,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
162	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[y0][];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[y0][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[y0][];	  final    double[][]    yDotK    =    new    double[dt][];    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
163	[BUG]  [BUGGY]  final  double[][]  stages  =  t.toArray(stages);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  t.toArray(stages);  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  t.toArray(stages);	  final    double[][]    stages    =    t.length;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
164	[BUG]  [BUGGY]  final  double[][]  stages  =  t0.length  +  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  t0.length  +  2;  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  t0.length  +  2;	  final    double[][]    stages    =    t0.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
165	[BUG]  [BUGGY]  final  double[][]  yDotk  =  new  double[stages][0];  for(int  i  =  0;  i  <  c.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotk  =  new  double[stages][0];  for(int  i  =  0;  i  <  c.length;  ++i)  {  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotk  =  new  double[stages][0];  for(int  i  =  0;  i  <  c.length;  ++i)  {	  final    double[][]    yDotk    =    new    double[stages][];    for(int    i    =    0;    i    <    c.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
166	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[t0.length  +  3][0];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[t0.length  +  3][0];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[t0.length  +  3][0];	  final    double[][]    stages    =    new    double[c.length    +    3][0];    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
167	[BUG]  [BUGGY]  if(c!=  null)  {  if(t  >  t0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c!=  null)  {  if(t  >  t0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c!=  null)  {  if(t  >  t0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }	  if(t    >    t0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
168	[BUG]  [BUGGY]  luate(c,  t0))  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  luate(c,  t0))  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	luate(c,  t0))  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }	  if(t    >    t0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
169	[BUG]  [BUGGY]  final  double[][]  stages  =  t.length  +  3;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  t.length  +  3;  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  t.length  +  3;	  final    double[][]    stages    =    t.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
170	[BUG]  [BUGGY]  System.arraycopy(y,  0,  y,  0,  c.length);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  System.arraycopy(y,  0,  y,  0,  c.length);  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	System.arraycopy(y,  0,  y,  0,  c.length);	  if(c.length    ==    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
171	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  yDotK,  0,  c.length);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  System.arraycopy(y0,  0,  yDotK,  0,  c.length);  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	System.arraycopy(y0,  0,  yDotK,  0,  c.length);	  if(c.length    ==    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
172	[BUG]  [BUGGY]  final  int  cLength  =  c.length;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int  cLength  =  c.length;  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int  cLength  =  c.length;	  if(c.length    ==    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
173	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stages.length  +  1][2];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stages.length  +  1][2];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stages.length  +  1][2];	  final    double[][]    stages    =    new    double[stages.length    +    1][1];    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
174	[BUG]  [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
175	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[y0.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[y0.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[y0.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
176	[BUG]  [BUGGY]  AssertionFailedError  t0  =(AssertionFailedError)super.reportError(t0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  AssertionFailedError  t0  =(AssertionFailedError)super.reportError(t0);  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	AssertionFailedError  t0  =(AssertionFailedError)super.reportError(t0);	  if(t    >    t0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    System.arraycopy(c,    0,    c,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
177	[BUG]  [BUGGY]  AssertionFailedError  t0  =(AssertionFailedError)super.getInput();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  AssertionFailedError  t0  =(AssertionFailedError)super.getInput();  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	AssertionFailedError  t0  =(AssertionFailedError)super.getInput();	  if(t    >    t0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    System.arraycopy(c,    0,    c,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
178	[BUG]  [BUGGY]  AssertionFailedError  t0  =(AssertionFailedError)super.reportError();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  AssertionFailedError  t0  =(AssertionFailedError)super.reportError();  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	AssertionFailedError  t0  =(AssertionFailedError)super.reportError();	  if(t    >    t0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    System.arraycopy(c,    0,    c,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
179	[BUG]  [BUGGY]  AssertionFailedError  t0  =(AssertionFailedError)super.getEvaluations();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  AssertionFailedError  t0  =(AssertionFailedError)super.getEvaluations();  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	AssertionFailedError  t0  =(AssertionFailedError)super.getEvaluations();	  if(t    >    t0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    System.arraycopy(c,    0,    c,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
180	[BUG]  [BUGGY]  final  int[][]stages  =  new  int[stages.length][1];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]stages  =  new  int[stages.length][1];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]stages  =  new  int[stages.length][1];	  final    int[][]stages    =    new    int[t0.length][1];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
181	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStdHandler(t0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  StageHandler  handler  =  prototype.getStdHandler(t0);  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	StageHandler  handler  =  prototype.getStdHandler(t0);	  StageHandler    handler    =    prototype.getStdHandler();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
182	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStdHandler(stages);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  StageHandler  handler  =  prototype.getStdHandler(stages);  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	StageHandler  handler  =  prototype.getStdHandler(stages);	  StageHandler    handler    =    prototype.getStdHandler();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
183	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStdHandler(strates);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  StageHandler  handler  =  prototype.getStdHandler(strates);  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	StageHandler  handler  =  prototype.getStdHandler(strates);	  StageHandler    handler    =    prototype.getStdHandler();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
184	[BUG]  [BUGGY]  final  int  stages][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int  stages][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int  stages][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    c.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
185	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][0];  for(int  i  =  0;  i  <  c.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][0];  for(int  i  =  0;  i  <  c.length;  ++i)  {  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[stages][0];  for(int  i  =  0;  i  <  c.length;  ++i)  {	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    c.length;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
186	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[strs.length  +  1][];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[strs.length  +  1][];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[strs.length  +  1][];	  final    double[][]    stages    =    new    double[strates.length    +    1][];    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
187	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stack.length  +  1][];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stack.length  +  1][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[stack.length  +  1][];	  final    double[][]    yDotK    =    new    double[stack.length][];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
188	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stack.length][0];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stack.length][0];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[stack.length][0];	  final    double[][]    yDotK    =    new    double[stack.length][];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
189	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[y0.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[y0.length  +  1];  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[y0.length  +  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
190	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[s.length];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[s.length];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[s.length];	  final    double[][]    yDotK    =    new    double[c.length];    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
191	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  1][1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  1][1];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c.length  +  1][1];	  final    double[][]    yDotK    =    new    double[c.length][1];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
192	[BUG]  [BUGGY]  final  int[][]  stages  =  c.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]  stages  =  c.length;  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]  stages  =  c.length;	  final    int[][]    stages    =    c.length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
193	[BUG]  [BUGGY]  if(c!=  null)  {  if(t  >  t0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c!=  null)  {  if(t  >  t0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c!=  null)  {  if(t  >  t0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  }	  if(t    >    t0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
194	[BUG]  [BUGGY]  final  int[][]stages  =  new  int[2][1];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  int[][]stages  =  new  int[2][1];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  int[][]stages  =  new  int[2][1];	  final    int[][]stages    =    new    int[t0.length][1];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
195	[BUG]  [BUGGY]  if(c.length  >  0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c.length  >  0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c.length  >  0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }	  if(c.length    ==    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
196	[BUG]  [BUGGY]  if(c.length!=  2)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c.length!=  2)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c.length!=  2)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }	  if(c.length    ==    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
197	[BUG]  [BUGGY]  if(c.length  <  2)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c.length  <  2)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c.length  <  2)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }	  if(c.length    ==    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
198	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stack.length][1];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stack.length][1];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[stack.length][1];	  final    double[][]    yDotK    =    new    double[stack.length][];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
199	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  *  2][];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  *  2][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[c.length  *  2][];	  final    double[][]    yDotK    =    new    double[c.length    +    2][];    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
200	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  System.arraycopy(stages,  0,  s[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  System.arraycopy(stages,  0,  s[i]);  }  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  System.arraycopy(stages,  0,  s[i]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    System.arraycopy(stages,    0,    stages[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
201	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[t0.length  +  2][0];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[t0.length  +  2][0];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[t0.length  +  2][0];	  final    double[][]    stages    =    new    double[c.length    +    2][0];    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
202	[BUG]  [BUGGY]  int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
203	[BUG]  [BUGGY]  if(c.length  ==  y0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c.length  ==  y0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c.length  ==  y0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
204	[BUG]  [BUGGY]  if(c.length  ==  y0)  {  for(int  i  =  0;  i  <  stages.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c.length  ==  y0)  {  for(int  i  =  0;  i  <  stages.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c.length  ==  y0)  {  for(int  i  =  0;  i  <  stages.length;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }	  for(int    i    =    0;    i    <    stages.length;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y0,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
205	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);	  for(int    i    =    0;    i    <    stages.length;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y0,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
206	[BUG]  [BUGGY]  final  double[][]  stages  =  t.toArray(new  double[stages.size()  ]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  t.toArray(new  double[stages.size()  ]);  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  t.toArray(new  double[stages.size()  ]);	  final    double[][]    stages    =    t.length;    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
207	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[std.length][1];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[std.length][1];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[std.length][1];	  final    double[][]    yDotK    =    new    double[std.length][];    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
208	[BUG]  [BUGGY]  if(t  >  t0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  System.arraycopy(c,  0,  c,  0,  c.length  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(t  >  t0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  System.arraycopy(c,  0,  c,  0,  c.length  +  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(t  >  t0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  System.arraycopy(c,  0,  c,  0,  c.length  +  1);  }	  if(t    >    t0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    System.arraycopy(c,    0,    c,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
209	[BUG]  [BUGGY]  if(t  >  t0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  System.arraycopy(y0,  0,  c,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(t  >  t0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  System.arraycopy(y0,  0,  c,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(t  >  t0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  System.arraycopy(y0,  0,  c,  0,  c.length);  }	  if(t    >    t0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    System.arraycopy(c,    0,    c,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
210	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStdHandler(t0,  stages);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  StageHandler  handler  =  prototype.getStdHandler(t0,  stages);  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	StageHandler  handler  =  prototype.getStdHandler(t0,  stages);	  StageHandler    handler    =    prototype.getStdHandler();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
211	[BUG]  [BUGGY]  final  double[][]  stages  =  dt.length;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  dt.length;  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  dt.length;	  final    double[][]    stages    =    y0.length;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
212	[BUG]  [BUGGY]  final  double[][]stages  =  new  double[stages][0];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]stages  =  new  double[stages][0];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]stages  =  new  double[stages][0];	  final    double[][]stages    =    new    double[stages.length][1];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
213	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[t0.length  +  2][];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[t0.length  +  2][];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[t0.length  +  2][];	  final    double[][]    stages    =    new    double[c.length    +    2][];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
214	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[t0.length  +  3][];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[t0.length  +  3][];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[t0.length  +  3][];	  final    double[][]    stages    =    new    double[c.length    +    3][];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
215	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[y.length][1];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[y.length][1];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[y.length][1];	  final    double[][]    yDotK    =    new    double[y.length][];    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
216	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[st.length][];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[st.length][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[st.length][];	  final    double[][]    yDotK    =    new    double[y.length][];    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
217	[BUG]  [BUGGY]  System.arraycopy(c,  0,  c,  0,  c.length  +  1,  c.length);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  System.arraycopy(c,  0,  c,  0,  c.length  +  1,  c.length);  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	System.arraycopy(c,  0,  c,  0,  c.length  +  1,  c.length);	  System.arraycopy(c,    0,    y,    0,    c.length);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
218	[BUG]  [BUGGY]  if(c.length  ==  y0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c.length  ==  y0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c.length  ==  y0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y0,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
219	[BUG]  [BUGGY]  if(c.length!=  y0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c.length!=  y0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c.length!=  y0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y0,  0,  y,  0,  c.length);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y0,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
220	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stages  +  2][1];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  stages  =  new  double[stages  +  2][1];  [BUGGY]      final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  stages  =  new  double[stages  +  2][1];	  final    double[][]    stages    =    new    double[stages    +    1][1];    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
221	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[a.length][1];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[a.length][1];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[a.length][1];	  final    double[][]    yDotK    =    new    double[a.length][];    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
222	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[2][];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  final  double[][]  yDotK  =  new  double[2][];  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	final  double[][]  yDotK  =  new  double[2][];	  final    double[][]    yDotK    =    new    double[y0.length][];    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
223	[BUG]  [BUGGY]  if(c.length  ==  1)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c.length  ==  1)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c.length  ==  1)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }	  if(c.length    ==    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
224	[BUG]  [BUGGY]  if(c.length  ==  1)  {  for(int  i  =  0;  i  <  stage;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c.length  ==  1)  {  for(int  i  =  0;  i  <  stage;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c.length  ==  1)  {  for(int  i  =  0;  i  <  stage;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }	  if(c.length    ==    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
225	[BUG]  [BUGGY]  if(c.length  ==  1)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  1,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c.length  ==  1)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  1,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c.length  ==  1)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  1,  c.length);  }	  if(c.length    ==    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
226	[BUG]  [BUGGY]  if(c.length  ==  1)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotk  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c.length  ==  1)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotk  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c.length  ==  1)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotk  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }	  if(c.length    ==    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
227	[BUG]  [BUGGY]  if(c.length  ==  y0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c.length  ==  y0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c.length  ==  y0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
228	[BUG]  [BUGGY]  if(c.length!=  y0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      sanityChecks(equations,  t0,  y0,  t,  y);  setEquations(equations);  resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }      [BUGGY]  if(c.length!=  y0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }  [BUGGY]      for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	110	110	2	replace	if(c.length!=  y0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  System.arraycopy(y,  0,  y,  0,  c.length);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[c.length    +    1];    System.arraycopy(y,    0,    y,    0,    c.length);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
