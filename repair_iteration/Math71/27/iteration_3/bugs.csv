bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  StageHandler  handler  =  getStdHandler(k);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getStdHandler(k);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStdHandler(k);	  StageHandler    handler    =    getStdHandler();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
2	[BUG]  [BUGGY]  StageHandler  handler  =  getStdHandler(0);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getStdHandler(0);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStdHandler(0);	  StageHandler    handler    =    getStdHandler();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
3	[BUG]  [BUGGY]  StageHandler  handler  =  getStdHandlerInstance();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getStdHandlerInstance();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStdHandlerInstance();	  StageHandler    handler    =    getStdHandler();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
4	[BUG]  [BUGGY]  int  k  =  1;  k  <  y0.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  1;  k  <  y0.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  1;  k  <  y0.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  int    k    =    1;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
5	[BUG]  [BUGGY]  int  k  =  2;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  2;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  2;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  int    k    =    1;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
6	[BUG]  [BUGGY]  Integer  k  =  1;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  k  =  1;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  k  =  1;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  int    k    =    1;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
7	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(ys[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(ys[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  stages;  ++k)  {  if(ys[k]  <  yDotK[0])  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(ys[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
8	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++k)  {  if(ys[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++k)  {  if(ys[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  y0.length;  ++k)  {  if(ys[k]  <  yDotK[0])  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(ys[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
9	[BUG]  [BUGGY]  int  k  =  1;  k  <  y0.length;  ++k)  {  if(ys[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  1;  k  <  y0.length;  ++k)  {  if(ys[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  1;  k  <  y0.length;  ++k)  {  if(ys[k]  <  yDotK[0])  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(ys[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
10	[BUG]  [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  if(ys[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  if(ys[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  1;  k  <  stages;  ++k)  {  if(ys[k]  <  yDotK[0])  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(ys[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
11	[BUG]  [BUGGY]  Integer  y0  =(Integer)super.getValue()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)super.getValue()  +  1;  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)super.getValue()  +  1;	  Integer    y0    =(Integer)super.getValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
12	[BUG]  [BUGGY]  Integer  y0  =(Integer)super.getKey();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)super.getKey();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)super.getKey();	  Integer    y0    =(Integer)super.getValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
13	[BUG]  [BUGGY]  Integer  y0  =(int)super.getValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(int)super.getValue();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)super.getValue();	  Integer    y0    =(Integer)super.getValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
14	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getRawHandler(k);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getRawHandler(k);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getRawHandler(k);	  StageHandler    handler    =    prototype.getRawHandler();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
15	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getHandler();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getHandler();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getHandler();	  StageHandler    handler    =    prototype.getRawHandler();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  0;  ++j)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  1;  j  <  0;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  1;  j  <  0;  ++j)  {	  for(int    j    =    1;    j    <    stages.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
17	[BUG]  [BUGGY]  Integer  y0  =(int)interpolator.getRangeInterpolator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(int)interpolator.getRangeInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)interpolator.getRangeInterpolator();	  Integer    y0    =(Integer)interpolator.getRangeInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
18	[BUG]  [BUGGY]  for(int  k  =  0;  j  <  y.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  j  <  y.length;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  j  <  y.length;  ++j)  {	  for(int    k    =    0;    j    <    k.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
19	[BUG]  [BUGGY]  for(int  j  =  0;  k  <  k.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  0;  k  <  k.length;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  k  <  k.length;  ++j)  {	  for(int    k    =    0;    j    <    k.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
20	[BUG]  [BUGGY]  for(int  k  =  1;  j  <  k.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  j  <  k.length;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  j  <  k.length;  ++j)  {	  for(int    k    =    0;    j    <    k.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
21	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  <  yDotK[k])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  <  yDotK[k])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  <  yDotK[k])  {  break;  }	  if(steps[k]    <    yDotK.length)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
22	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  <  yDotK.length)  {  break;  }	  if(steps[k]    <    yDotK.length)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
23	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.stepInterpolator.clone();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.stepInterpolator.clone();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.stepInterpolator.clone();	  Integer    y0    =(Integer)super.stepInterpolator.clone();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
24	[BUG]  [BUGGY]  int  k  =  1;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  1;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  1;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }	  int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
25	[BUG]  [BUGGY]  Integer  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }	  int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
26	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  k-1;  ++j)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  1;  j  <  k-1;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  1;  j  <  k-1;  ++j)  {	  for(int    j    =    1;    j    <    k;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
27	[BUG]  [BUGGY]  for(int  k  =  1;  j  <  k;  ++j)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  j  <  k;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  j  <  k;  ++j)  {	  for(int    j    =    1;    j    <    k;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
28	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(k,  stages);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(k,  stages);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getStepHandler(k,  stages);	  StageHandler    handler    =    prototype.getStepHandler(k);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
29	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(k  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(k  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getStepHandler(k  -  1);	  StageHandler    handler    =    prototype.getStepHandler(k);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
30	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(k,  t0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(k,  t0);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getStepHandler(k,  t0);	  StageHandler    handler    =    prototype.getStepHandler(k);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  k-2;  ++j)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  0;  j  <  k-2;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  k-2;  ++j)  {	  for(int    j    =    0;    j    <    k-1;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
32	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  stages-1;  ++j)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  0;  j  <  stages-1;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  stages-1;  ++j)  {	  for(int    j    =    0;    j    <    k-1;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
33	[BUG]  [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
34	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
35	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  0.5;  ++j)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  1;  j  <  0.5;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  1;  j  <  0.5;  ++j)  {	  for(int    j    =    1;    j    <    0.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
36	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  0.0;  ++j)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  1;  j  <  0.0;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  1;  j  <  0.0;  ++j)  {	  for(int    j    =    1;    j    <    0.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
37	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  y.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  y.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
38	[BUG]  [BUGGY]  int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
39	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
40	[BUG]  [BUGGY]  Integer  y0  =(int)interpolator.getInterpolator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(int)interpolator.getInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)interpolator.getInterpolator();	  Integer    y0    =(int)interpolator.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
41	[BUG]  [BUGGY]  Integer  y0  =(int)interpolator.getRawInterpolator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(int)interpolator.getRawInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)interpolator.getRawInterpolator();	  Integer    y0    =(int)interpolator.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
42	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  k.length-2;  ++j)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  0;  j  <  k.length-2;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  k.length-2;  ++j)  {	  for(int    j    =    0;    j    <    k.length-1;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
43	[BUG]  [BUGGY]  for(int  k  =  0;  j  <  k.length-1;  ++j)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  j  <  k.length-1;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  j  <  k.length-1;  ++j)  {	  for(int    j    =    0;    j    <    k.length-1;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
44	[BUG]  [BUGGY]  Integer  y0  =(Integer)super.get(k-1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)super.get(k-1);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)super.get(k-1);	  Integer    y0    =(Integer)super.get(k);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
45	[BUG]  [BUGGY]  Integer  y0  =(Integer)super.get(k  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)super.get(k  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)super.get(k  +  1);	  Integer    y0    =(Integer)super.get(k);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
46	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y.length;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  y.length;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  y.length;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
47	[BUG]  [BUGGY]  int  k  =  1;  k  <  y.length;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  1;  k  <  y.length;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  1;  k  <  y.length;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
48	[BUG]  [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  1;  k  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(!interpolator.shift())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
49	[BUG]  [BUGGY]  int  k  =  0;  k  <  y0.length;  ++k)  {  if(!interpolator.shift())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  0;  k  <  y0.length;  ++k)  {  if(!interpolator.shift())  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  0;  k  <  y0.length;  ++k)  {  if(!interpolator.shift())  {  break;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(!interpolator.shift())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
50	[BUG]  [BUGGY]  Integer  y0  =(int)interpolator.getValue();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(int)interpolator.getValue();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)interpolator.getValue();	  Integer    y0    =(int)interpolator.clone();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
51	[BUG]  [BUGGY]  Integer  y0  =(int)interpolator.getStep();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(int)interpolator.getStep();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)interpolator.getStep();	  Integer    y0    =(int)interpolator.clone();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
52	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  for(int    k    =    0;    k    <    yDotK.length;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
53	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  k  <  stages.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  stages.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  for(int    k    =    0;    k    <    yDotK.length;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  int  k  =  0;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  0;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  0;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  for(int    k    =    0;    k    <    yDotK.length;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
55	[BUG]  [BUGGY]  if(steps[k]  <  yDotK.length)  {  for(int  k  =  0;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(steps[k]  <  yDotK.length)  {  for(int  k  =  0;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(steps[k]  <  yDotK.length)  {  for(int  k  =  0;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  for(int    k    =    0;    k    <    yDotK.length;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
56	[BUG]  [BUGGY]  Integer  k  =  0;  k  <  y0.length;  ++k)  {  if(!interpolator.shift())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  k  =  0;  k  <  y0.length;  ++k)  {  if(!interpolator.shift())  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  k  =  0;  k  <  y0.length;  ++k)  {  if(!interpolator.shift())  {  break;  }	  Integer    k    =    0;    k    <    stages;    ++k)    {    if(!interpolator.shift())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
57	[BUG]  [BUGGY]  Integer  k  =  1;  k  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  k  =  1;  k  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  k  =  1;  k  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }	  Integer    k    =    0;    k    <    stages;    ++k)    {    if(!interpolator.shift())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
58	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  yTmp.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  1;  j  <  yTmp.length;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  1;  j  <  yTmp.length;  ++j)  {	  for(int    j    =    0;    j    <    yTmp.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
59	[BUG]  [BUGGY]  for(int  k  =  0;  j  <  k;  ++k)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  j  <  k;  ++k)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  j  <  k;  ++k)  {	  for(int    k    =    0;    j    <    k;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
60	[BUG]  [BUGGY]  double  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  double  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	double  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
61	[BUG]  [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
62	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getRawInterpolator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.getRawInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getRawInterpolator();	  Integer    y0    =(Integer)interpolator.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
63	[BUG]  [BUGGY]  StageHandler  handler  =  getStandardStepInterpolator(k);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getStandardStepInterpolator(k);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStandardStepInterpolator(k);	  StageHandler    handler    =    getStandardStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
64	[BUG]  [BUGGY]  StageHandler  handler  =  this.interpolator.getStandardStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  this.interpolator.getStandardStepInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  this.interpolator.getStandardStepInterpolator();	  StageHandler    handler    =    getStandardStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
65	[BUG]  [BUGGY]  Integer  y0  =(Integer)this.super.getValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)this.super.getValue();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)this.super.getValue();	  Integer    y0    =(Integer)this.super.clone();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
66	[BUG]  [BUGGY]  Integer  y0  =(int)interpolator.getStandardStepInterpolator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(int)interpolator.getStandardStepInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)interpolator.getStandardStepInterpolator();	  Integer    y0    =(Integer)interpolator.getStandardStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
67	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getEndStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.getEndStepInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getEndStepInterpolator();	  Integer    y0    =(Integer)interpolator.getStandardStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
68	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getRangeStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.getRangeStepInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getRangeStepInterpolator();	  Integer    y0    =(Integer)interpolator.getStandardStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
69	[BUG]  [BUGGY]  Integer  k  =  1  <  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  k  =  1  <  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  k  =  1  <  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
70	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++k)  {  if(!interpolator.shift())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++k)  {  if(!interpolator.shift())  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  y0.length;  ++k)  {  if(!interpolator.shift())  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(!interpolator.shift())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
71	[BUG]  [BUGGY]  Integer  k  =  1  <  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  k  =  1  <  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  k  =  1  <  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(!interpolator.shift())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
72	[BUG]  [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
73	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  0;  k  <  y.length;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  0;  k  <  y.length;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
74	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y.length-2;  ++j)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  0;  j  <  y.length-2;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  y.length-2;  ++j)  {	  for(int    j    =    0;    j    <    y.length-1;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
75	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y.length-1;  ++k)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  0;  j  <  y.length-1;  ++k)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  y.length-1;  ++k)  {	  for(int    j    =    0;    j    <    y.length-1;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
76	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y.length-3;  ++j)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  0;  j  <  y.length-3;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  y.length-3;  ++j)  {	  for(int    j    =    0;    j    <    y.length-1;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
77	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  stages;  ++j)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  0;  j  <  stages;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  stages;  ++j)  {	  for(int    j    =    0;    j    <    stageSize;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
78	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  stageSize;  ++j)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  1;  j  <  stageSize;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  1;  j  <  stageSize;  ++j)  {	  for(int    j    =    0;    j    <    stageSize;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
79	[BUG]  [BUGGY]  StageHandler  handler  =  getTraceHandler(k);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getTraceHandler(k);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getTraceHandler(k);	  StageHandler    handler    =    getTraceHandler();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
80	[BUG]  [BUGGY]  StageHandler  handler  =  getTraceHandler(0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getTraceHandler(0);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getTraceHandler(0);	  StageHandler    handler    =    getTraceHandler();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
81	[BUG]  [BUGGY]  Integer  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }	  int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
82	[BUG]  [BUGGY]  int  k  =  2;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  2;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  2;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }	  int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
83	[BUG]  [BUGGY]  StageHandler  handler  =  getStepInterpolator(k);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getStepInterpolator(k);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStepInterpolator(k);	  StageHandler    handler    =    getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
84	[BUG]  [BUGGY]  StageHandler  handler  =  getRuntimeStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getRuntimeStepInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getRuntimeStepInterpolator();	  StageHandler    handler    =    getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
85	[BUG]  [BUGGY]  Integer  y0  =(int)interpolator.peek();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(int)interpolator.peek();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)interpolator.peek();	  Integer    y0    =(Integer)interpolator.peek();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
86	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.shift();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.shift();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.shift();	  Integer    y0    =(Integer)interpolator.peek();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
87	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.pop();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.pop();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.pop();	  Integer    y0    =(Integer)interpolator.peek();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
88	[BUG]  [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
89	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  y.length-1;  ++j)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  1;  j  <  y.length-1;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  1;  j  <  y.length-1;  ++j)  {	  for(int    j    =    1;    j    <    y.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
90	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getRange();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.getRange();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getRange();	  Integer    y0    =(Integer)interpolator.getStep();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
91	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getEnd();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.getEnd();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getEnd();	  Integer    y0    =(Integer)interpolator.getStep();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
92	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getMinY();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.getMinY();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getMinY();	  Integer    y0    =(Integer)interpolator.getStep();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
93	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  stages.length-2;  ++j)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  0;  j  <  stages.length-2;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  stages.length-2;  ++j)  {	  for(int    j    =    0;    j    <    stages.length-1;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
94	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  stages.length-1;  ++k)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  0;  j  <  stages.length-1;  ++k)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  stages.length-1;  ++k)  {	  for(int    j    =    0;    j    <    stages.length-1;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
95	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  y0.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
96	[BUG]  [BUGGY]  int  k  =  0;  k  <  y0.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  0;  k  <  y0.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  0;  k  <  y0.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
97	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  y.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  y.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
98	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  0;  k  <  y.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  0;  k  <  y.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
99	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStepHandler1();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getStepHandler1();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getStepHandler1();	  StageHandler    handler    =    prototype.getStepHandler2();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
100	[BUG]  [BUGGY]  StageHandler  handler  =  getStepHandler(k  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getStepHandler(k  -  1);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStepHandler(k  -  1);	  StageHandler    handler    =    getStepHandler(k);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
101	[BUG]  [BUGGY]  StageHandler  handler  =  getStepHandler(k  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getStepHandler(k  +  1);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStepHandler(k  +  1);	  StageHandler    handler    =    getStepHandler(k);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
102	[BUG]  [BUGGY]  StageHandler  handler  =  getStepHandler(k,  t0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getStepHandler(k,  t0);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStepHandler(k,  t0);	  StageHandler    handler    =    getStepHandler(k);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
103	[BUG]  [BUGGY]  StageHandler  handler  =  getStepHandler(k,  stages);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getStepHandler(k,  stages);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStepHandler(k,  stages);	  StageHandler    handler    =    getStepHandler(k);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
104	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(y[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(y[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  stages;  ++k)  {  if(y[k]  <  y.length)  {  break;  }	  if(steps[k]    <    y.length)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
105	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  <  y.length)  {  break;  }	  if(steps[k]    <    y.length)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
106	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  stages;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }	  if(steps[k]    <    y.length)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
107	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStdHandler(k);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getStdHandler(k);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getStdHandler(k);	  StageHandler    handler    =    prototype.getStdHandler();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
108	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  ++k)  {  if(!interpolator.shift())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  k  <  y.length;  ++k)  {  if(!interpolator.shift())  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  y.length;  ++k)  {  if(!interpolator.shift())  {  break;  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    if(!interpolator.shift())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
109	[BUG]  [BUGGY]  StageHandler  handler  =  getStandardHandler(k);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getStandardHandler(k);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStandardHandler(k);	  StageHandler    handler    =    getStandardHandler();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
110	[BUG]  [BUGGY]  StageHandler  handler  =  getStandardHandler(0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getStandardHandler(0);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStandardHandler(0);	  StageHandler    handler    =    getStandardHandler();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
111	[BUG]  [BUGGY]  StageHandler  handler  =  this.getStandardHandler();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  this.getStandardHandler();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  this.getStandardHandler();	  StageHandler    handler    =    getStandardHandler();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
112	[BUG]  [BUGGY]  Integer  y0  =(int)super.getInterpolator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(int)super.getInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)super.getInterpolator();	  Integer    y0    =(Integer)super.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
113	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.get(k);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.get(k);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.get(k);	  Integer    y0    =(Integer)interpolator.get(0);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
114	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.get(1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.get(1);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.get(1);	  Integer    y0    =(Integer)interpolator.get(0);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
115	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.get(k-1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.get(k-1);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.get(k-1);	  Integer    y0    =(Integer)interpolator.get(0);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
116	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  k.length-1;  ++j)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  1;  j  <  k.length-1;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  1;  j  <  k.length-1;  ++j)  {	  for(int    j    =    1;    j    <    k.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
117	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y.length;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  y.length;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  y.length;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(ys[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
118	[BUG]  [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  1;  k  <  stages;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(ys[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
119	[BUG]  [BUGGY]  int  k  =  1;  k  <  y.length;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  1;  k  <  y.length;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  1;  k  <  y.length;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(ys[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
120	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  yDotK.length;  ++k)  {  if(!interpolator.shift())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  yDotK.length;  ++k)  {  if(!interpolator.shift())  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  yDotK.length;  ++k)  {  if(!interpolator.shift())  {  break;  }	  for(int    k    =    0;    k    <    yDotK.length;    ++k)    {    if(!interpolator.shift())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
121	[BUG]  [BUGGY]  int  k  =  0;  k  <  yDotK.length;  ++k)  {  if(!interpolator.shift())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  0;  k  <  yDotK.length;  ++k)  {  if(!interpolator.shift())  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  0;  k  <  yDotK.length;  ++k)  {  if(!interpolator.shift())  {  break;  }	  for(int    k    =    0;    k    <    yDotK.length;    ++k)    {    if(!interpolator.shift())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
122	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages.length;  ++k)  {  if(!interpolator.shift())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  k  <  stages.length;  ++k)  {  if(!interpolator.shift())  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  stages.length;  ++k)  {  if(!interpolator.shift())  {  break;  }	  for(int    k    =    0;    k    <    yDotK.length;    ++k)    {    if(!interpolator.shift())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
123	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getKey();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.getKey();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getKey();	  Integer    y0    =(Integer)interpolator.getValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
124	[BUG]  [BUGGY]  Integer  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
125	[BUG]  [BUGGY]  int  k  =  1;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  1;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  1;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
126	[BUG]  [BUGGY]  int  k  =  2;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  2;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  2;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
127	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getInterpolator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getInterpolator();	  StageHandler    handler    =    prototype.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
128	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getRuntimeStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getRuntimeStepInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getRuntimeStepInterpolator();	  StageHandler    handler    =    prototype.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
129	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getInstance();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getInstance();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getInstance();	  StageHandler    handler    =    prototype.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
130	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages.length;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  k  <  stages.length;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  stages.length;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }	  for(int    k    =    0;    k    <    y.length;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
131	[BUG]  [BUGGY]  if(steps[k]  <  y.length)  {  for(int  k  =  0;  k  <  y.length;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(steps[k]  <  y.length)  {  for(int  k  =  0;  k  <  y.length;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(steps[k]  <  y.length)  {  for(int  k  =  0;  k  <  y.length;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }	  for(int    k    =    0;    k    <    y.length;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
132	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getStartInterpolator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.getStartInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getStartInterpolator();	  Integer    y0    =(Integer)interpolator.getEndInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
133	[BUG]  [BUGGY]  Integer  y0  =(int)interpolator.getEndInterpolator();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(int)interpolator.getEndInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)interpolator.getEndInterpolator();	  Integer    y0    =(Integer)interpolator.getEndInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
134	[BUG]  [BUGGY]  LeadingStepInterpolator  <  Boolean>  rki  =  loop.getRadingStepInterpolator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  LeadingStepInterpolator  <  Boolean>  rki  =  loop.getRadingStepInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	LeadingStepInterpolator  <  Boolean>  rki  =  loop.getRadingStepInterpolator();	  if(loop)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
135	[BUG]  [BUGGY]  LeadingStepInterpolator  <  Boolean>  interpolator  =  loop.getRadingStepInterpolator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  LeadingStepInterpolator  <  Boolean>  interpolator  =  loop.getRadingStepInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	LeadingStepInterpolator  <  Boolean>  interpolator  =  loop.getRadingStepInterpolator();	  if(loop)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
136	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Context.reportCodeChange();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Context.reportCodeChange();	  if(loop)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
137	[BUG]  [BUGGY]  LeadingStepInterpolator  <  Boolean>  interpolator  =  loop.getRadius();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  LeadingStepInterpolator  <  Boolean>  interpolator  =  loop.getRadius();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	LeadingStepInterpolator  <  Boolean>  interpolator  =  loop.getRadius();	  if(loop)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
138	[BUG]  [BUGGY]  StageHandler  handler  =  getStageHandler(k);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getStageHandler(k);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStageHandler(k);	  StageHandler    handler    =    getStageHandler();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
139	[BUG]  [BUGGY]  StageHandler  handler  =  getStageHandler(0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getStageHandler(0);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStageHandler(0);	  StageHandler    handler    =    getStageHandler();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
140	[BUG]  [BUGGY]  StageHandler  handler  =  getEventsHandler();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getEventsHandler();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getEventsHandler();	  StageHandler    handler    =    getStageHandler();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
141	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
142	[BUG]  [BUGGY]  Integer  k  =  1  <  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  k  =  1  <  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  k  =  1  <  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
143	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]!=  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]!=  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]!=  y[k])  {  continue;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
144	[BUG]  [BUGGY]  Integer  y0  =(Integer)this.super.get(k);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)this.super.get(k);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)this.super.get(k);	  Integer    y0    =(Integer)this.super.clone();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
145	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  ys.length;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  ys.length;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  ys.length;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(ys[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
146	[BUG]  [BUGGY]  Integer  y0  =(Integer)steps.get(k);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)steps.get(k);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)steps.get(k);	  if(steps[k]    <    y.length)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
147	[BUG]  [BUGGY]  Integer  y0  =(Integer)clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)clone();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)clone();	  if(steps[k]    <    y.length)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
148	[BUG]  [BUGGY]  Integer  y0  =(Integer)steps.get(k-1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)steps.get(k-1);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)steps.get(k-1);	  if(steps[k]    <    y.length)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
149	[BUG]  [BUGGY]  Integer  y0  =(Integer)steps.get(k++);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)steps.get(k++);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)steps.get(k++);	  if(steps[k]    <    y.length)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
150	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getEndValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.getEndValue();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getEndValue();	  Integer    y0    =(Integer)interpolator.getValue();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
151	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  ++k)  {  if(steps[k]  ==  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  0;  k  <  y.length;  ++k)  {  if(steps[k]  ==  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  0;  k  <  y.length;  ++k)  {  if(steps[k]  ==  y.length)  {  break;  }	  for(int    k    =    0;    k    <    y.length;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
152	[BUG]  [BUGGY]  int  k  =  0;  k  <  y.length;  ++k)  {  if(steps[k]  >=  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  0;  k  <  y.length;  ++k)  {  if(steps[k]  >=  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  0;  k  <  y.length;  ++k)  {  if(steps[k]  >=  y.length)  {  break;  }	  for(int    k    =    0;    k    <    y.length;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
153	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStandardStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getStandardStepInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getStandardStepInterpolator();	  StageHandler    handler    =    prototype.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
154	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStepInterpolator(k);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getStepInterpolator(k);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getStepInterpolator(k);	  StageHandler    handler    =    prototype.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
155	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getRuntimeInterpolator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getRuntimeInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getRuntimeInterpolator();	  StageHandler    handler    =    prototype.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
156	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  k.length-3;  ++j)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  0;  j  <  k.length-3;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  k.length-3;  ++j)  {	  for(int    j    =    0;    j    <    k.length-1;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
157	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getStartStepInterpolator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.getStartStepInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getStartStepInterpolator();	  Integer    y0    =(Integer)interpolator.getStandardStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
158	[BUG]  [BUGGY]  StageHandler  handler  =  getHandler();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getHandler();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getHandler();	  StageHandler    handler    =    getStandardHandler();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
159	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  k  <  stages.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  stages.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
160	[BUG]  [BUGGY]  if(loop)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(loop)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(loop)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  if(loop)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
161	[BUG]  [BUGGY]  if(loop)  {  for(int  k  =  0;  k  <  stageSize;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(loop)  {  for(int  k  =  0;  k  <  stageSize;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(loop)  {  for(int  k  =  0;  k  <  stageSize;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  if(loop)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
162	[BUG]  [BUGGY]  if(loop)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(loop)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(loop)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue	  if(loop)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
163	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  stages.length-3;  ++j)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  0;  j  <  stages.length-3;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  stages.length-3;  ++j)  {	  for(int    j    =    0;    j    <    stages.length-1;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
164	[BUG]  [BUGGY]  int  k  =  0;  k  <  stages.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  0;  k  <  stages.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  0;  k  <  stages.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  for(int    k    =    0;    k    <    yDotK.length;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
165	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  steps.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  k  <  steps.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  steps.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  for(int    k    =    0;    k    <    yDotK.length;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
166	[BUG]  [BUGGY]  StageHandler  handler  =  this.interpolator.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  this.interpolator.getStepInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  this.interpolator.getStepInterpolator();	  StageHandler    handler    =    getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
167	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getInterpolator(0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.getInterpolator(0);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getInterpolator(0);	  Integer    y0    =(Integer)interpolator.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
168	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  phases.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  1;  j  <  phases.length;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  1;  j  <  phases.length;  ++j)  {	  for(int    j    =    0;    j    <    phases.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
169	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  phases.length-1;  ++j)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  0;  j  <  phases.length-1;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  phases.length-1;  ++j)  {	  for(int    j    =    0;    j    <    phases.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
170	[BUG]  [BUGGY]  for(int  k  =  0;  j  <  k-1;  ++j)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  j  <  k-1;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  j  <  k-1;  ++j)  {	  for(int    k    =    0;    j    <    k;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
171	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  k  <  stages.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  stages.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
172	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[1])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[1])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[1])  {  break;  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
173	[BUG]  [BUGGY]  Integer  y0  =(Integer)super.interpolator;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)super.interpolator;  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)super.interpolator;	  Integer    y0    =(Integer)super.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
174	[BUG]  [BUGGY]  Integer  y0  =(int)interpolator.next();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(int)interpolator.next();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)interpolator.next();	  Integer    y0    =(int)interpolator.get();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
175	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  if(!interpolator.shift())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  if(!interpolator.shift())  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  0;  ++k)  {  if(!interpolator.shift())  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(!interpolator.shift())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
176	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yDotK[k]  <  y0.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yDotK[k]  <  y0.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  stages;  ++k)  {  if(yDotK[k]  <  y0.length)  {  break;  }	  if(steps[k]    <    yDotK.length)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
177	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(ys[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(ys[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  stages;  ++k)  {  if(ys[k]  <  yDotK.length)  {  break;  }	  if(steps[k]    <    yDotK.length)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
178	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  >=  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  >=  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  >=  yDotK.length)  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
179	[BUG]  [BUGGY]  int  k  =  0;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK[k])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  0;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK[k])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  0;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK[k])  {  break;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
180	[BUG]  [BUGGY]  int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
181	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(ys[k]  <  yDotK[1])  {  break;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  if(ys[k]  <  yDotK[1])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  stages;  ++k)  {  if(ys[k]  <  yDotK[1])  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(ys[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
182	[BUG]  [BUGGY]  StageHandler  handler  =  getStepHandler(k,  y0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getStepHandler(k,  y0);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStepHandler(k,  y0);	  StageHandler    handler    =    getStepHandler(k);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
183	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(k,  y0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(k,  y0);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getStepHandler(k,  y0);	  StageHandler    handler    =    prototype.getStepHandler(k);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
184	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(loop);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(loop);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getStepHandler(loop);	  StageHandler    handler    =    prototype.getStepHandler(k);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
185	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStdHandler(0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getStdHandler(0);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getStdHandler(0);	  StageHandler    handler    =    prototype.getStdHandler();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
186	[BUG]  [BUGGY]  int  k  =  0;  k  <  stages;  ++k)  {  if(y[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  0;  k  <  stages;  ++k)  {  if(y[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  0;  k  <  stages;  ++k)  {  if(y[k]  <  y.length)  {  break;  }	  int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
187	[BUG]  [BUGGY]  int  k  =  1;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  1;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  1;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
188	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getY();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.getY();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getY();	  Integer    y0    =(Integer)interpolator.getStep();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
189	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getStep(0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.getStep(0);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getStep(0);	  Integer    y0    =(Integer)interpolator.getStep();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
190	[BUG]  [BUGGY]  Integer  y0  =(int)super.get();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(int)super.get();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)super.get();	  Integer    y0    =(int)super.clone();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
191	[BUG]  [BUGGY]  Integer  y0  =(int)super.getMaximumSize();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(int)super.getMaximumSize();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)super.getMaximumSize();	  Integer    y0    =(int)super.clone();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
192	[BUG]  [BUGGY]  for(int  k  =  0;  j  <  k.length;  ++k)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  0;  j  <  k.length;  ++k)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  j  <  k.length;  ++k)  {	  for(int    k    =    0;    j    <    k.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
193	[BUG]  [BUGGY]  if(steps[k]  <  yDotK[0])  {  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(steps[k]  <  yDotK[0])  {  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(steps[k]  <  yDotK[0])  {  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
194	[BUG]  [BUGGY]  if(steps[k]  <  yDotK[0])  {  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[1])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(steps[k]  <  yDotK[0])  {  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[1])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(steps[k]  <  yDotK[0])  {  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[1])  {  break;  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
195	[BUG]  [BUGGY]  Integer  y0  =(int)super.getStep();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(int)super.getStep();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)super.getStep();	  Integer    y0    =(int)super.clone();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
196	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStepInterpolator(t0,  k);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getStepInterpolator(t0,  k);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getStepInterpolator(t0,  k);	  StageHandler    handler    =    prototype.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
197	[BUG]  [BUGGY]  int  k  =  1  <  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  1  <  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  1  <  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }	  int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
198	[BUG]  [BUGGY]  int  k  =  2;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  2;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  2;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }	  int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
199	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  0;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
200	[BUG]  [BUGGY]  int  k  =  1  <  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  1  <  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  1  <  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  int    k    =    1;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
201	[BUG]  [BUGGY]  int  k  =  1  <  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  1  <  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  1  <  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }	  int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
202	[BUG]  [BUGGY]  StageHandler  handler  =  getStepInterpolator(t0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getStepInterpolator(t0);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStepInterpolator(t0);	  StageHandler    handler    =    getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
203	[BUG]  [BUGGY]  int  k  =  1  <  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  int  k  =  1  <  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  1  <  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
204	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  0;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
205	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getYearInterpolator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.getYearInterpolator();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getYearInterpolator();	  Integer    y0    =(Integer)interpolator.getRangeInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
206	[BUG]  [BUGGY]  if(loop  ==  null)  {  int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(loop  ==  null)  {  int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(loop  ==  null)  {  int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
207	[BUG]  [BUGGY]  boolean  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  boolean  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	boolean  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
208	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  0;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
209	[BUG]  [BUGGY]  boolean  k  =  0;  k  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  boolean  k  =  0;  k  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	boolean  k  =  0;  k  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(!interpolator.shift())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
210	[BUG]  [BUGGY]  if(steps[k]  ==  0)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(steps[k]  ==  0)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(steps[k]  ==  0)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  if(steps[k]    <    yDotK.length)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
211	[BUG]  [BUGGY]  if(steps[k]  ==  0)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(steps[k]  ==  0)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(steps[k]  ==  0)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  }	  if(steps[k]    <    yDotK.length)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
212	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getTicks();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.getTicks();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getTicks();	  Integer    y0    =(Integer)interpolator.getStandardStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
213	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  0;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(ys[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
214	[BUG]  [BUGGY]  Integer  y0  =(Integer)this.super.get();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)this.super.get();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)this.super.get();	  Integer    y0    =(Integer)this.super.clone();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
215	[BUG]  [BUGGY]  Integer  y0  =(int)interpolator.remove();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(int)interpolator.remove();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)interpolator.remove();	  Integer    y0    =(int)interpolator.get();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
216	[BUG]  [BUGGY]  StageHandler  handler  =  getStandardStepInterpolator(t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  getStandardStepInterpolator(t0);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStandardStepInterpolator(t0);	  StageHandler    handler    =    getStandardStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
217	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getRawHandler2();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getRawHandler2();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getRawHandler2();	  StageHandler    handler    =    prototype.getRawHandler();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
218	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  stage.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  1;  j  <  stage.length;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  1;  j  <  stage.length;  ++j)  {	  for(int    j    =    1;    j    <    yDotK.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
219	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStdHandler2();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  StageHandler  handler  =  prototype.getStdHandler2();  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getStdHandler2();	  StageHandler    handler    =    prototype.getStdHandler();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
220	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getStep(k);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  Integer  y0  =(Integer)interpolator.getStep(k);  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getStep(k);	  Integer    y0    =(Integer)interpolator.getStep();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
221	[BUG]  [BUGGY]  if(steps[k]  ==  y.length)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(steps[k]  ==  y.length)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(steps[k]  ==  y.length)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }	  if(steps[k]    <    y.length)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
222	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  0;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
223	[BUG]  [BUGGY]  if(steps[k]  <  yDotK.length)  {  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(steps[k]  <  yDotK.length)  {  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(steps[k]  <  yDotK.length)  {  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
224	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  k-3;  ++j)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  0;  j  <  k-3;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  k-3;  ++j)  {	  for(int    j    =    0;    j    <    k-1;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
225	[BUG]  [BUGGY]  boolean  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  boolean  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	boolean  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
226	[BUG]  [BUGGY]  if(loop  ==  null)  {  int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(loop  ==  null)  {  int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(loop  ==  null)  {  int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
227	[BUG]  [BUGGY]  if(yTmp[k]  ==  y[k])  {  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(yTmp[k]  ==  y[k])  {  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(yTmp[k]  ==  y[k])  {  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
228	[BUG]  [BUGGY]  if(loop)  {  int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(loop)  {  int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(loop)  {  int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
229	[BUG]  [BUGGY]  boolean  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  boolean  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	boolean  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
230	[BUG]  [BUGGY]  if(loop  ==  loop)  {  int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(loop  ==  loop)  {  int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(loop  ==  loop)  {  int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
231	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  2;  ++j)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  j  =  0;  j  <  2;  ++j)  {  [BUGGY]      double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  2;  ++j)  {	  for(int    j    =    0;    j    <    stageSize;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
232	[BUG]  [BUGGY]  if(loop  ==  null)  {  int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(loop  ==  null)  {  int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(loop  ==  null)  {  int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
233	[BUG]  [BUGGY]  boolean  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  boolean  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	boolean  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	  int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
234	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  if(ys[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  if(ys[k]  <  yDotK[0])  {  break;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  0;  ++k)  {  if(ys[k]  <  yDotK[0])  {  break;  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    if(ys[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
235	[BUG]  [BUGGY]  if(loop)  {  for(int  k  =  0;  k  <  stage;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(loop)  {  for(int  k  =  0;  k  <  stage;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(loop)  {  for(int  k  =  0;  k  <  stage;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	  if(loop)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
236	[BUG]  [BUGGY]  if(loop)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]!=  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {      [BUGGY]  if(loop)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]!=  y[k])  {  continue;  }  [BUGGY]      for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(loop)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]!=  y[k])  {  continue;  }	  if(loop)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
