projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.get();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages;++k){if(!interpolator.shift()){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<y0.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<y.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<yDotK.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<stages.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<k.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)super.interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)super.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<k;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=1;j<y0.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getStepHandler(k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getRawHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=0;k<stages;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<stages;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<yDotK.length;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=1;k<stages;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getValue();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=1;j<y.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<y.length-1;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)super.getValue();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)super.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStandardStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStageHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStdHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=1;j<k.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<k.length-1;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)interpolator.get();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=1;j<k;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<k-1;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;j<k;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<stages;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=0;k<stages;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<y0.length;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=1;k<stages;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=0;k<stages;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<stages;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<y.length;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=1;k<stages;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<stages;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=0;k<stages;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<y0.length;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=1;k<stages;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)super.getInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<yTmp.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<y0.length;++k){if(!interpolator.shift()){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=0;k<stages;++k){if(!interpolator.shift()){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<stages;++k){if(!interpolator.shift()){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<yDotK.length;++k){if(!interpolator.shift()){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getRangeInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)interpolator.getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getEndInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=1;j<yDotK.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<y0.length;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getStep();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<stages;++k){if(ys[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStandardHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getTraceHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getStandardStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)super.get(k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)this.super.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=1;j<stages.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<stages.length-1;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<phases.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.get(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=1;j<0.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<stages;++k){if(ys[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(loop){for(intk=0;k<stages;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)super.stepInterpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;j<k.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getStdHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<stageSize;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(steps[k]<y.length){for(intk=0;k<stages;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(steps[k]<yDotK.length){for(intk=0;k<stages;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integerk=0;k<stages;++k){if(!interpolator.shift()){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStepHandler(k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.remove();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.peek();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getStepHandler2();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStdHandler(k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStdHandler(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStdHandlerInstance();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=1;k<y0.length;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=2;k<stages;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integerk=1;k<stages;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages;++k){if(ys[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<y0.length;++k){if(ys[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=1;k<y0.length;++k){if(ys[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=1;k<stages;++k){if(ys[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)super.getValue()+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)super.getKey();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)super.getValue();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getRawHandler(k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=1;j<0;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)interpolator.getRangeInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;j<y.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;k<k.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;j<k.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages;++k){if(yTmp[k]<yDotK[k]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages;++k){if(yTmp[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.stepInterpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=1;k<y0.length;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integerk=1;k<stages;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=1;j<k-1;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;j<k;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getStepHandler(k,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getStepHandler(k-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getStepHandler(k,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<k-2;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<stages-1;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integerk=0;k<stages;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<y0.length;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=1;j<0.5;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=1;j<0.0;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<y.length;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=0;k<y0.length;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<yDotK.length;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)interpolator.getInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)interpolator.getRawInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<k.length-2;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;j<k.length-1;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)super.get(k-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)super.get(k+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<y.length;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=1;k<y.length;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=1;k<stages;++k){if(!interpolator.shift()){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=0;k<y0.length;++k){if(!interpolator.shift()){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)interpolator.getValue();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)interpolator.getStep();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<yDotK.length;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages.length;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=0;k<yDotK.length;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(steps[k]<yDotK.length){for(intk=0;k<yDotK.length;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integerk=0;k<y0.length;++k){if(!interpolator.shift()){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integerk=1;k<stages;++k){if(!interpolator.shift()){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=1;j<yTmp.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;j<k;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149doublek=0;k<stages;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integerk=0;k<stages;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getRawInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStandardStepInterpolator(k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=this.interpolator.getStandardStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)this.super.getValue();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)interpolator.getStandardStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getEndStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getRangeStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integerk=1<<stages;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<y0.length;++k){if(!interpolator.shift()){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integerk=1<<stages;++k){if(!interpolator.shift()){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integerk=0;k<stages;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=0;k<y.length;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<y.length-2;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<y.length-1;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<y.length-3;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<stages;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=1;j<stageSize;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getTraceHandler(k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getTraceHandler(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integerk=1;k<stages;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=2;k<stages;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStepInterpolator(k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getRuntimeStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)interpolator.peek();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.shift();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.pop();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integerk=0;k<stages;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=1;j<y.length-1;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getRange();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getEnd();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getMinY();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<stages.length-2;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<stages.length-1;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<y0.length;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=0;k<y0.length;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<y.length;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=0;k<y.length;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getStepHandler1();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStepHandler(k-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStepHandler(k+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStepHandler(k,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStepHandler(k,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages;++k){if(y[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages;++k){if(yTmp[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages;++k){if(ys[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getStdHandler(k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<y.length;++k){if(!interpolator.shift()){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStandardHandler(k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStandardHandler(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=this.getStandardHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)super.getInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.get(k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.get(1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.get(k-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=1;j<k.length-1;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<y.length;++k){if(ys[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=1;k<stages;++k){if(ys[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=1;k<y.length;++k){if(ys[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<yDotK.length;++k){if(!interpolator.shift()){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=0;k<yDotK.length;++k){if(!interpolator.shift()){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages.length;++k){if(!interpolator.shift()){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getKey();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integerk=1;k<stages;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=1;k<yDotK.length;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=2;k<stages;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getRuntimeStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getInstance();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages.length;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(steps[k]<y.length){for(intk=0;k<y.length;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getStartInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)interpolator.getEndInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149LeadingStepInterpolator<Boolean>rki=loop.getRadingStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149LeadingStepInterpolator<Boolean>interpolator=loop.getRadingStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Context.reportCodeChange();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149LeadingStepInterpolator<Boolean>interpolator=loop.getRadius();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStageHandler(k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStageHandler(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getEventsHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<y0.length;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integerk=1<<stages;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages;++k){if(yTmp[k]!=y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)this.super.get(k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<ys.length;++k){if(ys[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)steps.get(k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)steps.get(k-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)steps.get(k++);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getEndValue();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=0;k<y.length;++k){if(steps[k]==y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=0;k<y.length;++k){if(steps[k]>=y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getStandardStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getStepInterpolator(k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getRuntimeInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<k.length-3;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getStartStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages.length;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(loop){for(intk=1;k<stages;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(loop){for(intk=0;k<stageSize;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(loop){for(intk=0;k<stages;++k){if(yTmp[k]==y[k]){continue
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<stages.length-3;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=0;k<stages.length;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<steps.length;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=this.interpolator.getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getInterpolator(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=1;j<phases.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<phases.length-1;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;j<k-1;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages.length;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<y0.length;++k){if(steps[k]<yDotK[1]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)super.interpolator;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)interpolator.next();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<0;++k){if(!interpolator.shift()){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages;++k){if(yDotK[k]<y0.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages;++k){if(ys[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages;++k){if(steps[k]>=yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=0;k<yDotK.length;++k){if(steps[k]<yDotK[k]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=0;k<y0.length;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;k<stages;++k){if(ys[k]<yDotK[1]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStepHandler(k,y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getStepHandler(k,y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getStepHandler(loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getStdHandler(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=0;k<stages;++k){if(y[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=1;k<y0.length;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getY();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getStep(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)super.get();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)super.getMaximumSize();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=0;j<k.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(steps[k]<yDotK[0]){for(intk=0;k<y0.length;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(steps[k]<yDotK[0]){for(intk=0;k<y0.length;++k){if(steps[k]<yDotK[1]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)super.getStep();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getStepInterpolator(t0,k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=1<<stages;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=2;k<stages;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<0;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=1<<stages;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=1<<stages;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStepInterpolator(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149intk=1<<stages;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<0;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getYearInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(loop==null){intk=0;k<stages;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149booleank=0;k<stages;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<0;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149booleank=0;k<stages;++k){if(!interpolator.shift()){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(steps[k]==0){for(intk=0;k<stages;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(steps[k]==0){for(intk=0;k<stages;++k){if(steps[k]<yDotK.length){break;}}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getTicks();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<0;++k){if(ys[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)this.super.get();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(int)interpolator.remove();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=getStandardStepInterpolator(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getRawHandler2();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=1;j<stage.length;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149StageHandlerhandler=prototype.getStdHandler2();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149Integery0=(Integer)interpolator.getStep(k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(steps[k]==y.length){for(intk=0;k<stages;++k){if(steps[k]<y.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<0;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(steps[k]<yDotK.length){for(intk=0;k<y0.length;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<k-3;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149booleank=0;k<stages;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(loop==null){intk=0;k<stages;++k){if(steps[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(yTmp[k]==y[k]){for(intk=0;k<y0.length;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(loop){intk=0;k<stages;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149booleank=0;k<stages;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(loop==loop){intk=0;k<stages;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intj=0;j<2;++j){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(loop==null){intk=0;k<stages;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149booleank=0;k<stages;++k){if(steps[k]<yDotK.length){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149for(intk=1;k<0;++k){if(ys[k]<yDotK[0]){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(loop){for(intk=0;k<stage;++k){if(yTmp[k]==y[k]){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java149if(loop){for(intk=0;k<stages;++k){if(yTmp[k]!=y[k]){continue;}
