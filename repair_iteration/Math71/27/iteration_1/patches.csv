bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  StageHandler  handler  =  prototype.getStepInterpolator();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getStepInterpolator();	      StageHandler    handler    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(k);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  StageHandler  handler  =  prototype.getStepHandler(k);  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getStepHandler(k);	      StageHandler    handler    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getRawHandler();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  StageHandler  handler  =  prototype.getRawHandler();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getRawHandler();	      StageHandler    handler    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
5	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
6	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  k  =  0;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  yDotK.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
7	[BUG]  [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
8	[BUG]  [BUGGY]  Integer  y0  =(int)interpolator.clone();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  y0  =(int)interpolator.clone();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)interpolator.clone();	      Integer    y0    =(Integer)interpolator.clone();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
9	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getValue();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  y0  =(Integer)interpolator.getValue();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getValue();	      Integer    y0    =(Integer)interpolator.clone();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
10	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  y.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  j  =  1;  j  <  y.length;  ++j)  {  [BUGGY]    double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  1;  j  <  y.length;  ++j)  {	  for(int    j    =    0;    j    <    y.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y.length-1;  ++j)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  j  =  0;  j  <  y.length-1;  ++j)  {  [BUGGY]    double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  y.length-1;  ++j)  {	  for(int    j    =    0;    j    <    y.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  Integer  y0  =(Integer)super.getValue();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  y0  =(Integer)super.getValue();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)super.getValue();	      Integer    y0    =(Integer)super.clone();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  Integer  y0  =(int)super.clone();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  y0  =(int)super.clone();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)super.clone();	      Integer    y0    =(Integer)super.clone();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
14	[BUG]  [BUGGY]  StageHandler  handler  =  getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  StageHandler  handler  =  getStepInterpolator();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStepInterpolator();	      StageHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  StageHandler  handler  =  getStandardStepInterpolator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  StageHandler  handler  =  getStandardStepInterpolator();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStandardStepInterpolator();	      StageHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  StageHandler  handler  =  getStageHandler();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  StageHandler  handler  =  getStageHandler();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStageHandler();	      StageHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
17	[BUG]  [BUGGY]  StageHandler  handler  =  getStdHandler();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  StageHandler  handler  =  getStdHandler();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStdHandler();	      StageHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
18	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  k.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  j  =  1;  j  <  k.length;  ++j)  {  [BUGGY]    double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  1;  j  <  k.length;  ++j)  {	  for(int    j    =    0;    j    <    k.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  k.length-1;  ++j)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  j  =  0;  j  <  k.length-1;  ++j)  {  [BUGGY]    double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  k.length-1;  ++j)  {	  for(int    j    =    0;    j    <    k.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  Integer  y0  =(int)interpolator.get();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  y0  =(int)interpolator.get();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)interpolator.get();	      Integer    y0    =(Integer)interpolator.get();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
21	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  k;  ++j)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  j  =  1;  j  <  k;  ++j)  {  [BUGGY]    double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  1;  j  <  k;  ++j)  {	  for(int    j    =    0;    j    <    k;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
22	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  k-1;  ++j)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  j  =  0;  j  <  k-1;  ++j)  {  [BUGGY]    double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  k-1;  ++j)  {	  for(int    j    =    0;    j    <    k;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
23	[BUG]  [BUGGY]  for(int  k  =  0;  j  <  k;  ++j)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  k  =  0;  j  <  k;  ++j)  {  [BUGGY]    double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  j  <  k;  ++j)  {	  for(int    j    =    0;    j    <    k;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
24	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
25	[BUG]  [BUGGY]  int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
26	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
27	[BUG]  [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK[0])  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
28	[BUG]  [BUGGY]  int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
30	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y.length;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  k  =  0;  k  <  y.length;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  y.length;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
31	[BUG]  [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  1;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
32	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
33	[BUG]  [BUGGY]  int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
34	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
35	[BUG]  [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  1;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
36	[BUG]  [BUGGY]  Integer  y0  =(Integer)super.getInterpolator();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  y0  =(Integer)super.getInterpolator();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)super.getInterpolator();	      Integer    y0    =(Integer)super.interpolator.clone();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
37	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  yTmp.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  j  =  0;  j  <  yTmp.length;  ++j)  {  [BUGGY]    double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  yTmp.length;  ++j)  {	  for(int    j    =    0;    j    <    stages.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
38	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(!interpolator.shift())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(!interpolator.shift())  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(!interpolator.shift())  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(!interpolator.shift())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  int  k  =  0;  k  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  int  k  =  0;  k  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	int  k  =  0;  k  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(!interpolator.shift())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
40	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(!interpolator.shift())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
41	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  yDotK.length;  ++k)  {  if(!interpolator.shift())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  k  =  0;  k  <  yDotK.length;  ++k)  {  if(!interpolator.shift())  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  yDotK.length;  ++k)  {  if(!interpolator.shift())  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(!interpolator.shift())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getRangeInterpolator();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  y0  =(Integer)interpolator.getRangeInterpolator();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getRangeInterpolator();	      Integer    y0    =(Integer)interpolator.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
43	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getInterpolator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  y0  =(Integer)interpolator.getInterpolator();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getInterpolator();	      Integer    y0    =(Integer)interpolator.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
44	[BUG]  [BUGGY]  Integer  y0  =(int)interpolator.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  y0  =(int)interpolator.getStepInterpolator();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(int)interpolator.getStepInterpolator();	      Integer    y0    =(Integer)interpolator.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
45	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getEndInterpolator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  y0  =(Integer)interpolator.getEndInterpolator();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getEndInterpolator();	      Integer    y0    =(Integer)interpolator.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
46	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  yDotK.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  j  =  1;  j  <  yDotK.length;  ++j)  {  [BUGGY]    double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  1;  j  <  yDotK.length;  ++j)  {	  for(int    j    =    1;    j    <    y0.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
47	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  k  <  y0.length;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
48	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getStep();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  y0  =(Integer)interpolator.getStep();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getStep();	      Integer    y0    =(Integer)interpolator.clone();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
49	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  if(ys[k]  <  yDotK[0])  {  break;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  if(ys[k]  <  yDotK[0])  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  if(ys[k]  <  yDotK[0])  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK[0])    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
50	[BUG]  [BUGGY]  StageHandler  handler  =  getStandardHandler();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  StageHandler  handler  =  getStandardHandler();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStandardHandler();	      StageHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
51	[BUG]  [BUGGY]  StageHandler  handler  =  getTraceHandler();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  StageHandler  handler  =  getTraceHandler();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getTraceHandler();	      StageHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
52	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.getStandardStepInterpolator();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  y0  =(Integer)interpolator.getStandardStepInterpolator();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.getStandardStepInterpolator();	      Integer    y0    =(Integer)interpolator.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
53	[BUG]  [BUGGY]  Integer  y0  =(Integer)super.get(k);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  y0  =(Integer)super.get(k);  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)super.get(k);	      Integer    y0    =(Integer)super.clone();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
54	[BUG]  [BUGGY]  Integer  y0  =(Integer)this.super.clone();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  y0  =(Integer)this.super.clone();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)this.super.clone();	      Integer    y0    =(Integer)super.clone();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
55	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  stages.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  j  =  1;  j  <  stages.length;  ++j)  {  [BUGGY]    double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  1;  j  <  stages.length;  ++j)  {	  for(int    j    =    0;    j    <    stages.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
56	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  stages.length-1;  ++j)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  j  =  0;  j  <  stages.length-1;  ++j)  {  [BUGGY]    double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  stages.length-1;  ++j)  {	  for(int    j    =    0;    j    <    stages.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
57	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  phases.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  j  =  0;  j  <  phases.length;  ++j)  {  [BUGGY]    double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  phases.length;  ++j)  {	  for(int    j    =    0;    j    <    stages.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
58	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.get(0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  y0  =(Integer)interpolator.get(0);  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.get(0);	      Integer    y0    =(Integer)interpolator.get();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
59	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  0.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  j  =  1;  j  <  0.length;  ++j)  {  [BUGGY]    double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  1;  j  <  0.length;  ++j)  {	  for(int    j    =    1;    j    <    y0.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
60	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  if(ys[k]  <  y.length)  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
61	[BUG]  [BUGGY]  if(loop)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  if(loop)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(loop)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(yTmp[k]  ==  y[k])  {  continue;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(yTmp[k]    ==    y[k])    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
62	[BUG]  [BUGGY]  Integer  y0  =(Integer)super.stepInterpolator.clone();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  y0  =(Integer)super.stepInterpolator.clone();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)super.stepInterpolator.clone();	      Integer    y0    =(Integer)super.interpolator.clone();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
63	[BUG]  [BUGGY]  for(int  k  =  0;  j  <  k.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  k  =  0;  j  <  k.length;  ++j)  {  [BUGGY]    double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  k  =  0;  j  <  k.length;  ++j)  {	  for(int    j    =    0;    j    <    k.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
64	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStdHandler();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  StageHandler  handler  =  prototype.getStdHandler();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getStdHandler();	      StageHandler    handler    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
65	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  stageSize;  ++j)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  for(int  j  =  0;  j  <  stageSize;  ++j)  {  [BUGGY]    double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	for(int  j  =  0;  j  <  stageSize;  ++j)  {	  for(int    j    =    0;    j    <    stages.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  if(steps[k]  <  y.length)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  if(steps[k]  <  y.length)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(steps[k]  <  y.length)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  y.length)  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    y.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
67	[BUG]  [BUGGY]  if(steps[k]  <  yDotK.length)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  if(steps[k]  <  yDotK.length)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	if(steps[k]  <  yDotK.length)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  if(steps[k]  <  yDotK.length)  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(steps[k]    <    yDotK.length)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
68	[BUG]  [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  k  =  0;  k  <  stages;  ++k)  {  if(!interpolator.shift())  {  break;  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    if(!interpolator.shift())    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
69	[BUG]  [BUGGY]  StageHandler  handler  =  getStepHandler(k);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  StageHandler  handler  =  getStepHandler(k);  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  getStepHandler(k);	      StageHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
70	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.remove();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  y0  =(Integer)interpolator.remove();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.remove();	      Integer    y0    =(Integer)interpolator.get();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
71	[BUG]  [BUGGY]  Integer  y0  =(Integer)interpolator.peek();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  Integer  y0  =(Integer)interpolator.peek();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	Integer  y0  =(Integer)interpolator.peek();	      Integer    y0    =(Integer)interpolator.get();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
72	[BUG]  [BUGGY]  StageHandler  handler  =  prototype.getStepHandler2();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {    [BUGGY]  StageHandler  handler  =  prototype.getStepHandler2();  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	149	149	2	replace	StageHandler  handler  =  prototype.getStepHandler2();	      StageHandler    handler    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
