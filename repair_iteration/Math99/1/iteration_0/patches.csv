bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    gcd(p,  q);  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	add	    gcd(p,  q);		compilable	  [FE]  StackOverflowError  	2	2	add
2	[BUG]  [BUGGY]    gcd(p,  q);  [FE]  StackOverflowError  [FE]    AssertionFailedError  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    gcd(p,  q);  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    gcd(p,  q);		compilable	  [FE]  StackOverflowError  	2	2	add
3	[BUG]  [BUGGY]    gcd(p,  v);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    gcd(p,  v);  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    gcd(p,  v);		non-compiled	[CE]  illegal  start  of  type	2	None	add
4	[BUG]  [BUGGY]    int  u  =  p  +  Math.abs(v);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    int  u  =  p  +  Math.abs(v);  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    int  u  =  p  +  Math.abs(v);		non-compiled	[CE]  illegal  start  of  type	2	None	add
5	[BUG]  [BUGGY]    int  u  =  p  +  Math.sin(v);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    int  u  =  p  +  Math.sin(v);  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    int  u  =  p  +  Math.sin(v);		non-compiled	[CE]  illegal  start  of  type	2	None	add
6	[BUG]  [BUGGY]    gcd(p,  q,  v);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    gcd(p,  q,  v);  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    gcd(p,  q,  v);		non-compiled	[CE]  illegal  start  of  type	2	None	add
7	[BUG]  [BUGGY]  return  Math.abs(u)/  Math.abs(v));  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]  return  Math.abs(u)/  Math.abs(v));  [BUGGY]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)/  Math.abs(v));	return  (Math.abs(u)  +  Math.abs(v));  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  return  (Math.abs(u)/  Math.abs(v));  [CE]  >  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]  return  (Math.abs(u)/  Math.abs(v));  [BUGGY]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(u)/  Math.abs(v));	return  (Math.abs(u)  +  Math.abs(v));  	non-compiled	[CE]  >  expected	1	None	replace
9	[BUG]  [BUGGY]  return  (Math.abs(u)+  Math.abs(v  -  1));  [CE]  >  expected  [FE]        AssertionFailedError  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]  return  (Math.abs(u)+  Math.abs(v  -  1));  [BUGGY]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(u)+  Math.abs(v  -  1));	return  (Math.abs(u)  +  Math.abs(v));  	non-compiled	[CE]  >  expected	1	None	replace
10	[BUG]  [BUGGY]  return  (Math.abs(u)+  Math.abs(v  +  1));  [CE]  >  expected  [FE]          AssertionFailedError  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]  return  (Math.abs(u)+  Math.abs(v  +  1));  [BUGGY]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(u)+  Math.abs(v  +  1));	return  (Math.abs(u)  +  Math.abs(v));  	non-compiled	[CE]  >  expected	1	None	replace
11	[BUG]  [BUGGY]  return  (Math.abs(p)+  Math.abs(v));  [CE]  >  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]  return  (Math.abs(p)+  Math.abs(v));  [BUGGY]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(p)+  Math.abs(v));	return  (Math.abs(u)  +  Math.abs(v));  	non-compiled	[CE]  >  expected	1	None	replace
12	[BUG]  [BUGGY]    gcd  =(int)Math.pow(10,  p);  [CE]  >  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    gcd  =(int)Math.pow(10,  p);  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    gcd  =(int)Math.pow(10,  p);		non-compiled	[CE]  >  expected	2	None	add
13	[BUG]  [BUGGY]    gcd  =(int)Math.floor(p);  [CE]  >  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    gcd  =(int)Math.floor(p);  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    gcd  =(int)Math.floor(p);		non-compiled	[CE]  >  expected	2	None	add
14	[BUG]  [BUGGY]    gcd  =(int)Math.floor(p,  v);  [CE]  >  expected  [FE]        AssertionFailedError  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    gcd  =(int)Math.floor(p,  v);  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    gcd  =(int)Math.floor(p,  v);		non-compiled	[CE]  >  expected	2	None	add
15	[BUG]  [BUGGY]    if(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  >  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    if(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    if(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  >  expected	2	None	add
16	[BUG]  [BUGGY]    if(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    if(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    if(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }		non-compiled	[CE]  <identifier>  expected	2	None	add
