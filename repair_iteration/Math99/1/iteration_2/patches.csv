bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  Math.abs(p)/  Math.abs(q));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(p)/  Math.abs(q));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(p)/  Math.abs(q));	  return    Math.abs(p)/    Math.abs(v));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
2	[BUG]  [BUGGY]  return  Math.abs(p)/  Math.abs(v  -  1));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(p)/  Math.abs(v  -  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(p)/  Math.abs(v  -  1));	  return    Math.abs(p)/    Math.abs(v));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
3	[BUG]  [BUGGY]  return  Math.abs(p)/  Math.abs(v  +  1));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(p)/  Math.abs(v  +  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(p)/  Math.abs(v  +  1));	  return    Math.abs(p)/    Math.abs(v));    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
4	[BUG]  [BUGGY]  int  u  =  gcd  +  Math.sin(p,  v);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  gcd  +  Math.sin(p,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  gcd  +  Math.sin(p,  v);	  int    u    =    p    +    Math.sin(gcd,    v);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
5	[BUG]  [BUGGY]  int  u  =  p  +  Math.sin(gcd,  q);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.sin(gcd,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.sin(gcd,  q);	  int    u    =    p    +    Math.sin(gcd,    v);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
6	[BUG]  [BUGGY]  int  u  =  p  +  Math.sin(gcd,  v,  q);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.sin(gcd,  v,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.sin(gcd,  v,  q);	  int    u    =    p    +    Math.sin(gcd,    v);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
7	[BUG]  [BUGGY]  int  u  =  p  +  Math.sqrt(gcd);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.sqrt(gcd);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.sqrt(gcd);	  int    u    =    p    +    Math.sqrt(v);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
8	[BUG]  [BUGGY]  gcd  =(int)Math.ceil(u,  v);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.ceil(u,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.ceil(u,  v);	  gcd    =(int)Math.floor(u,    v);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
9	[BUG]  [BUGGY]  gcd  =(int)Math.ceil(u,  p);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.ceil(u,  p);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.ceil(u,  p);	  gcd    =(int)Math.floor(u,    v);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
10	[BUG]  [BUGGY]  return  Math.abs(u)/  Math.abs(q  -  1));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)/  Math.abs(q  -  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)/  Math.abs(q  -  1));	  return    (Math.abs(u)/    Math.abs(v    -    1));    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
11	[BUG]  [BUGGY]  return  (Math.abs(u)/  Math.abs(q  -  1));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  (Math.abs(u)/  Math.abs(q  -  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(u)/  Math.abs(q  -  1));	  return    (Math.abs(u)+    Math.abs(q    -    1));    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
12	[BUG]  [BUGGY]  return  (Math.abs(u  -  v)/  Math.abs(v  +  1));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  (Math.abs(u  -  v)/  Math.abs(v  +  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(u  -  v)/  Math.abs(v  +  1));	  return    (Math.abs(u    -    v)+    Math.abs(v    +    1));    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
13	[BUG]  [BUGGY]  return  (Math.abs(u  -  v)+  Math.abs(q  +  1));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  (Math.abs(u  -  v)+  Math.abs(q  +  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(u  -  v)+  Math.abs(q  +  1));	  return    (Math.abs(u    -    v)+    Math.abs(v    +    1));    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
14	[BUG]  [BUGGY]  return  Math.abs(u  -  v)/  Math.abs(v  +  1));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u  -  v)/  Math.abs(v  +  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u  -  v)/  Math.abs(v  +  1));	  return    (Math.abs(u    -    v)+    Math.abs(v    +    1));    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
15	[BUG]  [BUGGY]  return  Math.abs(u  -  v)+  Math.abs(q  +  1));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u  -  v)+  Math.abs(q  +  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u  -  v)+  Math.abs(q  +  1));	  return    (Math.abs(u    -    v)+    Math.abs(v    +    1));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
16	[BUG]  [BUGGY]  Math.abs(v)  <  =  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: ".doubleValue());  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Math.abs(v)  <  =  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: ".doubleValue());  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Math.abs(v)  <  =  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: ".doubleValue());  }	  Math.abs(v)    <    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   ".doubleValue());    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
17	[BUG]  [BUGGY]  Math.abs(v)>  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: ".doubleValue());  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Math.abs(v)>  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: ".doubleValue());  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Math.abs(v)>  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: ".doubleValue());  }	  Math.abs(v)    <    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   ".doubleValue());    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
18	[BUG]  [BUGGY]  Math.abs(p)  <  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: ".doubleValue());  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Math.abs(p)  <  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: ".doubleValue());  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Math.abs(p)  <  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: ".doubleValue());  }	  Math.abs(v)    <    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   ".doubleValue());    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
19	[BUG]  [BUGGY]  gcd  =(int)Math.ceil(p,  v  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.ceil(p,  v  +  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.ceil(p,  v  +  1);	  gcd    =(int)Math.ceil(p,    v);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
20	[BUG]  [BUGGY]  mutableValues(p,  v,  q);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  mutableValues(p,  v,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	mutableValues(p,  v,  q);	  mutableValues(p,    v);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
21	[BUG]  [BUGGY]  mutableValues(gcd,  p,  v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  mutableValues(gcd,  p,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	mutableValues(gcd,  p,  v);	  mutableValues(p,    v);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
22	[BUG]  [BUGGY]  mutableValues(p,  q,  v);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  mutableValues(p,  q,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	mutableValues(p,  q,  v);	  mutableValues(p,    v);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
23	[BUG]  [BUGGY]  MutableValues.mutableValues(p,  v)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutableValues.mutableValues(p,  v)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutableValues.mutableValues(p,  v)  {  throw  new  IllegalArgumentException( " ");  }	  mutableValues(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
24	[BUG]  [BUGGY]  MutableValues  mutableValues(p,  v)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutableValues  mutableValues(p,  v)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutableValues  mutableValues(p,  v)  {  throw  new  IllegalArgumentException( " ");  }	  mutableValues(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
25	[BUG]  [BUGGY]  mutableValues(p,  q)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  mutableValues(p,  q)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	mutableValues(p,  q)  {  throw  new  IllegalArgumentException( " ");  }	  mutableValues(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
26	[BUG]  [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  gcd(p,  q);  }  catch(Throwable  e)  {  }  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  gcd(p,  q);  }  catch(Throwable  e)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(u  >  0)  {  gcd(p,  q);  try  {  gcd(p,  q);  }  catch(Throwable  e)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
27	[BUG]  [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  gcd(p,  q);  }  catch(Exception  e)  {  }  [CE]  <identifier>  expected  [FE]              StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  gcd(p,  q);  }  catch(Exception  e)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(u  >  0)  {  gcd(p,  q);  try  {  gcd(p,  q);  }  catch(Exception  e)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
28	[BUG]  [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  gcd(p,  q);  }  catch(IOException  e)  {  }  [CE]  <identifier>  expected  [FE]                StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  gcd(p,  q);  }  catch(IOException  e)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(u  >  0)  {  gcd(p,  q);  try  {  gcd(p,  q);  }  catch(IOException  e)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
29	[BUG]  [BUGGY]  return  Math.abs(u)/  Math.abs(p  +  1));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)/  Math.abs(p  +  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)/  Math.abs(p  +  1));	  return    Math.abs(u)/    Math.abs(v    +    1));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
30	[BUG]  [BUGGY]  return  Math.abs(u)/  Math.abs(q  +  1));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)/  Math.abs(q  +  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)/  Math.abs(q  +  1));	  return    Math.abs(u)/    Math.abs(v    +    1));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
31	[BUG]  [BUGGY]  return  Math.abs(u)/  Math.abs(v  +  1),  p);  [CE]  >  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)/  Math.abs(v  +  1),  p);  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)/  Math.abs(v  +  1),  p);	  return    Math.abs(u)/    Math.abs(v    +    1));    	non-compiled	[CE]  >  expected	14	None	replace
32	[BUG]  [BUGGY]  gcd(p,  v  +  1,  u);  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  v  +  1,  u);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  v  +  1,  u);	  gcd(p,    v    +    1,    q);    	non-compiled	[CE]  >  expected	81	None	replace
33	[BUG]  [BUGGY]  gcd(p,  v  +  1,  q,  u);  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  v  +  1,  q,  u);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  v  +  1,  q,  u);	  gcd(p,    v    +    1,    q);    	non-compiled	[CE]  >  expected	81	None	replace
34	[BUG]  [BUGGY]  gcd(p,  v  +  1,  q,  v);  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  v  +  1,  q,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  v  +  1,  q,  v);	  gcd(p,    v    +    1,    q);    	non-compiled	[CE]  >  expected	81	None	replace
35	[BUG]  [BUGGY]  return  Math.abs(u)/  Math.abs(p  -  1));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)/  Math.abs(p  -  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)/  Math.abs(p  -  1));	  return    Math.abs(u)/    Math.abs(v    -    1));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
36	[BUG]  [BUGGY]  allowMean(p,  q)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  allowMean(p,  q)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	allowMean(p,  q)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  allowMean(p,    v)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
37	[BUG]  [BUGGY]  allowMean(u,  v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  allowMean(u,  v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	allowMean(u,  v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  allowMean(p,    v)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
38	[BUG]  [BUGGY]  allowMean(p,  v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  q);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  allowMean(p,  v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  q);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	allowMean(p,  v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  q);  }	  allowMean(p,    v)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
39	[BUG]  [BUGGY]  return  Math.abs(p)+  Math.abs(v));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(p)+  Math.abs(v));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(p)+  Math.abs(v));	  return    (Math.abs(p)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
40	[BUG]  [BUGGY]  return  (Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  (Math.abs(u)+  Math.abs(q));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(u)+  Math.abs(q));	  return    (Math.abs(p)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
41	[BUG]  [BUGGY]  int  u  =  p  +  Math.sin(p,  q);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.sin(p,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.sin(p,  q);	  int    u    =    p    +    Math.sin(v,    q);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
42	[BUG]  [BUGGY]  int  u  =  p  +  Math.sin(p,  v);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.sin(p,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.sin(p,  v);	  int    u    =    p    +    Math.sin(v,    q);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
43	[BUG]  [BUGGY]  mutation(u  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  mutation(u  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	mutation(u  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  mutation(p    <    0    ||    v    >    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
44	[BUG]  [BUGGY]  Mutation(u  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Mutation(u  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Mutation(u  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  mutation(p    <    0    ||    v    >    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
45	[BUG]  [BUGGY]  Mutation(v  <  0  ||  p  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Mutation(v  <  0  ||  p  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Mutation(v  <  0  ||  p  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  mutation(p    <    0    ||    v    >    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
46	[BUG]  [BUGGY]  Mutation(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Mutation(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Mutation(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  mutation(p    <    0    ||    v    >    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
47	[BUG]  [BUGGY]  gcd(p,  u  +  1,  v);  [CE]  not  a  statement  [FE]        StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  u  +  1,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  u  +  1,  v);	  gcd(p,    q    +    1,    v);    	non-compiled	[CE]  not  a  statement	86	None	replace
48	[BUG]  [BUGGY]  gcd(p,  q  +  1,  v,  t);  [CE]  not  a  statement  [FE]          StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q  +  1,  v,  t);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q  +  1,  v,  t);	  gcd(p,    q    +    1,    v);    	non-compiled	[CE]  not  a  statement	86	None	replace
49	[BUG]  [BUGGY]  int  u  =  p  +  Math.log(gcd,  q);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.log(gcd,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.log(gcd,  q);	  int    u    =    p    +    Math.log(q);    	non-compiled	[CE]  not  a  statement	49	None	replace
50	[BUG]  [BUGGY]  int  u  =  p  +  Math.log(gcd,  v);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.log(gcd,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.log(gcd,  v);	  int    u    =    p    +    Math.log(q);    	non-compiled	[CE]  not  a  statement	49	None	replace
51	[BUG]  [BUGGY]  int  u  =  p  +  Math.log(gcd);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.log(gcd);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.log(gcd);	  int    u    =    p    +    Math.log(q);    	non-compiled	[CE]  not  a  statement	49	None	replace
52	[BUG]  [BUGGY]  return  Math.abs(u)/  Math.abs(p  -  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)/  Math.abs(p  -  1);  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)/  Math.abs(p  -  1);	  return    Math.abs(u)/    Math.abs(v    -    1);    	non-compiled	[CE]  not  a  statement	85	None	replace
53	[BUG]  [BUGGY]  return  Math.abs(u)/  Math.abs(q  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)/  Math.abs(q  -  1);  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)/  Math.abs(q  -  1);	  return    Math.abs(u)/    Math.abs(v    -    1);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
54	[BUG]  [BUGGY]  return  Math.abs(p)/  Math.abs(v  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(p)/  Math.abs(v  -  1);  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(p)/  Math.abs(v  -  1);	  return    Math.abs(u)/    Math.abs(v    -    1);    	non-compiled	[CE]  not  a  statement	85	None	replace
55	[BUG]  [BUGGY]  allowNegatives(u,  v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  allowNegatives(u,  v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	allowNegatives(u,  v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  allowNegatives(p,    v)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  not  a  statement	61	None	replace
56	[BUG]  [BUGGY]  allowNegatives(p,  q)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  allowNegatives(p,  q)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	allowNegatives(p,  q)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  allowNegatives(p,    v)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  not  a  statement	61	None	replace
57	[BUG]  [BUGGY]  allowNegatives(p,  v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  q);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  allowNegatives(p,  v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  q);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	allowNegatives(p,  v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  q);  }	  allowNegatives(p,    v)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  not  a  statement	61	None	replace
58	[BUG]  [BUGGY]  int  u  =  p  +  Math.floor(v);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.floor(v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.floor(v);	  int    u    =    p    +    Math.log(v);    	non-compiled	[CE]  not  a  statement	79	None	replace
59	[BUG]  [BUGGY]  return  Math.abs(u)/  Math.abs(p  -  v));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)/  Math.abs(p  -  v));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)/  Math.abs(p  -  v));	  return    Math.abs(u)/    Math.abs(q    -    v));    	non-compiled	[CE]  not  a  statement	54	None	replace
60	[BUG]  [BUGGY]  return  Math.abs(u)/  Math.abs(v  -  q));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)/  Math.abs(v  -  q));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)/  Math.abs(v  -  q));	  return    Math.abs(u)/    Math.abs(q    -    v));    	non-compiled	[CE]  not  a  statement	54	None	replace
61	[BUG]  [BUGGY]  return  Math.abs(p)/  Math.abs(v  -  u));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(p)/  Math.abs(v  -  u));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(p)/  Math.abs(v  -  u));	  return    Math.abs(u)/    Math.abs(q    -    v));    	non-compiled	[CE]  not  a  statement	54	None	replace
62	[BUG]  [BUGGY]  return  Math.abs(u)/  Math.abs(p  +  v));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)/  Math.abs(p  +  v));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)/  Math.abs(p  +  v));	  return    Math.abs(u)/    Math.abs(q    -    v));    	non-compiled	[CE]  not  a  statement	54	None	replace
63	[BUG]  [BUGGY]  gcd(p,  u,  v,  DEFAULT_SIZE);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  u,  v,  DEFAULT_SIZE);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  u,  v,  DEFAULT_SIZE);	  gcd(p,    q,    v,    DEFAULT_SIZE);    	non-compiled	[CE]  not  a  statement	78	None	replace
64	[BUG]  [BUGGY]  gcd(p,  v,  q,  DEFAULT_SIZE);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  v,  q,  DEFAULT_SIZE);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  v,  q,  DEFAULT_SIZE);	  gcd(p,    q,    v,    DEFAULT_SIZE);    	non-compiled	[CE]  not  a  statement	78	None	replace
65	[BUG]  [BUGGY]  gcd(p,  q,  v,  1);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  v,  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  v,  1);	  gcd(p,    q,    v,    DEFAULT_SIZE);    	non-compiled	[CE]  not  a  statement	78	None	replace
66	[BUG]  [BUGGY]  gcd(p,  q,  v,  0,  DEFAULT_SIZE);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  v,  0,  DEFAULT_SIZE);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  v,  0,  DEFAULT_SIZE);	  gcd(p,    q,    v,    DEFAULT_SIZE);    	non-compiled	[CE]  not  a  statement	78	None	replace
67	[BUG]  [BUGGY]  gcd(p,  v);  Gcd(p,  q);  [CE]  not  a  statement  [FE]          StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  v);  Gcd(p,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  v);  Gcd(p,  q);	          gcd(p,    q);    Gcd(p,    q);    	non-compiled	[CE]  not  a  statement	44	None	replace
68	[BUG]  [BUGGY]  Gcd(p,  q);  [CE]  not  a  statement  [FE]            StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Gcd(p,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Gcd(p,  q);	          gcd(p,    q);    Gcd(p,    q);    	non-compiled	[CE]  not  a  statement	44	None	replace
69	[BUG]  [BUGGY]  gcd(p,  q);  Gcd(p,  v);  [CE]  <identifier>  expected  [FE]              StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q);  Gcd(p,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q);  Gcd(p,  v);	          gcd(p,    q);    Gcd(p,    q);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
70	[BUG]  [BUGGY]  return  Math.abs(u)/  Math.abs(p,  q));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)/  Math.abs(p,  q));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)/  Math.abs(p,  q));	  return    Math.abs(u)/    Math.abs(p,    v));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
71	[BUG]  [BUGGY]  return  Math.abs(u)/  Math.abs(gcd,  v));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)/  Math.abs(gcd,  v));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)/  Math.abs(gcd,  v));	  return    Math.abs(u)/    Math.abs(p,    v));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
72	[BUG]  [BUGGY]  return  Math.abs(u)/  Math.abs(q,  v));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)/  Math.abs(q,  v));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)/  Math.abs(q,  v));	  return    Math.abs(u)/    Math.abs(p,    v));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
73	[BUG]  [BUGGY]  int  u  =  p  +  Math.rint(q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.rint(q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.rint(q);	  int    u    =    p    +    Math.rint(v);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
74	[BUG]  [BUGGY]  int  u  =  p  +  Math.rint(v)-  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.rint(v)-  1;  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.rint(v)-  1;	  int    u    =    p    +    Math.rint(v);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
75	[BUG]  [BUGGY]  int  u  =  p  +  Math.rint(v)+  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.rint(v)+  1;  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.rint(v)+  1;	  int    u    =    p    +    Math.rint(v);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
76	[BUG]  [BUGGY]  int  u  =  p  +  Math.rint(v,  q);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.rint(v,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.rint(v,  q);	  int    u    =    p    +    Math.rint(v);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
77	[BUG]  [BUGGY]  parse(p,  q);  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  parse(p,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	parse(p,  q);	          gcd(p,    q);    parse(p,    q);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
78	[BUG]  [BUGGY]  gcd(p,  v);  parse(p,  q);  [CE]  <identifier>  expected  [FE]              StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  v);  parse(p,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  v);  parse(p,  q);	          gcd(p,    q);    parse(p,    q);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
79	[BUG]  [BUGGY]  gcd(p,  q);  parse(p,  v);  [CE]  <identifier>  expected  [FE]                StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q);  parse(p,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q);  parse(p,  v);	          gcd(p,    q);    parse(p,    q);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
80	[BUG]  [BUGGY]  return  (Math.abs(u)/  Math.abs(q  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  (Math.abs(u)/  Math.abs(q  +  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(u)/  Math.abs(q  +  1));	  return    (Math.abs(u)/    Math.abs(v    +    1));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
81	[BUG]  [BUGGY]  return  Math.abs(u)/  Math.abs(v  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)/  Math.abs(v  +  1);  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)/  Math.abs(v  +  1);	  return    (Math.abs(u)/    Math.abs(v    +    1));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
82	[BUG]  [BUGGY]  int  u  =  p  +  Math.ceil(q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.ceil(q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.ceil(q);	  int    u    =    p    +    Math.ceil(v);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
83	[BUG]  [BUGGY]  int  u  =  p  +  Math.ceil(v  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.ceil(v  -  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.ceil(v  -  1);	  int    u    =    p    +    Math.ceil(v);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
84	[BUG]  [BUGGY]  int  u  =  p  +  Math.ceil(gcd,  v);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.ceil(gcd,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.ceil(gcd,  v);	  int    u    =    p    +    Math.ceil(v);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
85	[BUG]  [BUGGY]  int  u  =  p  +  Math.cos(v  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.cos(v  -  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.cos(v  -  1);	  int    u    =    p    +    Math.cos(v);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
86	[BUG]  [BUGGY]  int  u  =  p  +  Math.cos(q);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.cos(q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.cos(q);	  int    u    =    p    +    Math.cos(v);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
87	[BUG]  [BUGGY]  mutableValues.add(p,  q);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  mutableValues.add(p,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	mutableValues.add(p,  q);	  mutableValues.add(p);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
88	[BUG]  [BUGGY]  mutableValues.add(p,  v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  mutableValues.add(p,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	mutableValues.add(p,  v);	  mutableValues.add(p);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
89	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]          StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	throw  new  IllegalArgumentException( " ");	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(NumberFormatException    e)    {    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
90	[BUG]  [BUGGY]  gcd(p,  u);  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  u);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  u);	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(NumberFormatException    e)    {    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
91	[BUG]  [BUGGY]  return  Math.abs(u)+  Math.abs(v  +  1));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)+  Math.abs(v  +  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)+  Math.abs(v  +  1));	  return    (Math.abs(p)+    Math.abs(v    +    1));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
92	[BUG]  [BUGGY]  int  u  =  p  +  Math.sin(v,  p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.sin(v,  p);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.sin(v,  p);	  int    u    =    p    +    Math.sin(q,    v);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
93	[BUG]  [BUGGY]  int  u  =  p  +  Math.abs(gcd);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.abs(gcd);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.abs(gcd);	  int    u    =    p    +    Math.abs(q);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
94	[BUG]  [BUGGY]  int  u  =  p  +  Math.abs(gcd,  q);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.abs(gcd,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.abs(gcd,  q);	  int    u    =    p    +    Math.abs(q);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
95	[BUG]  [BUGGY]  int  u  =  p  +  Math.abs(k);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.abs(k);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.abs(k);	  int    u    =    p    +    Math.abs(q);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
96	[BUG]  [BUGGY]  gcd(p,  v,  q,  u);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  v,  q,  u);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  v,  q,  u);	  gcd(p,    v,    q);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
97	[BUG]  [BUGGY]  gcd(p,  v,  q,  t);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  v,  q,  t);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  v,  q,  t);	  gcd(p,    v,    q);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
98	[BUG]  [BUGGY]  gcd(p,  u,  q);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  u,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  u,  q);	  gcd(p,    v,    q);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
99	[BUG]  [BUGGY]  gcd  =(int)Math.floor(u,  q);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.floor(u,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.floor(u,  q);	  gcd    =(int)Math.floor(p,    q);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
100	[BUG]  [BUGGY]  gcd  =(int)Math.ceil(p,  q  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.ceil(p,  q  +  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.ceil(p,  q  +  1);	  gcd    =(int)Math.ceil(p,    q);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
101	[BUG]  [BUGGY]  gcd  =(int)Math.ceil(p,  q,  v);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.ceil(p,  q,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.ceil(p,  q,  v);	  gcd    =(int)Math.ceil(p,    q);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
102	[BUG]  [BUGGY]  try  {  gcd(p,  v);  }  catch(java.util.ArrayIndexOutOfBoundsException  e)  {  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  try  {  gcd(p,  v);  }  catch(java.util.ArrayIndexOutOfBoundsException  e)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	try  {  gcd(p,  v);  }  catch(java.util.ArrayIndexOutOfBoundsException  e)  {  }	  gcd(u,    v);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
103	[BUG]  [BUGGY]  try  {  gcd(p,  v);  }  catch(NumberFormatException  nfe)  {  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  try  {  gcd(p,  v);  }  catch(NumberFormatException  nfe)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	try  {  gcd(p,  v);  }  catch(NumberFormatException  nfe)  {  }	  gcd(u,    v);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
104	[BUG]  [BUGGY]  try  {  gcd(p,  v);  }  catch(NumberFormatException  e)  {  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  try  {  gcd(p,  v);  }  catch(NumberFormatException  e)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	try  {  gcd(p,  v);  }  catch(NumberFormatException  e)  {  }	  gcd(u,    v);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
105	[BUG]  [BUGGY]  gcd  =(int)Math.log(p,  v);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.log(p,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.log(p,  v);	  gcd    =(int)Math.log(p,    q);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
106	[BUG]  [BUGGY]  gcd  =(int)Math.log(u,  q);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.log(u,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.log(u,  q);	  gcd    =(int)Math.log(p,    q);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
107	[BUG]  [BUGGY]  gcd  =(int)Math.rint(p,  q);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.rint(p,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.rint(p,  q);	  gcd    =(int)Math.log(p,    q);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
108	[BUG]  [BUGGY]  gcd(p,  v,  q,  DEFAULT_TWO_PI);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  v,  q,  DEFAULT_TWO_PI);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  v,  q,  DEFAULT_TWO_PI);	  gcd(p,    q,    v,    DEFAULT_TWO_PI);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
109	[BUG]  [BUGGY]  gcd(p,  q,  v,  0,  DEFAULT_TWO_PI);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  v,  0,  DEFAULT_TWO_PI);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  v,  0,  DEFAULT_TWO_PI);	  gcd(p,    q,    v,    DEFAULT_TWO_PI);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
110	[BUG]  [BUGGY]  gcd(p,  u,  v,  DEFAULT_TWO_PI);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  u,  v,  DEFAULT_TWO_PI);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  u,  v,  DEFAULT_TWO_PI);	  gcd(p,    q,    v,    DEFAULT_TWO_PI);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
111	[BUG]  [BUGGY]  mutation(u  <  0  ||  v  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  mutation(u  <  0  ||  v  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	mutation(u  <  0  ||  v  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  mutation(p    <    0    ||    v    >    1)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
112	[BUG]  [BUGGY]  Mutation(u  <  0  ||  v  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Mutation(u  <  0  ||  v  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Mutation(u  <  0  ||  v  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  mutation(p    <    0    ||    v    >    1)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
113	[BUG]  [BUGGY]  Mutation(v  <  0  ||  p  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Mutation(v  <  0  ||  p  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Mutation(v  <  0  ||  p  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  mutation(p    <    0    ||    v    >    1)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
114	[BUG]  [BUGGY]  Mutation(p  <  0  ||  v  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Mutation(p  <  0  ||  v  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Mutation(p  <  0  ||  v  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  mutation(p    <    0    ||    v    >    1)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  	12	None	replace
115	[BUG]  [BUGGY]  Math.abs(v)  <  =  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Math.abs(v)  <  =  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Math.abs(v)  <  =  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  Math.abs(v)    <    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  	82	None	replace
116	[BUG]  [BUGGY]  Math.abs(v)>  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Math.abs(v)>  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Math.abs(v)>  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  Math.abs(v)    <    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  	82	None	replace
117	[BUG]  [BUGGY]  Math.abs(p)  <  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  v);  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Math.abs(p)  <  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  v);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Math.abs(p)  <  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  v);  }	  Math.abs(v)    <    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  	82	None	replace
118	[BUG]  [BUGGY]  gcd(p,  u,  v,  t);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  u,  v,  t);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  u,  v,  t);	  gcd(p,    q,    v,    t);    	non-compiled	[CE]  ';'  expected	67	None	replace
119	[BUG]  [BUGGY]  gcd(p,  q,  v,  t  +  1);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  v,  t  +  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  v,  t  +  1);	  gcd(p,    q,    v,    t);    	non-compiled	[CE]  ';'  expected	67	None	replace
120	[BUG]  [BUGGY]  int  u  =  p  +  Math.abs(q  -  1);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.abs(q  -  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.abs(q  -  1);	  int    u    =    p    +    Math.abs(v    -    1);    	non-compiled	[CE]  ';'  expected	40	None	replace
121	[BUG]  [BUGGY]  int  u  =  p  +  Math.abs(v  -  2);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.abs(v  -  2);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.abs(v  -  2);	  int    u    =    p    +    Math.abs(v    -    1);    	non-compiled	[CE]  ';'  expected	40	None	replace
122	[BUG]  [BUGGY]  int  u  =  p  +  Math.abs(w  -  1);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.abs(w  -  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.abs(w  -  1);	  int    u    =    p    +    Math.abs(v    -    1);    	non-compiled	[CE]  ';'  expected	40	None	replace
123	[BUG]  [BUGGY]  gcd  =(int)Math.ceil(u);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.ceil(u);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.ceil(u);	  gcd    =(int)Math.ceil(p);    	non-compiled	[CE]  ';'  expected	3	None	replace
124	[BUG]  [BUGGY]  mutation( "Math  is  less  than  1: "  +  p,  v);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  mutation( "Math  is  less  than  1: "  +  p,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	mutation( "Math  is  less  than  1: "  +  p,  v);	  mutation(   "Math    is    less    than    1:   "    +    p);    	non-compiled	[CE]  ';'  expected	83	None	replace
125	[BUG]  [BUGGY]  mutation( "Math  is  less  than  1: "  +  u);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  mutation( "Math  is  less  than  1: "  +  u);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	mutation( "Math  is  less  than  1: "  +  u);	  mutation(   "Math    is    less    than    1:   "    +    p);    	non-compiled	[CE]  ';'  expected	83	None	replace
126	[BUG]  [BUGGY]  mutation( "Math  is  less  than  1: "  +  v);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  mutation( "Math  is  less  than  1: "  +  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	mutation( "Math  is  less  than  1: "  +  v);	  mutation(   "Math    is    less    than    1:   "    +    p);    	non-compiled	[CE]  ';'  expected	83	None	replace
127	[BUG]  [BUGGY]  gcd.set(p,  v);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd.set(p,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd.set(p,  v);	  [Delete]    	non-compiled	[CE]  ';'  expected	72	None	replace
128	[BUG]  [BUGGY]  gcd.set(p,  q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd.set(p,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd.set(p,  q);	  [Delete]    	non-compiled	[CE]  <identifier>  expected	72	None	replace
129	[BUG]  [BUGGY]  gcd(p,  q,  0,  u);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  0,  u);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  0,  u);	  gcd(p,    q,    0,    v);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
130	[BUG]  [BUGGY]  gcd(p,  v,  0,  q);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  v,  0,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  v,  0,  q);	  gcd(p,    q,    0,    v);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
131	[BUG]  [BUGGY]  gcd(p,  u,  0,  v);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  u,  0,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  u,  0,  v);	  gcd(p,    q,    0,    v);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
132	[BUG]  [BUGGY]  gcd(p,  q,  0,  v  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  0,  v  -  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  0,  v  -  1);	  gcd(p,    q,    0,    v);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
133	[BUG]  [BUGGY]  gcd  =(int)Math.pow(10,  y  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.pow(10,  y  +  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.pow(10,  y  +  1);	  gcd    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
134	[BUG]  [BUGGY]  allowNegatives(u,  v)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  allowNegatives(u,  v)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	allowNegatives(u,  v)  {  throw  new  IllegalArgumentException( " ");  }	  allowNegatives(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
135	[BUG]  [BUGGY]  int  u  =  p  +  Math.sin(gcd(p,  q));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.sin(gcd(p,  q));  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.sin(gcd(p,  q));	  int    u    =    p    +    Math.sin(gcd(p,    v));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
136	[BUG]  [BUGGY]  int  u  =  p  +  Math.sin(gcd(p,  v)-  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.sin(gcd(p,  v)-  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.sin(gcd(p,  v)-  1);	  int    u    =    p    +    Math.sin(gcd(p,    v));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
137	[BUG]  [BUGGY]  int  u  =  p  +  Math.sin(gcd(p,  v),  q);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.sin(gcd(p,  v),  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.sin(gcd(p,  v),  q);	  int    u    =    p    +    Math.sin(gcd(p,    v));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
138	[BUG]  [BUGGY]  return  Math.abs(u)+  Math.abs(v  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)+  Math.abs(v  -  1);  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)+  Math.abs(v  -  1);	  return    Math.abs(u)+    Math.abs(v    -    1));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
139	[BUG]  [BUGGY]  return  Math.abs(u)+  Math.abs(q  -  1));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)+  Math.abs(q  -  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)+  Math.abs(q  -  1));	  return    Math.abs(u)+    Math.abs(v    -    1));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
140	[BUG]  [BUGGY]  try  {  gcd(p,  q);  }  catch(java.util.ArrayIndexOutOfBoundsException  e)  {  }  [CE]  <identifier>  expected  [FE]        StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  try  {  gcd(p,  q);  }  catch(java.util.ArrayIndexOutOfBoundsException  e)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	try  {  gcd(p,  q);  }  catch(java.util.ArrayIndexOutOfBoundsException  e)  {  }	  gcd(u,    q);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
141	[BUG]  [BUGGY]  try  {  gcd(p,  q);  }  catch(java.util.ArrayIndexOutOfBoundsException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  try  {  gcd(p,  q);  }  catch(java.util.ArrayIndexOutOfBoundsException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	try  {  gcd(p,  q);  }  catch(java.util.ArrayIndexOutOfBoundsException  e)  {  throw  new  IllegalArgumentException( " ");  }	  gcd(u,    q);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
142	[BUG]  [BUGGY]  try  {  gcd(p,  q);  }  catch(NumberFormatException  nfe)  {  }  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  try  {  gcd(p,  q);  }  catch(NumberFormatException  nfe)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	try  {  gcd(p,  q);  }  catch(NumberFormatException  nfe)  {  }	  gcd(u,    q);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
143	[BUG]  [BUGGY]  gcd(p,  v  +  1);  [CE]  <identifier>  expected  [FE]          StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  v  +  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  v  +  1);	  gcd(p,    q    +    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
144	[BUG]  [BUGGY]  gcd(p,  q  +  2);  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q  +  2);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q  +  2);	  gcd(p,    q    +    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
145	[BUG]  [BUGGY]  gcd  =(int)Math.pow(100,  v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.pow(100,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.pow(100,  v);	  gcd    =(int)Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
146	[BUG]  [BUGGY]  final  gcd(p,  q);  [CE]  <identifier>  expected  [FE]        StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  final  gcd(p,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	final  gcd(p,  q);	          gcd(p,    q);    final    gcd(p,    q);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
147	[BUG]  [BUGGY]  return  (Math.abs(p)/  Math.abs(q));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  (Math.abs(p)/  Math.abs(q));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(p)/  Math.abs(q));	  return    (Math.abs(p)/    Math.abs(v));    	non-compiled	[CE]  <identifier>  expected	55	None	replace
148	[BUG]  [BUGGY]  return  (Math.abs(p)/  Math.abs(v  -  1));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  (Math.abs(p)/  Math.abs(v  -  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(p)/  Math.abs(v  -  1));	  return    (Math.abs(p)/    Math.abs(v));    	non-compiled	[CE]  <identifier>  expected	55	None	replace
149	[BUG]  [BUGGY]  gcd  =(int)Math.pow(100,  u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.pow(100,  u);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.pow(100,  u);	  gcd    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
150	[BUG]  [BUGGY]  return  Math.abs(u)/  Math.abs(v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)/  Math.abs(v);  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)/  Math.abs(v);	  return    Math.abs(u)/    Math.abs(p);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
151	[BUG]  [BUGGY]  return  Math.abs(p)/  Math.abs(u);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(p)/  Math.abs(u);  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(p)/  Math.abs(u);	  return    Math.abs(u)/    Math.abs(p);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
152	[BUG]  [BUGGY]  return  Math.abs(v)/  Math.abs(p);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(v)/  Math.abs(p);  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(v)/  Math.abs(p);	  return    Math.abs(u)/    Math.abs(p);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
153	[BUG]  [BUGGY]  return  Math.abs(v)/  Math.abs(q);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(v)/  Math.abs(q);  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(v)/  Math.abs(q);	  return    Math.abs(u)/    Math.abs(q);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
154	[BUG]  [BUGGY]  return  Math.abs(p)/  Math.abs(q);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(p)/  Math.abs(q);  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(p)/  Math.abs(q);	  return    Math.abs(u)/    Math.abs(q);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
155	[BUG]  [BUGGY]  gcd(p,  u,  v,  q);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  u,  v,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  u,  v,  q);	  gcd(p,    q,    v,    u);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
156	[BUG]  [BUGGY]  gcd(p,  p,  v,  u);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  p,  v,  u);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  p,  v,  u);	  gcd(p,    q,    v,    u);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
157	[BUG]  [BUGGY]  mutation(u  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  mutation(u  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	mutation(u  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutation(p    <    0    ||    v    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	33	None	replace
158	[BUG]  [BUGGY]  Mutation(u  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Mutation(u  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Mutation(u  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutation(p    <    0    ||    v    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	33	None	replace
159	[BUG]  [BUGGY]  Mutation(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Mutation(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Mutation(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutation(p    <    0    ||    v    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	33	None	replace
160	[BUG]  [BUGGY]  MutationHandler.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationHandler.throw  new  IllegalArgumentException( " ");  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationHandler.throw  new  IllegalArgumentException( " ");	  mutation(p    <    0    ||    v    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
161	[BUG]  [BUGGY]  gcd  =(int)Math.ceil(v);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.ceil(v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.ceil(v);	  gcd    =(int)Math.floor(u);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
162	[BUG]  [BUGGY]  gcd(p,  v,  p);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  v,  p);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  v,  p);	  gcd(p,    p,    v);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
163	[BUG]  [BUGGY]  gcd(p,  p,  q);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  p,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  p,  q);	  gcd(p,    p,    v);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
164	[BUG]  [BUGGY]  gcd  =(int)Math.pow(100,  q);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.pow(100,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.pow(100,  q);	  gcd    =(int)Math.pow(10,    q);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
165	[BUG]  [BUGGY]  gcd(p,  v);  int  p  =  p.length();  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  v);  int  p  =  p.length();  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  v);  int  p  =  p.length();	          gcd(p,    q);    int    p    =    p.length();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
166	[BUG]  [BUGGY]  gcd  =(int)Math.ceil(q);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.ceil(q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.ceil(q);	  gcd    =(int)Math.floor(q);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
167	[BUG]  [BUGGY]  return  Math.abs(u)+  Math.abs(q));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)+  Math.abs(q));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)+  Math.abs(q));	  return    Math.abs(u)+    Math.abs(v));    	non-compiled	[CE]  ';'  expected	1	None	replace
168	[BUG]  [BUGGY]  MutationFactory.mutation(p,  v)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationFactory.mutation(p,  v)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationFactory.mutation(p,  v)  {  throw  new  IllegalArgumentException( " ");  }	  mutation(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
169	[BUG]  [BUGGY]  MutationMath.abs(p,  v)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationMath.abs(p,  v)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationMath.abs(p,  v)  {  throw  new  IllegalArgumentException( " ");  }	  mutation(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
170	[BUG]  [BUGGY]  MutationMath.abs(u,  v)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationMath.abs(u,  v)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationMath.abs(u,  v)  {  throw  new  IllegalArgumentException( " ");  }	  mutation(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
171	[BUG]  [BUGGY]  MutationFactory.mutation(p,  v)  {  throw  new  IllegalArgumentException( " ".trim());  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationFactory.mutation(p,  v)  {  throw  new  IllegalArgumentException( " ".trim());  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationFactory.mutation(p,  v)  {  throw  new  IllegalArgumentException( " ".trim());  }	  mutation(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	71	None	replace
172	[BUG]  [BUGGY]  allowNegatives(v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  allowNegatives(v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	allowNegatives(v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  allowNegatives(p)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  	62	None	replace
173	[BUG]  [BUGGY]  allowNegatives(p)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  q);  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  allowNegatives(p)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  q);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	allowNegatives(p)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  q);  }	  allowNegatives(p)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  	62	None	replace
174	[BUG]  [BUGGY]  Mutation(v  <  0  ||  p  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Mutation(v  <  0  ||  p  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Mutation(v  <  0  ||  p  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);	  mutation(p    <    0    ||    v    >    1)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  	12	None	replace
175	[BUG]  [BUGGY]  MutationStatistics.assertEquals(u,  v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationStatistics.assertEquals(u,  v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationStatistics.assertEquals(u,  v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  mutation(p    <    0    ||    v    >    1)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  	12	None	replace
176	[BUG]  [BUGGY]  return  (Math.abs(u  *  v)+  Math.abs(v  +  1));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  (Math.abs(u  *  v)+  Math.abs(v  +  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(u  *  v)+  Math.abs(v  +  1));	  return    (Math.abs(u    -    v)+    Math.abs(v    +    1));    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
177	[BUG]  [BUGGY]  return  (Math.abs(u  -  q)+  Math.abs(v  +  1));  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  (Math.abs(u  -  q)+  Math.abs(v  +  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(u  -  q)+  Math.abs(v  +  1));	  return    (Math.abs(u    -    v)+    Math.abs(v    +    1));    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
178	[BUG]  [BUGGY]  int  u  =  p  +  Math.sqrt(v  -  1);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.sqrt(v  -  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.sqrt(v  -  1);	  int    u    =    p    +    Math.abs(v    -    1);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
179	[BUG]  [BUGGY]  gcd(p,  q  +  1,  v  -  1);  [CE]  cannot  find  symbol  [FE]        StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q  +  1,  v  -  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q  +  1,  v  -  1);	  gcd(p,    q    +    1,    v);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
180	[BUG]  [BUGGY]  return  (Math.abs(p)+  Math.abs(q  +  1));  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  (Math.abs(p)+  Math.abs(q  +  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(p)+  Math.abs(q  +  1));	  return    (Math.abs(u)+    Math.abs(q    +    1));    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
181	[BUG]  [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(NumberFormatException  nfe)  {  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(NumberFormatException  nfe)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(u  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(NumberFormatException  nfe)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(NumberFormatException    nfe)    {    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
182	[BUG]  [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  gcd(p,  q);  }  catch(NumberFormatException  nfe)  {  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  gcd(p,  q);  }  catch(NumberFormatException  nfe)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(u  >  0)  {  gcd(p,  q);  try  {  gcd(p,  q);  }  catch(NumberFormatException  nfe)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(NumberFormatException    nfe)    {    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
183	[BUG]  [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  p  +=  v;  }  catch(NumberFormatException  nfe)  {  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  p  +=  v;  }  catch(NumberFormatException  nfe)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(u  >  0)  {  gcd(p,  q);  try  {  p  +=  v;  }  catch(NumberFormatException  nfe)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(NumberFormatException    nfe)    {    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
184	[BUG]  [BUGGY]  int  u  =  p  +  Math.sin(v,  q)-  1;  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.sin(v,  q)-  1;  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.sin(v,  q)-  1;	  int    u    =    p    +    Math.sin(v,    q);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
185	[BUG]  [BUGGY]  gcd(p,  q  +  1);  int  p  =  p.length();  [CE]  cannot  find  symbol  [FE]              StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q  +  1);  int  p  =  p.length();  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q  +  1);  int  p  =  p.length();	          gcd(p,    q);    int    p    =    p.length();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
186	[BUG]  [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(NumberFormatException  e)  {  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(NumberFormatException  e)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(u  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(NumberFormatException  e)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(NumberFormatException    e)    {    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
187	[BUG]  [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  p  +=  q;  }  catch(NumberFormatException  e)  {  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  p  +=  q;  }  catch(NumberFormatException  e)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(u  >  0)  {  gcd(p,  q);  try  {  p  +=  q;  }  catch(NumberFormatException  e)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(NumberFormatException    e)    {    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
188	[BUG]  [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  p  +=  v;  }  catch(NumberFormatException  e)  {  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  p  +=  v;  }  catch(NumberFormatException  e)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(u  >  0)  {  gcd(p,  q);  try  {  p  +=  v;  }  catch(NumberFormatException  e)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(NumberFormatException    e)    {    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
189	[BUG]  [BUGGY]  allowNegatives(q)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  allowNegatives(q)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	allowNegatives(q)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  allowNegatives(p)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  >  expected	62	None	replace
190	[BUG]  [BUGGY]  gcd(u,  v  +  1,  q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(u,  v  +  1,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(u,  v  +  1,  q);	  gcd(p,    v    +    1,    q);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
191	[BUG]  [BUGGY]  gcd(u,  p  +  1,  q);  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(u,  p  +  1,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(u,  p  +  1,  q);	  gcd(p,    v    +    1,    q);    	non-compiled	[CE]  >  expected	81	None	replace
192	[BUG]  [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(Throwable  e)  {  }  [CE]  >  expected  [FE]            StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(Throwable  e)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(u  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(Throwable  e)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  >  expected	75	None	replace
193	[BUG]  [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(Exception  e)  {  }  [CE]  >  expected  [FE]              StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(Exception  e)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(u  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(Exception  e)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  >  expected	75	None	replace
194	[BUG]  [BUGGY]  try  {  gcd(p,  q);  }  catch(Throwable  e)  {  }  [CE]  >  expected  [FE]                StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  try  {  gcd(p,  q);  }  catch(Throwable  e)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	try  {  gcd(p,  q);  }  catch(Throwable  e)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  >  expected	75	None	replace
195	[BUG]  [BUGGY]  int  u  =  p  +  Math.rint(q,  v);  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.rint(q,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.rint(q,  v);	  int    u    =    p    +    Math.rint(v);    	non-compiled	[CE]  >  expected	50	None	replace
196	[BUG]  [BUGGY]  int  u  =  p  *  Math.rint(v);  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  *  Math.rint(v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  *  Math.rint(v);	  int    u    =    p    +    Math.rint(v);    	non-compiled	[CE]  >  expected	50	None	replace
197	[BUG]  [BUGGY]  return  Math.abs(v)/  Math.abs(q  -  u));  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(v)/  Math.abs(q  -  u));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(v)/  Math.abs(q  -  u));	  return    Math.abs(u)/    Math.abs(q    -    v));    	non-compiled	[CE]  >  expected	54	None	replace
198	[BUG]  [BUGGY]  gcd  =(int)Math.ceil(q,  v);  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.ceil(q,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.ceil(q,  v);	  gcd    =(int)Math.ceil(p,    v);    	non-compiled	[CE]  >  expected	24	None	replace
199	[BUG]  [BUGGY]  return  Math.abs(p)/  Math.abs(q  -  v));  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(p)/  Math.abs(q  -  v));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(p)/  Math.abs(q  -  v));	  return    Math.abs(p)/    Math.abs(v));    	non-compiled	[CE]  >  expected	52	None	replace
200	[BUG]  [BUGGY]  return  Math.abs(q)/  Math.abs(v));  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(q)/  Math.abs(v));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(q)/  Math.abs(v));	  return    Math.abs(p)/    Math.abs(v));    	non-compiled	[CE]  >  expected	52	None	replace
201	[BUG]  [BUGGY]  int  u  =  p  +  Math.log(eps);  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.log(eps);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.log(eps);	  int    u    =    p    +    Math.log(q);    	non-compiled	[CE]  >  expected	49	None	replace
202	[BUG]  [BUGGY]  return  Math.abs(p)+  Math.abs(v  -  1));  [CE]  >  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(p)+  Math.abs(v  -  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(p)+  Math.abs(v  -  1));	  return    Math.abs(u)+    Math.abs(v    -    1));    	non-compiled	[CE]  >  expected	19	None	replace
203	[BUG]  [BUGGY]  return  Math.abs(v)+  Math.abs(u  -  1));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(v)+  Math.abs(u  -  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(v)+  Math.abs(u  -  1));	  return    Math.abs(u)+    Math.abs(v    -    1));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
204	[BUG]  [BUGGY]  mutation( "Math  is  less  than  1: "  +  q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  mutation( "Math  is  less  than  1: "  +  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	mutation( "Math  is  less  than  1: "  +  q);	  mutation(   "Math    is    less    than    1:   "    +    p);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
205	[BUG]  [BUGGY]  int  u  =  p  +  Math.sin(gcd(q,  v));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.sin(gcd(q,  v));  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.sin(gcd(q,  v));	  int    u    =    p    +    Math.sin(gcd(p,    v));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
206	[BUG]  [BUGGY]  int  u  =  p  +  Math.sin(q(p,  v));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.sin(q(p,  v));  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.sin(q(p,  v));	  int    u    =    p    +    Math.sin(gcd(p,    v));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
207	[BUG]  [BUGGY]  gcd  =(int)Math.pow(10,  x);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.pow(10,  x);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.pow(10,  x);	  gcd    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
208	[BUG]  [BUGGY]  MutableValues.checkNotNull(p,  v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutableValues.checkNotNull(p,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutableValues.checkNotNull(p,  v);	  mutableValues(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
209	[BUG]  [BUGGY]  MutableValues.checkNotNull(p,  v)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutableValues.checkNotNull(p,  v)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutableValues.checkNotNull(p,  v)  {  throw  new  IllegalArgumentException( " ");  }	  mutableValues(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
210	[BUG]  [BUGGY]  return  (Math.abs(p)+  Math.abs(q  -  1));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  (Math.abs(p)+  Math.abs(q  -  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(p)+  Math.abs(q  -  1));	  return    (Math.abs(p)+    Math.abs(v    -    1));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
211	[BUG]  [BUGGY]  gcd  =(int)Math.floor(u,  p);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.floor(u,  p);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.floor(u,  p);	  gcd    =(int)Math.floor(u,    v);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
212	[BUG]  [BUGGY]  return  Math.abs(v)/  Math.abs(p,  u));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(v)/  Math.abs(p,  u));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(v)/  Math.abs(p,  u));	  return    Math.abs(u)/    Math.abs(p,    v));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
213	[BUG]  [BUGGY]  return  Math.abs(p)/  Math.abs(u,  v));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(p)/  Math.abs(u,  v));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(p)/  Math.abs(u,  v));	  return    Math.abs(u)/    Math.abs(p,    v));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
214	[BUG]  [BUGGY]  MutationIntrospector.mutation(p,  v)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationIntrospector.mutation(p,  v)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationIntrospector.mutation(p,  v)  {  throw  new  IllegalArgumentException( " ");  }	  mutation(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
215	[BUG]  [BUGGY]  MutationUtils.checkState(u  ==  p,  v)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationUtils.checkState(u  ==  p,  v)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationUtils.checkState(u  ==  p,  v)  {  throw  new  IllegalArgumentException( " ");  }	  mutation(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
216	[BUG]  [BUGGY]  Mutation.checkNotNull(p,  v);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Mutation.checkNotNull(p,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Mutation.checkNotNull(p,  v);	  mutation(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
217	[BUG]  [BUGGY]  MutationIntrospector.mutation(p,  v)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationIntrospector.mutation(p,  v)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationIntrospector.mutation(p,  v)  {  throw  new  IllegalArgumentException( " ".);  }	  mutation(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
218	[BUG]  [BUGGY]  gcd(u,  p,  v);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(u,  p,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(u,  p,  v);	  gcd(p,    u,    v);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
219	[BUG]  [BUGGY]  return  Math.abs(v)/  Math.abs(q));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(v)/  Math.abs(q));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(v)/  Math.abs(q));	  return    Math.abs(u)/    Math.abs(q));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
220	[BUG]  [BUGGY]  int  u  =  gcd  +  Math.sin(q,  v);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  gcd  +  Math.sin(q,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  gcd  +  Math.sin(q,  v);	  int    u    =    p    +    Math.sin(gcd,    v);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
221	[BUG]  [BUGGY]  gcd(p,  q,  v,  3);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  v,  3);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  v,  3);	  gcd(p,    q,    v,    DEFAULT_TWO_PI);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
222	[BUG]  [BUGGY]  gcd(p,  q,  v,  2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  v,  2);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  v,  2);	  gcd(p,    q,    v,    DEFAULT_TWO_PI);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
223	[BUG]  [BUGGY]  gcd(u,  q  +  1);  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(u,  q  +  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(u,  q  +  1);	  gcd(p,    q    +    1);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
224	[BUG]  [BUGGY]  int  u  =  p  +  Math.sqrt(q);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.sqrt(q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.sqrt(q);	  int    u    =    p    +    Math.sqrt(v);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
225	[BUG]  [BUGGY]  return  Math.abs(v)/  Math.abs(u  -  1));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(v)/  Math.abs(u  -  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(v)/  Math.abs(u  -  1));	  return    Math.abs(u)/    Math.abs(v    -    1));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
226	[BUG]  [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(IOException  ioe)  {  }  [CE]  illegal  start  of  type  [FE]              StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(u  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(IOException  ioe)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(u  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(IOException  ioe)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
227	[BUG]  [BUGGY]  try  {  gcd(p,  v);  }  catch(IOException  ioe)  {  }  [CE]  illegal  start  of  type  [FE]                StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  try  {  gcd(p,  v);  }  catch(IOException  ioe)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	try  {  gcd(p,  v);  }  catch(IOException  ioe)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
228	[BUG]  [BUGGY]  try  {  gcd(p,  q);  }  catch(IOException  ioe)  {  }  [CE]  illegal  start  of  type  [FE]                  StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  try  {  gcd(p,  q);  }  catch(IOException  ioe)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	try  {  gcd(p,  q);  }  catch(IOException  ioe)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
229	[BUG]  [BUGGY]  gcd(p,  q,  t,  v);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  t,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  t,  v);	  gcd(p,    q,    v,    t);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
230	[BUG]  [BUGGY]  gcd(p,  q,  v,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  v,  0);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  v,  0);	  gcd(p,    q,    v,    DEFAULT_SIZE);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
231	[BUG]  [BUGGY]  gcd(p,  q,  u);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  u);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  u);	  gcd(p,    v,    u);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
232	[BUG]  [BUGGY]  int  u  =  p  +  Math.sin(q,  v  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.sin(q,  v  -  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.sin(q,  v  -  1);	  int    u    =    p    +    Math.sin(q,    v);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
233	[BUG]  [BUGGY]  int  u  =  p  +  Math.sin(gcd);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.sin(gcd);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.sin(gcd);	  int    u    =    p    +    Math.sin(q);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
234	[BUG]  [BUGGY]  mutableValues.add(p  +  q);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  mutableValues.add(p  +  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	mutableValues.add(p  +  q);	  mutableValues.add(p);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
235	[BUG]  [BUGGY]  gcd  =(int)Math.ceil(u,  q);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.ceil(u,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.ceil(u,  q);	  gcd    =(int)Math.ceil(p,    q);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
236	[BUG]  [BUGGY]  return  Math.abs(v)/  Math.abs(u  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(v)/  Math.abs(u  -  1);  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(v)/  Math.abs(u  -  1);	  return    Math.abs(u)/    Math.abs(v    -    1);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
237	[BUG]  [BUGGY]  MutationDescriptor  v  =  mutation(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationDescriptor  v  =  mutation(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationDescriptor  v  =  mutation(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  mutation(p    <    0    ||    v    >    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
238	[BUG]  [BUGGY]  MutationDescriptor  t  =  mutation(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationDescriptor  t  =  mutation(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationDescriptor  t  =  mutation(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  mutation(p    <    0    ||    v    >    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
239	[BUG]  [BUGGY]  gcd  =(int)Math.pow(10,  v  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.pow(10,  v  -  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.pow(10,  v  -  1);	  gcd    =(int)Math.pow(10,    v);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
240	[BUG]  [BUGGY]  int  u  =  p  +  Math.ceil(q,  v);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.ceil(q,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.ceil(q,  v);	  int    u    =    p    +    Math.ceil(v);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
241	[BUG]  [BUGGY]  int  u  =  p  *  Math.abs(q);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  *  Math.abs(q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  *  Math.abs(q);	  int    u    =    p    +    Math.abs(q);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
242	[BUG]  [BUGGY]  return  Math.abs(v)/  Math.abs(u  +  1));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(v)/  Math.abs(u  +  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(v)/  Math.abs(u  +  1));	  return    Math.abs(u)/    Math.abs(v    +    1));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
243	[BUG]  [BUGGY]  Math.abs(q)  <  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Math.abs(q)  <  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Math.abs(q)  <  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  Math.abs(v)    <    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
244	[BUG]  [BUGGY]  mutableValues(p,  q);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  mutableValues(p,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	mutableValues(p,  q);	  mutableValues(p,    v);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
245	[BUG]  [BUGGY]  try  {  gcd(p,  q);  }  catch(NumberFormatException  e)  {  }  [CE]  illegal  start  of  type  [FE]        StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  try  {  gcd(p,  q);  }  catch(NumberFormatException  e)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	try  {  gcd(p,  q);  }  catch(NumberFormatException  e)  {  }	  gcd(u,    q);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
246	[BUG]  [BUGGY]  gcd(u,  p,  q);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(u,  p,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(u,  p,  q);	  gcd(p,    v,    q);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
247	[BUG]  [BUGGY]  gcd(p,  q,  v,  0,  u);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  v,  0,  u);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  v,  0,  u);	  gcd(p,    q,    v,    u);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
248	[BUG]  [BUGGY]  gcd(p,  q,  v,  0,  0);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  v,  0,  0);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  v,  0,  0);	  gcd(p,    q,    v,    u);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
249	[BUG]  [BUGGY]  Mutation(v  <  0  ||  p  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Mutation(v  <  0  ||  p  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Mutation(v  <  0  ||  p  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutation(p    <    0    ||    v    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
250	[BUG]  [BUGGY]  Mutation(p  <  0  ||  v  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Mutation(p  <  0  ||  v  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Mutation(p  <  0  ||  v  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutation(p    <    0    ||    v    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
251	[BUG]  [BUGGY]  Mutation(v  <  0  ||  p  >  0)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Mutation(v  <  0  ||  p  >  0)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Mutation(v  <  0  ||  p  >  0)  {  throw  new  IllegalArgumentException( " ".);  }	  mutation(p    <    0    ||    v    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
252	[BUG]  [BUGGY]  Math.abs(q)  <  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: ".doubleValue());  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Math.abs(q)  <  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: ".doubleValue());  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Math.abs(q)  <  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: ".doubleValue());  }	  Math.abs(v)    <    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   ".doubleValue());    }    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
253	[BUG]  [BUGGY]  gcd(p,  q,  0,  v  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  0,  v  +  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  0,  v  +  1);	  gcd(p,    q,    0,    v);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
254	[BUG]  [BUGGY]  return  Math.abs(u)/  Math.abs(v  -  p));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)/  Math.abs(v  -  p));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)/  Math.abs(v  -  p));	  return    Math.abs(u)/    Math.abs(q    -    v));    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
255	[BUG]  [BUGGY]  if(p  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(NumberFormatException  e)  {  }  [CE]  <identifier>  expected  [FE]          StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(p  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(NumberFormatException  e)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(p  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(NumberFormatException  e)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(NumberFormatException    e)    {    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
256	[BUG]  [BUGGY]  gcd(p,  q,  v,  t,  DEFAULT_TWO_PI);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  v,  t,  DEFAULT_TWO_PI);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  v,  t,  DEFAULT_TWO_PI);	  gcd(p,    q,    v,    t);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
257	[BUG]  [BUGGY]  gcd(p,  q,  v,  DEFAULT_TWO_PI,  eps);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  v,  DEFAULT_TWO_PI,  eps);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  v,  DEFAULT_TWO_PI,  eps);	  gcd(p,    q,    v,    DEFAULT_TWO_PI);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
258	[BUG]  [BUGGY]  gcd(p,  u,  q,  v);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  u,  q,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  u,  q,  v);	  gcd(p,    u,    v);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
259	[BUG]  [BUGGY]  gcd  =(int)Math.ceil(v,  u);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.ceil(v,  u);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.ceil(v,  u);	  gcd    =(int)Math.floor(u,    v);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
260	[BUG]  [BUGGY]  int  u  =  p  *  Math.ceil(v);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  *  Math.ceil(v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  *  Math.ceil(v);	  int    u    =    p    +    Math.ceil(v);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
261	[BUG]  [BUGGY]  acceptNegatives(p,  v)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  acceptNegatives(p,  v)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	acceptNegatives(p,  v)  {  throw  new  IllegalArgumentException( " ");  }	  allowNegatives(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
262	[BUG]  [BUGGY]  int  u  =  p  +  Math.cos(gcd(p,  v));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.cos(gcd(p,  v));  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.cos(gcd(p,  v));	  int    u    =    p    +    Math.sin(gcd(p,    v));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
263	[BUG]  [BUGGY]  gcd(p,  q);  int  p  =  p.length()  +  1;  [CE]  illegal  start  of  type  [FE]              StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q);  int  p  =  p.length()  +  1;  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q);  int  p  =  p.length()  +  1;	          gcd(p,    q);    int    p    =    p.length();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
264	[BUG]  [BUGGY]  if(q  >  0)  {  gcd(p,  q);  try  {  gcd(p,  q);  }  catch(Throwable  e)  {  }  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(q  >  0)  {  gcd(p,  q);  try  {  gcd(p,  q);  }  catch(Throwable  e)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(q  >  0)  {  gcd(p,  q);  try  {  gcd(p,  q);  }  catch(Throwable  e)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
265	[BUG]  [BUGGY]  if(q  >  0)  {  gcd(p,  q);  try  {  gcd(p,  q);  }  catch(Exception  e)  {  }  [CE]  <identifier>  expected  [FE]              StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(q  >  0)  {  gcd(p,  q);  try  {  gcd(p,  q);  }  catch(Exception  e)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(q  >  0)  {  gcd(p,  q);  try  {  gcd(p,  q);  }  catch(Exception  e)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
266	[BUG]  [BUGGY]  if(p  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(Throwable  e)  {  }  [CE]  <identifier>  expected  [FE]                StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(p  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(Throwable  e)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(p  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(Throwable  e)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(Exception    e)    {    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
267	[BUG]  [BUGGY]  MutationMath.abs(p  +  v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationMath.abs(p  +  v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationMath.abs(p  +  v)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  mutation(p    <    0    ||    v    >    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
268	[BUG]  [BUGGY]  MutationMath.abs(p  +  v)  <  =  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationMath.abs(p  +  v)  <  =  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationMath.abs(p  +  v)  <  =  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  mutation(p    <    0    ||    v    >    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
269	[BUG]  [BUGGY]  return  (Math.abs(v)+  Math.abs(q  +  1));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  (Math.abs(v)+  Math.abs(q  +  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(v)+  Math.abs(q  +  1));	  return    (Math.abs(u)+    Math.abs(q    +    1));    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
270	[BUG]  [BUGGY]  return  (Math.abs(u)+  Math.abs(v  /  1));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  (Math.abs(u)+  Math.abs(v  /  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(u)+  Math.abs(v  /  1));	  return    (Math.abs(u)+    Math.abs(q    +    1));    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
271	[BUG]  [BUGGY]  if(p  >  0)  {  gcd(p,  q);  }  [CE]  illegal  start  of  type  [FE]              StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(p  >  0)  {  gcd(p,  q);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(p  >  0)  {  gcd(p,  q);  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
272	[BUG]  [BUGGY]  if(q  >  0)  {  gcd(p,  q);  }  [CE]  illegal  start  of  type  [FE]                StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(q  >  0)  {  gcd(p,  q);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(q  >  0)  {  gcd(p,  q);  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(IOException    ioe)    {    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
273	[BUG]  [BUGGY]  int  u  =  p  +  Math.sin(b,  q);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.sin(b,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.sin(b,  q);	  int    u    =    p    +    Math.sin(v,    q);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
274	[BUG]  [BUGGY]  MutationStatistics.checkNotNull(p,  v);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationStatistics.checkNotNull(p,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationStatistics.checkNotNull(p,  v);	  mutation(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
275	[BUG]  [BUGGY]  MutationStatistics.checkNotNull(p);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationStatistics.checkNotNull(p);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationStatistics.checkNotNull(p);	  mutation(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
276	[BUG]  [BUGGY]  MutationUtils.checkState(p  ==  v);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationUtils.checkState(p  ==  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationUtils.checkState(p  ==  v);	  mutation(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
277	[BUG]  [BUGGY]  MutationStatistics.checkArgument(v  <  =  0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationStatistics.checkArgument(v  <  =  0);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationStatistics.checkArgument(v  <  =  0);	  mutation(p,    v)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
278	[BUG]  [BUGGY]  gcd(p,  q,  v,  u  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  v,  u  +  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  v,  u  +  1);	  gcd(p,    q,    v,    u);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
279	[BUG]  [BUGGY]  gcd  =(int)Math.log(p,  q  +  1,  v);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.log(p,  q  +  1,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.log(p,  q  +  1,  v);	  gcd    =(int)Math.log(p,    q);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
280	[BUG]  [BUGGY]  gcd  =(int)Math.pow(10,  y  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.pow(10,  y  -  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.pow(10,  y  -  1);	  gcd    =(int)Math.pow(10,    y);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
281	[BUG]  [BUGGY]  gcd(p,  v  *  q);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  v  *  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  v  *  q);	  gcd(p,    v    +    1,    q);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
282	[BUG]  [BUGGY]  gcd(p,  v  +  1,  q,  t);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  v  +  1,  q,  t);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  v  +  1,  q,  t);	  gcd(p,    v    +    1,    q);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
283	[BUG]  [BUGGY]  gcd(p,  v,  q,  v);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  v,  q,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  v,  q,  v);	  gcd(p,    v,    q);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
284	[BUG]  [BUGGY]  int  u  =  p  +  Math.cos(v,  q);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.cos(v,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.cos(v,  q);	  int    u    =    p    +    Math.sin(q,    v);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
285	[BUG]  [BUGGY]  try  {  gcd(p,  q);  }  catch(NumberFormatException  nfe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]        StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  try  {  gcd(p,  q);  }  catch(NumberFormatException  nfe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	try  {  gcd(p,  q);  }  catch(NumberFormatException  nfe)  {  throw  new  IllegalArgumentException( " ");  }	  gcd(u,    q);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
286	[BUG]  [BUGGY]  gcd(p,  w,  v);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  w,  v);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  w,  v);	  gcd(p,    p,    v);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
287	[BUG]  [BUGGY]  return  Math.abs(u)/  Math.abs(v,  p));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u)/  Math.abs(v,  p));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u)/  Math.abs(v,  p));	  return    Math.abs(u)/    Math.abs(p,    v));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
288	[BUG]  [BUGGY]  MutationUtils.checkState(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationUtils.checkState(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationUtils.checkState(p  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutation(p    <    0    ||    v    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	33	None	replace
289	[BUG]  [BUGGY]  MutationUtils.checkState(v  <  0  ||  p  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationUtils.checkState(v  <  0  ||  p  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationUtils.checkState(v  <  0  ||  p  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutation(p    <    0    ||    v    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	33	None	replace
290	[BUG]  [BUGGY]  MutationStatistics.checkState(v  <  0  ||  p  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationStatistics.checkState(v  <  0  ||  p  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationStatistics.checkState(v  <  0  ||  p  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  mutation(p    <    0    ||    v    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
291	[BUG]  [BUGGY]  if(p  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(NumberFormatException  nfe)  {  }  [CE]  illegal  start  of  type  [FE]        StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(p  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(NumberFormatException  nfe)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(p  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(NumberFormatException  nfe)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(NumberFormatException    nfe)    {    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
292	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(NumberFormatException  nfe)  {  }  [CE]  illegal  start  of  type  [FE]          StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(u  <  0  ||  v  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(NumberFormatException  nfe)  {  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(u  <  0  ||  v  >  0)  {  gcd(p,  q);  try  {  p  =  p;  }  catch(NumberFormatException  nfe)  {  }	          gcd(p,    q);    try    {    gcd(p,    q);    }    catch(NumberFormatException    nfe)    {    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
293	[BUG]  [BUGGY]  if(p  >  0)  {  gcd(p,  q);  gcd(p,  q);  }  [CE]  illegal  start  of  type  [FE]        StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(p  >  0)  {  gcd(p,  q);  gcd(p,  q);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(p  >  0)  {  gcd(p,  q);  gcd(p,  q);  }	          gcd(p,    q);    gcd(p,    q);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
294	[BUG]  [BUGGY]  if(p  >  0)  {  gcd(p,  q);  gcd(p,  q);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]          StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(p  >  0)  {  gcd(p,  q);  gcd(p,  q);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(p  >  0)  {  gcd(p,  q);  gcd(p,  q);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          gcd(p,    q);    gcd(p,    q);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
295	[BUG]  [BUGGY]  MutableValues.append(gcd(p,  v));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutableValues.append(gcd(p,  v));  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutableValues.append(gcd(p,  v));	  mutableValues(p,    v);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
296	[BUG]  [BUGGY]  mutableValues.add(p  +  1,  q);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  mutableValues.add(p  +  1,  q);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	mutableValues.add(p  +  1,  q);	  mutableValues.add(p);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
297	[BUG]  [BUGGY]  if(p  >  0)  {  gcd(p,  q);  gcd(p,  q));  }  [CE]  <identifier>  expected  [FE]          StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(p  >  0)  {  gcd(p,  q);  gcd(p,  q));  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(p  >  0)  {  gcd(p,  q);  gcd(p,  q));  }	          gcd(p,    q);    gcd(p,    q));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
298	[BUG]  [BUGGY]  gcd(p,  q,  v));  [CE]  <identifier>  expected  [FE]            StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  v));  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  v));	          gcd(p,    q);    gcd(p,    q));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
299	[BUG]  [BUGGY]  if(p  >  0)  {  gcd(p,  q);  gcd(p,  q));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(p  >  0)  {  gcd(p,  q);  gcd(p,  q));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(p  >  0)  {  gcd(p,  q);  gcd(p,  q));  }  else  {  throw  new  IllegalArgumentException( " ");  }	          gcd(p,    q);    gcd(p,    q));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
300	[BUG]  [BUGGY]  try  {  gcd(p,  v);  }  catch(java.util.ArrayIndexOutOfBoundsException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  try  {  gcd(p,  v);  }  catch(java.util.ArrayIndexOutOfBoundsException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	try  {  gcd(p,  v);  }  catch(java.util.ArrayIndexOutOfBoundsException  e)  {  throw  new  IllegalArgumentException( " ");  }	  gcd(u,    v);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
301	[BUG]  [BUGGY]  try  {  gcd(p,  v);  }  catch(java.util.ArrayIndexOutOfBoundsException  ex)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  try  {  gcd(p,  v);  }  catch(java.util.ArrayIndexOutOfBoundsException  ex)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	try  {  gcd(p,  v);  }  catch(java.util.ArrayIndexOutOfBoundsException  ex)  {  throw  new  IllegalArgumentException( " ");  }	  gcd(u,    v);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
302	[BUG]  [BUGGY]  try  {  gcd(p,  v);  }  catch(NumberFormatException  nfe)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  try  {  gcd(p,  v);  }  catch(NumberFormatException  nfe)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	try  {  gcd(p,  v);  }  catch(NumberFormatException  nfe)  {  throw  new  IllegalArgumentException( " ");  }	  gcd(u,    v);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
303	[BUG]  [BUGGY]  return  Math.abs(u  -  v)+  Math.abs(v  -  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u  -  v)+  Math.abs(v  -  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u  -  v)+  Math.abs(v  -  1));	  return    Math.abs(u)+    Math.abs(v    -    1));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
304	[BUG]  [BUGGY]  return  (Math.abs(p)/  Math.abs(v  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  (Math.abs(p)/  Math.abs(v  +  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(p)/  Math.abs(v  +  1));	  return    (Math.abs(u)/    Math.abs(v    +    1));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
305	[BUG]  [BUGGY]  return  Math.abs(u  -  v)+  Math.abs(v));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u  -  v)+  Math.abs(v));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u  -  v)+  Math.abs(v));	  return    Math.abs(u)+    Math.abs(v));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
306	[BUG]  [BUGGY]  return  Math.abs(v)/  p;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(v)/  p;  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(v)/  p;	  return    Math.abs(p)/    Math.abs(v));    	non-compiled	[CE]  <identifier>  expected	52	None	replace
307	[BUG]  [BUGGY]  if(p  >  0)  {  gcd(p,  q);  final  gcd(p,  q);  }  [CE]  <identifier>  expected  [FE]        StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(p  >  0)  {  gcd(p,  q);  final  gcd(p,  q);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(p  >  0)  {  gcd(p,  q);  final  gcd(p,  q);  }	          gcd(p,    q);    final    gcd(p,    q);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
308	[BUG]  [BUGGY]  if(q  >  0)  {  gcd(p,  q);  final  gcd(p,  q);  }  [CE]  <identifier>  expected  [FE]          StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(q  >  0)  {  gcd(p,  q);  final  gcd(p,  q);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(q  >  0)  {  gcd(p,  q);  final  gcd(p,  q);  }	          gcd(p,    q);    final    gcd(p,    q);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
309	[BUG]  [BUGGY]  if(p  >  0)  {  gcd(p,  q);  }  else  {  final  gcd(p,  q);  }  [CE]  illegal  start  of  type  [FE]            StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  if(p  >  0)  {  gcd(p,  q);  }  else  {  final  gcd(p,  q);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	if(p  >  0)  {  gcd(p,  q);  }  else  {  final  gcd(p,  q);  }	          gcd(p,    q);    final    gcd(p,    q);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
310	[BUG]  [BUGGY]  gcd(p,  q  +  1,  v  +  1);  [CE]  illegal  start  of  type  [FE]        StackOverflowError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q  +  1,  v  +  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q  +  1,  v  +  1);	  gcd(p,    q    +    1,    v);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
311	[BUG]  [BUGGY]  int  u  =  p  +  Math.log(factorials.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.log(factorials.length);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.log(factorials.length);	  int    u    =    p    +    Math.log(q);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
312	[BUG]  [BUGGY]  int  u  =  p  +  Math.sin(gcd,  v  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  int  u  =  p  +  Math.sin(gcd,  v  -  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	int  u  =  p  +  Math.sin(gcd,  v  -  1);	  int    u    =    p    +    Math.sin(gcd,    v);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
313	[BUG]  [BUGGY]  gcd  =(int)Math.ceil(v,  p);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.ceil(v,  p);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.ceil(v,  p);	  gcd    =(int)Math.ceil(p,    v);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
314	[BUG]  [BUGGY]  gcd  =(int)Math.ceil(p,  v  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd  =(int)Math.ceil(p,  v  -  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd  =(int)Math.ceil(p,  v  -  1);	  gcd    =(int)Math.ceil(p,    v);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
315	[BUG]  [BUGGY]  gcd(p,  q,  v,  DEFAULT_SIZE  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  gcd(p,  q,  v,  DEFAULT_SIZE  +  1);  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	gcd(p,  q,  v,  DEFAULT_SIZE  +  1);	  gcd(p,    q,    v,    DEFAULT_SIZE);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
316	[BUG]  [BUGGY]  Mutation(v  <  0  ||  v  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Mutation(v  <  0  ||  v  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Mutation(v  <  0  ||  v  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  mutation(p    <    0    ||    v    >    1)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
317	[BUG]  [BUGGY]  MutationUtils.checkState(v  <  0  ||  v  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  MutationUtils.checkState(v  <  0  ||  v  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	MutationUtils.checkState(v  <  0  ||  v  >  1)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  mutation(p    <    0    ||    v    >    1)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
318	[BUG]  [BUGGY]  Mutation(v  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  Mutation(v  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }  [BUGGY]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	Mutation(v  <  0  ||  v  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  p);  }	  mutation(p    <    0    ||    v    >    1)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    p);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
319	[BUG]  [BUGGY]  return  Math.abs(u  /  p)/  Math.abs(v));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(u  /  p)/  Math.abs(v));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(u  /  p)/  Math.abs(v));	  return    (Math.abs(p)/    Math.abs(v));    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
320	[BUG]  [BUGGY]  return  Math.abs(p)/  Math.abs(v);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  Math.abs(p)/  Math.abs(v);  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  Math.abs(p)/  Math.abs(v);	  return    Math.abs(u)/    Math.abs(q);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
321	[BUG]  [BUGGY]  return  (Math.abs(v)+  Math.abs(q  -  1));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {      [BUGGY]  return  (Math.abs(v)+  Math.abs(q  -  1));  [BUGGY]      }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return  (Math.abs(v)+  Math.abs(q  -  1));	  return    (Math.abs(u)+    Math.abs(q    -    1));    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
