bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1));	  int    lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    0));    	non-compiled	[CE]  not  a  statement	15	None	replace
2	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  0));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  0));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  0));	  int    lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    0));    	non-compiled	[CE]  not  a  statement	15	None	replace
3	[BUG]  [BUGGY]  return  lcm  %  4;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  %  4;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  %  4;	  return    lcm    %    0xff;    	non-compiled	[CE]  not  a  statement	21	None	replace
4	[BUG]  [BUGGY]  return  lcm  %  3;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  %  3;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  %  3;	  return    lcm    %    0xff;    	non-compiled	[CE]  not  a  statement	21	None	replace
5	[BUG]  [BUGGY]  return  lcm  %  10;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  %  10;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  %  10;	  return    lcm    %    0xff;    	non-compiled	[CE]  not  a  statement	21	None	replace
6	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  2));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  2));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  2));	  int    lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    2));    	non-compiled	[CE]  not  a  statement	26	None	replace
7	[BUG]  [BUGGY]  return  lcm  /  a;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  /  a;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  /  a;	  return    lcm    /    b;    	non-compiled	[CE]  not  a  statement	10	None	replace
8	[BUG]  [BUGGY]  return  lcm  /  gcd(a,  b);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  /  gcd(a,  b);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  /  gcd(a,  b);	  return    lcm    /    b;    	non-compiled	[CE]  not  a  statement	10	None	replace
9	[BUG]  [BUGGY]  return  lcm  /  b  +  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  /  b  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  /  b  +  1;	  return    lcm    /    b;    	non-compiled	[CE]  not  a  statement	10	None	replace
10	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  b  +  1));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  b  +  1));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  b  +  1));	  int    lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    b    +    1));    	non-compiled	[CE]  not  a  statement	42	None	replace
11	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b  *  1));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b  *  1));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b  *  1));	  int    lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    b    +    1));    	non-compiled	[CE]  not  a  statement	42	None	replace
12	[BUG]  [BUGGY]  return  lcm  *  2;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  *  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  *  2;	  return    lcm    *    1;    	non-compiled	[CE]  not  a  statement	34	None	replace
13	[BUG]  [BUGGY]  return  lcm  *  a;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  *  a;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  *  a;	  return    lcm    *    b;    	non-compiled	[CE]  not  a  statement	32	None	replace
14	[BUG]  [BUGGY]  return  a  *  lcm;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  a  *  lcm;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  a  *  lcm;	  return    lcm    *    b;    	non-compiled	[CE]  not  a  statement	32	None	replace
15	[BUG]  [BUGGY]  return  lcm  +  lcm;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  +  lcm;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  +  lcm;	  return    lcm    +    b;    	non-compiled	[CE]  not  a  statement	31	None	replace
16	[BUG]  [BUGGY]  return  lcm  +  b  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  +  b  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  +  b  +  1;	  return    lcm    +    b;    	non-compiled	[CE]  not  a  statement	31	None	replace
17	[BUG]  [BUGGY]  return  lcm  +  a;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  +  a;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  +  a;	  return    lcm    +    b;    	non-compiled	[CE]  not  a  statement	31	None	replace
18	[BUG]  [BUGGY]  return  lcm  /  2  +  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  /  2  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  /  2  +  1;	  return    lcm    /    2;    	non-compiled	[CE]  not  a  statement	11	None	replace
19	[BUG]  [BUGGY]  return  lcm  /  2  *  lcm;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  /  2  *  lcm;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  /  2  *  lcm;	  return    lcm    /    2;    	non-compiled	[CE]  not  a  statement	11	None	replace
20	[BUG]  [BUGGY]  return  lcm  /  4;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  /  4;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  /  4;	  return    lcm    /    2;    	non-compiled	[CE]  not  a  statement	11	None	replace
21	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  2  *  gcd(a,  b),  b));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  2  *  gcd(a,  b),  b));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  /  2  *  gcd(a,  b),  b));	  int    lcm    =    Math.abs(mulAndCheck(a    /    2    /    gcd(a,    b),    b));    	non-compiled	[CE]  not  a  statement	41	None	replace
22	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  2.0  /  gcd(a,  b),  b));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  2.0  /  gcd(a,  b),  b));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  /  2.0  /  gcd(a,  b),  b));	  int    lcm    =    Math.abs(mulAndCheck(a    /    2    /    gcd(a,    b),    b));    	non-compiled	[CE]  not  a  statement	41	None	replace
23	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  *  2  /  gcd(a,  b),  b));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  *  2  /  gcd(a,  b),  b));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  *  2  /  gcd(a,  b),  b));	  int    lcm    =    Math.abs(mulAndCheck(a    /    2    /    gcd(a,    b),    b));    	non-compiled	[CE]  not  a  statement	41	None	replace
24	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  3  /  gcd(a,  b),  b));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  3  /  gcd(a,  b),  b));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  /  3  /  gcd(a,  b),  b));	  int    lcm    =    Math.abs(mulAndCheck(a    /    2    /    gcd(a,    b),    b));    	non-compiled	[CE]  not  a  statement	41	None	replace
25	[BUG]  [BUGGY]  return  Math.abs(mulAndCheck(a  *  gcd(a,  b),  lcm));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  Math.abs(mulAndCheck(a  *  gcd(a,  b),  lcm));  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  Math.abs(mulAndCheck(a  *  gcd(a,  b),  lcm));	  return    Math.abs(mulAndCheck(a    /    gcd(a,    b),    lcm));    	non-compiled	[CE]  not  a  statement	4	None	replace
26	[BUG]  [BUGGY]  return  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0));  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0));	  return    Math.abs(mulAndCheck(a    /    gcd(a,    b),    lcm));    	non-compiled	[CE]  not  a  statement	4	None	replace
27	[BUG]  [BUGGY]  return  Math.abs(mulAndCheck(a  /  lcm(a,  b),  lcm));  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  Math.abs(mulAndCheck(a  /  lcm(a,  b),  lcm));  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  Math.abs(mulAndCheck(a  /  lcm(a,  b),  lcm));	  return    Math.abs(mulAndCheck(a    /    gcd(a,    b),    lcm));    	non-compiled	[CE]  not  a  statement	4	None	replace
28	[BUG]  [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  b  +  1));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  b  +  1));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	Integer  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  b  +  1));	  Integer    lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    b    +    1));    	non-compiled	[CE]  not  a  statement	46	None	replace
29	[BUG]  [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  /  2  *  gcd(a,  b),  b));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  /  2  *  gcd(a,  b),  b));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	Integer  lcm  =  Math.abs(mulAndCheck(a  /  2  *  gcd(a,  b),  b));	  Integer    lcm    =    Math.abs(mulAndCheck(a    /    2    /    gcd(a,    b),    b));    	non-compiled	[CE]  not  a  statement	45	None	replace
30	[BUG]  [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  /  2.0  /  gcd(a,  b),  b));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  /  2.0  /  gcd(a,  b),  b));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	Integer  lcm  =  Math.abs(mulAndCheck(a  /  2.0  /  gcd(a,  b),  b));	  Integer    lcm    =    Math.abs(mulAndCheck(a    /    2    /    gcd(a,    b),    b));    	non-compiled	[CE]  not  a  statement	45	None	replace
31	[BUG]  [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  *  2  /  gcd(a,  b),  b));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  *  2  /  gcd(a,  b),  b));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	Integer  lcm  =  Math.abs(mulAndCheck(a  *  2  /  gcd(a,  b),  b));	  Integer    lcm    =    Math.abs(mulAndCheck(a    /    2    /    gcd(a,    b),    b));    	non-compiled	[CE]  not  a  statement	45	None	replace
32	[BUG]  [BUGGY]  return  lcm  /  3;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  /  3;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  /  3;	  return    lcm    /    1;    	non-compiled	[CE]  not  a  statement	6	None	replace
33	[BUG]  [BUGGY]  return  lcm  /  2.0;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  /  2.0;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  /  2.0;	  return    lcm    /    0xff;    	non-compiled	[CE]  not  a  statement	22	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(factorials,  0,  lcm,  0,  b);  return  a;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  System.arraycopy(factorials,  0,  lcm,  0,  b);  return  a;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	System.arraycopy(factorials,  0,  lcm,  0,  b);  return  a;	  System.arraycopy(factorials,    0,    lcm,    0,    b);    return    lcm;    	non-compiled	[CE]  not  a  statement	29	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(factorials,  0,  lcm,  0,  b);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  System.arraycopy(factorials,  0,  lcm,  0,  b);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	System.arraycopy(factorials,  0,  lcm,  0,  b);	  System.arraycopy(factorials,    0,    lcm,    0,    b);    return    lcm;    	non-compiled	[CE]  not  a  statement	29	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(factorials,  0,  lcm,  0,  a);  return  lcm;  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  System.arraycopy(factorials,  0,  lcm,  0,  a);  return  lcm;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	System.arraycopy(factorials,  0,  lcm,  0,  a);  return  lcm;	  System.arraycopy(factorials,    0,    lcm,    0,    b);    return    lcm;    	non-compiled	[CE]  not  a  statement	29	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(factorials,  0,  lcm,  0,  b);  return  0;  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  System.arraycopy(factorials,  0,  lcm,  0,  b);  return  0;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	System.arraycopy(factorials,  0,  lcm,  0,  b);  return  0;	  System.arraycopy(factorials,    0,    lcm,    0,    b);    return    lcm;    	non-compiled	[CE]  not  a  statement	29	None	replace
38	[BUG]  [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b))  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b))  +  1);  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b))  +  1);	  lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b)),    b    +    1);    	non-compiled	[CE]  not  a  statement	47	None	replace
39	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  %  gcd(a,  b),  lcm));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  %  gcd(a,  b),  lcm));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  %  gcd(a,  b),  lcm));	  int    lcm    =    Math.abs(mulAndCheck(a    *    gcd(a,    b),    lcm));    	non-compiled	[CE]  not  a  statement	25	None	replace
40	[BUG]  [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)),  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)),  1);  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)),  1);	  lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b)),    0);    	non-compiled	[CE]  not  a  statement	37	None	replace
41	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  p  +  1));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  p  +  1));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  p  +  1));	  int    lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    p));    	non-compiled	[CE]  not  a  statement	17	None	replace
42	[BUG]  [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  2  *  gcd(a,  b),  b));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  2  *  gcd(a,  b),  b));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	lcm  =  Math.abs(mulAndCheck(a  /  2  *  gcd(a,  b),  b));	  lcm    =    Math.abs(mulAndCheck(a    /    2    /    gcd(a,    b),    b));    	non-compiled	[CE]  not  a  statement	39	None	replace
43	[BUG]  [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  2.0  /  gcd(a,  b),  b));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  2.0  /  gcd(a,  b),  b));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	lcm  =  Math.abs(mulAndCheck(a  /  2.0  /  gcd(a,  b),  b));	  lcm    =    Math.abs(mulAndCheck(a    /    2    /    gcd(a,    b),    b));    	non-compiled	[CE]  not  a  statement	39	None	replace
44	[BUG]  [BUGGY]  Lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  lcm));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  Lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  lcm));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	Lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  lcm));	  Lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    lcm));    	non-compiled	[CE]  not  a  statement	44	None	replace
45	[BUG]  [BUGGY]  Lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  Lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	Lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0));	  Lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    lcm));    	non-compiled	[CE]  not  a  statement	44	None	replace
46	[BUG]  [BUGGY]  Lcm  =  Math.abs(mulAndCheck(a  /  2  /  gcd(a,  b),  lcm));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  Lcm  =  Math.abs(mulAndCheck(a  /  2  /  gcd(a,  b),  lcm));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	Lcm  =  Math.abs(mulAndCheck(a  /  2  /  gcd(a,  b),  lcm));	  Lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    lcm));    	non-compiled	[CE]  not  a  statement	44	None	replace
47	[BUG]  [BUGGY]  return  lcm  -  0xff  +  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  -  0xff  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  -  0xff  +  1;	  return    lcm    &    0xff    +    1;    	non-compiled	[CE]  not  a  statement	35	None	replace
48	[BUG]  [BUGGY]  return  lcm  %  0xff  +  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  %  0xff  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  %  0xff  +  1;	  return    lcm    &    0xff    +    1;    	non-compiled	[CE]  not  a  statement	35	None	replace
49	[BUG]  [BUGGY]  lcm  =  Math.min(mulAndCheck(a  *  gcd(a,  b),  lcm));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  lcm  =  Math.min(mulAndCheck(a  *  gcd(a,  b),  lcm));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	lcm  =  Math.min(mulAndCheck(a  *  gcd(a,  b),  lcm));	  lcm    =    Math.min(mulAndCheck(a    /    gcd(a,    b),    lcm));    	non-compiled	[CE]  not  a  statement	1	None	replace
50	[BUG]  [BUGGY]  return  lcm  &  0xff  &  2;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  &  0xff  &  2;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  &  0xff  &  2;	  return    lcm    &    0xff    &    1;    	non-compiled	[CE]  not  a  statement	48	None	replace
51	[BUG]  [BUGGY]  return  a  &  0xff  &  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  a  &  0xff  &  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  a  &  0xff  &  1;	  return    lcm    &    0xff    &    1;    	non-compiled	[CE]  not  a  statement	48	None	replace
52	[BUG]  [BUGGY]  return  lcm  -  0xff  &  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  -  0xff  &  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  -  0xff  &  1;	  return    lcm    &    0xff    &    1;    	non-compiled	[CE]  not  a  statement	48	None	replace
53	[BUG]  [BUGGY]  return  lcm  %  2  <  <  4;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  %  2  <  <  4;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  %  2  <  <  4;	  return    lcm    %    2;    	non-compiled	[CE]  not  a  statement	12	None	replace
54	[BUG]  [BUGGY]  return  lcm  %  2  <  <  3;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  %  2  <  <  3;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  %  2  <  <  3;	  return    lcm    %    2;    	non-compiled	[CE]  not  a  statement	12	None	replace
55	[BUG]  [BUGGY]  return  lcm  %  2  +  1;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  %  2  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  %  2  +  1;	  return    lcm    %    2;    	non-compiled	[CE]  not  a  statement	12	None	replace
56	[BUG]  [BUGGY]  return  lcm  -  3  +  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  -  3  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  -  3  +  1;	  return    lcm    -    2    +    1;    	non-compiled	[CE]  not  a  statement	33	None	replace
57	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  %  gcd(a,  b),  b));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  %  gcd(a,  b),  b));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  %  gcd(a,  b),  b));	  int    lcm    =    Math.abs(mulAndCheck(a    *    gcd(a,    b),    b));    	non-compiled	[CE]  not  a  statement	16	None	replace
58	[BUG]  [BUGGY]  System.arraycopy(factorials,  0,  lcm,  1,  a);  return  lcm;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  System.arraycopy(factorials,  0,  lcm,  1,  a);  return  lcm;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	System.arraycopy(factorials,  0,  lcm,  1,  a);  return  lcm;	  System.arraycopy(factorials,    0,    lcm,    1,    b);    return    lcm;    	non-compiled	[CE]  not  a  statement	43	None	replace
59	[BUG]  [BUGGY]  System.arraycopy(factorials,  0,  lcm,  1,  b);  return  a;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  System.arraycopy(factorials,  0,  lcm,  1,  b);  return  a;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	System.arraycopy(factorials,  0,  lcm,  1,  b);  return  a;	  System.arraycopy(factorials,    0,    lcm,    1,    b);    return    lcm;    	non-compiled	[CE]  not  a  statement	43	None	replace
60	[BUG]  [BUGGY]  System.arraycopy(factorials,  0,  lcm,  1,  b);  return  0;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  System.arraycopy(factorials,  0,  lcm,  1,  b);  return  0;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	System.arraycopy(factorials,  0,  lcm,  1,  b);  return  0;	  System.arraycopy(factorials,    0,    lcm,    1,    b);    return    lcm;    	non-compiled	[CE]  not  a  statement	43	None	replace
61	[BUG]  [BUGGY]  System.arraycopy(factorials,  0,  lcm,  1,  b);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  System.arraycopy(factorials,  0,  lcm,  1,  b);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	System.arraycopy(factorials,  0,  lcm,  1,  b);	  System.arraycopy(factorials,    0,    lcm,    1,    b);    return    lcm;    	non-compiled	[CE]  not  a  statement	43	None	replace
62	[BUG]  [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1));	  lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    0));    	non-compiled	[CE]  not  a  statement	3	None	replace
63	[BUG]  [BUGGY]  return  a  %  lcm;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  a  %  lcm;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  a  %  lcm;	  return    lcm    %    b;    	non-compiled	[CE]  not  a  statement	9	None	replace
64	[BUG]  [BUGGY]  return  lcm  %  a;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  %  a;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  %  a;	  return    lcm    %    b;    	non-compiled	[CE]  not  a  statement	9	None	replace
65	[BUG]  [BUGGY]  lcm  =  Math.min(mulAndCheck(a  /  2  *  gcd(a,  b),  b));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  lcm  =  Math.min(mulAndCheck(a  /  2  *  gcd(a,  b),  b));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	lcm  =  Math.min(mulAndCheck(a  /  2  *  gcd(a,  b),  b));	  lcm    =    Math.min(mulAndCheck(a    /    2    /    gcd(a,    b),    b));    	non-compiled	[CE]  not  a  statement	51	None	replace
66	[BUG]  [BUGGY]  lcm  =  Math.min(mulAndCheck(a  /  2.0  /  gcd(a,  b),  b));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  lcm  =  Math.min(mulAndCheck(a  /  2.0  /  gcd(a,  b),  b));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	lcm  =  Math.min(mulAndCheck(a  /  2.0  /  gcd(a,  b),  b));	  lcm    =    Math.min(mulAndCheck(a    /    2    /    gcd(a,    b),    b));    	non-compiled	[CE]  not  a  statement	51	None	replace
67	[BUG]  [BUGGY]  return  lcm  -  a;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  -  a;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  -  a;	  return    lcm    -    b;    	non-compiled	[CE]  not  a  statement	8	None	replace
68	[BUG]  [BUGGY]  return  lcm  -  b  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  -  b  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  -  b  +  1;	  return    lcm    -    b;    	non-compiled	[CE]  not  a  statement	8	None	replace
69	[BUG]  [BUGGY]  return  lcm  /  1L;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  /  1L;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  /  1L;	  return    lcm    -    1L;    	non-compiled	[CE]  not  a  statement	7	None	replace
70	[BUG]  [BUGGY]  return  lcm  -  10.0;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  -  10.0;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  -  10.0;	  return    lcm    -    1L;    	non-compiled	[CE]  not  a  statement	7	None	replace
71	[BUG]  [BUGGY]  lcm  =  Math.min(mulAndCheck(a  /  gcd(a,  b),  1));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  lcm  =  Math.min(mulAndCheck(a  /  gcd(a,  b),  1));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	lcm  =  Math.min(mulAndCheck(a  /  gcd(a,  b),  1));	  lcm    =    Math.min(mulAndCheck(a    /    gcd(a,    b),    0));    	non-compiled	[CE]  not  a  statement	2	None	replace
72	[BUG]  [BUGGY]  System.arraycopy(factorials,  0,  lcm,  0,  factorials.length);  return  a;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  System.arraycopy(factorials,  0,  lcm,  0,  factorials.length);  return  a;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	System.arraycopy(factorials,  0,  lcm,  0,  factorials.length);  return  a;	  System.arraycopy(factorials,    0,    lcm,    0,    factorials.length);    return    lcm;    	non-compiled	[CE]  not  a  statement	28	None	replace
73	[BUG]  [BUGGY]  System.arraycopy(factorials,  0,  lcm,  0,  factorials.length);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  System.arraycopy(factorials,  0,  lcm,  0,  factorials.length);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	System.arraycopy(factorials,  0,  lcm,  0,  factorials.length);	  System.arraycopy(factorials,    0,    lcm,    0,    factorials.length);    return    lcm;    	non-compiled	[CE]  not  a  statement	28	None	replace
74	[BUG]  [BUGGY]  System.arraycopy(factorials,  0,  lcm,  0,  factorials.length);  return  0;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  System.arraycopy(factorials,  0,  lcm,  0,  factorials.length);  return  0;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	System.arraycopy(factorials,  0,  lcm,  0,  factorials.length);  return  0;	  System.arraycopy(factorials,    0,    lcm,    0,    factorials.length);    return    lcm;    	non-compiled	[CE]  not  a  statement	28	None	replace
75	[BUG]  [BUGGY]  return  lcm  +  4;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  +  4;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  +  4;	  return    lcm    +    3;    	non-compiled	[CE]  not  a  statement	19	None	replace
76	[BUG]  [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	Integer  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1));	  Integer    lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    0));    	non-compiled	[CE]  not  a  statement	13	None	replace
77	[BUG]  [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  2));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  2));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	Integer  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  2));	  Integer    lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    0));    	non-compiled	[CE]  not  a  statement	13	None	replace
78	[BUG]  [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1);  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1);	  lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    0);    	non-compiled	[CE]  not  a  statement	36	None	replace
79	[BUG]  [BUGGY]  return  lcm  *  b  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  *  b  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  *  b  +  1;	  return    lcm    *    b;    	non-compiled	[CE]  not  a  statement	32	None	replace
80	[BUG]  [BUGGY]  return  a  *  b;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  a  *  b;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  a  *  b;	  return    lcm    *    b;    	non-compiled	[CE]  not  a  statement	32	None	replace
81	[BUG]  [BUGGY]  return  b  *  lcm;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  b  *  lcm;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  b  *  lcm;	  return    lcm    *    b;    	non-compiled	[CE]  not  a  statement	32	None	replace
82	[BUG]  [BUGGY]  Lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  Lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	Lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)));	  Lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    lcm));    	non-compiled	[CE]  not  a  statement	44	None	replace
83	[BUG]  [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  /  2  *  gcd(a,  b),  0));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  /  2  *  gcd(a,  b),  0));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	Integer  lcm  =  Math.abs(mulAndCheck(a  /  2  *  gcd(a,  b),  0));	  Integer    lcm    =    Math.abs(mulAndCheck(a    /    2    /    gcd(a,    b),    b));    	non-compiled	[CE]  not  a  statement	45	None	replace
84	[BUG]  [BUGGY]  return  lcm  *  2  +  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  *  2  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  *  2  +  1;	  return    lcm    -    2    +    1;    	non-compiled	[CE]  not  a  statement	33	None	replace
85	[BUG]  [BUGGY]  return  lcm  %  1;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  %  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  %  1;	  return    lcm    %    0xff;    	non-compiled	[CE]  not  a  statement	21	None	replace
86	[BUG]  [BUGGY]  return  lcm  *  4;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  *  4;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  *  4;	  return    lcm    *    1;    	non-compiled	[CE]  not  a  statement	34	None	replace
87	[BUG]  [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  2));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  2));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  2));	  lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    0));    	non-compiled	[CE]  not  a  statement	3	None	replace
88	[BUG]  [BUGGY]  return  Math.abs(mulAndCheck(a  /  gcd(a,  b),  lcm)+  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  Math.abs(mulAndCheck(a  /  gcd(a,  b),  lcm)+  1);  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  Math.abs(mulAndCheck(a  /  gcd(a,  b),  lcm)+  1);	  return    Math.abs(mulAndCheck(a    /    gcd(a,    b),    lcm));    	non-compiled	[CE]  not  a  statement	4	None	replace
89	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b  -  1));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b  -  1));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b  -  1));	  int    lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    b    +    1));    	non-compiled	[CE]  not  a  statement	42	None	replace
90	[BUG]  [BUGGY]  return  lcm  &  0xff  &  1L;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  &  0xff  &  1L;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  &  0xff  &  1L;	  return    lcm    &    0xff    &    1;    	non-compiled	[CE]  not  a  statement	48	None	replace
91	[BUG]  [BUGGY]  return  lcm  &  0xff  &  3;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  &  0xff  &  3;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  &  0xff  &  3;	  return    lcm    &    0xff    &    1;    	non-compiled	[CE]  not  a  statement	48	None	replace
92	[BUG]  [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b  -  1));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b  -  1));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	Integer  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b  -  1));	  Integer    lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    b    +    1));    	non-compiled	[CE]  not  a  statement	46	None	replace
93	[BUG]  [BUGGY]  return  lcm  -  1L  +  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  -  1L  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  -  1L  +  1;	  return    lcm    -    1L;    	non-compiled	[CE]  not  a  statement	7	None	replace
94	[BUG]  [BUGGY]  return  lcm  /  gcd;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  /  gcd;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  /  gcd;	  return    lcm    /    b;    	non-compiled	[CE]  not  a  statement	10	None	replace
95	[BUG]  [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  0));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  0));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	Integer  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  0));	  Integer    lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    0));    	non-compiled	[CE]  not  a  statement	13	None	replace
96	[BUG]  [BUGGY]  return  lcm  %  2  <  <  8;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  %  2  <  <  8;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  %  2  <  <  8;	  return    lcm    %    2;    	non-compiled	[CE]  not  a  statement	12	None	replace
97	[BUG]  [BUGGY]  return  b  %  lcm;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  b  %  lcm;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  b  %  lcm;	  return    lcm    %    b;    	non-compiled	[CE]  not  a  statement	9	None	replace
98	[BUG]  [BUGGY]  return  lcm  %  b  +  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  %  b  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  %  b  +  1;	  return    lcm    %    b;    	non-compiled	[CE]  not  a  statement	9	None	replace
99	[BUG]  [BUGGY]  return  b  -  lcm;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  b  -  lcm;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  b  -  lcm;	  return    lcm    -    b;    	non-compiled	[CE]  not  a  statement	8	None	replace
100	[BUG]  [BUGGY]  float  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  lcm));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  float  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  lcm));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	float  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  lcm));	  int    lcm    =    Math.abs(mulAndCheck(a    *    gcd(a,    b),    lcm));    	non-compiled	[CE]  not  a  statement	25	None	replace
101	[BUG]  [BUGGY]  System.arraycopy(factorials,  0,  lcm,  0,  factorials.length);  return  lcm  +  1;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  System.arraycopy(factorials,  0,  lcm,  0,  factorials.length);  return  lcm  +  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	System.arraycopy(factorials,  0,  lcm,  0,  factorials.length);  return  lcm  +  1;	  System.arraycopy(factorials,    0,    lcm,    0,    factorials.length);    return    lcm;    	non-compiled	[CE]  not  a  statement	28	None	replace
102	[BUG]  [BUGGY]  if(b  ==  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  if(b  ==  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	if(b  ==  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }	  lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    b));    return    lcm;    	non-compiled	[CE]  not  a  statement	30	None	replace
103	[BUG]  [BUGGY]  return  lcm  /  2  +  3;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  /  2  +  3;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  /  2  +  3;	  return    lcm    /    2;    	non-compiled	[CE]  not  a  statement	11	None	replace
104	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0);  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0);	  int    lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    2));    	non-compiled	[CE]  not  a  statement	26	None	replace
105	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  2  *  gcd(a,  b),  0));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  2  *  gcd(a,  b),  0));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  /  2  *  gcd(a,  b),  0));	  int    lcm    =    Math.abs(mulAndCheck(a    /    2    /    gcd(a,    b),    b));    	non-compiled	[CE]  not  a  statement	41	None	replace
106	[BUG]  [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)),  b  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)),  b  -  1);  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)),  b  -  1);	  lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b)),    b    +    1);    	non-compiled	[CE]  not  a  statement	47	None	replace
107	[BUG]  [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)),  b  *  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)),  b  *  1);  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)),  b  *  1);	  lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b)),    b    +    1);    	non-compiled	[CE]  not  a  statement	47	None	replace
108	[BUG]  [BUGGY]  return  lcm  *  0xff;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  *  0xff;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  *  0xff;	  return    lcm    -    0xff;    	non-compiled	[CE]  not  a  statement	20	None	replace
109	[BUG]  [BUGGY]  float  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  b));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  float  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  b));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	float  lcm  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  b));	  int    lcm    =    Math.abs(mulAndCheck(a    *    gcd(a,    b),    b));    	non-compiled	[CE]  not  a  statement	16	None	replace
110	[BUG]  [BUGGY]  if(b  ==  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  lcm));  return  lcm;  }  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  if(b  ==  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  lcm));  return  lcm;  }  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	if(b  ==  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  lcm));  return  lcm;  }	  lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    lcm));    return    lcm;    	non-compiled	[CE]  not  a  statement	5	None	replace
111	[BUG]  [BUGGY]  return  lcm  %  lcm;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  %  lcm;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  %  lcm;	  return    lcm    %    b;    	non-compiled	[CE]  not  a  statement	9	None	replace
112	[BUG]  [BUGGY]  return  lcm  *  lcm;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  *  lcm;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  *  lcm;	  return    lcm    *    b;    	non-compiled	[CE]  not  a  statement	32	None	replace
113	[BUG]  [BUGGY]  return  lcm  <  <  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  <  <  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  <  <  1;	  return    lcm    *    1;    	non-compiled	[CE]  not  a  statement	34	None	replace
114	[BUG]  [BUGGY]  return  lcm  /  lcm;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  /  lcm;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  /  lcm;	  return    lcm    /    b;    	non-compiled	[CE]  not  a  statement	10	None	replace
115	[BUG]  [BUGGY]  return  Math.abs(mulAndCheck(a  /  gcd(a,  b),  lcm  +  1));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  Math.abs(mulAndCheck(a  /  gcd(a,  b),  lcm  +  1));  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  Math.abs(mulAndCheck(a  /  gcd(a,  b),  lcm  +  1));	  return    Math.abs(mulAndCheck(a    /    gcd(a,    b),    lcm));    	non-compiled	[CE]  not  a  statement	4	None	replace
116	[BUG]  [BUGGY]  return  lcm  &  0xff  /  1;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  &  0xff  /  1;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  &  0xff  /  1;	  return    lcm    &    0xff    +    1;    	non-compiled	[CE]  not  a  statement	35	None	replace
117	[BUG]  [BUGGY]  return  lcm  %  2  ==  0?  1  :  0;  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  %  2  ==  0?  1  :  0;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  %  2  ==  0?  1  :  0;	  return    lcm    %    2;    	non-compiled	[CE]  not  a  statement	12	None	replace
118	[BUG]  [BUGGY]  return  lcm  %  2  >>  0?  1  :  0;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  %  2  >>  0?  1  :  0;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  %  2  >>  0?  1  :  0;	  return    lcm    %    2;    	non-compiled	[CE]  not  a  statement	12	None	replace
119	[BUG]  [BUGGY]  return  lcm  %  2  >=  0?  1  :  0;  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  %  2  >=  0?  1  :  0;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  %  2  >=  0?  1  :  0;	  return    lcm    %    2;    	non-compiled	[CE]  not  a  statement	12	None	replace
120	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0,  b));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0,  b));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0,  b));	  int    lcm    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    0));    	non-compiled	[CE]  not  a  statement	15	None	replace
121	[BUG]  [BUGGY]  return  lcm  -  1L  }  ;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  return  lcm  -  1L  }  ;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  -  1L  }  ;	  return    lcm    -    1L;    	non-compiled	[CE]  not  a  statement	7	None	replace
122	[BUG]  [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  /  2,  b  /  gcd(a,  b),  b));  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  Integer  lcm  =  Math.abs(mulAndCheck(a  /  2,  b  /  gcd(a,  b),  b));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	Integer  lcm  =  Math.abs(mulAndCheck(a  /  2,  b  /  gcd(a,  b),  b));	  Integer    lcm    =    Math.abs(mulAndCheck(a    /    2    /    gcd(a,    b),    b));    	non-compiled	[CE]  not  a  statement	45	None	replace
123	[BUG]  [BUGGY]  System.arraycopy(factorials,  a,  lcm,  0,  b);  return  lcm;  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  System.arraycopy(factorials,  a,  lcm,  0,  b);  return  lcm;  [BUGGY]      }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	System.arraycopy(factorials,  a,  lcm,  0,  b);  return  lcm;	  System.arraycopy(factorials,    0,    lcm,    0,    b);    return    lcm;    	non-compiled	[CE]  not  a  statement	29	None	replace
124	[BUG]  [BUGGY]  lcm  =  Math.min(mulAndCheck(a  /  3  /  gcd(a,  b),  b));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));      [BUGGY]  lcm  =  Math.min(mulAndCheck(a  /  3  /  gcd(a,  b),  b));  [BUGGY]      return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	lcm  =  Math.min(mulAndCheck(a  /  3  /  gcd(a,  b),  b));	  lcm    =    Math.min(mulAndCheck(a    /    2    /    gcd(a,    b),    b));    	non-compiled	[CE]  not  a  statement	51	None	replace
