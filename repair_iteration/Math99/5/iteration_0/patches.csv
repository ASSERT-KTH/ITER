bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  lcm  -  1;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  lcm  -  1;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  -  1;	return  lcm;  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  return  lcm  +  1;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  lcm  +  1;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  +  1;	return  lcm;  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  return  lcm  &  0xff;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  lcm  &  0xff;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  &  0xff;	return  lcm;  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
4	[BUG]  [BUGGY]  return  lcm  -  2;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  lcm  -  2;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  -  2;	return  lcm;  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	  	return  lcm;  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]    lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));		non-compiled	[CE]  illegal  start  of  type	10	None	add
7	[BUG]  [BUGGY]    int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));		non-compiled	[CE]  illegal  start  of  type	10	None	add
8	[BUG]  [BUGGY]    lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  lcm));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  lcm));  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  lcm));		non-compiled	[CE]  illegal  start  of  type	10	None	add
9	[BUG]  [BUGGY]    int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  lcm));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  lcm));  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  lcm));		non-compiled	[CE]  illegal  start  of  type	10	None	add
10	[BUG]  [BUGGY]  return  lcm  &  b;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  lcm  &  b;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  &  b;	return  lcm;  	non-compiled	[CE]  illegal  start  of  type	9	None	replace
11	[BUG]  [BUGGY]    lcm  =  Math.min(mulAndCheck(a  /  gcd(a,  b),  b));  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    lcm  =  Math.min(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    lcm  =  Math.min(mulAndCheck(a  /  gcd(a,  b),  b));		non-compiled	[CE]  illegal  start  of  type	10	None	add
12	[BUG]  [BUGGY]    lcm  =  Math.abs(mulAndCheck(a  %  gcd(a,  b),  b));  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    lcm  =  Math.abs(mulAndCheck(a  %  gcd(a,  b),  b));  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    lcm  =  Math.abs(mulAndCheck(a  %  gcd(a,  b),  b));		non-compiled	[CE]  illegal  start  of  type	10	None	add
13	[BUG]  [BUGGY]    lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)),  b);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)),  b);  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)),  b);		non-compiled	[CE]  illegal  start  of  type	10	None	add
14	[BUG]  [BUGGY]    Integer  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    Integer  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    Integer  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));		non-compiled	[CE]  illegal  start  of  type	10	None	add
15	[BUG]  [BUGGY]    lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b);  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b);		non-compiled	[CE]  illegal  start  of  type	10	None	add
