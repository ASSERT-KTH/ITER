bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    >    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
2	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)!=  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)!=  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    >    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
3	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)!=  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)!=  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)!=  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    >    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
4	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  >=  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  >=  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  >=  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    >    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
5	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  4);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  4);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  +  1)/  4);	  int    u    =(int)Math.rint((    u    +    1)/    3);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
6	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  3  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  3  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  +  1)/  3  +  1);	  int    u    =(int)Math.rint((    u    +    1)/    3);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
7	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  *  1)/  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  *  1)/  3);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  *  1)/  3);	  int    u    =(int)Math.rint((    u    +    1)/    3);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
8	[BUG]  [BUGGY]  p  =  -p  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  p  =  -p  +  1;  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	p  =  -p  +  1;	  p    =    -p;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
9	[BUG]  [BUGGY]  p  =  -1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  p  =  -1;  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	p  =  -1;	  p    =    -p;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
10	[BUG]  [BUGGY]  p  =  -p  +  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  p  =  -p  +  2;  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	p  =  -p  +  2;	  p    =    -p;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
11	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  4);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =  Math.min(factorials.length,  4);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =  Math.min(factorials.length,  4);	  int    v    =    Math.min(factorials.length,    3);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
12	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)!=  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }	  if(q    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
13	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  +  1)/  2  *  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.ceil((  u  +  1)/  2  *  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.ceil((  u  +  1)/  2  *  1);	  int    v    =(int)Math.ceil((    u    +    1)/    2    +    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
14	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  +  1)/  2  *  2  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.ceil((  u  +  1)/  2  *  2  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.ceil((  u  +  1)/  2  *  2  +  1);	  int    v    =(int)Math.ceil((    u    +    1)/    2    +    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
15	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
16	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;	  if(q    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
17	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)!=  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)!=  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
18	[BUG]  [BUGGY]  int  u  =(int)Math.rint(p);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint(p);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint(p);	  int    u    =(int)Math.log(p);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
19	[BUG]  [BUGGY]  int  u  =(int)Math.log(u);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.log(u);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.log(u);	  int    u    =(int)Math.log(p);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
20	[BUG]  [BUGGY]  int  u  =(int)Math.rint(v);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint(v);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint(v);	  int    u    =(int)Math.log(p);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
21	[BUG]  [BUGGY]  int  v  =(int)Math.log(factorials[0],  q);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.log(factorials[0],  q);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.log(factorials[0],  q);	  int    v    =(int)Math.log(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
22	[BUG]  [BUGGY]  int  v  =(int)Math.log(factorials[0],  p  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.log(factorials[0],  p  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.log(factorials[0],  p  +  1);	  int    v    =(int)Math.log(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
23	[BUG]  [BUGGY]  int  v  =(int)Math.log(factorials[0],  p,  q);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.log(factorials[0],  p,  q);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.log(factorials[0],  p,  q);	  int    v    =(int)Math.log(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
24	[BUG]  [BUGGY]  int  v  =(int)Math.log(factorials[0],  p  +  2);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.log(factorials[0],  p  +  2);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.log(factorials[0],  p  +  2);	  int    v    =(int)Math.log(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
25	[BUG]  [BUGGY]  int  p  =(int)Math.ceil(v);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  p  =(int)Math.ceil(v);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  p  =(int)Math.ceil(v);	  int    p    =(int)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
26	[BUG]  [BUGGY]  int  p  =(int)Math.log(v);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  p  =(int)Math.log(v);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  p  =(int)Math.log(v);	  int    p    =(int)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
27	[BUG]  [BUGGY]  int  p  =(int)Math.floor(u);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  p  =(int)Math.floor(u);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  p  =(int)Math.floor(u);	  int    p    =(int)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
28	[BUG]  [BUGGY]  float  p  =(float)Math.floor(v);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  float  p  =(float)Math.floor(v);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	float  p  =(float)Math.floor(v);	  int    p    =(int)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
29	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {	  if(u    >    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
30	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)!=  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)!=  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {	  if(u    >    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
31	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  +  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  v  +  1)/  2  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  v  +  1)/  2  +  1);	  int    u    =(int)Math.rint((    v    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
32	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  +  1)/  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  v  +  1)/  3);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  v  +  1)/  3);	  int    u    =(int)Math.rint((    v    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
33	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  *  2)/  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  v  *  2)/  2);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  v  *  2)/  2);	  int    u    =(int)Math.rint((    v    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
34	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  +  1)/  2  +  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  v  +  1)/  2  +  3);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  v  +  1)/  2  +  3);	  int    u    =(int)Math.rint((    v    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
35	[BUG]  [BUGGY]  int  k  =  31  *  p;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =  31  *  p;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =  31  *  p;	  int    k    =    31    *    q;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
36	[BUG]  [BUGGY]  int  k  =  31  *  v;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =  31  *  v;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =  31  *  v;	  int    k    =    31    *    q;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
37	[BUG]  [BUGGY]  int  k  =  31  *  q  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =  31  *  q  +  1;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =  31  *  q  +  1;	  int    k    =    31    *    q;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
38	[BUG]  [BUGGY]  int  v  =(int)Math.log(factorials[1],  p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.log(factorials[1],  p);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.log(factorials[1],  p);	  int    v    =(int)Math.floor(factorials[1],    p);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
39	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[1],  q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.floor(factorials[1],  q);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[1],  q);	  int    v    =(int)Math.floor(factorials[1],    p);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
40	[BUG]  [BUGGY]  char  v  =(char)Math.floor(factorials[1],  p);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  char  v  =(char)Math.floor(factorials[1],  p);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  v  =(char)Math.floor(factorials[1],  p);	  int    v    =(int)Math.floor(factorials[1],    p);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
41	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  &  1)!=  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&  v  &  1)!=  0  &&  k  <  31)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&  v  &  1)!=  0  &&  k  <  31)  {	  if(u    >    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
42	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)!=  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)!=  0  &&  v  &  1)  ==  0  &&  k  <  31)  {	  if(u    >    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
43	[BUG]  [BUGGY]  float  p  =(float)Math.ceil(p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  float  p  =(float)Math.ceil(p);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	float  p  =(float)Math.ceil(p);	  int    p    =(int)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
44	[BUG]  [BUGGY]  int  p  =(int)Math.ceil(p  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  p  =(int)Math.ceil(p  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  p  =(int)Math.ceil(p  +  1);	  int    p    =(int)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
45	[BUG]  [BUGGY]  int  p  =(int)Math.ceil(q);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  p  =(int)Math.ceil(q);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  p  =(int)Math.ceil(q);	  int    p    =(int)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
46	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(p,  q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.ceil(p,  q);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.ceil(p,  q);	  int    u    =(int)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
47	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(p  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.ceil(p  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.ceil(p  +  1);	  int    u    =(int)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
48	[BUG]  [BUGGY]  char  u  =(char)Math.ceil(p);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  char  u  =(char)Math.ceil(p);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  u  =(char)Math.ceil(p);	  int    u    =(int)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
49	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -1;  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -1;	  while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
50	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  2)  ==  0  &&  k  <  31)  {  p  =  -p;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  2)  ==  0  &&  k  <  31)  {  p  =  -p;  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&  (v  &  2)  ==  0  &&  k  <  31)  {  p  =  -p;	  while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
51	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  -  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  v  -  1)/  2  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  v  -  1)/  2  +  1);	  int    u    =(int)Math.rint((    v    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
52	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  -  1)/  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  v  -  1)/  3);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  v  -  1)/  3);	  int    u    =(int)Math.rint((    v    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
53	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  -  1)/  2  +  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  v  -  1)/  2  +  3);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  v  -  1)/  2  +  3);	  int    u    =(int)Math.rint((    v    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
54	[BUG]  [BUGGY]  int  p  =(int)Math.rint((  char)v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  p  =(int)Math.rint((  char)v);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  p  =(int)Math.rint((  char)v);	  int    p    =(int)Math.log(p);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
55	[BUG]  [BUGGY]  int  p  =(int)Math.log(u);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  p  =(int)Math.log(u);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  p  =(int)Math.log(u);	  int    p    =(int)Math.log(p);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
56	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.ceil(v);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.ceil(v);	  int    u    =(int)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
57	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.floor(u);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.floor(u);	  int    u    =(int)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
58	[BUG]  [BUGGY]  char  u  =(char)Math.floor(v);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  char  u  =(char)Math.floor(v);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  u  =(char)Math.floor(v);	  int    u    =(int)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
59	[BUG]  [BUGGY]  int  k  =  1  <  <  8;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =  1  <  <  8;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =  1  <  <  8;	  int    k    =    1    <    <    4;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
60	[BUG]  [BUGGY]  int  k  =  1  <  <  3;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =  1  <  <  3;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =  1  <  <  3;	  int    k    =    1    <    <    4;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
61	[BUG]  [BUGGY]  Character  k  =  Character.toLowerCase(len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  Character  k  =  Character.toLowerCase(len);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Character  k  =  Character.toLowerCase(len);	  Character    k    =    0;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
62	[BUG]  [BUGGY]  Character  k  =  Character.toUpperCase(v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  Character  k  =  Character.toUpperCase(v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Character  k  =  Character.toUpperCase(v);	  Character    k    =    0;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
63	[BUG]  [BUGGY]  Character  k  =  31;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  Character  k  =  31;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Character  k  =  31;	  Character    k    =    0;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
64	[BUG]  [BUGGY]  Character  k  =  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  Character  k  =  1;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Character  k  =  1;	  Character    k    =    0;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
65	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)!=  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)!=  0  &&  k  <  31)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)!=  0  &&(v  &  1)!=  0  &&  k  <  31)  {	  while((    u    &    1)    ==    0    &&(v    &    1)!=    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
66	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)!=  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)!=  0  &&  k  <  31)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  2)!=  0  &&  k  <  31)  {	  while((    u    &    1)    ==    0    &&(v    &    1)!=    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
67	[BUG]  [BUGGY]  String  k  =  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  String  k  =  1;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	String  k  =  1;	  String    k    =    0;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
68	[BUG]  [BUGGY]  String  k  =  31;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  String  k  =  31;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	String  k  =  31;	  String    k    =    0;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
69	[BUG]  [BUGGY]  int  k  =  30;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =  30;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =  30;	  int    k    =    29;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
70	[BUG]  [BUGGY]  int  k  =(v  <  1  ||  v  >  31)?  1  :  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  <  1  ||  v  >  31)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  1  ||  v  >  31)?  1  :  0;	  int    k    =(v    <    1    ||    v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
71	[BUG]  [BUGGY]  int  k  =(v  <  1  ||  v  <  32)?  1  :  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  <  1  ||  v  <  32)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  1  ||  v  <  32)?  1  :  0;	  int    k    =(v    <    1    ||    v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
72	[BUG]  [BUGGY]  int  k  =(v  <  1  ||  v  >=  31)?  1  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  <  1  ||  v  >=  31)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  1  ||  v  >=  31)?  1  :  0;	  int    k    =(v    <    1    ||    v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
73	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    32)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
74	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(q);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.ceil(q);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.ceil(q);	  int    u    =(int)Math.floor(q);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
75	[BUG]  [BUGGY]  char  u  =(char)Math.floor(q);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  char  u  =(char)Math.floor(q);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  u  =(char)Math.floor(q);	  int    u    =(int)Math.floor(q);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
76	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  *  2)/  2  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.ceil((  u  *  2)/  2  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.ceil((  u  *  2)/  2  +  1);	  int    v    =(int)Math.ceil((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
77	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  *  2)/  3);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.ceil((  u  *  2)/  3);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.ceil((  u  *  2)/  3);	  int    v    =(int)Math.ceil((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
78	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  /  2)/  2);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.ceil((  u  /  2)/  2);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.ceil((  u  /  2)/  2);	  int    v    =(int)Math.ceil((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
79	[BUG]  [BUGGY]  float  p  =(float)Math.log(p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  float  p  =(float)Math.log(p);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	float  p  =(float)Math.log(p);	  float    p    =(float)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
80	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  p  +  1,  q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =  Math.min(factorials.length,  p  +  1,  q);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =  Math.min(factorials.length,  p  +  1,  q);	  int    v    =    Math.min(factorials.length,    p    +    1);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
81	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  q  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =  Math.min(factorials.length,  q  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =  Math.min(factorials.length,  q  +  1);	  int    v    =    Math.min(factorials.length,    p    +    1);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
82	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  p  +  1,  u);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =  Math.min(factorials.length,  p  +  1,  u);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =  Math.min(factorials.length,  p  +  1,  u);	  int    v    =    Math.min(factorials.length,    p    +    1);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
83	[BUG]  [BUGGY]  int  k  =(v  <  1  ||  v  >  0)?  1  :  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  <  1  ||  v  >  0)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  1  ||  v  >  0)?  1  :  0;	  int    k    =(v    <    1)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
84	[BUG]  [BUGGY]  int  k  =(v  >  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  >  1)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  >  1)?  1  :  0;	  int    k    =(v    <    1)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
85	[BUG]  [BUGGY]  int  k  =(v  ==  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  ==  1)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  ==  1)?  1  :  0;	  int    k    =(v    <    1)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
86	[BUG]  [BUGGY]  Char  k  =  Character.toLowerCase(len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  Char  k  =  Character.toLowerCase(len);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Char  k  =  Character.toLowerCase(len);	  Char    k    =    0;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
87	[BUG]  [BUGGY]  Char  k  =  Character.toUpperCase(v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  Char  k  =  Character.toUpperCase(v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Char  k  =  Character.toUpperCase(v);	  Char    k    =    0;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
88	[BUG]  [BUGGY]  Char  k  =  31;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  Char  k  =  31;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Char  k  =  31;	  Char    k    =    0;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
89	[BUG]  [BUGGY]  Char  k  =  Character.toLowerCase(len).charAt(0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  Char  k  =  Character.toLowerCase(len).charAt(0);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Char  k  =  Character.toLowerCase(len).charAt(0);	  Char    k    =    0;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
90	[BUG]  [BUGGY]  int  k  =(v  <  <  32)?  1  :  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  <  <  32)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  <  32)?  1  :  0;	  int    k    =(v    <    32)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
91	[BUG]  [BUGGY]  int  k  =(v  <  <  16)?  1  :  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  <  <  16)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  <  16)?  1  :  0;	  int    k    =(v    <    32)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
92	[BUG]  [BUGGY]  int  k  =(v  <  <  31)?  1  :  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  <  <  31)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  <  31)?  1  :  0;	  int    k    =(v    <    32)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
93	[BUG]  [BUGGY]  float  v  =(float)Math.ceil((  u  +  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  float  v  =(float)Math.ceil((  u  +  1)/  2  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	float  v  =(float)Math.ceil((  u  +  1)/  2  +  1);	  float    v    =(float)Math.ceil((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
94	[BUG]  [BUGGY]  float  v  =(float)Math.ceil((  u  +  1)/  2.0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  float  v  =(float)Math.ceil((  u  +  1)/  2.0);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	float  v  =(float)Math.ceil((  u  +  1)/  2.0);	  float    v    =(float)Math.ceil((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
95	[BUG]  [BUGGY]  float  v  =(float)Math.ceil((  u  +  1)/  3);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  float  v  =(float)Math.ceil((  u  +  1)/  3);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	float  v  =(float)Math.ceil((  u  +  1)/  3);	  float    v    =(float)Math.ceil((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
96	[BUG]  [BUGGY]  int  v  =(int)Math.log(factorials[0],  negative);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.log(factorials[0],  negative);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.log(factorials[0],  negative);	  int    v    =(int)Math.floor(factorials[0],    negative);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
97	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  *  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  *  3);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  +  1)/  2  *  3);	  int    u    =(int)Math.rint((    u    +    1)/    2    +    3);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
98	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  *  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  *  2);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  +  1)/  2  *  2);	  int    u    =(int)Math.rint((    u    +    1)/    2    +    3);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
99	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  3  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  3  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  -  1)/  3  +  1);	  int    u    =(int)Math.rint((    u    -    1)/    3);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
100	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  4);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  -  1)/  4);	  int    u    =(int)Math.rint((    u    -    1)/    3);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
101	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  +  1)/  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.ceil((  u  +  1)/  4);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.ceil((  u  +  1)/  4);	  int    v    =(int)Math.ceil((    u    +    1)/    3);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
102	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  +  1)/  3  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.ceil((  u  +  1)/  3  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.ceil((  u  +  1)/  3  +  1);	  int    v    =(int)Math.ceil((    u    +    1)/    3);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
103	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[0],  p,  q);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.floor(factorials[0],  p,  q);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[0],  p,  q);	  int    v    =(int)Math.floor(factorials[0],    q);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
104	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)  ==  0)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)  ==  0)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  2)  ==  0)  {  p  =  -p;  }	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
105	[BUG]  [BUGGY]  while((  p  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  p  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  p  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
106	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)!=  0)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)!=  0)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)!=  0)  {  p  =  -p;  }	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
107	[BUG]  [BUGGY]  int  k  =(v  <  31)?  2  :  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  <  31)?  2  :  1;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  31)?  2  :  1;	  int    k    =(v    <    31)?    2    :    0;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
108	[BUG]  [BUGGY]  int  k  =(v  <  32)?  2  :  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  <  32)?  2  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  32)?  2  :  0;	  int    k    =(v    <    31)?    2    :    0;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
109	[BUG]  [BUGGY]  int  k  =(v  <  31)?  3  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  <  31)?  3  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  31)?  3  :  0;	  int    k    =(v    <    31)?    2    :    0;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
110	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  *  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  *  3);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  -  1)/  2  *  3);	  int    u    =(int)Math.rint((    u    -    1)/    2    +    3);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
111	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  *  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  *  2);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  -  1)/  2  *  2);	  int    u    =(int)Math.rint((    u    -    1)/    2    +    3);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
112	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  *  2  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  *  2  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  -  1)/  2  *  2  +  1);	  int    u    =(int)Math.rint((    u    -    1)/    2    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
113	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  *  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  *  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  -  1)/  2  *  1);	  int    u    =(int)Math.rint((    u    -    1)/    2    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
114	[BUG]  [BUGGY]  int  p  =(int)Math.log(q);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  p  =(int)Math.log(q);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  p  =(int)Math.log(q);	  int    p    =(int)Math.floor(q);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
115	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  *  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  *  4);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  -  1)/  2  *  4);	  int    u    =(int)Math.rint((    u    -    1)/    2    +    4);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
116	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[0],  q  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.floor(factorials[0],  q  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[0],  q  +  1);	  int    v    =(int)Math.floor(factorials[0],    p    +    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
117	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[0],  p  +  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.floor(factorials[0],  p  +  2);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[0],  p  +  2);	  int    v    =(int)Math.floor(factorials[0],    p    +    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
118	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[0],  p  +  3);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.floor(factorials[0],  p  +  3);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[0],  p  +  3);	  int    v    =(int)Math.floor(factorials[0],    p    +    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
119	[BUG]  [BUGGY]  int  k  =(v  <  32)?  1  :  -1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  <  32)?  1  :  -1;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  32)?  1  :  -1;	  int    k    =(v    <    31)?    1    :    -1;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
120	[BUG]  [BUGGY]  int  k  =(v  <  >  31)?  1  :  -1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  <  >  31)?  1  :  -1;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  >  31)?  1  :  -1;	  int    k    =(v    <    31)?    1    :    -1;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
121	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[0],  eps);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.floor(factorials[0],  eps);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[0],  eps);	  int    v    =(int)Math.floor(factorials[0],    logSum);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
122	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[0],  0,  logSum);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.floor(factorials[0],  0,  logSum);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[0],  0,  logSum);	  int    v    =(int)Math.floor(factorials[0],    logSum);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
123	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[0],  SPSILON);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.floor(factorials[0],  SPSILON);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[0],  SPSILON);	  int    v    =(int)Math.floor(factorials[0],    logSum);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
124	[BUG]  [BUGGY]  String  k  =  Character.toLowerCase(len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  String  k  =  Character.toLowerCase(len);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	String  k  =  Character.toLowerCase(len);	  char    k    =    Character.toLowerCase(len);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
125	[BUG]  [BUGGY]  char  k  =  Character.toLowerCase(v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  char  k  =  Character.toLowerCase(v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  k  =  Character.toLowerCase(v);	  char    k    =    Character.toLowerCase(len);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
126	[BUG]  [BUGGY]  char  k  =  Character.toUpperCase(v);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  char  k  =  Character.toUpperCase(v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  k  =  Character.toUpperCase(v);	  char    k    =    Character.toLowerCase(len);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
127	[BUG]  [BUGGY]  char  k  =  Character.toLowerCase(p);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  char  k  =  Character.toLowerCase(p);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  k  =  Character.toLowerCase(p);	  char    k    =    Character.toLowerCase(len);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
128	[BUG]  [BUGGY]  int  k  =(v  <  <  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  <  <  1)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  <  1)?  1  :  0;	  int    k    =(v    <    >    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
129	[BUG]  [BUGGY]  char  v  =(char)Math.floor(factorials[0],  p  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  char  v  =(char)Math.floor(factorials[0],  p  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  v  =(char)Math.floor(factorials[0],  p  +  1);	  char    v    =(char)Math.floor(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
130	[BUG]  [BUGGY]  char  v  =(char)Math.floor(factorials[0],  logSum);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  char  v  =(char)Math.floor(factorials[0],  logSum);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  v  =(char)Math.floor(factorials[0],  logSum);	  char    v    =(char)Math.floor(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
131	[BUG]  [BUGGY]  char  v  =(char)Math.floor(factorials[0],  q);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  char  v  =(char)Math.floor(factorials[0],  q);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  v  =(char)Math.floor(factorials[0],  q);	  char    v    =(char)Math.floor(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
132	[BUG]  [BUGGY]  String  v  =(String)Math.floor(factorials[0],  p);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  String  v  =(String)Math.floor(factorials[0],  p);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	String  v  =(String)Math.floor(factorials[0],  p);	  char    v    =(char)Math.floor(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
133	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  *  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  *  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  +  1)/  2  *  1);	  int    u    =(int)Math.rint((    u    +    1)/    2    +    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
134	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  *  2  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  *  2  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  +  1)/  2  *  2  +  1);	  int    u    =(int)Math.rint((    u    +    1)/    2    +    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
135	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -1;  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -1;	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
136	[BUG]  [BUGGY]  while((  p  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  p  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  p  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
137	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)  ==  0)  {  p  =  -p;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)  ==  0)  {  p  =  -p;  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  2)  ==  0)  {  p  =  -p;	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
138	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  *  2)/  2  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  *  2)/  2  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  *  2)/  2  +  1);	  int    u    =(int)Math.rint((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
139	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  <  <  2)/  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  <  <  2)/  2);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  <  <  2)/  2);	  int    u    =(int)Math.rint((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
140	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  *  2)/  3);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  *  2)/  3);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  *  2)/  3);	  int    u    =(int)Math.rint((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
141	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  *  2)/  2  +  1)/  2;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  *  2)/  2  +  1)/  2;  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  *  2)/  2  +  1)/  2;	  int    u    =(int)Math.rint((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
142	[BUG]  [BUGGY]  String  k  =  Character.toLowerCase(q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  String  k  =  Character.toLowerCase(q);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	String  k  =  Character.toLowerCase(q);	  char    k    =    Character.toLowerCase(q);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
143	[BUG]  [BUGGY]  char  k  =  Character.toUpperCase(q);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  char  k  =  Character.toUpperCase(q);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  k  =  Character.toUpperCase(q);	  char    k    =    Character.toLowerCase(q);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
144	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  *  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  *  4);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  +  1)/  2  *  4);	  int    u    =(int)Math.rint((    u    +    1)/    2    +    4);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
145	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  *  2)/  2  +  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  *  2)/  2  +  4);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  *  2)/  2  +  4);	  int    u    =(int)Math.rint((    u    +    1)/    2    +    4);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
146	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  /  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.ceil((  u  /  1)/  2  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.ceil((  u  /  1)/  2  +  1);	  int    v    =(int)Math.ceil((    u    /    1)/    2);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
147	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  /  2)/  2  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.ceil((  u  /  2)/  2  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.ceil((  u  /  2)/  2  +  1);	  int    v    =(int)Math.ceil((    u    /    1)/    2);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
148	[BUG]  [BUGGY]  int  u  =(int)Math.log(q);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.log(q);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.log(q);	  int    u    =(int)Math.floor(q);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
149	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  }	  if(u    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
150	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =  Math.min(factorials.length,  0);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =  Math.min(factorials.length,  0);	  int    v    =    Math.min(factorials.length,    EPSILON);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
151	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  >  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&  v  >  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&  v  >  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    >    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
152	[BUG]  [BUGGY]  if(q  ==  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  >  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  if(q  ==  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  >  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  ==  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  >  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    >    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
153	[BUG]  [BUGGY]  if(q  ==  31)  {  while((  u  &  1)  ==  0  &&  v  >  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  if(q  ==  31)  {  while((  u  &  1)  ==  0  &&  v  >  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  ==  31)  {  while((  u  &  1)  ==  0  &&  v  >  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    >    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
154	[BUG]  [BUGGY]  if(u  >  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  if(u  >  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(u  >  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {	  if(u    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
155	[BUG]  [BUGGY]  while((  u  &  2)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  2)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  2)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {	  if(u    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
156	[BUG]  [BUGGY]  int  k  =  1;  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =  1;  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =  1;  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }	  int    k    =    0;    while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
157	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  *  2)/  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  *  2)/  4);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  *  2)/  4);	  int    u    =(int)Math.rint((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
158	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[0],  logSum  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.floor(factorials[0],  logSum  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[0],  logSum  +  1);	  int    v    =(int)Math.floor(factorials[0],    p    +    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
159	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  >=  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&  v  >=  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&  v  >=  0  &&  k  <  31)  {  p  =  -p;  }	  if(u    >    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    >=    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
160	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&  v  <  0  &&  k  <  31)  {  p  =  -p;  }	  if(u    >    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    >=    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
161	[BUG]  [BUGGY]  float  p  =(float)Math.floor(p  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  float  p  =(float)Math.floor(p  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	float  p  =(float)Math.floor(p  +  1);	  float    p    =(float)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
162	[BUG]  [BUGGY]  int  k  =(v  >=  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  >=  1)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  >=  1)?  1  :  0;	  int    k    =(v    <    1)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
163	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  +  1)/  2  +  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  v  +  1)/  2  +  4);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  v  +  1)/  2  +  4);	  int    u    =(int)Math.rint((    u    +    1)/    2    +    4);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
164	[BUG]  [BUGGY]  float  v  =(float)Math.ceil((  u  *  2)/  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  float  v  =(float)Math.ceil((  u  *  2)/  2);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	float  v  =(float)Math.ceil((  u  *  2)/  2);	  int    v    =(int)Math.ceil((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
165	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  p  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  p  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  p  <  31)  {  p  =  -p;  }	  if(q    ==    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
166	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    ==    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
167	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  q  <  31)  {  p  =  -p;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  q  <  31)  {  p  =  -p;  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  q  <  31)  {  p  =  -p;	  while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
168	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  *  1)/  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.ceil((  u  *  1)/  3);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.ceil((  u  *  1)/  3);	  int    v    =(int)Math.ceil((    u    +    1)/    3);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
169	[BUG]  [BUGGY]  if(q  ==  31)  {  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  if(q  ==  31)  {  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  ==  31)  {  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }	  if(q    >    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
170	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[0],  negative  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.floor(factorials[0],  negative  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[0],  negative  +  1);	  int    v    =(int)Math.floor(factorials[0],    negative);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
171	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[0],  negative,  q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.floor(factorials[0],  negative,  q);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[0],  negative,  q);	  int    v    =(int)Math.floor(factorials[0],    negative);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
172	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[1],  negative);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.floor(factorials[1],  negative);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[1],  negative);	  int    v    =(int)Math.floor(factorials[0],    negative);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
173	[BUG]  [BUGGY]  while((  u  &  2)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  2)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  2)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }	  if(u    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
174	[BUG]  [BUGGY]  float  u  =(float)Math.rint((  v  +  1)/  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  float  u  =(float)Math.rint((  v  +  1)/  2);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	float  u  =(float)Math.rint((  v  +  1)/  2);	  int    u    =(int)Math.rint((    v    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
175	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  p  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  p  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  p  <  31)  {  p  =  -p;  }	  if(q    >    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
176	[BUG]  [BUGGY]  int  k  =  27;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =  27;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =  27;	  int    k    =    29;    	non-compiled	[CE]  <identifier>  expected	78	None	replace
177	[BUG]  [BUGGY]  Character  k  =(v  ==  0)?  1  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  Character  k  =(v  ==  0)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Character  k  =(v  ==  0)?  1  :  0;	  Character    k    =    0;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
178	[BUG]  [BUGGY]  Character  k  =(v  >  31)?  0  :  p;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  Character  k  =(v  >  31)?  0  :  p;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Character  k  =(v  >  31)?  0  :  p;	  Character    k    =    0;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
179	[BUG]  [BUGGY]  Character  k  =(v  >  31)?  0  :  v;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  Character  k  =(v  >  31)?  0  :  v;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Character  k  =(v  >  31)?  0  :  v;	  Character    k    =    0;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
180	[BUG]  [BUGGY]  int  k  =  31  *  q  +  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =  31  *  q  +  2;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =  31  *  q  +  2;	  int    k    =    31    *    q;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
181	[BUG]  [BUGGY]  while((  u  &  2)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  2)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  2)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	  if(u    >    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
182	[BUG]  [BUGGY]  Char  k  =  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  Char  k  =  1;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Char  k  =  1;	  Char    k    =    0;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
183	[BUG]  [BUGGY]  int  k  =(v  <  >  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  <  >  1)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  >  1)?  1  :  0;	  int    k    =(v    <    >    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
184	[BUG]  [BUGGY]  int  k  =(v  <  >  32)?  1  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  <  >  32)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  >  32)?  1  :  0;	  int    k    =(v    <    >    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
185	[BUG]  [BUGGY]  int  k  =  32  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =  32  +  1;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =  32  +  1;	  int    k    =    32;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
186	[BUG]  [BUGGY]  int  p  =(int)Math.ceil(gcd);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  p  =(int)Math.ceil(gcd);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  p  =(int)Math.ceil(gcd);	  int    p    =(int)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
187	[BUG]  [BUGGY]  while((  u  &  2)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  2)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  2)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {	  if(u    >    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
188	[BUG]  [BUGGY]  int  u  =(int)Math.log(v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.log(v);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.log(v);	  int    u    =(int)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
189	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.floor(v  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.floor(v  +  1);	  int    u    =(int)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
190	[BUG]  [BUGGY]  String  k  =(v  ==  0)?  1  :  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  String  k  =(v  ==  0)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	String  k  =(v  ==  0)?  1  :  0;	  String    k    =    0;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
191	[BUG]  [BUGGY]  String  k  =(q  ==  0)?  1  :  q;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  String  k  =(q  ==  0)?  1  :  q;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	String  k  =(q  ==  0)?  1  :  q;	  String    k    =    0;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
192	[BUG]  [BUGGY]  float  v  =(float)Math.ceil((  u  /  1)/  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  float  v  =(float)Math.ceil((  u  /  1)/  2);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	float  v  =(float)Math.ceil((  u  /  1)/  2);	  int    v    =(int)Math.ceil((    u    /    1)/    2);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
193	[BUG]  [BUGGY]  float  v  =(float)Math.ceil((  u  +  1)/  2  *  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  float  v  =(float)Math.ceil((  u  +  1)/  2  *  2);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	float  v  =(float)Math.ceil((  u  +  1)/  2  *  2);	  float    v    =(float)Math.ceil((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
194	[BUG]  [BUGGY]  float  v  =(float)Math.ceil((  u  +  1)/  2  *  3);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  float  v  =(float)Math.ceil((  u  +  1)/  2  *  3);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	float  v  =(float)Math.ceil((  u  +  1)/  2  *  3);	  float    v    =(float)Math.ceil((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
195	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p  +  1;  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p  +  1;	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
196	[BUG]  [BUGGY]  char  v  =(char)Math.floor(factorials[0],  negative);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  char  v  =(char)Math.floor(factorials[0],  negative);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  v  =(char)Math.floor(factorials[0],  negative);	  char    v    =(char)Math.floor(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
197	[BUG]  [BUGGY]  float  u  =(float)Math.ceil(p);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  float  u  =(float)Math.ceil(p);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	float  u  =(float)Math.ceil(p);	  int    u    =(int)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
198	[BUG]  [BUGGY]  float  v  =(float)Math.floor(factorials[1],  p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  float  v  =(float)Math.floor(factorials[1],  p);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	float  v  =(float)Math.floor(factorials[1],  p);	  int    v    =(int)Math.floor(factorials[1],    p);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
199	[BUG]  [BUGGY]  if(q  ==  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  if(q  ==  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  ==  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
200	[BUG]  [BUGGY]  While((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  While((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	While((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
201	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -1;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -1;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -1;  }	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
202	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  p  <  32)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  p  <  32)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  p  <  32)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    32)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
203	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  >  32)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  >  32)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  >  32)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    32)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
204	[BUG]  [BUGGY]  if(q  ==  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  if(q  ==  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  ==  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  p  =  -p;  }	  if(q    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
205	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  negative  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =  Math.min(factorials.length,  negative  +  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =  Math.min(factorials.length,  negative  +  1);	  int    v    =    Math.min(factorials.length,    negative);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
206	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  q  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  q  <  31)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  q  <  31)  {	  long    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
207	[BUG]  [BUGGY]  int  p  =(int)Math.log(factorials);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  p  =(int)Math.log(factorials);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  p  =(int)Math.log(factorials);	  int    p    =(int)Math.log(p);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
208	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31)  {	  while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
209	[BUG]  [BUGGY]  while((  v  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  v  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  v  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {	  while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
210	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  p  *  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =  Math.min(factorials.length,  p  *  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =  Math.min(factorials.length,  p  *  1);	  int    v    =    Math.min(factorials.length,    p    +    1);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
211	[BUG]  [BUGGY]  if(q  <  31)  {  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  if(q  <  31)  {  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  <  31)  {  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }	  if(q    ==    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
212	[BUG]  [BUGGY]  String  k  =(q  ==  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  String  k  =(q  ==  1)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	String  k  =(q  ==  1)?  1  :  0;	  String    k    =    0;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
213	[BUG]  [BUGGY]  int  v  =(int)Math.log(factorials[0],  EPSILON);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.log(factorials[0],  EPSILON);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.log(factorials[0],  EPSILON);	  int    v    =(int)Math.log(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
214	[BUG]  [BUGGY]  int  v  =(int)Math.log(factorials[0],  positive);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.log(factorials[0],  positive);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.log(factorials[0],  positive);	  int    v    =(int)Math.log(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
215	[BUG]  [BUGGY]  if(q  >  1)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  if(q  >  1)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  >  1)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    >    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
216	[BUG]  [BUGGY]  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    >    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
217	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  p  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&  p  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&  p  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    >    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
218	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[0],  EPSILON);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.floor(factorials[0],  EPSILON);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[0],  EPSILON);	  int    v    =(int)Math.floor(factorials[0],    q);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
219	[BUG]  [BUGGY]  float  v  =(float)Math.floor(factorials[0],  q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  float  v  =(float)Math.floor(factorials[0],  q);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	float  v  =(float)Math.floor(factorials[0],  q);	  int    v    =(int)Math.floor(factorials[0],    q);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
220	[BUG]  [BUGGY]  if(q  >  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  >  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  if(q  >  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  >  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  >  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  >  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    >    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
221	[BUG]  [BUGGY]  if(q  <  =  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  >  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  if(q  <  =  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  >  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  <  =  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  >  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    >    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
222	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  p  >  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&  p  >  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&  p  >  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    >    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
223	[BUG]  [BUGGY]  if(p  ==  0)  {  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  if(p  ==  0)  {  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(p  ==  0)  {  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    ==    1)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
224	[BUG]  [BUGGY]  char  u  =(char)Math.rint((  v  +  1)/  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  char  u  =(char)Math.rint((  v  +  1)/  2);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  u  =(char)Math.rint((  v  +  1)/  2);	  int    u    =(int)Math.rint((    v    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
225	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.floor(v  -  1);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.floor(v  -  1);	  int    u    =(int)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
226	[BUG]  [BUGGY]  char  p  =(char)Math.ceil(p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  char  p  =(char)Math.ceil(p);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  p  =(char)Math.ceil(p);	  int    p    =(int)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
227	[BUG]  [BUGGY]  While((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  While((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	While((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {	  if(u    >    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
228	[BUG]  [BUGGY]  char  v  =(char)Math.ceil((  u  +  1)/  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  char  v  =(char)Math.ceil((  u  +  1)/  3);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  v  =(char)Math.ceil((  u  +  1)/  3);	  int    v    =(int)Math.ceil((    u    +    1)/    3);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
229	[BUG]  [BUGGY]  if(q  >  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  if(q  >  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  >  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
230	[BUG]  [BUGGY]  int  u  =(int)Math.log(factorials);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.log(factorials);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.log(factorials);	  int    u    =(int)Math.log(p);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
231	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  v);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.pow(10,  v);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.pow(10,  v);	  int    u    =(int)Math.log(p);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
232	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  -  1)/  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.ceil((  u  -  1)/  2);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.ceil((  u  -  1)/  2);	  int    v    =(int)Math.ceil((    u    /    1)/    2);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
233	[BUG]  [BUGGY]  if(q  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  if(q  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  p  =  -p;  }	  if(u    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
234	[BUG]  [BUGGY]  int  k  =(v  <  16)?  1  :  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  <  16)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  16)?  1  :  0;	  int    k    =(v    <    32)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
235	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  /  2)/  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  /  2)/  2);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  /  2)/  2);	  int    u    =(int)Math.rint((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
236	[BUG]  [BUGGY]  if(p  ==  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  if(p  ==  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(p  ==  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	  if(q    ==    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
237	[BUG]  [BUGGY]  char  v  =(char)Math.floor(factorials[0],  EPSILON);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  char  v  =(char)Math.floor(factorials[0],  EPSILON);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  v  =(char)Math.floor(factorials[0],  EPSILON);	  char    v    =(char)Math.floor(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
238	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =  Math.min(factorials.length,  v);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =  Math.min(factorials.length,  v);	  int    v    =    Math.min(factorials.length,    EPSILON);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
239	[BUG]  [BUGGY]  if(q  <  31)  {  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  if(q  <  31)  {  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  <  31)  {  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	  if(u    >    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
240	[BUG]  [BUGGY]  if(q  <  =  31)  {  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  if(q  <  =  31)  {  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  <  =  31)  {  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }	  if(q    <    31)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
241	[BUG]  [BUGGY]  char  u  =(char)Math.rint((  u  +  1)/  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  char  u  =(char)Math.rint((  u  +  1)/  3);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  u  =(char)Math.rint((  u  +  1)/  3);	  int    u    =(int)Math.rint((    u    +    1)/    3);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
242	[BUG]  [BUGGY]  int  k  =(v  <  1  ||  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  <  1  ||  1)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  1  ||  1)?  1  :  0;	  int    k    =(v    <    1)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
243	[BUG]  [BUGGY]  int  k  =(v  <  2)?  1  :  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  k  =(v  <  2)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  2)?  1  :  0;	  int    k    =(v    <    1)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
244	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  negatives.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =  Math.min(factorials.length,  negatives.length);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =  Math.min(factorials.length,  negatives.length);	  int    v    =    Math.min(factorials.length,    negative);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
245	[BUG]  [BUGGY]  Character  k  =  Character.toLowerCase(q);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  Character  k  =  Character.toLowerCase(q);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Character  k  =  Character.toLowerCase(q);	  Character    k    =    0;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
246	[BUG]  [BUGGY]  Character  k  =(v  >  0)?  p  :  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  Character  k  =(v  >  0)?  p  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Character  k  =(v  >  0)?  p  :  0;	  Character    k    =    0;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
247	[BUG]  [BUGGY]  Character  k  =  Character.toUpperCase(q);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  Character  k  =  Character.toUpperCase(q);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Character  k  =  Character.toUpperCase(q);	  Character    k    =    0;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
248	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  p  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&  p  <  31)  {  p  =  -p;  }  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&  p  <  31)  {  p  =  -p;  }	  if(u    >    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    >=    0    &&    k    <    31)    {    p    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
249	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  *  2)/  2  +  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  u  =(int)Math.rint((  u  *  2)/  2  +  3);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  *  2)/  2  +  3);	  int    u    =(int)Math.rint((    u    +    1)/    2    +    3);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
250	[BUG]  [BUGGY]  float  u  =(float)Math.rint((  u  +  1)/  2  +  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  float  u  =(float)Math.rint((  u  +  1)/  2  +  3);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	float  u  =(float)Math.rint((  u  +  1)/  2  +  3);	  int    u    =(int)Math.rint((    u    +    1)/    2    +    3);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
251	[BUG]  [BUGGY]  While((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  While((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	While((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {	  if(u    >    0)    {    int    k    =    0;    while((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
252	[BUG]  [BUGGY]  while((  v  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  32)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  v  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  32)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  v  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  32)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    32)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
253	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  32)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  32)  {  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  32)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    32)    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
254	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[0],  p  +  1,  q);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  int  v  =(int)Math.floor(factorials[0],  p  +  1,  q);  [BUGGY]      int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[0],  p  +  1,  q);	  int    v    =(int)Math.floor(factorials[0],    p    +    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
255	[BUG]  [BUGGY]  Char  k  =  Character.toLowerCase(q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  Char  k  =  Character.toLowerCase(q);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Char  k  =  Character.toLowerCase(q);	  Char    k    =    0;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
256	[BUG]  [BUGGY]  Char  k  =  Character.toLowerCase(v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative        [BUGGY]  Char  k  =  Character.toLowerCase(v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(       "overflow:  gcd({0},  {1})  is  2^31     ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Char  k  =  Character.toLowerCase(v);	  Char    k    =    0;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
