bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[0],  q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.floor(factorials[0],  q);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[0],  q);	      int    v    =(int)Math.floor(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
2	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[0],  logSum);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.floor(factorials[0],  logSum);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[0],  logSum);	      int    v    =(int)Math.floor(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
3	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[0],  p  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.floor(factorials[0],  p  +  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[0],  p  +  1);	      int    v    =(int)Math.floor(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
4	[BUG]  [BUGGY]  int  v  =(int)Math.log(factorials[0],  p);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.log(factorials[0],  p);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.log(factorials[0],  p);	      int    v    =(int)Math.floor(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
5	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  +  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.ceil((  u  +  1)/  2  +  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.ceil((  u  +  1)/  2  +  1);	      int    v    =(int)Math.ceil((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
6	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  +  1)/  3);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.ceil((  u  +  1)/  3);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.ceil((  u  +  1)/  3);	      int    v    =(int)Math.ceil((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
7	[BUG]  [BUGGY]  float  v  =(float)Math.ceil((  u  +  1)/  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  float  v  =(float)Math.ceil((  u  +  1)/  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	float  v  =(float)Math.ceil((  u  +  1)/  2);	      int    v    =(int)Math.ceil((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
8	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  *  2)/  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.ceil((  u  *  2)/  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.ceil((  u  *  2)/  2);	      int    v    =(int)Math.ceil((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
9	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(p);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.ceil(p);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.ceil(p);	      int    u    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
10	[BUG]  [BUGGY]  int  u  =(int)Math.log(p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.log(p);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.log(p);	      int    u    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  int  u  =(int)Math.floor(q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.floor(q);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.floor(q);	      int    u    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  int  p  =(int)Math.ceil(p);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  p  =(int)Math.ceil(p);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  p  =(int)Math.ceil(p);	      int    p    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
13	[BUG]  [BUGGY]  int  p  =(int)Math.log(p);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  p  =(int)Math.log(p);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  p  =(int)Math.log(p);	      int    p    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
14	[BUG]  [BUGGY]  int  p  =(int)Math.floor(v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  p  =(int)Math.floor(v);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  p  =(int)Math.floor(v);	      int    p    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
15	[BUG]  [BUGGY]  int  p  =(int)Math.floor(q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  p  =(int)Math.floor(q);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  p  =(int)Math.floor(q);	      int    p    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
16	[BUG]  [BUGGY]  int  k  =  3;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =  3;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =  3;	  int    k    =    31;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
17	[BUG]  [BUGGY]  int  k  =(v  <  32)?  1  :  0;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(v  <  32)?  1  :  0;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  32)?  1  :  0;	  int    k    =(v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
18	[BUG]  [BUGGY]  int  k  =(v  <  1  ||  v  <  31)?  1  :  0;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(v  <  1  ||  v  <  31)?  1  :  0;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  1  ||  v  <  31)?  1  :  0;	  int    k    =(v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
19	[BUG]  [BUGGY]  int  k  =(v  <  >  31)?  1  :  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(v  <  >  31)?  1  :  0;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  >  31)?  1  :  0;	  int    k    =(v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
20	[BUG]  [BUGGY]  int  k  =  1  <  <  2;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =  1  <  <  2;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =  1  <  <  2;	  int    k    =    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
21	[BUG]  [BUGGY]  String  k  =  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  String  k  =  0;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	String  k  =  0;	  char    k    =    0;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
22	[BUG]  [BUGGY]  Character  k  =  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  Character  k  =  0;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Character  k  =  0;	  char    k    =    0;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
23	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {	      int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  if(u  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  if(u  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(u  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {	      int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
25	[BUG]  [BUGGY]  long  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  long  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	long  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {	      int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
26	[BUG]  [BUGGY]  if(u  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  if(u  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  }  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(u  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  }	      int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
27	[BUG]  [BUGGY]  p  =  -p;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  p  =  -p;  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	p  =  -p;	      int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
28	[BUG]  [BUGGY]  if(u  >  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  if(u  >  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(u  >  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	      int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
29	[BUG]  [BUGGY]  if(u  >  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  >=  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  if(u  >  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  >=  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(u  >  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  >=  0  &&  k  <  31)  {  p  =  -p;  }	      int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
30	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;	      int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
31	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  +  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  -  1)/  2  +  1);	      int    u    =(int)Math.rint((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
32	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  3);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  3);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  -  1)/  3);	      int    u    =(int)Math.rint((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  +  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  +  3);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  -  1)/  2  +  3);	      int    u    =(int)Math.rint((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
34	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  +  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  +  4);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  -  1)/  2  +  4);	      int    u    =(int)Math.rint((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
35	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  2);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =  Math.min(factorials.length,  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =  Math.min(factorials.length,  2);	      int    v    =    Math.min(factorials.length,    p);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
36	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  p  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =  Math.min(factorials.length,  p  +  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =  Math.min(factorials.length,  p  +  1);	      int    v    =    Math.min(factorials.length,    p);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
37	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  3);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =  Math.min(factorials.length,  3);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =  Math.min(factorials.length,  3);	      int    v    =    Math.min(factorials.length,    p);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
38	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  +  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  +  1)/  2  +  1);	      int    u    =(int)Math.rint((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
39	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  3);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  3);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  +  1)/  3);	      int    u    =(int)Math.rint((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
40	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  +  3);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  +  3);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  +  1)/  2  +  3);	      int    u    =(int)Math.rint((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
41	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  +  4);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  +  4);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  +  1)/  2  +  4);	      int    u    =(int)Math.rint((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
42	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =  Math.min(factorials.length,  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =  Math.min(factorials.length,  1);	      int    v    =    Math.min(factorials.length,    q);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
43	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;	      int    k    =    0;    while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
44	[BUG]  [BUGGY]  if(u  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  if(u  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(u  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }	      int    k    =    0;    while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
45	[BUG]  [BUGGY]  int  k  =  0;  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =  0;  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =  0;  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }	      int    k    =    0;    while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
46	[BUG]  [BUGGY]  Char  k  =  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  Char  k  =  0;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	Char  k  =  0;	  char    k    =    0;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
47	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  -  1)/  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  v  -  1)/  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  v  -  1)/  2);	      int    u    =(int)Math.rint((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
48	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  *  2)/  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  u  *  2)/  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  u  *  2)/  2);	      int    u    =(int)Math.rint((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
49	[BUG]  [BUGGY]  if(q  ==  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  if(q  ==  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  ==  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	      int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
50	[BUG]  [BUGGY]  if(q  ==  1)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  if(q  ==  1)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  ==  1)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	      int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
51	[BUG]  [BUGGY]  if(q  ==  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  if(q  ==  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  ==  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	      int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
52	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  negative);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =  Math.min(factorials.length,  negative);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =  Math.min(factorials.length,  negative);	      int    v    =    Math.min(factorials.length,    p);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
53	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)!=  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)!=  0  &&  k  <  31)  {  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)!=  0  &&  k  <  31)  {	      int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
54	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  32)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  32)  {  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  32)  {	      int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
55	[BUG]  [BUGGY]  int  k  =  1  <  <  4;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =  1  <  <  4;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =  1  <  <  4;	  int    k    =    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
56	[BUG]  [BUGGY]  int  k  =(v  <  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(v  <  1)?  1  :  0;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  1)?  1  :  0;	  int    k    =(v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
57	[BUG]  [BUGGY]  if(q  ==  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  if(q  ==  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  ==  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }	      int    k    =    0;    while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
58	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.floor(v);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.floor(v);	      int    u    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
59	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[1],  p);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.floor(factorials[1],  p);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[1],  p);	      int    v    =(int)Math.floor(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
60	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  +  1)/  2);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  v  +  1)/  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  u  =(int)Math.rint((  v  +  1)/  2);	      int    u    =(int)Math.rint((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
61	[BUG]  [BUGGY]  int  k  =  32;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =  32;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =  32;	  int    k    =    31;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
62	[BUG]  [BUGGY]  int  k  =  31  *  q;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =  31  *  q;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =  31  *  q;	  int    k    =    31;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
63	[BUG]  [BUGGY]  float  p  =(float)Math.floor(p);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  float  p  =(float)Math.floor(p);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	float  p  =(float)Math.floor(p);	      int    p    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
64	[BUG]  [BUGGY]  if(q  >  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  if(q  >  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  >  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	      int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
65	[BUG]  [BUGGY]  if(q  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  if(q  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  p  =  -p;  }	      int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
66	[BUG]  [BUGGY]  if(q  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  >  0  &&  k  <  31)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  if(q  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  >  0  &&  k  <  31)  {  p  =  -p;  }  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  >  0  &&  k  <  31)  {  p  =  -p;  }	      int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
67	[BUG]  [BUGGY]  if(q  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  if(q  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  <  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }	      int    k    =    0;    while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
68	[BUG]  [BUGGY]  if(q  >  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  if(q  >  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(q  >  31)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }	      int    k    =    0;    while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
69	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  p  =  -p;  }	      int    k    =    0;    while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    p    =    -p;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
70	[BUG]  [BUGGY]  int  v  =(int)Math.floor(factorials[0],  negative);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.floor(factorials[0],  negative);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.floor(factorials[0],  negative);	      int    v    =(int)Math.floor(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
71	[BUG]  [BUGGY]  char  v  =(char)Math.floor(factorials[0],  p);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  char  v  =(char)Math.floor(factorials[0],  p);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  v  =(char)Math.floor(factorials[0],  p);	      int    v    =(int)Math.floor(factorials[0],    p);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
72	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  /  1)/  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.ceil((  u  /  1)/  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =(int)Math.ceil((  u  /  1)/  2);	      int    v    =(int)Math.ceil((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
73	[BUG]  [BUGGY]  char  k  =  Character.toLowerCase(q);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  char  k  =  Character.toLowerCase(q);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  k  =  Character.toLowerCase(q);	  char    k    =    0;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
74	[BUG]  [BUGGY]  char  k  =  Character.toLowerCase(len);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  char  k  =  Character.toLowerCase(len);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	char  k  =  Character.toLowerCase(len);	  char    k    =    0;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
75	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  EPSILON);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =  Math.min(factorials.length,  EPSILON);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  v  =  Math.min(factorials.length,  EPSILON);	      int    v    =    Math.min(factorials.length,    q);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
76	[BUG]  [BUGGY]  if(u  >  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  if(u  >  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(u  >  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {	      int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
77	[BUG]  [BUGGY]  if(u  >  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  if(u  >  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	if(u  >  0)  {  int  k  =  0;  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {	      int    k    =    0;    while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
78	[BUG]  [BUGGY]  int  k  =  29;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =  29;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =  29;	  int    k    =    31;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
79	[BUG]  [BUGGY]  int  k  =(v  <  31)?  1  :  -1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(v  <  31)?  1  :  -1;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  31)?  1  :  -1;	  int    k    =(v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
80	[BUG]  [BUGGY]  int  k  =(v  <  31)?  2  :  0;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(v  <  31)?  2  :  0;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	int  k  =(v  <  31)?  2  :  0;	  int    k    =(v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
