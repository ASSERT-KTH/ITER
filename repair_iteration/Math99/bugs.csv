bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return (Math.abs(u) + Math.abs(v)); [FE] AssertionFailedError [CONTEXT] public static int gcd(final int p, final int q) { int u = p; int v = q; if ((u == 0) || (v == 0)) { [BUGGY] return (Math.abs(u) + Math.abs(v)); [BUGGY] }      if (u > 0) { u = -u; } // make u negative if (v > 0) { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int gcd(final int p, final int q) { int u = p; int v = q; if ((u == 0) || (v == 0)) { [BUGGY] [BUGGY] return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { u = -u; } // make u negative if (v > 0) { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	add	
3	[BUG] [BUGGY] if (a==0 || b==0){ [FE] AssertionFailedError [CONTEXT] public static int lcm(int a, int b) { [BUGGY] if (a==0 || b==0){ [BUGGY] return 0; } int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b)); return lcm; } [CLASS] MathUtils [METHOD] lcm [RETURN_TYPE] int  int a int b [VARIABLES] short NS PS ZS x boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result value x y byte NB PB ZB x int a b lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int lcm(int a, int b) { [BUGGY] [BUGGY] if (a==0 || b==0){ return 0; } int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b)); return lcm; } [CLASS] MathUtils [METHOD] lcm [RETURN_TYPE] int  int a int b [VARIABLES] short NS PS ZS x boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result value x y byte NB PB ZB x int a b lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	add	
5	[BUG] [BUGGY] return 0; [FE] AssertionFailedError [CONTEXT] public static int lcm(int a, int b) { if (a==0 || b==0){ [BUGGY] return 0; [BUGGY] } int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b)); return lcm; } [CLASS] MathUtils [METHOD] lcm [RETURN_TYPE] int  int a int b [VARIABLES] short NS PS ZS x boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result value x y byte NB PB ZB x int a b lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int lcm(int a, int b) { if (a==0 || b==0){ [BUGGY] [BUGGY] return 0; } int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b)); return lcm; } [CLASS] MathUtils [METHOD] lcm [RETURN_TYPE] int  int a int b [VARIABLES] short NS PS ZS x boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result value x y byte NB PB ZB x int a b lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	add	
7	[BUG] [BUGGY] int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b)); [FE] AssertionFailedError [CONTEXT] public static int lcm(int a, int b) { if (a==0 || b==0){ return 0; } [BUGGY] int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b)); [BUGGY] return lcm; } [CLASS] MathUtils [METHOD] lcm [RETURN_TYPE] int  int a int b [VARIABLES] short NS PS ZS x boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result value x y byte NB PB ZB x int a b lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int lcm(int a, int b) { if (a==0 || b==0){ return 0; } [BUGGY] [BUGGY] int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b)); return lcm; } [CLASS] MathUtils [METHOD] lcm [RETURN_TYPE] int  int a int b [VARIABLES] short NS PS ZS x boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result value x y byte NB PB ZB x int a b lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	add	
9	[BUG] [BUGGY] return lcm; [FE] AssertionFailedError [CONTEXT] public static int lcm(int a, int b) { if (a==0 || b==0){ return 0; } int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b)); [BUGGY] return lcm; [BUGGY] } [CLASS] MathUtils [METHOD] lcm [RETURN_TYPE] int  int a int b [VARIABLES] short NS PS ZS x boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result value x y byte NB PB ZB x int a b lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int lcm(int a, int b) { if (a==0 || b==0){ return 0; } int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b)); [BUGGY] [BUGGY] return lcm; } [CLASS] MathUtils [METHOD] lcm [RETURN_TYPE] int  int a int b [VARIABLES] short NS PS ZS x boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result value x y byte NB PB ZB x int a b lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	add	
11	[BUG] [BUGGY] int u = p; [FE] AssertionFailedError [CONTEXT] public static int gcd(final int p, final int q) { [BUGGY] int u = p; [BUGGY] int v = q; if ((u == 0) || (v == 0)) { return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int gcd(final int p, final int q) { [BUGGY] [BUGGY] int u = p; int v = q; if ((u == 0) || (v == 0)) { return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	add	
13	[BUG] [BUGGY] int v = q; [FE] AssertionFailedError [CONTEXT] public static int gcd(final int p, final int q) { int u = p; [BUGGY] int v = q; [BUGGY] if ((u == 0) || (v == 0)) { return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { u = -u; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int gcd(final int p, final int q) { int u = p; [BUGGY] [BUGGY] int v = q; if ((u == 0) || (v == 0)) { return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { u = -u; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	add	
15	[BUG] [BUGGY] if ((u == 0) || (v == 0)) { [FE] AssertionFailedError [CONTEXT] public static int gcd(final int p, final int q) { int u = p; int v = q; [BUGGY] if ((u == 0) || (v == 0)) { [BUGGY] return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { u = -u; } // make u negative [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int gcd(final int p, final int q) { int u = p; int v = q; [BUGGY] [BUGGY] if ((u == 0) || (v == 0)) { return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { u = -u; } // make u negative [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	add	
17	[BUG] [BUGGY] if (u > 0) { [FE] AssertionFailedError [CONTEXT] int u = p; int v = q; if ((u == 0) || (v == 0)) { return (Math.abs(u) + Math.abs(v)); }      [BUGGY] if (u > 0) { [BUGGY] u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] int u = p; int v = q; if ((u == 0) || (v == 0)) { return (Math.abs(u) + Math.abs(v)); }      [BUGGY] [BUGGY] if (u > 0) { u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	add	
19	[BUG] [BUGGY] u = -u; [FE] AssertionFailedError [CONTEXT] int v = q; if ((u == 0) || (v == 0)) { return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { [BUGGY] u = -u; [BUGGY] } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] int v = q; if ((u == 0) || (v == 0)) { return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { [BUGGY] [BUGGY] u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	add	
21	[BUG] [BUGGY] if (v > 0) { [FE] AssertionFailedError [CONTEXT] return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { u = -u; } // make u negative [BUGGY] if (v > 0) { [BUGGY] v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; k++; // cast out twos. } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { u = -u; } // make u negative [BUGGY] [BUGGY] if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; k++; // cast out twos. } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	add	
23	[BUG] [BUGGY] v = -v; [FE] AssertionFailedError [CONTEXT] }      if (u > 0) { u = -u; } // make u negative if (v > 0) { [BUGGY] v = -v; [BUGGY] } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; k++; // cast out twos. } if (k == 31) { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	554	554	2	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] }      if (u > 0) { u = -u; } // make u negative if (v > 0) { [BUGGY] [BUGGY] v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; k++; // cast out twos. } if (k == 31) { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	554	554	2	add	
25	[BUG] [BUGGY] int k = 0; [FE] AssertionFailedError [CONTEXT]    if (u > 0) { u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  [BUGGY] int k = 0; [BUGGY] while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; k++; // cast out twos. } if (k == 31) { throw MathRuntimeException.createArithmeticException( "overflow: gcd({0}, {1}) is 2^31", new Object[] { p, q }); [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]    if (u > 0) { u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  [BUGGY] [BUGGY] int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; k++; // cast out twos. } if (k == 31) { throw MathRuntimeException.createArithmeticException( "overflow: gcd({0}, {1}) is 2^31", new Object[] { p, q }); [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	557	557	2	add	
27	[BUG] [BUGGY] while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are    // both even...  u /= 2; [FE] AssertionFailedError [CONTEXT]   if (u > 0) { u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; [BUGGY] while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are               // both even...      u /= 2; [BUGGY]  u /= 2; v /= 2; k++; // cast out twos. } if (k == 31) { throw MathRuntimeException.createArithmeticException( "overflow: gcd({0}, {1}) is 2^31", new Object[] { p, q }); } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]   if (u > 0) { u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; [BUGGY] [BUGGY] while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are               // both even...      u /= 2;  u /= 2; v /= 2; k++; // cast out twos. } if (k == 31) { throw MathRuntimeException.createArithmeticException( "overflow: gcd({0}, {1}) is 2^31", new Object[] { p, q }); } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	add	
29	[BUG] [BUGGY] u /= 2; [FE] AssertionFailedError [CONTEXT] if (u > 0) { u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  [BUGGY] u /= 2; [BUGGY] v /= 2; k++; // cast out twos. } if (k == 31) { throw MathRuntimeException.createArithmeticException( "overflow: gcd({0}, {1}) is 2^31", new Object[] { p, q }); }   [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	560	560	2	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (u > 0) { u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  [BUGGY] [BUGGY] u /= 2; v /= 2; k++; // cast out twos. } if (k == 31) { throw MathRuntimeException.createArithmeticException( "overflow: gcd({0}, {1}) is 2^31", new Object[] { p, q }); }   [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	560	560	2	add	
31	[BUG] [BUGGY] v /= 2; [FE] AssertionFailedError [CONTEXT] u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; [BUGGY] v /= 2; [BUGGY] k++; // cast out twos. } if (k == 31) { throw MathRuntimeException.createArithmeticException( "overflow: gcd({0}, {1}) is 2^31", new Object[] { p, q }); }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	561	561	2	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; [BUGGY] [BUGGY] v /= 2; k++; // cast out twos. } if (k == 31) { throw MathRuntimeException.createArithmeticException( "overflow: gcd({0}, {1}) is 2^31", new Object[] { p, q }); }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	561	561	2	add	
33	[BUG] [BUGGY] k++; // cast out twos. } [FE] AssertionFailedError [CONTEXT] } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; [BUGGY] k++; // cast out twos.  } [BUGGY] } if (k == 31) { throw MathRuntimeException.createArithmeticException( "overflow: gcd({0}, {1}) is 2^31", new Object[] { p, q }); }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;  [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	562	563	2	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; [BUGGY] [BUGGY] k++; // cast out twos.  } } if (k == 31) { throw MathRuntimeException.createArithmeticException( "overflow: gcd({0}, {1}) is 2^31", new Object[] { p, q }); }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;  [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	562	563	2	add	
35	[BUG] [BUGGY] if (k == 31) { [FE] AssertionFailedError [CONTEXT] v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; k++; // cast out twos. } [BUGGY] if (k == 31) { [BUGGY] throw MathRuntimeException.createArithmeticException( "overflow: gcd({0}, {1}) is 2^31", new Object[] { p, q }); }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	564	564	2	replace	
36	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; k++; // cast out twos. } [BUGGY] [BUGGY] if (k == 31) { throw MathRuntimeException.createArithmeticException( "overflow: gcd({0}, {1}) is 2^31", new Object[] { p, q }); }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	564	564	2	add	
37	[BUG] [BUGGY] int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */; [FE] AssertionFailedError [CONTEXT] v /= 2; k++; // cast out twos. } if (k == 31) { throw MathRuntimeException.createArithmeticException( "overflow: gcd({0}, {1}) is 2^31", new Object[] { p, q }); }   [BUGGY] int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */; [BUGGY]   do {   while ((t & 1) == 0) { // while t is even.. t /= 2; // cast out twos }  if (t > 0) { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	571	571	2	replace	
38	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] v /= 2; k++; // cast out twos. } if (k == 31) { throw MathRuntimeException.createArithmeticException( "overflow: gcd({0}, {1}) is 2^31", new Object[] { p, q }); }   [BUGGY] [BUGGY] int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do {   while ((t & 1) == 0) { // while t is even.. t /= 2; // cast out twos }  if (t > 0) { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	571	571	2	add	
39	[BUG] [BUGGY] while ((t & 1) == 0) { // while t is even.. t /= 2; // cast out twos  } [FE] AssertionFailedError [CONTEXT] new Object[] { p, q }); }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do {   [BUGGY] while ((t & 1) == 0) { // while t is even..    t /= 2; // cast out twos      } [BUGGY] t /= 2; // cast out twos }  if (t > 0) { u = -t; } else { v = t; }  t = (v - u) / 2; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	577	579	2	replace	
40	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] new Object[] { p, q }); }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do {   [BUGGY] [BUGGY] while ((t & 1) == 0) { // while t is even..    t /= 2; // cast out twos      } t /= 2; // cast out twos }  if (t > 0) { u = -t; } else { v = t; }  t = (v - u) / 2; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	577	579	2	add	
41	[BUG] [BUGGY] t /= 2; // cast out twos } [FE] AssertionFailedError [CONTEXT] }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do {   while ((t & 1) == 0) { // while t is even.. [BUGGY] t /= 2; // cast out twos   } [BUGGY] }  if (t > 0) { u = -t; } else { v = t; }  t = (v - u) / 2;  [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	578	579	2	replace	
42	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do {   while ((t & 1) == 0) { // while t is even.. [BUGGY] [BUGGY] t /= 2; // cast out twos   } }  if (t > 0) { u = -t; } else { v = t; }  t = (v - u) / 2;  [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	578	579	2	add	
43	[BUG] [BUGGY] if (t > 0) { [FE] AssertionFailedError [CONTEXT] int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do {   while ((t & 1) == 0) { // while t is even.. t /= 2; // cast out twos }  [BUGGY] if (t > 0) { [BUGGY] u = -t; } else { v = t; }  t = (v - u) / 2;   } while (t != 0); return -u * (1 << k); // gcd is u*2^k [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	581	581	2	replace	
44	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do {   while ((t & 1) == 0) { // while t is even.. t /= 2; // cast out twos }  [BUGGY] [BUGGY] if (t > 0) { u = -t; } else { v = t; }  t = (v - u) / 2;   } while (t != 0); return -u * (1 << k); // gcd is u*2^k [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	581	581	2	add	
45	[BUG] [BUGGY] u = -t; [FE] AssertionFailedError [CONTEXT]   do {   while ((t & 1) == 0) { // while t is even.. t /= 2; // cast out twos }  if (t > 0) { [BUGGY] u = -t; [BUGGY] } else { v = t; }  t = (v - u) / 2;   } while (t != 0); return -u * (1 << k); // gcd is u*2^k } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	582	582	2	replace	
46	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]   do {   while ((t & 1) == 0) { // while t is even.. t /= 2; // cast out twos }  if (t > 0) { [BUGGY] [BUGGY] u = -t; } else { v = t; }  t = (v - u) / 2;   } while (t != 0); return -u * (1 << k); // gcd is u*2^k } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	582	582	2	add	
47	[BUG] [BUGGY] v = t; [FE] AssertionFailedError [CONTEXT] if (t > 0) { u = -t; } else { [BUGGY] v = t; [BUGGY] } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	584	584	2	replace	
48	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (t > 0) { u = -t; } else { [BUGGY] [BUGGY] v = t; } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	584	584	2	add	
49	[BUG] [BUGGY] t = (v - u) / 2; [FE] AssertionFailedError [CONTEXT] while ((t & 1) == 0) { // while t is even.. t /= 2; // cast out twos }  if (t > 0) { u = -t; } else { v = t; }  [BUGGY] t = (v - u) / 2; [BUGGY]   } while (t != 0); return -u * (1 << k); // gcd is u*2^k } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	587	587	2	replace	
50	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] while ((t & 1) == 0) { // while t is even.. t /= 2; // cast out twos }  if (t > 0) { u = -t; } else { v = t; }  [BUGGY] [BUGGY] t = (v - u) / 2;   } while (t != 0); return -u * (1 << k); // gcd is u*2^k } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	587	587	2	add	
