bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while((  u  &  2)  ==  0  &&(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  2)  ==  0  &&(v  &  1)  ==  0)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  2)  ==  0  &&(v  &  1)  ==  0)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
2	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)  ==  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)  ==  0)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0  &&(v  &  2)  ==  0)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
3	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  v  =  Math.min(factorials.length,  2);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  v  =  Math.min(factorials.length,  2);	      int    v    =    Math.min(factorials.length,    q);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
4	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  v  =  Math.min(factorials.length,  1);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  v  =  Math.min(factorials.length,  1);	      int    v    =    Math.min(factorials.length,    q);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
5	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  p  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  v  =  Math.min(factorials.length,  p  +  1);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  v  =  Math.min(factorials.length,  p  +  1);	      int    v    =    Math.min(factorials.length,    p);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
6	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||  k  <  31)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0  ||  k  <  31)  {  u  /=  2;  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0  ||  k  <  31)  {  u  /=  2;	  while    ((    u    &    1)    ==    0    &&    k    <    31)    {    //    while    u    and    v    are    //    both    even...    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
7	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0)  {  u  /=  2;  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0)  {  u  /=  2;	  while    ((    u    &    1)    ==    0    &&    k    <    31)    {    //    while    u    and    v    are    //    both    even...    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
8	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0  ||  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0  ||  k  <  31)  {	  while    ((    u    &    1)    ==    0    &&    k    <    31)    {    //    while    u    and    v    are    //    both    even...    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
9	[BUG]  [BUGGY]  while((  u  &  2)  ==  0  ||(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  2)  ==  0  ||(v  &  1)  ==  0)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  2)  ==  0  ||(v  &  1)  ==  0)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
10	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)  ==  0)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)!=  0  &&(v  &  1)  ==  0)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
11	[BUG]  [BUGGY]  int  u  =(int)Math.floor(q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  u  =(int)Math.floor(q);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  u  =(int)Math.floor(q);	      int    u    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  char  u  =(char)Math.floor(p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  char  u  =(char)Math.floor(p);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	char  u  =(char)Math.floor(p);	      int    u    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
13	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(p);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  u  =(int)Math.ceil(p);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  u  =(int)Math.ceil(p);	      int    u    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
14	[BUG]  [BUGGY]  int  u  =(int)Math.floor(k);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  u  =(int)Math.floor(k);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  u  =(int)Math.floor(k);	      int    u    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
15	[BUG]  [BUGGY]  while((  u  &  2)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  2)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  2)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
16	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  =  31)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  =  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  =  31)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
17	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  p);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.pow(10,  p);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.pow(10,  p);	      int    k    =(int)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
18	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.pow(10,  v);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.pow(10,  v);	      int    k    =(int)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
19	[BUG]  [BUGGY]  char  k  =(char)Math.pow(10,  q);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  char  k  =(char)Math.pow(10,  q);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	char  k  =(char)Math.pow(10,  q);	      int    k    =(int)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
20	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  c);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.pow(10,  c);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.pow(10,  c);	      int    k    =(int)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
21	[BUG]  [BUGGY]  while((  u  &  2)  ==  0  ||(v  &  1)  ==  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  2)  ==  0  ||(v  &  1)  ==  0  ||  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  2)  ==  0  ||(v  &  1)  ==  0  ||  k  <  31)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
22	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >=  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >=  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >=  31)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
23	[BUG]  [BUGGY]  int  k  =  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =  1;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =  1;	      int    k    =    0;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
24	[BUG]  [BUGGY]  int  k  =  31;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =  31;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =  31;	      int    k    =    0;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
25	[BUG]  [BUGGY]  char  k  =  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  char  k  =  0;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	char  k  =  0;	      int    k    =    0;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
26	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  +  1)*  p);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.rint((  u  +  1)*  p);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.rint((  u  +  1)*  p);	      int    k    =(int)Math.rint((    u    &    1)*    p);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
27	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  &  1)/  p);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.rint((  u  &  1)/  p);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.rint((  u  &  1)/  p);	      int    k    =(int)Math.rint((    u    &    1)*    p);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
28	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  &  1)*  4);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.rint((  u  &  1)*  4);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.rint((  u  &  1)*  4);	      int    k    =(int)Math.rint((    u    &    1)*    p);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
29	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  -  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.rint((  u  -  1)/  2  +  1);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.rint((  u  -  1)/  2  +  1);	      int    k    =(int)Math.rint((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
30	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  /  1)/  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.rint((  u  /  1)/  2);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.rint((  u  /  1)/  2);	      int    k    =(int)Math.rint((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
31	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  /  2)/  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.rint((  u  /  2)/  2);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.rint((  u  /  2)/  2);	      int    k    =(int)Math.rint((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
32	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  -  1)/  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.rint((  u  -  1)/  3);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.rint((  u  -  1)/  3);	      int    k    =(int)Math.rint((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
33	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(factorials);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.ceil(factorials);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.ceil(factorials);	      int    k    =(int)Math.floor(factorials);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
34	[BUG]  [BUGGY]  int  k  =(int)Math.floor(q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.floor(q);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.floor(q);	      int    k    =(int)Math.floor(factorials);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
35	[BUG]  [BUGGY]  int  k  =(int)Math.log(factorials);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.log(factorials);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.log(factorials);	      int    k    =(int)Math.floor(factorials);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
36	[BUG]  [BUGGY]  while((  u  %  2  ==  0)&&(v  %  2!=  0)&&  k  <  31)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  %  2  ==  0)&&(v  %  2!=  0)&&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  %  2  ==  0)&&(v  %  2!=  0)&&  k  <  31)  {	  while((    u    %    2    ==    0)&&(v    %    2    ==    0)&&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
37	[BUG]  [BUGGY]  while((  u  %  2  ==  0)&&(v  *  2  ==  0)&&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  %  2  ==  0)&&(v  *  2  ==  0)&&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  %  2  ==  0)&&(v  *  2  ==  0)&&  k  <  31)  {	  while((    u    %    2    ==    0)&&(v    %    2    ==    0)&&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
38	[BUG]  [BUGGY]  while((  u  %  2  ==  0)&&(v  %  2  ==  0)&&  k  >=  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  %  2  ==  0)&&(v  %  2  ==  0)&&  k  >=  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  %  2  ==  0)&&(v  %  2  ==  0)&&  k  >=  31)  {	  while((    u    %    2    ==    0)&&(v    %    2    ==    0)&&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
39	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(factorials[q]);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.ceil(factorials[q]);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.ceil(factorials[q]);	      int    k    =(int)Math.floor(factorials[q]);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
40	[BUG]  [BUGGY]  int  k  =(int)Math.log(factorials[q]);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.log(factorials[q]);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.log(factorials[q]);	      int    k    =(int)Math.floor(factorials[q]);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
41	[BUG]  [BUGGY]  int  k  =(int)Math.floor(factorials[0]);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.floor(factorials[0]);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.floor(factorials[0]);	      int    k    =(int)Math.floor(factorials[q]);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
42	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  u  <  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while(v  %  2  ==  0  &&  u  <  31  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while(v  %  2  ==  0  &&  u  <  31  &&  k  <  31)  {	  while(u    %    2    ==    0    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
43	[BUG]  [BUGGY]  while(u  %  2  ==  0  &&  v  <  =  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while(u  %  2  ==  0  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while(u  %  2  ==  0  &&  v  <  =  0  &&  k  <  31)  {	  while(u    %    2    ==    0    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
44	[BUG]  [BUGGY]  while(u  %  2!=  0  &&  v  <  =  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while(u  %  2!=  0  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while(u  %  2!=  0  &&  v  <  =  0  &&  k  <  31)  {	  while(u    %    2    ==    0    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
45	[BUG]  [BUGGY]  while(u  %  2  ==  0  &&  v  <  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while(u  %  2  ==  0  &&  v  <  31  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while(u  %  2  ==  0  &&  v  <  31  &&  k  <  31)  {	  while(u    %    2    ==    0    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
46	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  k);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  v  =  Math.min(factorials.size(),  k);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  v  =  Math.min(factorials.size(),  k);	      int    v    =    Math.min(factorials.size(),    q);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
47	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  v  =  Math.min(factorials.size(),  2);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  v  =  Math.min(factorials.size(),  2);	      int    v    =    Math.min(factorials.size(),    q);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
48	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  v  =  Math.min(factorials.size(),  1);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  v  =  Math.min(factorials.size(),  1);	      int    v    =    Math.min(factorials.size(),    q);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
49	[BUG]  [BUGGY]  char  v  =(char)Math.floor(p);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  char  v  =(char)Math.floor(p);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	char  v  =(char)Math.floor(p);	      int    v    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
50	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(p);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  v  =(int)Math.ceil(p);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  v  =(int)Math.ceil(p);	      int    v    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
51	[BUG]  [BUGGY]  int  v  =(int)Math.floor(q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  v  =(int)Math.floor(q);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  v  =(int)Math.floor(q);	      int    v    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
52	[BUG]  [BUGGY]  float  v  =(float)Math.floor(p);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  float  v  =(float)Math.floor(p);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	float  v  =(float)Math.floor(p);	      int    v    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
53	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(p);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.ceil(p);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.ceil(p);	      int    k    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
54	[BUG]  [BUGGY]  int  k  =(int)Math.log(p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.log(p);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.log(p);	      int    k    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
55	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  k  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  v  =  Math.min(factorials.length,  k  +  1);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  v  =  Math.min(factorials.length,  k  +  1);	      int    v    =    Math.min(factorials.length,    k);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
56	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  +  1)*  q);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.rint((  u  +  1)*  q);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.rint((  u  +  1)*  q);	      int    k    =(int)Math.rint((    u    &    1)*    q);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
57	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  &  1)*  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.rint((  u  &  1)*  2);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.rint((  u  &  1)*  2);	      int    k    =(int)Math.rint((    u    &    1)*    q);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
58	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while(v  %  2  ==  0  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while(v  %  2  ==  0  &&  k  <  31)  {	  while(u    %    2    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
59	[BUG]  [BUGGY]  while(u  %  2!=  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while(u  %  2!=  0  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while(u  %  2!=  0  &&  k  <  31)  {	  while(u    %    2    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
60	[BUG]  [BUGGY]  while(u  %  2  ==  1  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while(u  %  2  ==  1  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while(u  %  2  ==  1  &&  k  <  31)  {	  while(u    %    2    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
61	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  %  1)*  q);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.rint((  u  %  1)*  q);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.rint((  u  %  1)*  q);	      int    k    =(int)Math.rint((    u    &    1)*    q);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
62	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  <  <  1)*  q);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.rint((  u  <  <  1)*  q);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.rint((  u  <  <  1)*  q);	      int    k    =(int)Math.rint((    u    &    1)*    q);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
63	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)!=  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)!=  0  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)!=  0  &&  k  <  31)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
64	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)!=  0  &&(v  &  1)  ==  0  &&  k  <  31)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
65	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  >=  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  >=  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  >=  31)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
66	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  v  =  Math.min(factorials.size(),  0);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  v  =  Math.min(factorials.size(),  0);	      int    v    =    Math.min(factorials.size(),    p);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
67	[BUG]  [BUGGY]  int  v  =(int)Math.floor(u);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  v  =(int)Math.floor(u);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  v  =(int)Math.floor(u);	      int    v    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
68	[BUG]  [BUGGY]  int  k  =(int)Math.floor(factorials[q]  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.floor(factorials[q]  +  1);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.floor(factorials[q]  +  1);	      int    k    =(int)Math.floor(factorials[q]);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
69	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.pow(10,  y);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.pow(10,  y);	      int    k    =(int)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
70	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  gcd);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.pow(10,  gcd);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.pow(10,  gcd);	      int    k    =(int)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
71	[BUG]  [BUGGY]  int  u  =(int)Math.log(p);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  u  =(int)Math.log(p);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  u  =(int)Math.log(p);	      int    u    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
72	[BUG]  [BUGGY]  int  k  =(int)Math.floor(v);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.floor(v);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.floor(v);	      int    k    =(int)Math.floor(factorials);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
73	[BUG]  [BUGGY]  int  k  =  2;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =  2;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =  2;	      int    k    =    0;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
74	[BUG]  [BUGGY]  while((  u  %  2)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  %  2)  ==  0  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  %  2)  ==  0  &&  k  <  31)  {	  while    ((    u    &    1)    ==    0    &&    k    <    31)    {    //    while    u    and    v    are    //    both    even...    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
75	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  u  +=  31;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0)  {  u  +=  31;  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0)  {  u  +=  31;	  while    ((    u    &    1)    ==    0    &&    k    <    31)    {    //    while    u    and    v    are    //    both    even...    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
76	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0  &&  k  <  31)  {	  while    ((    u    &    1)    ==    0    &&    k    <    31)    {    //    while    u    and    v    are    //    both    even...    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
77	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  k  -  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  v  =  Math.min(factorials.length,  k  -  1);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  v  =  Math.min(factorials.length,  k  -  1);	      int    v    =    Math.min(factorials.length,    k);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
78	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  v  >  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while(v  %  2  ==  0  &&  v  >  0  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while(v  %  2  ==  0  &&  v  >  0  &&  k  <  31)  {	  while(u    %    2    ==    0    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
79	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  v  >  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while(v  %  2  ==  0  &&  v  >  31  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while(v  %  2  ==  0  &&  v  >  31  &&  k  <  31)  {	  while(u    %    2    ==    0    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
80	[BUG]  [BUGGY]  while(k  %  2  ==  0  &&  v  >  0  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while(k  %  2  ==  0  &&  v  >  0  &&  u  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while(k  %  2  ==  0  &&  v  >  0  &&  u  <  31)  {	  while(u    %    2    ==    0    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
81	[BUG]  [BUGGY]  while(u  %  2!=  0  &&  v  <  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while(u  %  2!=  0  &&  v  <  31  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while(u  %  2!=  0  &&  v  <  31  &&  k  <  31)  {	  while(u    %    2    ==    0    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
82	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >  31)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
83	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)!=  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)!=  0  ||  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0  ||(v  &  1)!=  0  ||  k  <  31)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
84	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  %  1)*  p);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.rint((  u  %  1)*  p);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.rint((  u  %  1)*  p);	      int    k    =(int)Math.rint((    u    &    1)*    p);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
85	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  <  <  1)*  p);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.rint((  u  <  <  1)*  p);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.rint((  u  <  <  1)*  p);	      int    k    =(int)Math.rint((    u    &    1)*    p);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
86	[BUG]  [BUGGY]  while(k  %  2  ==  0  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while(k  %  2  ==  0  &&  u  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while(k  %  2  ==  0  &&  u  <  31)  {	  while(u    %    2    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
87	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)!=  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)!=  0)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0  ||(v  &  1)!=  0)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
88	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)!=  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)!=  0)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)!=  0)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
89	[BUG]  [BUGGY]  while((  u  &  1)!=  0  ||(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)!=  0  ||(v  &  1)  ==  0)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)!=  0  ||(v  &  1)  ==  0)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
90	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  31)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  31)  {  u  /=  2;  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0  &&  v  <  31)  {  u  /=  2;	  while    ((    u    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
91	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  v  &&  k  <  31)  {  u  /=  2;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0)  {  v  &&  k  <  31)  {  u  /=  2;  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0)  {  v  &&  k  <  31)  {  u  /=  2;  }	  while    ((    u    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
92	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  3);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  v  =  Math.min(factorials.length,  3);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  v  =  Math.min(factorials.length,  3);	      int    v    =    Math.min(factorials.length,    q);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
93	[BUG]  [BUGGY]  while(k  %  2  ==  0  &&  v  >  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while(k  %  2  ==  0  &&  v  >  0  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while(k  %  2  ==  0  &&  v  >  0  &&  k  <  31)  {	  while(u    %    2    ==    0    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
94	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  v  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while(v  %  2  ==  0  &&  v  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while(v  %  2  ==  0  &&  v  <  31)  {	  while(u    %    2    ==    0    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
95	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&  k  <  31)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)!=  0  &&  k  <  31)  {  u  /=  2;  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)!=  0  &&  k  <  31)  {  u  /=  2;	  while    ((    u    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
96	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  v  /=  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0)  {  v  /=  2;  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0)  {  v  /=  2;	  while    ((    u    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
97	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  -  1)*  p);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.rint((  u  -  1)*  p);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.rint((  u  -  1)*  p);	      int    k    =(int)Math.rint((    u    &    1)*    p);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
98	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  q  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  v  =  Math.min(factorials.length,  q  +  1);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  v  =  Math.min(factorials.length,  q  +  1);	      int    v    =    Math.min(factorials.length,    q);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
99	[BUG]  [BUGGY]  while((  v  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  v  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  v  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  <  31)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
100	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  p  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  v  =  Math.min(factorials.size(),  p  +  1);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  v  =  Math.min(factorials.size(),  p  +  1);	      int    v    =    Math.min(factorials.size(),    p);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
101	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
102	[BUG]  [BUGGY]  while(k  %  2  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while(k  %  2  ==  0  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while(k  %  2  ==  0  &&  k  <  31)  {	  while(u    %    2    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
103	[BUG]  [BUGGY]  while((  v  %  2  ==  0)&&(v  %  2  ==  0)&&  k  <  31)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  v  %  2  ==  0)&&(v  %  2  ==  0)&&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  v  %  2  ==  0)&&(v  %  2  ==  0)&&  k  <  31)  {	  while((    u    %    2    ==    0)&&(v    %    2    ==    0)&&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
104	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||  k  <  31)  {  //  while  u  and  v  are  //  both  even...  u  /=  2;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0  ||  k  <  31)  {  //  while  u  and  v  are  //  both  even...  u  /=  2;  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0  ||  k  <  31)  {  //  while  u  and  v  are  //  both  even...  u  /=  2;	  while    ((    u    &    1)    ==    0    &&    k    <    31)    {    //    while    u    and    v    are    //    both    even...    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
105	[BUG]  [BUGGY]  int  k  =(int)Math.floor(factorials,  v);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.floor(factorials,  v);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.floor(factorials,  v);	      int    k    =(int)Math.floor(factorials);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
106	[BUG]  [BUGGY]  int  k  =(int)Math.floor(factorials,  q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.floor(factorials,  q);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.floor(factorials,  q);	      int    k    =(int)Math.floor(factorials);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
107	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  negative);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  v  =  Math.min(factorials.size(),  negative);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  v  =  Math.min(factorials.size(),  negative);	      int    v    =    Math.min(factorials.size(),    q);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
108	[BUG]  [BUGGY]  while((  v  &  1)  ==  0  ||(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  v  &  1)  ==  0  ||(v  &  1)  ==  0)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  v  &  1)  ==  0  ||(v  &  1)  ==  0)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
109	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  2)  ==  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  2)  ==  0)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0  ||(v  &  2)  ==  0)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
110	[BUG]  [BUGGY]  int  k  =(v  <  31)?  1  :  0;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(v  <  31)?  1  :  0;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(v  <  31)?  1  :  0;	      int    k    =    0;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
111	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  q  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.pow(10,  q  -  1);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.pow(10,  q  -  1);	      int    k    =(int)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
112	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  x);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.pow(10,  x);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.pow(10,  x);	      int    k    =(int)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
113	[BUG]  [BUGGY]  float  u  =(float)Math.floor(p);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  float  u  =(float)Math.floor(p);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	float  u  =(float)Math.floor(p);	      int    u    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
114	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  &  1)*  v);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.rint((  u  &  1)*  v);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.rint((  u  &  1)*  v);	      int    k    =(int)Math.rint((    u    &    1)*    q);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
115	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  -  1)*  q);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.rint((  u  -  1)*  q);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.rint((  u  -  1)*  q);	      int    k    =(int)Math.rint((    u    &    1)*    q);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
116	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
117	[BUG]  [BUGGY]  while((  v  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  while((  v  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	while((  v  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
118	[BUG]  [BUGGY]  char  k  =(char)Math.floor(p);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  char  k  =(char)Math.floor(p);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	char  k  =(char)Math.floor(p);	      int    k    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
119	[BUG]  [BUGGY]  int  k  =(int)Math.floor(factorials[q],  v);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;    [BUGGY]  int  k  =(int)Math.floor(factorials[q],  v);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  MathRuntimeException.createArithmeticException(     "overflow:  gcd({0},  {1})  is  2^31   ",  new  Object[]  {  p,  q  });  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	558	560	2	replace	int  k  =(int)Math.floor(factorials[q],  v);	      int    k    =(int)Math.floor(factorials[q]);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
