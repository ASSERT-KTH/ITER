bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return (Math.abs(u) + Math.abs(v)); [FE] AssertionFailedError testGcd [CONTEXT] public static int gcd(final int p, final int q) { int u = p; int v = q; if ((u == 0) || (v == 0)) { [BUGGY] return (Math.abs(u) + Math.abs(v)); [BUGGY] }      if (u > 0) { u = -u; } // make u negative if (v > 0) { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError testGcd [CONTEXT] public static int gcd(final int p, final int q) { int u = p; int v = q; if ((u == 0) || (v == 0)) { [BUGGY] [BUGGY] return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { u = -u; } // make u negative if (v > 0) { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	add	
3	[BUG] [BUGGY] if (a==0 || b==0){ [FE] AssertionFailedError testGcd [CONTEXT] public static int lcm(int a, int b) { [BUGGY] if (a==0 || b==0){ [BUGGY] return 0; } int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b)); return lcm; } [CLASS] MathUtils [METHOD] lcm [RETURN_TYPE] int  int a int b [VARIABLES] short NS PS ZS x boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result value x y byte NB PB ZB x int a b lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError testGcd [CONTEXT] public static int lcm(int a, int b) { [BUGGY] [BUGGY] if (a==0 || b==0){ return 0; } int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b)); return lcm; } [CLASS] MathUtils [METHOD] lcm [RETURN_TYPE] int  int a int b [VARIABLES] short NS PS ZS x boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result value x y byte NB PB ZB x int a b lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	add	
5	[BUG] [BUGGY] return 0; [FE] AssertionFailedError testGcd [CONTEXT] public static int lcm(int a, int b) { if (a==0 || b==0){ [BUGGY] return 0; [BUGGY] } int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b)); return lcm; } [CLASS] MathUtils [METHOD] lcm [RETURN_TYPE] int  int a int b [VARIABLES] short NS PS ZS x boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result value x y byte NB PB ZB x int a b lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError testGcd [CONTEXT] public static int lcm(int a, int b) { if (a==0 || b==0){ [BUGGY] [BUGGY] return 0; } int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b)); return lcm; } [CLASS] MathUtils [METHOD] lcm [RETURN_TYPE] int  int a int b [VARIABLES] short NS PS ZS x boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result value x y byte NB PB ZB x int a b lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	add	
7	[BUG] [BUGGY] int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b)); [FE] AssertionFailedError testGcd [CONTEXT] public static int lcm(int a, int b) { if (a==0 || b==0){ return 0; } [BUGGY] int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b)); [BUGGY] return lcm; } [CLASS] MathUtils [METHOD] lcm [RETURN_TYPE] int  int a int b [VARIABLES] short NS PS ZS x boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result value x y byte NB PB ZB x int a b lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError testGcd [CONTEXT] public static int lcm(int a, int b) { if (a==0 || b==0){ return 0; } [BUGGY] [BUGGY] int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b)); return lcm; } [CLASS] MathUtils [METHOD] lcm [RETURN_TYPE] int  int a int b [VARIABLES] short NS PS ZS x boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result value x y byte NB PB ZB x int a b lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	add	
9	[BUG] [BUGGY] return lcm; [FE] AssertionFailedError testGcd [CONTEXT] public static int lcm(int a, int b) { if (a==0 || b==0){ return 0; } int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b)); [BUGGY] return lcm; [BUGGY] } [CLASS] MathUtils [METHOD] lcm [RETURN_TYPE] int  int a int b [VARIABLES] short NS PS ZS x boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result value x y byte NB PB ZB x int a b lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError testGcd [CONTEXT] public static int lcm(int a, int b) { if (a==0 || b==0){ return 0; } int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b)); [BUGGY] [BUGGY] return lcm; } [CLASS] MathUtils [METHOD] lcm [RETURN_TYPE] int  int a int b [VARIABLES] short NS PS ZS x boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result value x y byte NB PB ZB x int a b lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	add	
11	[BUG] [BUGGY] int u = p; [FE] AssertionFailedError testGcd [CONTEXT] public static int gcd(final int p, final int q) { [BUGGY] int u = p; [BUGGY] int v = q; if ((u == 0) || (v == 0)) { return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError testGcd [CONTEXT] public static int gcd(final int p, final int q) { [BUGGY] [BUGGY] int u = p; int v = q; if ((u == 0) || (v == 0)) { return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	add	
13	[BUG] [BUGGY] int v = q; [FE] AssertionFailedError testGcd [CONTEXT] public static int gcd(final int p, final int q) { int u = p; [BUGGY] int v = q; [BUGGY] if ((u == 0) || (v == 0)) { return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { u = -u; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError testGcd [CONTEXT] public static int gcd(final int p, final int q) { int u = p; [BUGGY] [BUGGY] int v = q; if ((u == 0) || (v == 0)) { return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { u = -u; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	add	
15	[BUG] [BUGGY] if ((u == 0) || (v == 0)) { [FE] AssertionFailedError testGcd [CONTEXT] public static int gcd(final int p, final int q) { int u = p; int v = q; [BUGGY] if ((u == 0) || (v == 0)) { [BUGGY] return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { u = -u; } // make u negative [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError testGcd [CONTEXT] public static int gcd(final int p, final int q) { int u = p; int v = q; [BUGGY] [BUGGY] if ((u == 0) || (v == 0)) { return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { u = -u; } // make u negative [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	add	
17	[BUG] [BUGGY] if (u > 0) { [FE] AssertionFailedError testGcd [CONTEXT] int u = p; int v = q; if ((u == 0) || (v == 0)) { return (Math.abs(u) + Math.abs(v)); }      [BUGGY] if (u > 0) { [BUGGY] u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError testGcd [CONTEXT] int u = p; int v = q; if ((u == 0) || (v == 0)) { return (Math.abs(u) + Math.abs(v)); }      [BUGGY] [BUGGY] if (u > 0) { u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	add	
19	[BUG] [BUGGY] u = -u; [FE] AssertionFailedError testGcd [CONTEXT] int v = q; if ((u == 0) || (v == 0)) { return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { [BUGGY] u = -u; [BUGGY] } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError testGcd [CONTEXT] int v = q; if ((u == 0) || (v == 0)) { return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { [BUGGY] [BUGGY] u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  final int p final int q [VARIABLES] short NS PS ZS boolean long[] factorials double EPSILON SAFE_MIN TWO_PI eps logSum result x y byte NB PB ZB int k p q t u v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	add	
