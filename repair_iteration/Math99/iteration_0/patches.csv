bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action1	[BUG]  [BUGGY]    final  int  k  =  Math.min(p,  q);  [CE]  variable  k  is  already  defined  in  method  gcd(int,int)  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  [BUGGY]    final  int  k  =  Math.min(p,  q);  [BUGGY]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	replace	    final  int  k  =  Math.min(p,  q);		non-compiled	[CE]  variable  k  is  already  defined  in  method  gcd(int,int)	12	None	add
2	[BUG]  [BUGGY]    final  int  k  =  Math.abs(p);  [CE]  variable  k  is  already  defined  in  method  gcd(int,int)  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  [BUGGY]    final  int  k  =  Math.abs(p);  [BUGGY]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	replace	    final  int  k  =  Math.abs(p);		non-compiled	[CE]  variable  k  is  already  defined  in  method  gcd(int,int)	12	None	add
3	[BUG]  [BUGGY]    final  int  k  =(int)Math.abs(p);  [CE]  variable  k  is  already  defined  in  method  gcd(int,int)  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  [BUGGY]    final  int  k  =(int)Math.abs(p);  [BUGGY]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	replace	    final  int  k  =(int)Math.abs(p);		non-compiled	[CE]  variable  k  is  already  defined  in  method  gcd(int,int)	12	None	add
4	[BUG]  [BUGGY]    final  int  k  =  Math.log(p);  [CE]  possible  loss  of  precision  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  [BUGGY]    final  int  k  =  Math.log(p);  [BUGGY]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	replace	    final  int  k  =  Math.log(p);		non-compiled	[CE]  possible  loss  of  precision	12	None	add
5	[BUG]  [BUGGY]    final  int  k  =(int)Math.log(p);  [CE]  variable  k  is  already  defined  in  method  gcd(int,int)  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  [BUGGY]    final  int  k  =(int)Math.log(p);  [BUGGY]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	replace	    final  int  k  =(int)Math.log(p);		non-compiled	[CE]  variable  k  is  already  defined  in  method  gcd(int,int)	12	None	add
12	[BUG]  [BUGGY]  timeout  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]  if(u  >  0  ||  v  <=  0)  {  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	add	if(u  >  0  ||  v  <=  0)  {	if  ((u  ==  0)  ||  (v  ==  0))  {  	compilable	timeout	15	1
13	[BUG]  [BUGGY]  if(u  >  0  ||  v  <=  0)  {  timeout  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]  if(u  >  0  ||  v  <=  0)  {  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	if(u  >  0  ||  v  <=  0)  {	if  ((u  ==  0)  ||  (v  ==  0))  {  	compilable	timeout	15	1	replace
13	[BUG]  [BUGGY]  timeout  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]  if(u  >  0  ||  v  ==  0)  {  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	add	if(u  >  0  ||  v  ==  0)  {	if  ((u  ==  0)  ||  (v  ==  0))  {  	compilable	timeout	15	1
14	[BUG]  [BUGGY]  if(u  >  0  ||  v  ==  0)  {  timeout  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]  if(u  >  0  ||  v  ==  0)  {  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	if(u  >  0  ||  v  ==  0)  {	if  ((u  ==  0)  ||  (v  ==  0))  {  	compilable	timeout	15	1	replace
15	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]    [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	  	if  ((u  ==  0)  ||  (v  ==  0))  {  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  0;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	add	return  0;	return  lcm;  	compilable	  [FE]  AssertionFailedError  testGcd	9	2
22	[BUG]  [BUGGY]  return  0;  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  0;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  0;	return  lcm;  	compilable	  [FE]  AssertionFailedError  testGcd	9	2	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return(lcm  ==  0)?  1  :  lcm;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	add	return(lcm  ==  0)?  1  :  lcm;	return  lcm;  	compilable	  [FE]  AssertionFailedError  testGcd	9	2
23	[BUG]  [BUGGY]  return(lcm  ==  0)?  1  :  lcm;  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return(lcm  ==  0)?  1  :  lcm;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return(lcm  ==  0)?  1  :  lcm;	return  lcm;  	compilable	  [FE]  AssertionFailedError  testGcd	9	2	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return(lcm  ==  0)?  -1  :  lcm;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	add	return(lcm  ==  0)?  -1  :  lcm;	return  lcm;  	compilable	  [FE]  AssertionFailedError  testGcd	9	2
24	[BUG]  [BUGGY]  return(lcm  ==  0)?  -1  :  lcm;  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return(lcm  ==  0)?  -1  :  lcm;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return(lcm  ==  0)?  -1  :  lcm;	return  lcm;  	compilable	  [FE]  AssertionFailedError  testGcd	9	2	replace
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return(lcm  ==  0)?  lcm  :  0;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	add	return(lcm  ==  0)?  lcm  :  0;	return  lcm;  	compilable	  [FE]  AssertionFailedError  testGcd	9	2
25	[BUG]  [BUGGY]  return(lcm  ==  0)?  lcm  :  0;  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return(lcm  ==  0)?  lcm  :  0;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return(lcm  ==  0)?  lcm  :  0;	return  lcm;  	compilable	  [FE]  AssertionFailedError  testGcd	9	2	replace
25	[BUG]  [BUGGY]    [CE]  missing  return  statement  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	  	return  lcm;  	non-compiled	[CE]  missing  return  statement	9	None	replace
31	[BUG]  [BUGGY]    a  =  Math.abs(mulAndCheck(a,  b),  a));  [CE]  ';'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]    a  =  Math.abs(mulAndCheck(a,  b),  a));  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	    a  =  Math.abs(mulAndCheck(a,  b),  a));		non-compiled	[CE]  ';'  expected	6	None	add
32	[BUG]  [BUGGY]    lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [CE]  cannot  find  symbol  lcm  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]    lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	    lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));		non-compiled	[CE]  cannot  find  symbol  lcm	6	None	add
33	[BUG]  [BUGGY]    lcm  =  Math.abs(mulAndCheck(a,  b),  a));  [CE]  ';'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]    lcm  =  Math.abs(mulAndCheck(a,  b),  a));  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	    lcm  =  Math.abs(mulAndCheck(a,  b),  a));		non-compiled	[CE]  ';'  expected	6	None	add
34	[BUG]  [BUGGY]    a  =  Math.sqrt(Math.abs(b),  a));  [CE]  ';'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]    a  =  Math.sqrt(Math.abs(b),  a));  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	    a  =  Math.sqrt(Math.abs(b),  a));		non-compiled	[CE]  ';'  expected	6	None	add
35	[BUG]  [BUGGY]    lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)),  b));  [CE]  ';'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]    lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)),  b));  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	    lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)),  b));		non-compiled	[CE]  ';'  expected	6	None	add
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]    int  eps  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	add	    int  eps  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));		compilable	  [FE]  AssertionFailedError  testGcd	8	2
42	[BUG]  [BUGGY]    int  eps  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]    int  eps  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	    int  eps  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));		compilable	  [FE]  AssertionFailedError  testGcd	8	2	add
42	[BUG]  [BUGGY]    int  a  =  Math.abs(mulAndCheck(a,  b),  a));  [CE]  ';'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]    int  a  =  Math.abs(mulAndCheck(a,  b),  a));  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	    int  a  =  Math.abs(mulAndCheck(a,  b),  a));		non-compiled	[CE]  ';'  expected	8	None	add
43	[BUG]  [BUGGY]    int  eps  =  Math.abs(mulAndCheck(a,  b),  a));  [CE]  ';'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]    int  eps  =  Math.abs(mulAndCheck(a,  b),  a));  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	    int  eps  =  Math.abs(mulAndCheck(a,  b),  a));		non-compiled	[CE]  ';'  expected	8	None	add
44	[BUG]  [BUGGY]    a  =  Math.abs(mulAndCheck(a,  b),  a));  [CE]  ';'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]    a  =  Math.abs(mulAndCheck(a,  b),  a));  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	    a  =  Math.abs(mulAndCheck(a,  b),  a));		non-compiled	[CE]  ';'  expected	8	None	add
45	[BUG]  [BUGGY]    int  gcd(a,  b),  a);  [CE]  ';'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]    int  gcd(a,  b),  a);  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	    int  gcd(a,  b),  a);		non-compiled	[CE]  ';'  expected	8	None	add
51	[BUG]  [BUGGY]    if(u  >  0)  {  if(v  <  0)  {  return(Math.abs(u)-  Math.abs(v));  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]    if(u  >  0)  {  if(v  <  0)  {  return(Math.abs(u)-  Math.abs(v));  }  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	    if(u  >  0)  {  if(v  <  0)  {  return(Math.abs(u)-  Math.abs(v));  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
53	[BUG]  [BUGGY]    if(u  >  0)  {  if(v  <  0)  {  return(Math.abs(u)+  Math.abs(v));  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]    if(u  >  0)  {  if(v  <  0)  {  return(Math.abs(u)+  Math.abs(v));  }  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	    if(u  >  0)  {  if(v  <  0)  {  return(Math.abs(u)+  Math.abs(v));  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
54	[BUG]  [BUGGY]    if(u  >  0)  {  if(v  <=  0)  {  return(Math.abs(u)-  Math.abs(v));  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]    if(u  >  0)  {  if(v  <=  0)  {  return(Math.abs(u)-  Math.abs(v));  }  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	    if(u  >  0)  {  if(v  <=  0)  {  return(Math.abs(u)-  Math.abs(v));  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
55	[BUG]  [BUGGY]    if(u  >  0)  {  if(v  <  0)  {  return(Math.abs(u)/  q);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]    if(u  >  0)  {  if(v  <  0)  {  return(Math.abs(u)/  q);  }  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	    if(u  >  0)  {  if(v  <  0)  {  return(Math.abs(u)/  q);  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
61	[BUG]  [BUGGY]  timeout  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    u  =(Math.abs(u)+  Math.abs(v));  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	add	    u  =(Math.abs(u)+  Math.abs(v));		compilable	timeout	20	1
62	[BUG]  [BUGGY]    u  =(Math.abs(u)+  Math.abs(v));  timeout  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    u  =(Math.abs(u)+  Math.abs(v));  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    u  =(Math.abs(u)+  Math.abs(v));		compilable	timeout	20	1	add
62	[BUG]  [BUGGY]    return(Math.abs(u)+  Math.abs(v));  [CE]  unreachable  statement  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    return(Math.abs(u)+  Math.abs(v));  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    return(Math.abs(u)+  Math.abs(v));		non-compiled	[CE]  unreachable  statement	20	None	add
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testGcd  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    v  =(Math.abs(u)+  Math.abs(v));  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	add	    v  =(Math.abs(u)+  Math.abs(v));		compilable	  [FE]  AssertionFailedError  testGcd	20	2
64	[BUG]  [BUGGY]    v  =(Math.abs(u)+  Math.abs(v));  [FE]  AssertionFailedError  testGcd  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    v  =(Math.abs(u)+  Math.abs(v));  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    v  =(Math.abs(u)+  Math.abs(v));		compilable	  [FE]  AssertionFailedError  testGcd	20	2	add
64	[BUG]  [BUGGY]    return(Math.abs(u)-  Math.abs(v));  [CE]  unreachable  statement  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    return(Math.abs(u)-  Math.abs(v));  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    return(Math.abs(u)-  Math.abs(v));		non-compiled	[CE]  unreachable  statement	20	None	add
65	[BUG]  [BUGGY]    return(Math.abs(u)-  Math.abs(v)));  [CE]  ';'  expected  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    return(Math.abs(u)-  Math.abs(v)));  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    return(Math.abs(u)-  Math.abs(v)));		non-compiled	[CE]  ';'  expected	20	None	add
71	[BUG]  [BUGGY]    if(u  >  0  ||  v  <  0)  {  if(!Math.abs(u))  {  u  =  -u;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    if(u  >  0  ||  v  <  0)  {  if(!Math.abs(u))  {  u  =  -u;  }  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    if(u  >  0  ||  v  <  0)  {  if(!Math.abs(u))  {  u  =  -u;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
72	[BUG]  [BUGGY]    if(u  >  0  ||  v  <  0)  {  if(!MathUtils.isEmpty(u))  {  u  =  -u;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    if(u  >  0  ||  v  <  0)  {  if(!MathUtils.isEmpty(u))  {  u  =  -u;  }  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    if(u  >  0  ||  v  <  0)  {  if(!MathUtils.isEmpty(u))  {  u  =  -u;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
73	[BUG]  [BUGGY]    if(u  >  0  ||  v  <  0)  {  if(!Math.abs(u))  {  u  =  -u;  if(v  >  0)  {  u  =  -v;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    if(u  >  0  ||  v  <  0)  {  if(!Math.abs(u))  {  u  =  -u;  if(v  >  0)  {  u  =  -v;  }  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    if(u  >  0  ||  v  <  0)  {  if(!Math.abs(u))  {  u  =  -u;  if(v  >  0)  {  u  =  -v;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
74	[BUG]  [BUGGY]    if(u  >  0  ||  v  <  0)  {  if(!Math.abs(u))  {  u  =  Math.abs(v);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    if(u  >  0  ||  v  <  0)  {  if(!Math.abs(u))  {  u  =  Math.abs(v);  }  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    if(u  >  0  ||  v  <  0)  {  if(!Math.abs(u))  {  u  =  Math.abs(v);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
75	[BUG]  [BUGGY]    if(u  >  0  ||  v  <  0)  {  if(!math.abs(u))  {  u  =  -u;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    if(u  >  0  ||  v  <  0)  {  if(!math.abs(u))  {  u  =  -u;  }  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    if(u  >  0  ||  v  <  0)  {  if(!math.abs(u))  {  u  =  -u;  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]  if(a  ==  0  ||  b  <  0)  {  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	add	if(a  ==  0  ||  b  <  0)  {	if  (a==0  ||  b==0){  	compilable	  [FE]  AssertionFailedError  testGcd	3	2
83	[BUG]  [BUGGY]  if(a  ==  0  ||  b  <  0)  {  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]  if(a  ==  0  ||  b  <  0)  {  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	if(a  ==  0  ||  b  <  0)  {	if  (a==0  ||  b==0){  	compilable	  [FE]  AssertionFailedError  testGcd	3	2	replace
83	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]  if(a  <=  0  ||  b  ==  0)  {  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	add	if(a  <=  0  ||  b  ==  0)  {	if  (a==0  ||  b==0){  	compilable	  [FE]  AssertionFailedError  testGcd	3	2
84	[BUG]  [BUGGY]  if(a  <=  0  ||  b  ==  0)  {  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]  if(a  <=  0  ||  b  ==  0)  {  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	if(a  <=  0  ||  b  ==  0)  {	if  (a==0  ||  b==0){  	compilable	  [FE]  AssertionFailedError  testGcd	3	2	replace
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]  if(a  ==  0  ||  b  <=  0)  {  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	add	if(a  ==  0  ||  b  <=  0)  {	if  (a==0  ||  b==0){  	compilable	  [FE]  AssertionFailedError  testGcd	3	2
85	[BUG]  [BUGGY]  if(a  ==  0  ||  b  <=  0)  {  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]  if(a  ==  0  ||  b  <=  0)  {  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	if(a  ==  0  ||  b  <=  0)  {	if  (a==0  ||  b==0){  	compilable	  [FE]  AssertionFailedError  testGcd	3	2	replace
85	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	  	if  (a==0  ||  b==0){  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
91	[BUG]  [BUGGY]    if(q  <  0)  {  if(u  >  0  ||  u  >  0)  {  return(Math.abs(u)+  Math.abs(q));  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]    if(q  <  0)  {  if(u  >  0  ||  u  >  0)  {  return(Math.abs(u)+  Math.abs(q));  }  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	    if(q  <  0)  {  if(u  >  0  ||  u  >  0)  {  return(Math.abs(u)+  Math.abs(q));  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
92	[BUG]  [BUGGY]    if(q  <  0)  {  if(u  >  0  ||  v  <  0)  {  return(Math.abs(u)+  Math.abs(q));  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]    if(q  <  0)  {  if(u  >  0  ||  v  <  0)  {  return(Math.abs(u)+  Math.abs(q));  }  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	    if(q  <  0)  {  if(u  >  0  ||  v  <  0)  {  return(Math.abs(u)+  Math.abs(q));  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
93	[BUG]  [BUGGY]    if(q  <  0)  {  if(u  >  0)  {  return(Math.abs(u)+  Math.abs(q));  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]    if(q  <  0)  {  if(u  >  0)  {  return(Math.abs(u)+  Math.abs(q));  }  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	    if(q  <  0)  {  if(u  >  0)  {  return(Math.abs(u)+  Math.abs(q));  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
94	[BUG]  [BUGGY]    if(q  <  0)  {  if(u  >  0  ||  v  <  0)  {  return(Math.abs(u)-  Math.abs(q));  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]    if(q  <  0)  {  if(u  >  0  ||  v  <  0)  {  return(Math.abs(u)-  Math.abs(q));  }  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	    if(q  <  0)  {  if(u  >  0  ||  v  <  0)  {  return(Math.abs(u)-  Math.abs(q));  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
95	[BUG]  [BUGGY]    if(q  <  0)  {  if(u  >  0)  {  return(Math.abs(u)-  Math.abs(q));  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]    if(q  <  0)  {  if(u  >  0)  {  return(Math.abs(u)-  Math.abs(q));  }  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	    if(q  <  0)  {  if(u  >  0)  {  return(Math.abs(u)-  Math.abs(q));  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
102	[BUG]  [BUGGY]  timeout  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]  if(u  >  0  ||  v  >  0)  {  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	add	if(u  >  0  ||  v  >  0)  {	if  (u  >  0)  {  	compilable	timeout	17	1
103	[BUG]  [BUGGY]  if(u  >  0  ||  v  >  0)  {  timeout  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]  if(u  >  0  ||  v  >  0)  {  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  ||  v  >  0)  {	if  (u  >  0)  {  	compilable	timeout	17	1	replace
103	[BUG]  [BUGGY]  timeout  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]  if(u  >  0  ||  v  >  10)  {  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	add	if(u  >  0  ||  v  >  10)  {	if  (u  >  0)  {  	compilable	timeout	17	1
104	[BUG]  [BUGGY]  if(u  >  0  ||  v  >  10)  {  timeout  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]  if(u  >  0  ||  v  >  10)  {  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  ||  v  >  10)  {	if  (u  >  0)  {  	compilable	timeout	17	1	replace
104	[BUG]  [BUGGY]  timeout  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]  if(u  >  0  ||  v  >  8)  {  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	add	if(u  >  0  ||  v  >  8)  {	if  (u  >  0)  {  	compilable	timeout	17	1
105	[BUG]  [BUGGY]  if(u  >  0  ||  v  >  8)  {  timeout  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]  if(u  >  0  ||  v  >  8)  {  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  ||  v  >  8)  {	if  (u  >  0)  {  	compilable	timeout	17	1	replace
105	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	  	if  (u  >  0)  {  	non-compiled	[CE]  illegal  start  of  type	17	None	replace
111	[BUG]  [BUGGY]  [FE]  ArithmeticException  testGcd  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]  return(Math.abs(u)/  Math.abs(v));  [BUGGY]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	add	return(Math.abs(u)/  Math.abs(v));	return  (Math.abs(u)  +  Math.abs(v));  	compilable	  [FE]  ArithmeticException  testGcd	1	2
112	[BUG]  [BUGGY]  return(Math.abs(u)/  Math.abs(v));  [FE]  ArithmeticException  testGcd  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]  return(Math.abs(u)/  Math.abs(v));  [BUGGY]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return(Math.abs(u)/  Math.abs(v));	return  (Math.abs(u)  +  Math.abs(v));  	compilable	  [FE]  ArithmeticException  testGcd	1	2	replace
113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]  return(Math.abs(u)-  Math.abs(v));  [BUGGY]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	add	return(Math.abs(u)-  Math.abs(v));	return  (Math.abs(u)  +  Math.abs(v));  	compilable	  [FE]  AssertionFailedError  testGcd	1	2
114	[BUG]  [BUGGY]  return(Math.abs(u)-  Math.abs(v));  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]  return(Math.abs(u)-  Math.abs(v));  [BUGGY]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return(Math.abs(u)-  Math.abs(v));	return  (Math.abs(u)  +  Math.abs(v));  	compilable	  [FE]  AssertionFailedError  testGcd	1	2	replace
114	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]  return(Math.abs(u)*  Math.abs(v));  [BUGGY]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	add	return(Math.abs(u)*  Math.abs(v));	return  (Math.abs(u)  +  Math.abs(v));  	compilable	  [FE]  AssertionFailedError  testGcd	1	2
115	[BUG]  [BUGGY]  return(Math.abs(u)*  Math.abs(v));  [FE]  AssertionFailedError  testGcd  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]  return(Math.abs(u)*  Math.abs(v));  [BUGGY]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return(Math.abs(u)*  Math.abs(v));	return  (Math.abs(u)  +  Math.abs(v));  	compilable	  [FE]  AssertionFailedError  testGcd	1	2	replace
122	[BUG]  [BUGGY]  float  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [CE]  possible  loss  of  precision  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]  float  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	float  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
123	[BUG]  [BUGGY]  int  lcm  =  Math.min(mulAndCheck(a  /  gcd(a,  b),  b));  [CE]  illegal  start  of  type  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]  int  lcm  =  Math.min(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	int  lcm  =  Math.min(mulAndCheck(a  /  gcd(a,  b),  b));	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
124	[BUG]  [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [CE]  illegal  start  of  type  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
132	[BUG]  [BUGGY]  u  =  -u  +  1;  [CE]  illegal  start  of  type  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]  u  =  -u  +  1;  [BUGGY]  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -u  +  1;	u  =  -u;  	non-compiled	[CE]  illegal  start  of  type	19	None	replace
133	[BUG]  [BUGGY]  u  =  -u  *  Math.log(q);  [CE]  illegal  start  of  type  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]  u  =  -u  *  Math.log(q);  [BUGGY]  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -u  *  Math.log(q);	u  =  -u;  	non-compiled	[CE]  illegal  start  of  type	19	None	replace
134	[BUG]  [BUGGY]  u  =  -u  *(q  +  1);  [CE]  illegal  start  of  type  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]  u  =  -u  *(q  +  1);  [BUGGY]  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -u  *(q  +  1);	u  =  -u;  	non-compiled	[CE]  illegal  start  of  type	19	None	replace
141	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  type  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	throw  new  IllegalArgumentException( " ");	return  0;  	non-compiled	[CE]  illegal  start  of  type	5	None	replace
142	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  type  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	throw  new  IllegalStateException( " ");	return  0;  	non-compiled	[CE]  illegal  start  of  type	5	None	replace
143	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " ");  [CE]  illegal  start  of  type  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]  throw  new  UnsupportedOperationException( " ");  [BUGGY]  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	throw  new  UnsupportedOperationException( " ");	return  0;  	non-compiled	[CE]  illegal  start  of  type	5	None	replace
144	[BUG]  [BUGGY]  throw  new  IOException( " ");  [CE]  illegal  start  of  type  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]  throw  new  IOException( " ");  [BUGGY]  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	throw  new  IOException( " ");	return  0;  	non-compiled	[CE]  illegal  start  of  type	5	None	replace
152	[BUG]  [BUGGY]  int  v  =  p;  [CE]  illegal  start  of  type  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]  int  v  =  p;  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  p;	int  v  =  q;  	non-compiled	[CE]  illegal  start  of  type	13	None	replace
153	[BUG]  [BUGGY]  int  v  =  q  +  1;  [CE]  illegal  start  of  type  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]  int  v  =  q  +  1;  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  q  +  1;	int  v  =  q;  	non-compiled	[CE]  illegal  start  of  type	13	None	replace
154	[BUG]  [BUGGY]  int  v  =  q  *  p;  [CE]  illegal  start  of  type  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]  int  v  =  q  *  p;  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  q  *  p;	int  v  =  q;  	non-compiled	[CE]  illegal  start  of  type	13	None	replace
161	[BUG]  [BUGGY]    if(v  >  0)  {  if(u  >  0  &&  v  <=  0)  {  return(Math.abs(u)-  Math.abs(v));  }  [CE]  illegal  start  of  type  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(v  >  0)  {  if(u  >  0  &&  v  <=  0)  {  return(Math.abs(u)-  Math.abs(v));  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(v  >  0)  {  if(u  >  0  &&  v  <=  0)  {  return(Math.abs(u)-  Math.abs(v));  }		non-compiled	[CE]  illegal  start  of  type	18	None	add
162	[BUG]  [BUGGY]    if(u  >  0)  {  if(v  >  0)  {  return(Math.abs(v)+  Math.abs(q));  }  [CE]  illegal  start  of  type  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(u  >  0)  {  if(v  >  0)  {  return(Math.abs(v)+  Math.abs(q));  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(u  >  0)  {  if(v  >  0)  {  return(Math.abs(v)+  Math.abs(q));  }		non-compiled	[CE]  illegal  start  of  type	18	None	add
163	[BUG]  [BUGGY]    if(u  >  0)  {  if(v  >  0)  {  return(Math.abs(v)-  Math.abs(q));  }  [CE]  illegal  start  of  type  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(u  >  0)  {  if(v  >  0)  {  return(Math.abs(v)-  Math.abs(q));  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(u  >  0)  {  if(v  >  0)  {  return(Math.abs(v)-  Math.abs(q));  }		non-compiled	[CE]  illegal  start  of  type	18	None	add
165	[BUG]  [BUGGY]    if(u  >  0)  {  if(v  >  0)  {  return(Math.abs(v)-  u);  }  [CE]  illegal  start  of  type  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(u  >  0)  {  if(v  >  0)  {  return(Math.abs(v)-  u);  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(u  >  0)  {  if(v  >  0)  {  return(Math.abs(v)-  u);  }		non-compiled	[CE]  illegal  start  of  type	18	None	add
171	[BUG]  [BUGGY]    if(lcm!=  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  if(lcm  ==  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)  [CE]  illegal  start  of  type  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    if(lcm!=  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  if(lcm  ==  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    if(lcm!=  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  if(lcm  ==  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)		non-compiled	[CE]  illegal  start  of  type	10	None	add
172	[BUG]  [BUGGY]    if(lcm!=  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  if(lcm  ==  0)  {  lcm++;  }  [CE]  illegal  start  of  type  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    if(lcm!=  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  if(lcm  ==  0)  {  lcm++;  }  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    if(lcm!=  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  if(lcm  ==  0)  {  lcm++;  }		non-compiled	[CE]  illegal  start  of  type	10	None	add
173	[BUG]  [BUGGY]    if(lcm!=  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  if(lcm  ==  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b)  [CE]  illegal  start  of  type  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    if(lcm!=  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  if(lcm  ==  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b)  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    if(lcm!=  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  if(lcm  ==  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b)		non-compiled	[CE]  illegal  start  of  type	10	None	add
174	[BUG]  [BUGGY]    if(lcm!=  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  if(lcm  ==  0)  {  lcm--;  }  [CE]  illegal  start  of  type  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    if(lcm!=  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  if(lcm  ==  0)  {  lcm--;  }  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    if(lcm!=  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  if(lcm  ==  0)  {  lcm--;  }		non-compiled	[CE]  illegal  start  of  type	10	None	add
175	[BUG]  [BUGGY]    if(lcm!=  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  if(lcm  ==  0)  {  lcm  =  Math.abs(mulAndCheck(a  -  b),  b);  }  [CE]  illegal  start  of  type  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    if(lcm!=  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  if(lcm  ==  0)  {  lcm  =  Math.abs(mulAndCheck(a  -  b),  b);  }  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    if(lcm!=  0)  {  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  if(lcm  ==  0)  {  lcm  =  Math.abs(mulAndCheck(a  -  b),  b);  }		non-compiled	[CE]  illegal  start  of  type	10	None	add
181	[BUG]  [BUGGY]    int  a  =  Math.abs(mulAndCheck(a,  b),  a));  [CE]  illegal  start  of  type  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    int  a  =  Math.abs(mulAndCheck(a,  b),  a));  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    int  a  =  Math.abs(mulAndCheck(a,  b),  a));		non-compiled	[CE]  illegal  start  of  type	4	None	add
182	[BUG]  [BUGGY]    if(a!=  0)  {  if(b  ==  0)  {  return  0;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    if(a!=  0)  {  if(b  ==  0)  {  return  0;  }  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    if(a!=  0)  {  if(b  ==  0)  {  return  0;  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
183	[BUG]  [BUGGY]    if(a  <=  0)  {  if(b  ==  0)  {  return  0;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    if(a  <=  0)  {  if(b  ==  0)  {  return  0;  }  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    if(a  <=  0)  {  if(b  ==  0)  {  return  0;  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
184	[BUG]  [BUGGY]    if(a!=  0  ||  b  ==  0)  {  if(a  >  0  ||  b  <  0)  {  return  0;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    if(a!=  0  ||  b  ==  0)  {  if(a  >  0  ||  b  <  0)  {  return  0;  }  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    if(a!=  0  ||  b  ==  0)  {  if(a  >  0  ||  b  <  0)  {  return  0;  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
185	[BUG]  [BUGGY]    if(a  <=  0  ||  b  ==  0)  {  if(a  >  0  ||  b  <  0)  {  return  0;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    if(a  <=  0  ||  b  ==  0)  {  if(a  >  0  ||  b  <  0)  {  return  0;  }  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    if(a  <=  0  ||  b  ==  0)  {  if(a  >  0  ||  b  <  0)  {  return  0;  }		non-compiled	[CE]  illegal  start  of  expression	4	None	add
191	[BUG]  [BUGGY]  int  u  =  p  -  1;  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  [BUGGY]  int  u  =  p  -  1;  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	replace	int  u  =  p  -  1;	int  u  =  p;  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
192	[BUG]  [BUGGY]  int  u  =  p  +  1;  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  [BUGGY]  int  u  =  p  +  1;  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	replace	int  u  =  p  +  1;	int  u  =  p;  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
194	[BUG]  [BUGGY]  int  u  =  p  -  q;  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  [BUGGY]  int  u  =  p  -  q;  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	replace	int  u  =  p  -  q;	int  u  =  p;  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
1	[BUG]  [BUGGY]    System.arraycopy(x,  0,  lcm,  0,  lcm);  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    System.arraycopy(x,  0,  lcm,  0,  lcm);  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    System.arraycopy(x,  0,  lcm,  0,  lcm);		non-compiled	[CE]  illegal  start  of  expression	10	None	add
2	[BUG]  [BUGGY]    if(lcm!=  0)  {  if(lcm  ==  -1)  {  lcm  =  0;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    if(lcm!=  0)  {  if(lcm  ==  -1)  {  lcm  =  0;  }  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    if(lcm!=  0)  {  if(lcm  ==  -1)  {  lcm  =  0;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
3	[BUG]  [BUGGY]    if(lcm  ==  0)  {  if(lcm  ==  -1)  {  lcm  =  0;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    if(lcm  ==  0)  {  if(lcm  ==  -1)  {  lcm  =  0;  }  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    if(lcm  ==  0)  {  if(lcm  ==  -1)  {  lcm  =  0;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
4	[BUG]  [BUGGY]    if(lcm!=  0)  {  if(lcm  ==  a)  {  lcm  =  0;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    if(lcm!=  0)  {  if(lcm  ==  a)  {  lcm  =  0;  }  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    if(lcm!=  0)  {  if(lcm  ==  a)  {  lcm  =  0;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
5	[BUG]  [BUGGY]    if(lcm  ==  0)  {  if(lcm  ==  a)  {  lcm  =  0;  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    if(lcm  ==  0)  {  if(lcm  ==  a)  {  lcm  =  0;  }  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    if(lcm  ==  0)  {  if(lcm  ==  a)  {  lcm  =  0;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
22	[BUG]  [BUGGY]  int  v  =  q  -  1;  [CE]  illegal  start  of  expression  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]  int  v  =  q  -  1;  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  q  -  1;	int  v  =  q;  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
41	[BUG]  [BUGGY]    u  =(Math.abs(u)-  Math.abs(q));  [CE]  illegal  start  of  expression  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    u  =(Math.abs(u)-  Math.abs(q));  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    u  =(Math.abs(u)-  Math.abs(q));		non-compiled	[CE]  illegal  start  of  expression	20	None	add
42	[BUG]  [BUGGY]    u  =(Math.abs(u)+  Math.abs(q));  [CE]  illegal  start  of  expression  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    u  =(Math.abs(u)+  Math.abs(q));  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    u  =(Math.abs(u)+  Math.abs(q));		non-compiled	[CE]  illegal  start  of  expression	20	None	add
43	[BUG]  [BUGGY]    u  =  make  u  positive  if(u  >  0)  {  [CE]  ';'  expected  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    u  =  make  u  positive  if(u  >  0)  {  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    u  =  make  u  positive  if(u  >  0)  {		non-compiled	[CE]  ';'  expected	20	None	add
44	[BUG]  [BUGGY]    u  =(Math.abs(u)/  q);  [CE]  ';'  expected  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    u  =(Math.abs(u)/  q);  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    u  =(Math.abs(u)/  q);		non-compiled	[CE]  ';'  expected	20	None	add
45	[BUG]  [BUGGY]    u  =(Math.abs(u)-  Math.abs(v));  [CE]  ';'  expected  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    u  =(Math.abs(u)-  Math.abs(v));  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    u  =(Math.abs(u)-  Math.abs(v));		non-compiled	[CE]  ';'  expected	20	None	add
61	[BUG]  [BUGGY]  return(lcm  ==  0)?  0  :  lcm;  [CE]  ';'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return(lcm  ==  0)?  0  :  lcm;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return(lcm  ==  0)?  0  :  lcm;	return  lcm;  	non-compiled	[CE]  ';'  expected	9	None	replace
62	[BUG]  [BUGGY]  return  lcm  -  1;  [CE]  ';'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  lcm  -  1;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  -  1;	return  lcm;  	non-compiled	[CE]  ';'  expected	9	None	replace
63	[BUG]  [BUGGY]  return(lcm  ==  0)?  1  :  0;  [CE]  ';'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return(lcm  ==  0)?  1  :  0;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return(lcm  ==  0)?  1  :  0;	return  lcm;  	non-compiled	[CE]  ';'  expected	9	None	replace
64	[BUG]  [BUGGY]  return  lcm  -(Math.rint(a,  b),  eps));  [CE]  ';'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  lcm  -(Math.rint(a,  b),  eps));  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  -(Math.rint(a,  b),  eps));	return  lcm;  	non-compiled	[CE]  ';'  expected	9	None	replace
81	[BUG]  [BUGGY]    int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [CE]  ';'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]    int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	    int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));		non-compiled	[CE]  ';'  expected	6	None	add
82	[BUG]  [BUGGY]    int  lcm  =  Math.sqrt(Math.abs(a)/  gcd(a,  b),  b);  [CE]  ')'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]    int  lcm  =  Math.sqrt(Math.abs(a)/  gcd(a,  b),  b);  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	    int  lcm  =  Math.sqrt(Math.abs(a)/  gcd(a,  b),  b);		non-compiled	[CE]  ')'  expected	6	None	add
83	[BUG]  [BUGGY]    int  lcm  =  Math.sqrt(Math.abs(a  -  b));  [CE]  ')'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]    int  lcm  =  Math.sqrt(Math.abs(a  -  b));  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	    int  lcm  =  Math.sqrt(Math.abs(a  -  b));		non-compiled	[CE]  ')'  expected	6	None	add
84	[BUG]  [BUGGY]    int  lcm  =  Math.abs(mulAndCheck(a,  a),  b);  [CE]  ')'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]    int  lcm  =  Math.abs(mulAndCheck(a,  a),  b);  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	    int  lcm  =  Math.abs(mulAndCheck(a,  a),  b);		non-compiled	[CE]  ')'  expected	6	None	add
85	[BUG]  [BUGGY]    int  lcm  =  Math.sqrt(Math.abs(a  -  b),  b);  [CE]  ')'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]    int  lcm  =  Math.sqrt(Math.abs(a  -  b),  b);  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	    int  lcm  =  Math.sqrt(Math.abs(a  -  b),  b);		non-compiled	[CE]  ')'  expected	6	None	add
101	[BUG]  [BUGGY]    if(a  ==  0)  {  if(a  ==  0)  {  return  0;  }  [CE]  ')'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    if(a  ==  0)  {  if(a  ==  0)  {  return  0;  }  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    if(a  ==  0)  {  if(a  ==  0)  {  return  0;  }		non-compiled	[CE]  ')'  expected	4	None	add
102	[BUG]  [BUGGY]    if(Math.abs(a)  <  Math.abs(b))  {  if(a  ==  0)  {  return  0;  }  [CE]  ')'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    if(Math.abs(a)  <  Math.abs(b))  {  if(a  ==  0)  {  return  0;  }  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    if(Math.abs(a)  <  Math.abs(b))  {  if(a  ==  0)  {  return  0;  }		non-compiled	[CE]  ')'  expected	4	None	add
103	[BUG]  [BUGGY]    if(a!=  0)  {  if(a  ==  0)  {  return  0;  }  [CE]  ')'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    if(a!=  0)  {  if(a  ==  0)  {  return  0;  }  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    if(a!=  0)  {  if(a  ==  0)  {  return  0;  }		non-compiled	[CE]  ')'  expected	4	None	add
104	[BUG]  [BUGGY]    if(Math.abs(a)  <  Math.abs(b))  {  if(a  ==  0  ||  b  ==  0)  {  return  0;  }  [CE]  ')'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    if(Math.abs(a)  <  Math.abs(b))  {  if(a  ==  0  ||  b  ==  0)  {  return  0;  }  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    if(Math.abs(a)  <  Math.abs(b))  {  if(a  ==  0  ||  b  ==  0)  {  return  0;  }		non-compiled	[CE]  ')'  expected	4	None	add
105	[BUG]  [BUGGY]    if(Math.abs(a)  <  Math.abs(b))  {  if(a  ==  0  &&  b  <=  0)  {  return  0;  }  [CE]  ')'  expected  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    if(Math.abs(a)  <  Math.abs(b))  {  if(a  ==  0  &&  b  <=  0)  {  return  0;  }  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    if(Math.abs(a)  <  Math.abs(b))  {  if(a  ==  0  &&  b  <=  0)  {  return  0;  }		non-compiled	[CE]  ')'  expected	4	None	add
121	[BUG]  [BUGGY]    final  int  u  =  Math.min(u,  q);  [CE]  ')'  expected  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]    final  int  u  =  Math.min(u,  q);  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	    final  int  u  =  Math.min(u,  q);		non-compiled	[CE]  ')'  expected	16	None	add
122	[BUG]  [BUGGY]    final  int  u  =(int)Math.min(u,  q);  [CE]  ')'  expected  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]    final  int  u  =(int)Math.min(u,  q);  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	    final  int  u  =(int)Math.min(u,  q);		non-compiled	[CE]  ')'  expected	16	None	add
123	[BUG]  [BUGGY]    final  int  u  =(int)Math.log(q)/  LOG_INFINITY;  [CE]  ')'  expected  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]    final  int  u  =(int)Math.log(q)/  LOG_INFINITY;  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	    final  int  u  =(int)Math.log(q)/  LOG_INFINITY;		non-compiled	[CE]  ')'  expected	16	None	add
124	[BUG]  [BUGGY]    if(u  <  0)  {  if(u  ==  0)  {  return  Math.min(u,  v);  }  [CE]  ')'  expected  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]    if(u  <  0)  {  if(u  ==  0)  {  return  Math.min(u,  v);  }  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	    if(u  <  0)  {  if(u  ==  0)  {  return  Math.min(u,  v);  }		non-compiled	[CE]  ')'  expected	16	None	add
125	[BUG]  [BUGGY]    final  int  u  =(int)Math.log(q);  [CE]  ')'  expected  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]    final  int  u  =(int)Math.log(q);  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	    final  int  u  =(int)Math.log(q);		non-compiled	[CE]  ')'  expected	16	None	add
144	[BUG]  [BUGGY]  return(Math.abs(u)+  Math.abs(v)-  1);  [CE]  ')'  expected  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]  return(Math.abs(u)+  Math.abs(v)-  1);  [BUGGY]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return(Math.abs(u)+  Math.abs(v)-  1);	return  (Math.abs(u)  +  Math.abs(v));  	non-compiled	[CE]  ')'  expected	1	None	replace
163	[BUG]  [BUGGY]  u  =  -u.negatives();  [CE]  array  dimension  missing  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]  u  =  -u.negatives();  [BUGGY]  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -u.negatives();	u  =  -u;  	non-compiled	[CE]  array  dimension  missing	19	None	replace
164	[BUG]  [BUGGY]  u  =  -u.negate();  [CE]  array  dimension  missing  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]  u  =  -u.negate();  [BUGGY]  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -u.negate();	u  =  -u;  	non-compiled	[CE]  array  dimension  missing	19	None	replace
181	[BUG]  [BUGGY]  if(u  *  v  ==  0)  {  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]  if(u  *  v  ==  0)  {  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	if(u  *  v  ==  0)  {	if  ((u  ==  0)  ||  (v  ==  0))  {  	non-compiled	[CE]  array  dimension  missing	15	None	replace
182	[BUG]  [BUGGY]  if(u  ==  p  ||  v  ==  0)  {  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]  if(u  ==  p  ||  v  ==  0)  {  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	if(u  ==  p  ||  v  ==  0)  {	if  ((u  ==  0)  ||  (v  ==  0))  {  	non-compiled	[CE]  array  dimension  missing	15	None	replace
183	[BUG]  [BUGGY]  if(u  >=  p  ||  v  ==  0)  {  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]  if(u  >=  p  ||  v  ==  0)  {  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	if(u  >=  p  ||  v  ==  0)  {	if  ((u  ==  0)  ||  (v  ==  0))  {  	non-compiled	[CE]  array  dimension  missing	15	None	replace
184	[BUG]  [BUGGY]  if(u  *  v  ==  p)  {  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]  if(u  *  v  ==  p)  {  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	if(u  *  v  ==  p)  {	if  ((u  ==  0)  ||  (v  ==  0))  {  	non-compiled	[CE]  array  dimension  missing	15	None	replace
202	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Function  values  at  endpoints  do  not  have  different  signs. ");  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]  throw  new  IllegalArgumentException( "Function  values  at  endpoints  do  not  have  different  signs. ");  [BUGGY]  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	throw  new  IllegalArgumentException( "Function  values  at  endpoints  do  not  have  different  signs. ");	return  0;  	non-compiled	[CE]  array  dimension  missing	5	None	replace
203	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Function  values  at  endpoints  do  not  have  different  signs. "  + "  Endpoints:  [ "  +  a  + ", "  +  b  + "] ");  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]  throw  new  IllegalArgumentException( "Function  values  at  endpoints  do  not  have  different  signs. "  + "  Endpoints:  [ "  +  a  + ", "  +  b  + "] ");  [BUGGY]  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	throw  new  IllegalArgumentException( "Function  values  at  endpoints  do  not  have  different  signs. "  + "  Endpoints:  [ "  +  a  + ", "  +  b  + "] ");	return  0;  	non-compiled	[CE]  array  dimension  missing	5	None	replace
204	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Function  tests  at  endpoints  do  not  have  different  signs. ");  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]  throw  new  IllegalArgumentException( "Function  tests  at  endpoints  do  not  have  different  signs. ");  [BUGGY]  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	throw  new  IllegalArgumentException( "Function  tests  at  endpoints  do  not  have  different  signs. ");	return  0;  	non-compiled	[CE]  array  dimension  missing	5	None	replace
221	[BUG]  [BUGGY]    final  int  u  =  Math.min(u,  q);  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    final  int  u  =  Math.min(u,  q);  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    final  int  u  =  Math.min(u,  q);		non-compiled	[CE]  array  dimension  missing	2	None	add
222	[BUG]  [BUGGY]    if(u  >  0)  {  if(Math.abs(u)  <  Math.abs(q))  {  u  =  p;  if(v  <  0)  {  u  =  -u;  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    if(u  >  0)  {  if(Math.abs(u)  <  Math.abs(q))  {  u  =  p;  if(v  <  0)  {  u  =  -u;  }  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    if(u  >  0)  {  if(Math.abs(u)  <  Math.abs(q))  {  u  =  p;  if(v  <  0)  {  u  =  -u;  }		non-compiled	[CE]  array  dimension  missing	2	None	add
223	[BUG]  [BUGGY]    if(u  >  0)  {  if(Math.abs(u)  <  Math.abs(q))  {  u  =  -u;  if(v  <  0)  {  u  =  -u;  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    if(u  >  0)  {  if(Math.abs(u)  <  Math.abs(q))  {  u  =  -u;  if(v  <  0)  {  u  =  -u;  }  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    if(u  >  0)  {  if(Math.abs(u)  <  Math.abs(q))  {  u  =  -u;  if(v  <  0)  {  u  =  -u;  }		non-compiled	[CE]  array  dimension  missing	2	None	add
224	[BUG]  [BUGGY]    if(u  >  0)  {  if(Math.abs(u)  <  Math.abs(v))  {  u  =  -u;  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    if(u  >  0)  {  if(Math.abs(u)  <  Math.abs(v))  {  u  =  -u;  }  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    if(u  >  0)  {  if(Math.abs(u)  <  Math.abs(v))  {  u  =  -u;  }		non-compiled	[CE]  array  dimension  missing	2	None	add
225	[BUG]  [BUGGY]    if(u  >  0)  {  if(Math.abs(u)  <  Math.abs(v))  {  u  =  p;  if(u  <  0)  {  u  =  -u;  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    if(u  >  0)  {  if(Math.abs(u)  <  Math.abs(v))  {  u  =  p;  if(u  <  0)  {  u  =  -u;  }  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    if(u  >  0)  {  if(Math.abs(u)  <  Math.abs(v))  {  u  =  p;  if(u  <  0)  {  u  =  -u;  }		non-compiled	[CE]  array  dimension  missing	2	None	add
241	[BUG]  [BUGGY]    if(a!=  b)  {  if(Math.abs(mulAndCheck(a  /  gcd(a,  b),  b))  {  return  0;  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]    if(a!=  b)  {  if(Math.abs(mulAndCheck(a  /  gcd(a,  b),  b))  {  return  0;  }  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	    if(a!=  b)  {  if(Math.abs(mulAndCheck(a  /  gcd(a,  b),  b))  {  return  0;  }		non-compiled	[CE]  array  dimension  missing	8	None	add
242	[BUG]  [BUGGY]    if(a!=  b)  {  if(Math.abs(mulAndCheck(a,  b),  b))  {  return  0;  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]    if(a!=  b)  {  if(Math.abs(mulAndCheck(a,  b),  b))  {  return  0;  }  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	    if(a!=  b)  {  if(Math.abs(mulAndCheck(a,  b),  b))  {  return  0;  }		non-compiled	[CE]  array  dimension  missing	8	None	add
243	[BUG]  [BUGGY]    if(a!=  b)  {  if(Math.abs(mulAndCheck(a  -  gcd(a,  b),  b))  {  return  0;  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]    if(a!=  b)  {  if(Math.abs(mulAndCheck(a  -  gcd(a,  b),  b))  {  return  0;  }  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	    if(a!=  b)  {  if(Math.abs(mulAndCheck(a  -  gcd(a,  b),  b))  {  return  0;  }		non-compiled	[CE]  array  dimension  missing	8	None	add
244	[BUG]  [BUGGY]    if(a!=  b)  {  if(Math.abs(mulAndCheck(a,  b),  b))  {  return  Integer.MIN_VALUE;  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]    if(a!=  b)  {  if(Math.abs(mulAndCheck(a,  b),  b))  {  return  Integer.MIN_VALUE;  }  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	    if(a!=  b)  {  if(Math.abs(mulAndCheck(a,  b),  b))  {  return  Integer.MIN_VALUE;  }		non-compiled	[CE]  array  dimension  missing	8	None	add
245	[BUG]  [BUGGY]    if(a!=  b)  {  if(Math.abs(mulAndCheck(a,  b),  b))  {  return  1;  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]    if(a!=  b)  {  if(Math.abs(mulAndCheck(a,  b),  b))  {  return  1;  }  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	    if(a!=  b)  {  if(Math.abs(mulAndCheck(a,  b),  b))  {  return  1;  }		non-compiled	[CE]  array  dimension  missing	8	None	add
261	[BUG]  [BUGGY]    if(u  >  0)  {  if(u  >  0)  {  u  =  -u;  }  [CE]  array  dimension  missing  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(u  >  0)  {  if(u  >  0)  {  u  =  -u;  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(u  >  0)  {  if(u  >  0)  {  u  =  -u;  }		non-compiled	[CE]  array  dimension  missing	18	None	add
262	[BUG]  [BUGGY]    if(u  >  0)  {  int  u  =  p;  if(u  >  0)  {  u  =  -u;  }  [CE]  array  dimension  missing  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(u  >  0)  {  int  u  =  p;  if(u  >  0)  {  u  =  -u;  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(u  >  0)  {  int  u  =  p;  if(u  >  0)  {  u  =  -u;  }		non-compiled	[CE]  array  dimension  missing	18	None	add
263	[BUG]  [BUGGY]    if(u  >  0)  {  if(u  >  0)  {  u  =  -u;  if(v  >  0)  {  u  =  -u;  }  [CE]  array  dimension  missing  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(u  >  0)  {  if(u  >  0)  {  u  =  -u;  if(v  >  0)  {  u  =  -u;  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(u  >  0)  {  if(u  >  0)  {  u  =  -u;  if(v  >  0)  {  u  =  -u;  }		non-compiled	[CE]  array  dimension  missing	18	None	add
264	[BUG]  [BUGGY]    if(u  >  0)  {  if(u  >  0)  {  u  =  -u;  if(u  >  0)  {  u  =  -u;  }  [CE]  array  dimension  missing  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(u  >  0)  {  if(u  >  0)  {  u  =  -u;  if(u  >  0)  {  u  =  -u;  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(u  >  0)  {  if(u  >  0)  {  u  =  -u;  if(u  >  0)  {  u  =  -u;  }		non-compiled	[CE]  array  dimension  missing	18	None	add
265	[BUG]  [BUGGY]    if(u  >  0)  {  int  u  =  p;  if(u  ==  0)  {  u  =  -u;  }  [CE]  array  dimension  missing  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(u  >  0)  {  int  u  =  p;  if(u  ==  0)  {  u  =  -u;  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(u  >  0)  {  int  u  =  p;  if(u  ==  0)  {  u  =  -u;  }		non-compiled	[CE]  array  dimension  missing	18	None	add
281	[BUG]  [BUGGY]    final  int  k  =  Math.log(p)/  q;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  [BUGGY]    final  int  k  =  Math.log(p)/  q;  [BUGGY]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	replace	    final  int  k  =  Math.log(p)/  q;		non-compiled	[CE]  array  dimension  missing	12	None	add
284	[BUG]  [BUGGY]    final  gcd(p,  q);  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  [BUGGY]    final  gcd(p,  q);  [BUGGY]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	replace	    final  gcd(p,  q);		non-compiled	[CE]  array  dimension  missing	12	None	add
304	[BUG]  [BUGGY]  int  u  >  0)  {  [CE]  array  dimension  missing  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]  int  u  >  0)  {  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	int  u  >  0)  {	if  (u  >  0)  {  	non-compiled	[CE]  array  dimension  missing	17	None	replace
323	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  false));  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  false));  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  false));	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  	non-compiled	[CE]  array  dimension  missing	7	None	replace
324	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b)+  1);  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b)+  1);  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b)+  1);	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  	non-compiled	[CE]  array  dimension  missing	7	None	replace
342	[BUG]  [BUGGY]  if(a  ==  b  ||  a  ==  0)  {  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]  if(a  ==  b  ||  a  ==  0)  {  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	if(a  ==  b  ||  a  ==  0)  {	if  (a==0  ||  b==0){  	non-compiled	[CE]  array  dimension  missing	3	None	replace
343	[BUG]  [BUGGY]  if(a  ==  lcm  ||  b  ==  0)  {  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]  if(a  ==  lcm  ||  b  ==  0)  {  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	if(a  ==  lcm  ||  b  ==  0)  {	if  (a==0  ||  b==0){  	non-compiled	[CE]  array  dimension  missing	3	None	replace
344	[BUG]  [BUGGY]  if(a  ==  0.0  ||  b  ==  0)  {  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]  if(a  ==  0.0  ||  b  ==  0)  {  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	if(a  ==  0.0  ||  b  ==  0)  {	if  (a==0  ||  b==0){  	non-compiled	[CE]  array  dimension  missing	3	None	replace
363	[BUG]  [BUGGY]  int  u  =  p  *  q;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  [BUGGY]  int  u  =  p  *  q;  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	replace	int  u  =  p  *  q;	int  u  =  p;  	non-compiled	[CE]  array  dimension  missing	11	None	replace
381	[BUG]  [BUGGY]    int  k  =  p  +  1;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]    int  k  =  p  +  1;  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	    int  k  =  p  +  1;		non-compiled	[CE]  array  dimension  missing	14	None	add
382	[BUG]  [BUGGY]    int  k  =  p;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]    int  k  =  p;  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	    int  k  =  p;		non-compiled	[CE]  array  dimension  missing	14	None	add
383	[BUG]  [BUGGY]    int  u  =  p;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]    int  u  =  p;  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	    int  u  =  p;		non-compiled	[CE]  array  dimension  missing	14	None	add
384	[BUG]  [BUGGY]    int  u  =  p  *  Math.log(q);  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]    int  u  =  p  *  Math.log(q);  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	    int  u  =  p  *  Math.log(q);		non-compiled	[CE]  array  dimension  missing	14	None	add
385	[BUG]  [BUGGY]    final  int  k  =  p  +  1;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]    final  int  k  =  p  +  1;  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	    final  int  k  =  p  +  1;		non-compiled	[CE]  array  dimension  missing	14	None	add
1	[BUG]  [BUGGY]    u  =  make  u  negative  if(u  >  0)  {  [CE]  array  dimension  missing  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    u  =  make  u  negative  if(u  >  0)  {  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    u  =  make  u  negative  if(u  >  0)  {		non-compiled	[CE]  array  dimension  missing	18	None	add
2	[BUG]  [BUGGY]    u  =(Math.abs(u)+  Math.abs(v))?  1  :  0;  [CE]  array  dimension  missing  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    u  =(Math.abs(u)+  Math.abs(v))?  1  :  0;  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    u  =(Math.abs(u)+  Math.abs(v))?  1  :  0;		non-compiled	[CE]  array  dimension  missing	18	None	add
3	[BUG]  [BUGGY]    u  =(Math.abs(u)+  Math.abs(v))?  0  :  u;  [CE]  array  dimension  missing  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    u  =(Math.abs(u)+  Math.abs(v))?  0  :  u;  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    u  =(Math.abs(u)+  Math.abs(v))?  0  :  u;		non-compiled	[CE]  array  dimension  missing	18	None	add
4	[BUG]  [BUGGY]    u  =  make  u  negative?  -u  :  -Math.abs(v)-  1;  [CE]  array  dimension  missing  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    u  =  make  u  negative?  -u  :  -Math.abs(v)-  1;  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    u  =  make  u  negative?  -u  :  -Math.abs(v)-  1;		non-compiled	[CE]  array  dimension  missing	18	None	add
5	[BUG]  [BUGGY]    u  =(Math.abs(u)+  Math.abs(v))  ;  [CE]  array  dimension  missing  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    u  =(Math.abs(u)+  Math.abs(v))  ;  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    u  =(Math.abs(u)+  Math.abs(v))  ;		non-compiled	[CE]  array  dimension  missing	18	None	add
34	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Math.abs(a  /  gcd(a,  b),  b)  <  0);  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]  throw  new  IllegalArgumentException( "Math.abs(a  /  gcd(a,  b),  b)  <  0);  [BUGGY]  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	throw  new  IllegalArgumentException( "Math.abs(a  /  gcd(a,  b),  b)  <  0);	return  0;  	non-compiled	[CE]  array  dimension  missing	5	None	replace
61	[BUG]  [BUGGY]  return(lcm  ==  0)?  a  :  lcm;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return(lcm  ==  0)?  a  :  lcm;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return(lcm  ==  0)?  a  :  lcm;	return  lcm;  	non-compiled	[CE]  array  dimension  missing	9	None	replace
62	[BUG]  [BUGGY]  return(lcm  ==  1)?  0  :  lcm;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return(lcm  ==  1)?  0  :  lcm;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return(lcm  ==  1)?  0  :  lcm;	return  lcm;  	non-compiled	[CE]  array  dimension  missing	9	None	replace
63	[BUG]  [BUGGY]  return  lcm  ==  0?  a  :  lcm;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  lcm  ==  0?  a  :  lcm;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  ==  0?  a  :  lcm;	return  lcm;  	non-compiled	[CE]  array  dimension  missing	9	None	replace
64	[BUG]  [BUGGY]  return  lcm  ==  0?  -1  :  lcm;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  return  lcm  ==  0?  -1  :  lcm;  [BUGGY]  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	return  lcm  ==  0?  -1  :  lcm;	return  lcm;  	non-compiled	[CE]  array  dimension  missing	9	None	replace
92	[BUG]  [BUGGY]  if(a  >=  0  ||  b  ==  0)  {  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]  if(a  >=  0  ||  b  ==  0)  {  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	if(a  >=  0  ||  b  ==  0)  {	if  (a==0  ||  b==0){  	non-compiled	[CE]  array  dimension  missing	3	None	replace
93	[BUG]  [BUGGY]  if(a  <  0  ||  b  ==  0)  {  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]  if(a  <  0  ||  b  ==  0)  {  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	if(a  <  0  ||  b  ==  0)  {	if  (a==0  ||  b==0){  	non-compiled	[CE]  array  dimension  missing	3	None	replace
123	[BUG]  [BUGGY]  u  =  -u,  q;  [CE]  array  dimension  missing  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]  u  =  -u,  q;  [BUGGY]  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -u,  q;	u  =  -u;  	non-compiled	[CE]  array  dimension  missing	19	None	replace
124	[BUG]  [BUGGY]  u  =  -u.long;  [CE]  array  dimension  missing  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]  u  =  -u.long;  [BUGGY]  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -u.long;	u  =  -u;  	non-compiled	[CE]  array  dimension  missing	19	None	replace
151	[BUG]  [BUGGY]    if(u  >  0)  {  if(v  <  0)  {  return  Math.sqrt(-u);  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]    if(u  >  0)  {  if(v  <  0)  {  return  Math.sqrt(-u);  }  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	    if(u  >  0)  {  if(v  <  0)  {  return  Math.sqrt(-u);  }		non-compiled	[CE]  array  dimension  missing	16	None	add
152	[BUG]  [BUGGY]    if(u  >  0)  {  if(v  <  0)  {  return  Math.sqrt(Math.abs(u)-  Math.abs(v));  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]    if(u  >  0)  {  if(v  <  0)  {  return  Math.sqrt(Math.abs(u)-  Math.abs(v));  }  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	    if(u  >  0)  {  if(v  <  0)  {  return  Math.sqrt(Math.abs(u)-  Math.abs(v));  }		non-compiled	[CE]  array  dimension  missing	16	None	add
153	[BUG]  [BUGGY]    if(u  >  0)  {  if(v  <  0)  {  return  Math.sqrt(Math.abs(u)+  gcd(v));  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]    if(u  >  0)  {  if(v  <  0)  {  return  Math.sqrt(Math.abs(u)+  gcd(v));  }  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	    if(u  >  0)  {  if(v  <  0)  {  return  Math.sqrt(Math.abs(u)+  gcd(v));  }		non-compiled	[CE]  array  dimension  missing	16	None	add
154	[BUG]  [BUGGY]    if(u  >  0)  {  if(v  >=  0)  {  return  Math.sqrt(-u);  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]    if(u  >  0)  {  if(v  >=  0)  {  return  Math.sqrt(-u);  }  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	    if(u  >  0)  {  if(v  >=  0)  {  return  Math.sqrt(-u);  }		non-compiled	[CE]  array  dimension  missing	16	None	add
155	[BUG]  [BUGGY]    if(u  >  0)  {  if(v  ==  0)  {  return  Math.sqrt(-u);  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]    if(u  >  0)  {  if(v  ==  0)  {  return  Math.sqrt(-u);  }  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	    if(u  >  0)  {  if(v  ==  0)  {  return  Math.sqrt(-u);  }		non-compiled	[CE]  array  dimension  missing	16	None	add
181	[BUG]  [BUGGY]    if(Math.abs(a)  <  Math.abs(b))  {  a  =  0;  b  =  0;  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]    if(Math.abs(a)  <  Math.abs(b))  {  a  =  0;  b  =  0;  }  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	    if(Math.abs(a)  <  Math.abs(b))  {  a  =  0;  b  =  0;  }		non-compiled	[CE]  array  dimension  missing	6	None	add
182	[BUG]  [BUGGY]    a  =  Math.sqrt(Math.abs(a),  b));  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]    a  =  Math.sqrt(Math.abs(a),  b));  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	    a  =  Math.sqrt(Math.abs(a),  b));		non-compiled	[CE]  array  dimension  missing	6	None	add
183	[BUG]  [BUGGY]    a  =  Math.sqrt(Math.abs(a)+  Math.abs(b));  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]    a  =  Math.sqrt(Math.abs(a)+  Math.abs(b));  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	    a  =  Math.sqrt(Math.abs(a)+  Math.abs(b));		non-compiled	[CE]  array  dimension  missing	6	None	add
184	[BUG]  [BUGGY]    a  =  Math.sqrt(Math.abs(a)*  Math.log(b))  -  1;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]    a  =  Math.sqrt(Math.abs(a)*  Math.log(b))  -  1;  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	    a  =  Math.sqrt(Math.abs(a)*  Math.log(b))  -  1;		non-compiled	[CE]  array  dimension  missing	6	None	add
185	[BUG]  [BUGGY]    a  =  Math.sqrt(Math.abs(a)+  Math.log(b));  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  [BUGGY]    a  =  Math.sqrt(Math.abs(a)+  Math.log(b));  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	711	711	2	replace	    a  =  Math.sqrt(Math.abs(a)+  Math.log(b));		non-compiled	[CE]  array  dimension  missing	6	None	add
213	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b)>  0);  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b)>  0);  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b)>  0);	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  	non-compiled	[CE]  array  dimension  missing	7	None	replace
214	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b)*  lcm);  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b)*  lcm);  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b)*  lcm);	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  	non-compiled	[CE]  array  dimension  missing	7	None	replace
241	[BUG]  [BUGGY]    int  k  =  q;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]    int  k  =  q;  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	    int  k  =  q;		non-compiled	[CE]  array  dimension  missing	14	None	add
242	[BUG]  [BUGGY]    int  k  =  k;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]    int  k  =  k;  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	    int  k  =  k;		non-compiled	[CE]  array  dimension  missing	14	None	add
243	[BUG]  [BUGGY]    int  k  =  k  +  1;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]    int  k  =  k  +  1;  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	    int  k  =  k  +  1;		non-compiled	[CE]  array  dimension  missing	14	None	add
244	[BUG]  [BUGGY]    int  k  =  k  +(Math.abs(p)+  gcd(q));  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]    int  k  =  k  +(Math.abs(p)+  gcd(q));  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	    int  k  =  k  +(Math.abs(p)+  gcd(q));		non-compiled	[CE]  array  dimension  missing	14	None	add
245	[BUG]  [BUGGY]    int  k  =  k  +(Math.abs(p)  <  Math.abs(q));  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]    int  k  =  k  +(Math.abs(p)  <  Math.abs(q));  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	    int  k  =  k  +(Math.abs(p)  <  Math.abs(q));		non-compiled	[CE]  array  dimension  missing	14	None	add
274	[BUG]  [BUGGY]    if(Math.abs(a)  <  Math.abs(b))  {  if(a  ==  0  ||  b  >  0)  {  return  0;  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    if(Math.abs(a)  <  Math.abs(b))  {  if(a  ==  0  ||  b  >  0)  {  return  0;  }  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    if(Math.abs(a)  <  Math.abs(b))  {  if(a  ==  0  ||  b  >  0)  {  return  0;  }		non-compiled	[CE]  array  dimension  missing	4	None	add
275	[BUG]  [BUGGY]    a  =  Math.sqrt(Math.abs(a),  b);  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    a  =  Math.sqrt(Math.abs(a),  b);  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    a  =  Math.sqrt(Math.abs(a),  b);		non-compiled	[CE]  array  dimension  missing	4	None	add
301	[BUG]  [BUGGY]    u  =(Math.abs(u)+  Math.abs(v))?  -1  :  +1;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    u  =(Math.abs(u)+  Math.abs(v))?  -1  :  +1;  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    u  =(Math.abs(u)+  Math.abs(v))?  -1  :  +1;		non-compiled	[CE]  array  dimension  missing	2	None	add
302	[BUG]  [BUGGY]    u  =(Math.abs(u)+  Math.abs(v))?  -1  :  -1;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    u  =(Math.abs(u)+  Math.abs(v))?  -1  :  -1;  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    u  =(Math.abs(u)+  Math.abs(v))?  -1  :  -1;		non-compiled	[CE]  array  dimension  missing	2	None	add
303	[BUG]  [BUGGY]    u  =(Math.abs(u)+  Math.abs(v))?  0  :  u;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    u  =(Math.abs(u)+  Math.abs(v))?  0  :  u;  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    u  =(Math.abs(u)+  Math.abs(v))?  0  :  u;		non-compiled	[CE]  array  dimension  missing	2	None	add
304	[BUG]  [BUGGY]    u  =(Math.abs(u)+  1)*  q);  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    u  =(Math.abs(u)+  1)*  q);  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    u  =(Math.abs(u)+  1)*  q);		non-compiled	[CE]  array  dimension  missing	2	None	add
305	[BUG]  [BUGGY]    u  =(Math.abs(u)+  Math.abs(v))?  1  :  0;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]    u  =(Math.abs(u)+  Math.abs(v))?  1  :  0;  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	    u  =(Math.abs(u)+  Math.abs(v))?  1  :  0;		non-compiled	[CE]  array  dimension  missing	2	None	add
332	[BUG]  [BUGGY]    final  int  k  =(int)Math.log(p)/  q);  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  [BUGGY]    final  int  k  =(int)Math.log(p)/  q);  [BUGGY]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	replace	    final  int  k  =(int)Math.log(p)/  q);		non-compiled	[CE]  array  dimension  missing	12	None	add
333	[BUG]  [BUGGY]    final  int  k  =  Math.min(k,  p);  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  [BUGGY]    final  int  k  =  Math.min(k,  p);  [BUGGY]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	replace	    final  int  k  =  Math.min(k,  p);		non-compiled	[CE]  array  dimension  missing	12	None	add
334	[BUG]  [BUGGY]    final  int  k  =(int)Math.floor(p);  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  [BUGGY]    final  int  k  =(int)Math.floor(p);  [BUGGY]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	replace	    final  int  k  =(int)Math.floor(p);		non-compiled	[CE]  array  dimension  missing	12	None	add
363	[BUG]  [BUGGY]  return(Math.abs(u)+  Math.log(v));  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]  return(Math.abs(u)+  Math.log(v));  [BUGGY]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return(Math.abs(u)+  Math.log(v));	return  (Math.abs(u)  +  Math.abs(v));  	non-compiled	[CE]  array  dimension  missing	1	None	replace
364	[BUG]  [BUGGY]  return(Math.abs(u)*  Math.log(v));  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  [BUGGY]  return(Math.abs(u)*  Math.log(v));  [BUGGY]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	543	543	2	replace	return(Math.abs(u)*  Math.log(v));	return  (Math.abs(u)  +  Math.abs(v));  	non-compiled	[CE]  array  dimension  missing	1	None	replace
391	[BUG]  [BUGGY]    int  gcd  =  Math.abs(mulAndCheck(a,  b),  b);  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]    int  gcd  =  Math.abs(mulAndCheck(a,  b),  b);  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	    int  gcd  =  Math.abs(mulAndCheck(a,  b),  b);		non-compiled	[CE]  array  dimension  missing	8	None	add
392	[BUG]  [BUGGY]    int  gcd  =  Math.sqrt(Math.abs(a),  b));  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]    int  gcd  =  Math.sqrt(Math.abs(a),  b));  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	    int  gcd  =  Math.sqrt(Math.abs(a),  b));		non-compiled	[CE]  array  dimension  missing	8	None	add
393	[BUG]  [BUGGY]    int  gcd  =  Math.sqrt(Math.abs(a),  b);  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]    int  gcd  =  Math.sqrt(Math.abs(a),  b);  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	    int  gcd  =  Math.sqrt(Math.abs(a),  b);		non-compiled	[CE]  array  dimension  missing	8	None	add
394	[BUG]  [BUGGY]    a  =  Math.sqrt(Math.abs(a),  b);  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]    a  =  Math.sqrt(Math.abs(a),  b);  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	    a  =  Math.sqrt(Math.abs(a),  b);		non-compiled	[CE]  array  dimension  missing	8	None	add
395	[BUG]  [BUGGY]    a  =  Math.sqrt(Math.abs(a),  b));  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  [BUGGY]    a  =  Math.sqrt(Math.abs(a),  b));  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	713	713	2	replace	    a  =  Math.sqrt(Math.abs(a),  b));		non-compiled	[CE]  array  dimension  missing	8	None	add
423	[BUG]  [BUGGY]  int  v  =  q.length;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]  int  v  =  q.length;  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  q.length;	int  v  =  q;  	non-compiled	[CE]  array  dimension  missing	13	None	replace
424	[BUG]  [BUGGY]  int  v  =  q,  p;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  [BUGGY]  int  v  =  q,  p;  [BUGGY]  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  q,  p;	int  v  =  q;  	non-compiled	[CE]  array  dimension  missing	13	None	replace
454	[BUG]  [BUGGY]  int  u  =  p  +  2;  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  [BUGGY]  int  u  =  p  +  2;  [BUGGY]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	540	540	2	replace	int  u  =  p  +  2;	int  u  =  p;  	non-compiled	[CE]  array  dimension  missing	11	None	replace
481	[BUG]  [BUGGY]    if(lcm  ==  0)  {  lcm  =  Math.sqrt(Math.abs(lcm)/  GSRS(a,  b));  if(lcm  ==  0)  {  lcm  =  gcd(a,  b);  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    if(lcm  ==  0)  {  lcm  =  Math.sqrt(Math.abs(lcm)/  GSRS(a,  b));  if(lcm  ==  0)  {  lcm  =  gcd(a,  b);  }  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    if(lcm  ==  0)  {  lcm  =  Math.sqrt(Math.abs(lcm)/  GSRS(a,  b));  if(lcm  ==  0)  {  lcm  =  gcd(a,  b);  }		non-compiled	[CE]  array  dimension  missing	10	None	add
482	[BUG]  [BUGGY]    if(lcm  ==  0)  {  if(Math.abs(lcm  -  1)  ==  Math.abs(lcm  -  1))  {  lcm  =  Math.sqrt(Math.abs(lcm  -  1));  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    if(lcm  ==  0)  {  if(Math.abs(lcm  -  1)  ==  Math.abs(lcm  -  1))  {  lcm  =  Math.sqrt(Math.abs(lcm  -  1));  }  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    if(lcm  ==  0)  {  if(Math.abs(lcm  -  1)  ==  Math.abs(lcm  -  1))  {  lcm  =  Math.sqrt(Math.abs(lcm  -  1));  }		non-compiled	[CE]  array  dimension  missing	10	None	add
483	[BUG]  [BUGGY]    lcm  =  Math.sqrt(Math.abs(lcm)/  GSRS(a,  b));  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    lcm  =  Math.sqrt(Math.abs(lcm)/  GSRS(a,  b));  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    lcm  =  Math.sqrt(Math.abs(lcm)/  GSRS(a,  b));		non-compiled	[CE]  array  dimension  missing	10	None	add
484	[BUG]  [BUGGY]    if(lcm  ==  0)  {  if(Math.abs(lcm  -  1)  ==  Math.abs(lcm  -  1))  {  lcm  =  Math.abs(mulAndCheck(lcd,  a,  b),  b);  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    if(lcm  ==  0)  {  if(Math.abs(lcm  -  1)  ==  Math.abs(lcm  -  1))  {  lcm  =  Math.abs(mulAndCheck(lcd,  a,  b),  b);  }  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    if(lcm  ==  0)  {  if(Math.abs(lcm  -  1)  ==  Math.abs(lcm  -  1))  {  lcm  =  Math.abs(mulAndCheck(lcd,  a,  b),  b);  }		non-compiled	[CE]  array  dimension  missing	10	None	add
485	[BUG]  [BUGGY]    if(lcm  ==  0)  {  if(Math.abs(lcm  -  1)  ==  Math.abs(lcm  -  1))  {  lcm  =  Math.sqrt(Math.abs(lcm  -  1),  b));  }  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    if(lcm  ==  0)  {  if(Math.abs(lcm  -  1)  ==  Math.abs(lcm  -  1))  {  lcm  =  Math.sqrt(Math.abs(lcm  -  1),  b));  }  [BUGGY]  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	714	714	2	replace	    if(lcm  ==  0)  {  if(Math.abs(lcm  -  1)  ==  Math.abs(lcm  -  1))  {  lcm  =  Math.sqrt(Math.abs(lcm  -  1),  b));  }		non-compiled	[CE]  array  dimension  missing	10	None	add
511	[BUG]  [BUGGY]    return(Math.abs(u)+  Math.abs(q));  [CE]  array  dimension  missing  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    return(Math.abs(u)+  Math.abs(q));  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    return(Math.abs(u)+  Math.abs(q));		non-compiled	[CE]  array  dimension  missing	20	None	add
512	[BUG]  [BUGGY]    u  =  make  u  negative  if(u  >  0)  {  [CE]  array  dimension  missing  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    u  =  make  u  negative  if(u  >  0)  {  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    u  =  make  u  negative  if(u  >  0)  {		non-compiled	[CE]  array  dimension  missing	20	None	add
513	[BUG]  [BUGGY]    return(Math.abs(u)-  Math.abs(q));  [CE]  array  dimension  missing  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    return(Math.abs(u)-  Math.abs(q));  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    return(Math.abs(u)-  Math.abs(q));		non-compiled	[CE]  array  dimension  missing	20	None	add
543	[BUG]  [BUGGY]  if(u  >=  0)  {  [CE]  array  dimension  missing  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]  if(u  >=  0)  {  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >=  0)  {	if  (u  >  0)  {  	non-compiled	[CE]  array  dimension  missing	17	None	replace
573	[BUG]  [BUGGY]  if(u  *  v  ==  q)  {  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]  if(u  *  v  ==  q)  {  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	if(u  *  v  ==  q)  {	if  ((u  ==  0)  ||  (v  ==  0))  {  	non-compiled	[CE]  array  dimension  missing	15	None	replace
574	[BUG]  [BUGGY]  if(u  *  v  ==  0  ||  v  ==  eps)  {  [CE]  array  dimension  missing  [CONTEXT]  public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;  int  v  =  q;  [BUGGY]  if(u  *  v  ==  0  ||  v  ==  eps)  {  [BUGGY]  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	542	542	2	replace	if(u  *  v  ==  0  ||  v  ==  eps)  {	if  ((u  ==  0)  ||  (v  ==  0))  {  	non-compiled	[CE]  array  dimension  missing	15	None	replace
