bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size()  +  1,  p);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.size()  +  1,  p);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size()  +  1,  p);	  int    v    =    Math.min(factorials.size()    -    1,    p);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
2	[BUG]  [BUGGY]  int  v  =  Math.min(negative,  factorials.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(negative,  factorials.length);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(negative,  factorials.length);	  int    v    =    Math.min(factorials.length,    positive);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
3	[BUG]  [BUGGY]  int  v  =  Math.min(u.length,  positive);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(u.length,  positive);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(u.length,  positive);	  int    v    =    Math.min(factorials.length,    positive);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
4	[BUG]  [BUGGY]  int  v  =  Math.min(u,  positive);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(u,  positive);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(u,  positive);	  int    v    =    Math.min(factorials.length,    positive);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
5	[BUG]  [BUGGY]  double  v  =(double)Math.abs(u)+  Math.abs(v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  double  v  =(double)Math.abs(u)+  Math.abs(v);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	double  v  =(double)Math.abs(u)+  Math.abs(v);	  float    v    =(float)Math.abs(u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
6	[BUG]  [BUGGY]  float  v  =(float)Math.log(u)+  Math.abs(v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.log(u)+  Math.abs(v);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.log(u)+  Math.abs(v);	  float    v    =(float)Math.abs(u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
7	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
8	[BUG]  [BUGGY]  while(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
9	[BUG]  [BUGGY]  while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
10	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
11	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  q)+  Math.abs(k);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  q)+  Math.abs(k);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  q)+  Math.abs(k);	  int    v    =(int)Math.pow(10,    u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
12	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  k)+  Math.abs(u);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  k)+  Math.abs(u);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  k)+  Math.abs(u);	  int    v    =(int)Math.pow(10,    u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
13	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  y)+  Math.abs(k);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  y)+  Math.abs(k);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  y)+  Math.abs(k);	  int    v    =(int)Math.pow(10,    u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
14	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u)/  Math.abs(k);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  u)/  Math.abs(k);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u)/  Math.abs(k);	  int    v    =(int)Math.pow(10,    u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
15	[BUG]  [BUGGY]  int  v  =(int)Math.log(u)/  2.0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.log(u)/  2.0;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.log(u)/  2.0;	  int    v    =(int)Math.log(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
16	[BUG]  [BUGGY]  int  v  =(int)Math.log(u)/  2  *  Math.abs(v);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.log(u)/  2  *  Math.abs(v);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.log(u)/  2  *  Math.abs(v);	  int    v    =(int)Math.log(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
17	[BUG]  [BUGGY]  int  v  =(int)Math.log(u)/  2;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.log(u)/  2;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.log(u)/  2;	  int    v    =(int)Math.log(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
18	[BUG]  [BUGGY]  int  v  =(int)Math.log(u)/  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.log(u)/  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.log(u)/  DateTimeConstants.MILLIS_PER_SECOND;	  int    v    =(int)Math.log(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
19	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  -u  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  -u  +  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  -u  +  1);	  int    v    =(int)Math.pow(10,    -u);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
20	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  -q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  -q);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  -q);	  int    v    =(int)Math.pow(10,    -u);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
21	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  -u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.pow(10,  -u);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.pow(10,  -u);	  int    v    =(int)Math.pow(10,    -u);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
22	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u  +  1)/  3;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u  +  1)/  3;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u  +  1)/  3;	  int    v    =(int)Math.abs(u)/    3;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
23	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size()  +  1,  u);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.size()  +  1,  u);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size()  +  1,  u);	  int    v    =    Math.min(factorials.size()    +    1,    q);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
24	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  1);	  int    v    =(int)Math.pow(10,    0);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
25	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  3);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  3);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  3);	  int    v    =(int)Math.pow(10,    0);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
26	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.pow(10,  0);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.pow(10,  0);	  int    v    =(int)Math.pow(10,    0);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
27	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u)/  2.0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.ceil(u)/  2.0;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.ceil(u)/  2.0;	  int    v    =(int)Math.ceil(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
28	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u)/  Math.abs(k);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.ceil(u)/  Math.abs(k);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.ceil(u)/  Math.abs(k);	  int    v    =(int)Math.ceil(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
29	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u)/  Math.rint(v);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.ceil(u)/  Math.rint(v);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.ceil(u)/  Math.rint(v);	  int    v    =(int)Math.ceil(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
30	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u)/  Math.pow(10,  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.ceil(u)/  Math.pow(10,  0);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.ceil(u)/  Math.pow(10,  0);	  int    v    =(int)Math.ceil(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
31	[BUG]  [BUGGY]  int  v  =  Math.min(u,  twos.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(u,  twos.length);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(u,  twos.length);	  int    v    =    Math.min(u,    factorials.length);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
32	[BUG]  [BUGGY]  int  v  =  Math.min(u,  factorials.length  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(u,  factorials.length  -  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(u,  factorials.length  -  1);	  int    v    =    Math.min(u,    factorials.length);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
33	[BUG]  [BUGGY]  int  v  =  Math.max(0,  factorials.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.max(0,  factorials.length);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.max(0,  factorials.length);	  int    v    =    Math.min(u,    factorials.length);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
34	[BUG]  [BUGGY]  int  v  =(int)Math.abs(p)/  Math.abs(q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(p)/  Math.abs(q);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(p)/  Math.abs(q);	  int    v    =(int)Math.abs(u)/    Math.abs(q);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
35	[BUG]  [BUGGY]  if(u  <  0)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(u  <  0)  {  v  =  -v;  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  <  0)  {  v  =  -v;  }	  if(v    <    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
36	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(u  <  0  ||  v  >  0)  {  v  =  -v;  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  <  0  ||  v  >  0)  {  v  =  -v;  }	  if(v    <    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
37	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)/  2.0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.abs(u)/  2.0;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)/  2.0;	  int    v    =(int)Math.abs(u)/    2.0;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
38	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)/  2  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.abs(u)/  2  +  1;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)/  2  +  1;	  float    v    =(float)Math.abs(u)/    2;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
39	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)/  3;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.abs(u)/  3;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)/  3;	  float    v    =(float)Math.abs(u)/    2;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
40	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  negative  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.length,  negative  +  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  negative  +  1);	  int    v    =    Math.min(factorials.length,    negative);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
41	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)+  Math.abs(p);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)+  Math.abs(p);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)+  Math.abs(p);	  int    v    =(int)Math.abs(u)+    Math.abs(q);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
42	[BUG]  [BUGGY]  int  v  =(int)Math.abs(p)+  Math.abs(q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(p)+  Math.abs(q);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(p)+  Math.abs(q);	  int    v    =(int)Math.abs(u)+    Math.abs(q);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
43	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(factorials);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(factorials);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  Math.abs(factorials);	  int    v    =(int)Math.abs(u)/    Math.abs(negative);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
44	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(negative,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(negative,  0);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  Math.abs(negative,  0);	  int    v    =(int)Math.abs(u)/    Math.abs(negative);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
45	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.size(),  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size(),  1);	  int    v    =    Math.min(factorials.size(),    2);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
46	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.size(),  3);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size(),  3);	  int    v    =    Math.min(factorials.size(),    2);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
47	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.size(),  4);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size(),  4);	  int    v    =    Math.min(factorials.size(),    2);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
48	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    +=    factorials[j];    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
49	[BUG]  [BUGGY]  while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    +=    factorials[j];    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
50	[BUG]  [BUGGY]  while((  u  &  1)  >=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)  >=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)  >=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    +=    factorials[j];    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
51	[BUG]  [BUGGY]  vice.add(Math.pow(10,  v));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  vice.add(Math.pow(10,  v));  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	vice.add(Math.pow(10,  v));	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(10,    v);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
52	[BUG]  [BUGGY]  vice.add(Math.pow(10,  k));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  vice.add(Math.pow(10,  k));  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	vice.add(Math.pow(10,  k));	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(10,    v);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
53	[BUG]  [BUGGY]  vice.add(Math.pow(10,  u));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  vice.add(Math.pow(10,  u));  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	vice.add(Math.pow(10,  u));	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(10,    v);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
54	[BUG]  [BUGGY]  vice.add(Math.pow(10,  q));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  vice.add(Math.pow(10,  q));  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	vice.add(Math.pow(10,  q));	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(10,    v);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
55	[BUG]  [BUGGY]  if(u  ==  31)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(u  ==  31)  {  v  =  -v;  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  ==  31)  {  v  =  -v;  }	  if(k    ==    31)    {    if(u    >    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
56	[BUG]  [BUGGY]  if(u  <  31)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(u  <  31)  {  v  =  -v;  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  <  31)  {  v  =  -v;  }	  if(k    ==    31)    {    if(u    >    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
57	[BUG]  [BUGGY]  if(u  <  31  ||  k  >  0)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(u  <  31  ||  k  >  0)  {  v  =  -v;  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  <  31  ||  k  >  0)  {  v  =  -v;  }	  if(k    ==    31)    {    if(u    >    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
58	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[q];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[q];  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[q];  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    +=    factorials[q];    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
59	[BUG]  [BUGGY]  while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[q];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[q];  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[q];  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    +=    factorials[q];    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
60	[BUG]  [BUGGY]  while((  u  &  1)  >=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[q];  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)  >=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[q];  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)  >=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[q];  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    +=    factorials[q];    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
61	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u)/  2  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  u)/  2  +  1;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u)/  2  +  1;	  int    v    =(int)Math.pow(10,    u)/    2;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
62	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u  +  1)/  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  u  +  1)/  2;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u  +  1)/  2;	  int    v    =(int)Math.pow(10,    u)/    2;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
63	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  y)/  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  y)/  2;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  y)/  2;	  int    v    =(int)Math.pow(10,    u)/    2;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
64	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u  +  1)/  4;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u  +  1)/  4;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u  +  1)/  4;	  int    v    =(int)Math.abs(u)/    4;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
65	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  positive  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.size(),  positive  +  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size(),  positive  +  1);	  int    v    =    Math.min(factorials.size(),    positive);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
66	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  negative  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.size(),  negative  +  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size(),  negative  +  1);	  int    v    =    Math.min(factorials.size(),    positive);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
67	[BUG]  [BUGGY]  int  v  =  Math.max(factorials.size(),  negative);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.max(factorials.size(),  negative);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.max(factorials.size(),  negative);	  int    v    =    Math.min(factorials.size(),    positive);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
68	[BUG]  [BUGGY]  vice.add(Math.pow(2  *  q));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  vice.add(Math.pow(2  *  q));  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	vice.add(Math.pow(2  *  q));	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(2    *    q);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
69	[BUG]  [BUGGY]  vice.add(Math.pow(2  *  q),  u);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  vice.add(Math.pow(2  *  q),  u);  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	vice.add(Math.pow(2  *  q),  u);	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(2    *    q);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
70	[BUG]  [BUGGY]  vice.add(Math.pow(1  *  q));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  vice.add(Math.pow(1  *  q));  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	vice.add(Math.pow(1  *  q));	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(2    *    q);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
71	[BUG]  [BUGGY]  vice.add(Math.pow(2  *  q),  0);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  vice.add(Math.pow(2  *  q),  0);  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	vice.add(Math.pow(2  *  q),  0);	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(2    *    q);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
72	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
73	[BUG]  [BUGGY]  while(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
74	[BUG]  [BUGGY]  while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
75	[BUG]  [BUGGY]  while(u  <  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while(u  <  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while(u  <  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
76	[BUG]  [BUGGY]  v  =  -1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  v  =  -1;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	v  =  -1;	  v    =    -v;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
77	[BUG]  [BUGGY]  v  =  -negative;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  v  =  -negative;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	v  =  -negative;	  v    =    -v;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
78	[BUG]  [BUGGY]  v  =  -u;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  v  =  -u;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	v  =  -u;	  v    =    -v;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
79	[BUG]  [BUGGY]  v  =  -k;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  v  =  -k;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	v  =  -k;	  v    =    -v;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
80	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  2  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.length,  2  -  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  2  -  1);	  int    v    =    Math.min(factorials.length,    2);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
81	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)/  Math.abs(k);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.abs(u)/  Math.abs(k);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)/  Math.abs(k);	  float    v    =(float)Math.abs(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
82	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)/  Math.abs(negative);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.abs(u)/  Math.abs(negative);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)/  Math.abs(negative);	  float    v    =(float)Math.abs(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
83	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)/  Math.abs(q);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.abs(u)/  Math.abs(q);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)/  Math.abs(q);	  float    v    =(float)Math.abs(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
84	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)/  Math.abs(p);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.abs(u)/  Math.abs(p);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)/  Math.abs(p);	  float    v    =(float)Math.abs(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
85	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
86	[BUG]  [BUGGY]  while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
87	[BUG]  [BUGGY]  while(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
88	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
89	[BUG]  [BUGGY]  if(u  <  =  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(u  <  =  0)  {  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  <  =  0)  {	  if(u    <    0)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
90	[BUG]  [BUGGY]  if(u  ==  0)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(u  ==  0)  {  v  =  -v;  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  ==  0)  {  v  =  -v;  }	  if(q    ==    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
91	[BUG]  [BUGGY]  if(p  ==  0)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(p  ==  0)  {  v  =  -v;  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(p  ==  0)  {  v  =  -v;  }	  if(q    ==    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
92	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
93	[BUG]  [BUGGY]  while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
94	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
95	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u)/  Math.abs(v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  u)/  Math.abs(v);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u)/  Math.abs(v);	  int    v    =(int)Math.pow(10,    u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
96	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  y)+  Math.abs(v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  y)+  Math.abs(v);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  y)+  Math.abs(v);	  int    v    =(int)Math.pow(10,    u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
97	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  0)+  Math.abs(v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  0)+  Math.abs(v);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  0)+  Math.abs(v);	  int    v    =(int)Math.pow(10,    u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
98	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  q)+  Math.abs(v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  q)+  Math.abs(v);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  q)+  Math.abs(v);	  int    v    =(int)Math.pow(10,    u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
99	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  u  +  2);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u  +  2);	  int    v    =(int)Math.pow(10,    u    +    1);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
100	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u  *  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  u  *  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u  *  1);	  int    v    =(int)Math.pow(10,    u    +    1);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
101	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u  +  3);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  u  +  3);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u  +  3);	  int    v    =(int)Math.pow(10,    u    +    1);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
102	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  u  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.pow(10,  u  +  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.pow(10,  u  +  1);	  float    v    =(float)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
103	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.pow(10,  y);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.pow(10,  y);	  float    v    =(float)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
104	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.pow(10,  q);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.pow(10,  q);	  float    v    =(float)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
105	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(k  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(k  -  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  Math.abs(k  -  1);	  int    v    =(int)Math.abs(u)/    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
106	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(k  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(k  +  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  Math.abs(k  +  1);	  int    v    =(int)Math.abs(u)/    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
107	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(k  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(k  -  2);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  Math.abs(k  -  2);	  int    v    =(int)Math.abs(u)/    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
108	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)+  Math.abs(k  /  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)+  Math.abs(k  /  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)+  Math.abs(k  /  1);	  int    v    =(int)Math.abs(u)+    Math.abs(k    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
109	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)+  Math.abs(k  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.abs(u)+  Math.abs(k  -  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)+  Math.abs(k  -  1);	  float    v    =(float)Math.abs(u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
110	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)+  Math.abs(k  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.abs(u)+  Math.abs(k  +  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)+  Math.abs(k  +  1);	  float    v    =(float)Math.abs(u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
111	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.abs(v);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.abs(v);  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.abs(v);  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.abs(v);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
112	[BUG]  [BUGGY]  if(k  <  31)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.abs(v);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(k  <  31)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.abs(v);  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(k  <  31)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.abs(v);  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.abs(v);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
113	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.abs(v);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.abs(v);  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.abs(v);  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.abs(v);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
114	[BUG]  [BUGGY]  char  v  =(char)Math.abs(u)/  Math.abs(v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  char  v  =(char)Math.abs(u)/  Math.abs(v);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =(char)Math.abs(u)/  Math.abs(v);	  char    v    =(char)Math.abs(u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
115	[BUG]  [BUGGY]  String  v  =(String)Math.abs(u)+  Math.abs(v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  String  v  =(String)Math.abs(u)+  Math.abs(v);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	String  v  =(String)Math.abs(u)+  Math.abs(v);	  char    v    =(char)Math.abs(u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
116	[BUG]  [BUGGY]  char  v  =(char)Math.abs(u)+  Math.abs(negative);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  char  v  =(char)Math.abs(u)+  Math.abs(negative);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =(char)Math.abs(u)+  Math.abs(negative);	  char    v    =(char)Math.abs(u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
117	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u)/  2  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.ceil(u)/  2  +  1;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.ceil(u)/  2  +  1;	  int    v    =(int)Math.ceil(u)/    2;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
118	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u)/  3;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.ceil(u)/  3;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.ceil(u)/  3;	  int    v    =(int)Math.ceil(u)/    2;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
119	[BUG]  [BUGGY]  float  v  =(float)Math.ceil(u)/  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.ceil(u)/  2;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.ceil(u)/  2;	  int    v    =(int)Math.ceil(u)/    2;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
120	[BUG]  [BUGGY]  for(int  v  =  0;  v  <  factorials.length;  ++k);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  for(int  v  =  0;  v  <  factorials.length;  ++k);  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	for(int  v  =  0;  v  <  factorials.length;  ++k);	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
121	[BUG]  [BUGGY]  For(int  v  =  0;  v  <  factorials.length;  ++k);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  For(int  v  =  0;  v  <  factorials.length;  ++k);  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	For(int  v  =  0;  v  <  factorials.length;  ++k);	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
122	[BUG]  [BUGGY]  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	for(int  v  =  0;  v  <  factorials.length;  ++k)  {  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
123	[BUG]  [BUGGY]  for(int  v  =  0;  v  <  factorials.length;  ++k);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  for(int  v  =  0;  v  <  factorials.length;  ++k);  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	for(int  v  =  0;  v  <  factorials.length;  ++k);  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
124	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.size(),  u);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size(),  u);	  int    v    =    Math.min(factorials.size()    -    1,    u);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
125	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size()  -  1,  u  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.size()  -  1,  u  +  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size()  -  1,  u  +  1);	  int    v    =    Math.min(factorials.size()    -    1,    u);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
126	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size()  -  1,  negative);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.size()  -  1,  negative);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size()  -  1,  negative);	  int    v    =    Math.min(factorials.size()    -    1,    u);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
127	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  u  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.length,  u  +  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  u  +  1);	  int    v    =    Math.min(factorials.length,    k    +    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
128	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  k  +  1,  u);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.length,  k  +  1,  u);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  k  +  1,  u);	  int    v    =    Math.min(factorials.length,    k    +    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
129	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  q  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.length,  q  +  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  q  +  1);	  int    v    =    Math.min(factorials.length,    k    +    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
130	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)+  Math.abs(k  -  1  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)+  Math.abs(k  -  1  +  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)+  Math.abs(k  -  1  +  1);	  int    v    =(int)Math.abs(u)+    Math.abs(k    -    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
131	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)+  Math.abs(k  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)+  Math.abs(k  -  2);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)+  Math.abs(k  -  2);	  int    v    =(int)Math.abs(u)+    Math.abs(k    -    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
132	[BUG]  [BUGGY]  if(u  >  0)  {  v  =  -v;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(u  >  0)  {  v  =  -v;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  >  0)  {  v  =  -v;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(v    >    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
133	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)*  Math.abs(k  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)*  Math.abs(k  -  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)*  Math.abs(k  -  1);	  int    v    =(int)Math.abs(u)*    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
134	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)*  Math.abs(k  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)*  Math.abs(k  +  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)*  Math.abs(k  +  1);	  int    v    =(int)Math.abs(u)*    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
135	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)*  Math.abs(k);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.abs(u)*  Math.abs(k);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)*  Math.abs(k);	  int    v    =(int)Math.abs(u)*    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
136	[BUG]  [BUGGY]  int  v  =(int)Math.abs(p)/  Math.abs(u);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(p)/  Math.abs(u);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(p)/  Math.abs(u);	  int    v    =(int)Math.abs(u)/    Math.abs(p);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
137	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(p  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(p  +  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  Math.abs(p  +  1);	  int    v    =(int)Math.abs(u)/    Math.abs(p);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
138	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  2.0  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)/  2.0  +  1;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  2.0  +  1;	  int    v    =(int)Math.abs(u)/    2    +    1;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
139	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  2  *  1  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)/  2  *  1  +  1;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  2  *  1  +  1;	  int    v    =(int)Math.abs(u)/    2    +    1;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
140	[BUG]  [BUGGY]  vice(u,  p);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  vice(u,  p);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	vice(u,  p);	  if(u    <    =    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
141	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  y  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  y  +  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  y  +  1);	  int    v    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
142	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  x);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  x);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  x);	  int    v    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
143	[BUG]  [BUGGY]  String  v  =  Math.min(factorials.length,  k);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  String  v  =  Math.min(factorials.length,  k);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	String  v  =  Math.min(factorials.length,  k);	  char    v    =    Math.min(factorials.length,    k);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
144	[BUG]  [BUGGY]  char  v  =  Math.min(factorials.length,  negative);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  char  v  =  Math.min(factorials.length,  negative);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =  Math.min(factorials.length,  negative);	  char    v    =    Math.min(factorials.length,    k);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
145	[BUG]  [BUGGY]  char  v  =  Math.min(factorials.length,  q);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  char  v  =  Math.min(factorials.length,  q);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =  Math.min(factorials.length,  q);	  char    v    =    Math.min(factorials.length,    k);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
146	[BUG]  [BUGGY]  char  v  =  Math.min(factorials.length,  k  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  char  v  =  Math.min(factorials.length,  k  +  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =  Math.min(factorials.length,  k  +  1);	  char    v    =    Math.min(factorials.length,    k);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
147	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0.0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(u  <  0  ||  v  >  0.0)  {  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  <  0  ||  v  >  0.0)  {	  if(v    <    0    ||    v    >    0.0)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
148	[BUG]  [BUGGY]  if(v  <  0  ||  k  >  0.0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(v  <  0  ||  k  >  0.0)  {  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  <  0  ||  k  >  0.0)  {	  if(v    <    0    ||    v    >    0.0)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
149	[BUG]  [BUGGY]  if(v  <  0  ||  v  >  1.0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(v  <  0  ||  v  >  1.0)  {  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  <  0  ||  v  >  1.0)  {	  if(v    <    0    ||    v    >    0.0)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
150	[BUG]  [BUGGY]  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    return    p;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
151	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    return    p;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
152	[BUG]  [BUGGY]  while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    return    p;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
153	[BUG]  [BUGGY]  String  v  =  Math.min(factorials.length,  u);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  String  v  =  Math.min(factorials.length,  u);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	String  v  =  Math.min(factorials.length,  u);	  char    v    =    Math.min(factorials.length,    u);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
154	[BUG]  [BUGGY]  char  v  =  Math.min(factorials.length,  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  char  v  =  Math.min(factorials.length,  2);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =  Math.min(factorials.length,  2);	  char    v    =    Math.min(factorials.length,    u);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
155	[BUG]  [BUGGY]  char  v  =  Math.min(u,  factorials.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  char  v  =  Math.min(u,  factorials.length);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =  Math.min(u,  factorials.length);	  char    v    =    Math.min(factorials.length,    u);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
156	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  k);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  k);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  k);	  int    v    =(int)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
157	[BUG]  [BUGGY]  char  v  =(char)Math.abs(u)/  Math.abs(k);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  char  v  =(char)Math.abs(u)/  Math.abs(k);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =(char)Math.abs(u)/  Math.abs(k);	  char    v    =(char)Math.abs(u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
158	[BUG]  [BUGGY]  char  v  =(char)Math.abs(u)+  Math.abs(k  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  char  v  =(char)Math.abs(u)+  Math.abs(k  -  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =(char)Math.abs(u)+  Math.abs(k  -  1);	  char    v    =(char)Math.abs(u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
159	[BUG]  [BUGGY]  char  v  =(char)Math.abs(u)+  Math.abs(k  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  char  v  =(char)Math.abs(u)+  Math.abs(k  +  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =(char)Math.abs(u)+  Math.abs(k  +  1);	  char    v    =(char)Math.abs(u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
160	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  j  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  j  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)  ==  0)  {  for(int  j  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    +=    factorials[j];    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
161	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++j)  {  v  +=  factorials[j];  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++j)  {  v  +=  factorials[j];  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++j)  {  v  +=  factorials[j];  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    +=    factorials[j];    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
162	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u)/  2  +  3;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.ceil(u)/  2  +  3;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.ceil(u)/  2  +  3;	  int    v    =(int)Math.ceil(u)/    2;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
163	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k);  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k);  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
164	[BUG]  [BUGGY]  for(int  k  =  0;  v  <  factorials.length;  ++k);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  for(int  k  =  0;  v  <  factorials.length;  ++k);  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	for(int  k  =  0;  v  <  factorials.length;  ++k);	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
165	[BUG]  [BUGGY]  luate(k,  u);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  luate(k,  u);  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	luate(k,  u);	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(10,    v);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
166	[BUG]  [BUGGY]  ettyPrinter.println( "Math.pow( "  +  k  + ") ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  ettyPrinter.println( "Math.pow( "  +  k  + ") ");  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	ettyPrinter.println( "Math.pow( "  +  k  + ") ");	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(10,    v);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
167	[BUG]  [BUGGY]  ettyPrinter.println( "Math.pow( "  +  u  + ") ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  ettyPrinter.println( "Math.pow( "  +  u  + ") ");  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	ettyPrinter.println( "Math.pow( "  +  u  + ") ");	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(10,    v);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
168	[BUG]  [BUGGY]  ettyPrinter.println( "Math.pow( "  +  k  + ") "  +  u);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  ettyPrinter.println( "Math.pow( "  +  k  + ") "  +  u);  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	ettyPrinter.println( "Math.pow( "  +  k  + ") "  +  u);	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(10,    v);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
169	[BUG]  [BUGGY]  int  v  =(int)Math.log(u)/  DateTimeConstants.MILLIS_PER_WEEK;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.log(u)/  DateTimeConstants.MILLIS_PER_WEEK;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.log(u)/  DateTimeConstants.MILLIS_PER_WEEK;	  int    v    =(int)Math.log(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
170	[BUG]  [BUGGY]  char  v  =(char)Math.abs(u)+  Math.abs(q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  char  v  =(char)Math.abs(u)+  Math.abs(q);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =(char)Math.abs(u)+  Math.abs(q);	  char    v    =(char)Math.abs(u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
171	[BUG]  [BUGGY]  int  v  =(int)Math.log(u)/  Math.abs(p);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.log(u)/  Math.abs(p);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.log(u)/  Math.abs(p);	  int    v    =(int)Math.abs(u)/    Math.abs(p);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
172	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)+  Math.abs(q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.abs(u)+  Math.abs(q);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)+  Math.abs(q);	  float    v    =(float)Math.abs(u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
173	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)*  Math.abs(v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.abs(u)*  Math.abs(v);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)*  Math.abs(v);	  float    v    =(float)Math.abs(u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
174	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  u  -  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u  -  1);	  int    v    =(int)Math.pow(10,    u    +    1);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
175	[BUG]  [BUGGY]  while((  v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
176	[BUG]  [BUGGY]  while((  v  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  v  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  v  &  1)!=  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
177	[BUG]  [BUGGY]  ettyPrinter.println( "Math.pow( "  +  k  +  q));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  ettyPrinter.println( "Math.pow( "  +  k  +  q));  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	ettyPrinter.println( "Math.pow( "  +  k  +  q));	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(2    *    q);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
178	[BUG]  [BUGGY]  ettyPrinter.println( "Math.pow( "  +  q  + ") ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  ettyPrinter.println( "Math.pow( "  +  q  + ") ");  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	ettyPrinter.println( "Math.pow( "  +  q  + ") ");	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(2    *    q);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
179	[BUG]  [BUGGY]  ettyPrinter.println( "JSC_DEBUG:  got "  +  q);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  ettyPrinter.println( "JSC_DEBUG:  got "  +  q);  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	ettyPrinter.println( "JSC_DEBUG:  got "  +  q);	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(2    *    q);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
180	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)/  Math.sqrt(negative);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.abs(u)/  Math.sqrt(negative);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)/  Math.sqrt(negative);	  float    v    =(float)Math.abs(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
181	[BUG]  [BUGGY]  v  =  -n;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  v  =  -n;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	v  =  -n;	  v    =    -v;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
182	[BUG]  [BUGGY]  while((  v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
183	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  u  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ".);  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
184	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(value);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(value);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  Math.abs(value);	  int    v    =(int)Math.abs(u)/    Math.abs(negative);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
185	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(negative  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(negative  +  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  Math.abs(negative  +  1);	  int    v    =(int)Math.abs(u)/    Math.abs(negative);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
186	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u)/  Math.log(k);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.ceil(u)/  Math.log(k);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.ceil(u)/  Math.log(k);	  int    v    =(int)Math.ceil(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
187	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u)/  Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.ceil(u)/  Math.pow(10,  y);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.ceil(u)/  Math.pow(10,  y);	  int    v    =(int)Math.ceil(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
188	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u)/  Math.log(QEAR);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.ceil(u)/  Math.log(QEAR);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.ceil(u)/  Math.log(QEAR);	  int    v    =(int)Math.ceil(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
189	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  >  0)  {  for(int  k  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    return    p;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
190	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p  +  1;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p  +  1;  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p  +  1;  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    return    p;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
191	[BUG]  [BUGGY]  if(v  <  =  0  ||  v  >  0.0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(v  <  =  0  ||  v  >  0.0)  {  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  <  =  0  ||  v  >  0.0)  {	  if(v    <    0    ||    v    >    0.0)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
192	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)+  Math.abs(negative);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)+  Math.abs(negative);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)+  Math.abs(negative);	  int    v    =(int)Math.abs(u)+    Math.abs(q);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
193	[BUG]  [BUGGY]  ettyPrinter.println( "Math  is  less  than  1: "  +  Math.abs(v));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  ettyPrinter.println( "Math  is  less  than  1: "  +  Math.abs(v));  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	ettyPrinter.println( "Math  is  less  than  1: "  +  Math.abs(v));	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
194	[BUG]  [BUGGY]  Integer  v  =(Integer)factorials.get(u);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  Integer  v  =(Integer)factorials.get(u);  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	Integer  v  =(Integer)factorials.get(u);	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
195	[BUG]  [BUGGY]  Integer  v  =(Integer)factorials.get(k);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  Integer  v  =(Integer)factorials.get(k);  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	Integer  v  =(Integer)factorials.get(k);	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
196	[BUG]  [BUGGY]  Integer  v  =(Integer)factorials.get(q);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  Integer  v  =(Integer)factorials.get(q);  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	Integer  v  =(Integer)factorials.get(q);	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
197	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  m);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  m);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  m);	  int    v    =(int)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
198	[BUG]  [BUGGY]  luate(t,  p,  q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  luate(t,  p,  q);  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	luate(t,  p,  q);	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    +=    factorials[q];    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
199	[BUG]  [BUGGY]  luate(t,  p);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  luate(t,  p);  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	luate(t,  p);	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    +=    factorials[q];    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
200	[BUG]  [BUGGY]  luate(t,  p,  q,  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  luate(t,  p,  q,  2);  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	luate(t,  p,  q,  2);	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    +=    factorials[q];    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
201	[BUG]  [BUGGY]  luate(t,  p,  q));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  luate(t,  p,  q));  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	luate(t,  p,  q));	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    +=    factorials[q];    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
202	[BUG]  [BUGGY]  Character  v  =  Math.min(factorials.length,  u);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  Character  v  =  Math.min(factorials.length,  u);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	Character  v  =  Math.min(factorials.length,  u);	  char    v    =    Math.min(factorials.length,    u);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
203	[BUG]  [BUGGY]  if(q  >  0)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(q  >  0)  {  v  =  -v;  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(q  >  0)  {  v  =  -v;  }	  if(q    ==    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
204	[BUG]  [BUGGY]  if(q  ==  0)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(q  ==  0)  {  v  =  -k;  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(q  ==  0)  {  v  =  -k;  }	  if(q    ==    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
205	[BUG]  [BUGGY]  if(q  ==  0)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(q  ==  0)  {  v  =  -p;  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(q  ==  0)  {  v  =  -p;  }	  if(q    ==    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
206	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  u)+  Math.abs(v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.pow(10,  u)+  Math.abs(v);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.pow(10,  u)+  Math.abs(v);	  int    v    =(int)Math.pow(10,    u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
207	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u)+  Math.abs(q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  u)+  Math.abs(q);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u)+  Math.abs(q);	  int    v    =(int)Math.pow(10,    u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
208	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u)+  Math.pow(10,  q)+  Math.abs(v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  u)+  Math.pow(10,  q)+  Math.abs(v);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u)+  Math.pow(10,  q)+  Math.abs(v);	  int    v    =(int)Math.pow(10,    u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
209	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  2  +  3;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)/  2  +  3;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  2  +  3;	  int    v    =(int)Math.abs(u)/    2    +    1;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
210	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  negative  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.size(),  negative  +  2);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size(),  negative  +  2);	  int    v    =    Math.min(factorials.size(),    negative);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
211	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)/  4;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.abs(u)/  4;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)/  4;	  int    v    =(int)Math.abs(u)/    4;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
212	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)/  2  +  3;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.abs(u)/  2  +  3;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)/  2  +  3;	  float    v    =(float)Math.abs(u)/    2;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
213	[BUG]  [BUGGY]  float  v  =(float)Math.log(u)/  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.log(u)/  2;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.log(u)/  2;	  float    v    =(float)Math.abs(u)/    2;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
214	[BUG]  [BUGGY]  char  v  =(char)Math.abs(k)+  Math.abs(u);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  char  v  =(char)Math.abs(k)+  Math.abs(u);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =(char)Math.abs(k)+  Math.abs(u);	  char    v    =(char)Math.abs(u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
215	[BUG]  [BUGGY]  pends.add(new  Integer(q));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  pends.add(new  Integer(q));  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	pends.add(new  Integer(q));	  if(k    ==    31)    {    if(u    >    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
216	[BUG]  [BUGGY]  MutableToJavaIdentifier.checkNotNull(v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  MutableToJavaIdentifier.checkNotNull(v);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	MutableToJavaIdentifier.checkNotNull(v);	  if(k    ==    31)    {    if(u    >    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
217	[BUG]  [BUGGY]  int  v  =(int)Math.abs(k)*  Math.abs(u);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(k)*  Math.abs(u);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(k)*  Math.abs(u);	  int    v    =(int)Math.abs(u)*    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
218	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  >  0)  {  for(int  k  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
219	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  v  =  -v;  v  <  factorials.length;  ++k)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(u  >  0)  {  for(int  v  =  -v;  v  <  factorials.length;  ++k)  {  v  =  -v;  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  >  0)  {  for(int  v  =  -v;  v  <  factorials.length;  ++k)  {  v  =  -v;  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
220	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  facts.length;  ++k)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  facts.length;  ++k)  {  v  =  -v;  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  >  0)  {  for(int  v  =  0;  v  <  facts.length;  ++k)  {  v  =  -v;  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
221	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  positive  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.length,  positive  +  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  positive  +  1);	  int    v    =    Math.min(factorials.length,    positive);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
222	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  -u)/  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  -u)/  2;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  -u)/  2;	  int    v    =(int)Math.pow(10,    u)/    2;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
223	[BUG]  [BUGGY]  if(v  <  =  0)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(v  <  =  0)  {  v  =  -v;  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  <  =  0)  {  v  =  -v;  }	  if(u    <    =    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
224	[BUG]  [BUGGY]  Integer  v  =  Math.min(k,  u);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  Integer  v  =  Math.min(k,  u);  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	Integer  v  =  Math.min(k,  u);	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.abs(v);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
225	[BUG]  [BUGGY]  Integer  v  =(Integer)mappings.get(k);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  Integer  v  =(Integer)mappings.get(k);  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	Integer  v  =(Integer)mappings.get(k);	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.abs(v);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
226	[BUG]  [BUGGY]  Integer  v  =(Integer)mappings.get(u);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  Integer  v  =(Integer)mappings.get(u);  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	Integer  v  =(Integer)mappings.get(u);	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.abs(v);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
227	[BUG]  [BUGGY]  Integer  v  =(Integer)Math.floor(u);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  Integer  v  =(Integer)Math.floor(u);  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	Integer  v  =(Integer)Math.floor(u);	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.abs(v);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
228	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  negative  +  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.length,  negative  +  2);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  negative  +  2);	  int    v    =    Math.min(factorials.length,    negative);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
229	[BUG]  [BUGGY]  if(u  ==  -1)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(u  ==  -1)  {  v  =  -v;  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  ==  -1)  {  v  =  -v;  }	  if(v    >    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
230	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  Math.log(k);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)/  Math.log(k);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  Math.log(k);	  int    v    =(int)Math.abs(u)/    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
231	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  k)+  Math.abs(k);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  k)+  Math.abs(k);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  k)+  Math.abs(k);	  int    v    =(int)Math.pow(10,    u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
232	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u)+  Math.pow(10,  q);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  u)+  Math.pow(10,  q);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u)+  Math.pow(10,  q);	  int    v    =(int)Math.pow(10,    u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
233	[BUG]  [BUGGY]  int  v  =  Math.min(factororials.length,  u);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factororials.length,  u);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factororials.length,  u);	  int    v    =    Math.min(u,    factorials.length);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
234	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  -u  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  -u  -  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  -u  -  1);	  int    v    =(int)Math.pow(10,    -u);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
235	[BUG]  [BUGGY]  int  v  =(int)Math.log(u)/  3;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.log(u)/  3;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.log(u)/  3;	  int    v    =(int)Math.abs(u)/    3;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
236	[BUG]  [BUGGY]  if(v  <  =  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(v  <  =  0)  {  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  <  =  0)  {	  if(u    <    0)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
237	[BUG]  [BUGGY]  char  v  =(char)Math.pow(10,  q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  char  v  =(char)Math.pow(10,  q);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =(char)Math.pow(10,  q);	  int    v    =(int)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
238	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  u)+  Math.abs(k);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.pow(10,  u)+  Math.abs(k);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.pow(10,  u)+  Math.abs(k);	  float    v    =(float)Math.abs(u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
239	[BUG]  [BUGGY]  if(v  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[q];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(v  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[q];  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[q];  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    +=    factorials[q];    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
240	[BUG]  [BUGGY]  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[q];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[q];  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[q];  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    +=    factorials[q];    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
241	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  u).length;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.length,  u).length;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  u).length;	  int    v    =    Math.min(u,    factorials.length);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
242	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u)+  Math.abs(k  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  u)+  Math.abs(k  -  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u)+  Math.abs(k  -  1);	  int    v    =(int)Math.abs(u)+    Math.abs(k    -    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
243	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(Q_TWO_PI);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(Q_TWO_PI);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  Math.abs(Q_TWO_PI);	  int    v    =(int)Math.abs(u)/    Math.abs(negative);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
244	[BUG]  [BUGGY]  if(k  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(2  *  q);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(k  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(2  *  q);  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(k  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(2  *  q);  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(2    *    q);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
245	[BUG]  [BUGGY]  if(k  <  31)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(2  *  q);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(k  <  31)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(2  *  q);  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(k  <  31)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(2  *  q);  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(2    *    q);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
246	[BUG]  [BUGGY]  if(k  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(1  *  q);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(k  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(1  *  q);  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(k  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(1  *  q);  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(2    *    q);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
247	[BUG]  [BUGGY]  if(k  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(2  *  u);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(k  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(2  *  u);  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(k  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(2  *  u);  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(2    *    q);    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
248	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  k  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.length,  k  -  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  k  -  1);	  int    v    =    Math.min(factorials.length,    k    +    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
249	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  u  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.pow(10,  u  -  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.pow(10,  u  -  1);	  float    v    =(float)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
250	[BUG]  [BUGGY]  float  v  =(float)Math.ceil(u)/  Math.abs(v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.ceil(u)/  Math.abs(v);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.ceil(u)/  Math.abs(v);	  int    v    =(int)Math.ceil(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
251	[BUG]  [BUGGY]  char  v  =(char)Math.ceil(u)/  Math.abs(v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  char  v  =(char)Math.ceil(u)/  Math.abs(v);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =(char)Math.ceil(u)/  Math.abs(v);	  int    v    =(int)Math.ceil(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
252	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u)/  Math.PI);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.ceil(u)/  Math.PI);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.ceil(u)/  Math.PI);	  int    v    =(int)Math.ceil(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
253	[BUG]  [BUGGY]  if(v  <  0.0  ||  v  >  0.0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(v  <  0.0  ||  v  >  0.0)  {  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  <  0.0  ||  v  >  0.0)  {	  if(v    <    0    ||    v    >    0.0)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
254	[BUG]  [BUGGY]  Character  v  =  Math.min(factorials.length,  k);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  Character  v  =  Math.min(factorials.length,  k);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	Character  v  =  Math.min(factorials.length,  k);	  char    v    =    Math.min(factorials.length,    k);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
255	[BUG]  [BUGGY]  if(v  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(v  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
256	[BUG]  [BUGGY]  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
257	[BUG]  [BUGGY]  if(j  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(j  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(j  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    +=    factorials[j];    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
258	[BUG]  [BUGGY]  if(j  <  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(j  <  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(j  <  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    +=    factorials[j];    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
259	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  for(int  j  =  0;  j  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	for(int  j  =  0;  j  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    +=    factorials[j];    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
260	[BUG]  [BUGGY]  while((  v  &  1)  ==  0)  {  for(int  j  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  v  &  1)  ==  0)  {  for(int  j  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  v  &  1)  ==  0)  {  for(int  j  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    +=    factorials[j];    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
261	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u  -  1)/  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  u  -  1)/  2;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u  -  1)/  2;	  int    v    =(int)Math.pow(10,    u)/    2;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
262	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  u)/  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.pow(10,  u)/  2;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.pow(10,  u)/  2;	  int    v    =(int)Math.pow(10,    u)/    2;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
263	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u)/  Math.abs(p);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  u)/  Math.abs(p);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u)/  Math.abs(p);	  int    v    =(int)Math.abs(u)/    Math.abs(p);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
264	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u)/  Math.abs(p);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.ceil(u)/  Math.abs(p);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.ceil(u)/  Math.abs(p);	  int    v    =(int)Math.abs(u)/    Math.abs(p);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
265	[BUG]  [BUGGY]  float  v  =(float)Math.log(u)/  Math.abs(v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  float  v  =(float)Math.log(u)/  Math.abs(v);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.log(u)/  Math.abs(v);	  float    v    =(float)Math.abs(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
266	[BUG]  [BUGGY]  while((  v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k);  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k);  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k);    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
267	[BUG]  [BUGGY]  if(k  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.abs(v);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(k  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.abs(v);  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(k  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.abs(v);  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.abs(v);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
268	[BUG]  [BUGGY]  if(k  ==  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.abs(v);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(k  ==  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.abs(v);  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(k  ==  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.abs(v);  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.abs(v);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
269	[BUG]  [BUGGY]  if(k  >  0)  {  for(int  v  =  0;  v  <  u;  v++)  {  v  +=  Math.abs(v);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(k  >  0)  {  for(int  v  =  0;  v  <  u;  v++)  {  v  +=  Math.abs(v);  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(k  >  0)  {  for(int  v  =  0;  v  <  u;  v++)  {  v  +=  Math.abs(v);  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.abs(v);    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
270	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u)/  4;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.ceil(u)/  4;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.ceil(u)/  4;	  int    v    =(int)Math.abs(u)/    4;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
271	[BUG]  [BUGGY]  if(v  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(v  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    return    p;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
272	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(p  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(p  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    return    p;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
273	[BUG]  [BUGGY]  char  v  =(char)Math.abs(k)+  Math.abs(k);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  char  v  =(char)Math.abs(k)+  Math.abs(k);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =(char)Math.abs(k)+  Math.abs(k);	  char    v    =(char)Math.abs(u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
274	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)*  Math.abs(q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.abs(u)*  Math.abs(q);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)*  Math.abs(q);	  int    v    =(int)Math.abs(u)+    Math.abs(q);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
275	[BUG]  [BUGGY]  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
276	[BUG]  [BUGGY]  while((  v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  while((  v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	while((  v  &  1)  ==  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
277	[BUG]  [BUGGY]  if(v  <  =  0)  {  v  =  -1;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(v  <  =  0)  {  v  =  -1;  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  <  =  0)  {  v  =  -1;  }	  if(u    <    =    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
278	[BUG]  [BUGGY]  if(k  <  31)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(10,  v);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(k  <  31)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(10,  v);  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(k  <  31)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(10,  v);  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(10,    v);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
279	[BUG]  [BUGGY]  if(k  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(10,  v);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(k  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(10,  v);  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(k  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(10,  v);  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(10,    v);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
280	[BUG]  [BUGGY]  if(k  ==  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(10,  v);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(k  ==  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(10,  v);  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(k  ==  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(10,  v);  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(10,    v);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
281	[BUG]  [BUGGY]  if(k  >  0)  {  for(int  v  =  0;  v  <  u;  v++)  {  v  +=  Math.pow(10,  v);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(k  >  0)  {  for(int  v  =  0;  v  <  u;  v++)  {  v  +=  Math.pow(10,  v);  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(k  >  0)  {  for(int  v  =  0;  v  <  u;  v++)  {  v  +=  Math.pow(10,  v);  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    k;    v++)    {    v    +=    Math.pow(10,    v);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
282	[BUG]  [BUGGY]  if(v  >  0)  {  v  =  -1;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(v  >  0)  {  v  =  -1;  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  >  0)  {  v  =  -1;  }	  if(v    >    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
283	[BUG]  [BUGGY]  int  v  =(int)Math.log(u)/  Math.abs(k);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.log(u)/  Math.abs(k);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.log(u)/  Math.abs(k);	  int    v    =(int)Math.abs(u)/    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
284	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  EPSILON);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.size(),  EPSILON);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size(),  EPSILON);	  int    v    =    Math.min(factorials.size(),    negative);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
285	[BUG]  [BUGGY]  if(v  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(v  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
286	[BUG]  [BUGGY]  if(k  ==  1)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(k  ==  1)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(k  ==  1)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
287	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  negatives.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.length,  negatives.length);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  negatives.length);	  int    v    =    Math.min(factorials.length,    negative);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
288	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  negative,  u);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.length,  negative,  u);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  negative,  u);	  int    v    =    Math.min(factorials.length,    negative);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
289	[BUG]  [BUGGY]  if(v  <  0)  {  if(u  >  0)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(v  <  0)  {  if(u  >  0)  {  v  =  -v;  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  <  0)  {  if(u  >  0)  {  v  =  -v;  }	  if(k    ==    31)    {    if(u    >    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
290	[BUG]  [BUGGY]  if(v  <  0)  {  if(k  ==  31)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(v  <  0)  {  if(k  ==  31)  {  v  =  -v;  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  <  0)  {  if(k  ==  31)  {  v  =  -v;  }	  if(k    ==    31)    {    if(u    >    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
291	[BUG]  [BUGGY]  char  v  =(char)Math.pow(10,  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  char  v  =(char)Math.pow(10,  0);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =(char)Math.pow(10,  0);	  int    v    =(int)Math.pow(10,    0);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
292	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u  +  1)/  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.ceil(u  +  1)/  2;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.ceil(u  +  1)/  2;	  int    v    =(int)Math.ceil(u)/    2;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
293	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u  /  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  u  /  1);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u  /  1);	  int    v    =(int)Math.pow(10,    u    +    1);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
294	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  positive,  u);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =  Math.min(factorials.length,  positive,  u);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  positive,  u);	  int    v    =    Math.min(factorials.length,    positive);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
295	[BUG]  [BUGGY]  if(v  <  0)  {  v  =  -1;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(v  <  0)  {  v  =  -1;  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  <  0)  {  v  =  -1;  }	  if(v    <    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
296	[BUG]  [BUGGY]  int  v  =(int)Math.log(u)*  Math.abs(k);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.log(u)*  Math.abs(k);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.log(u)*  Math.abs(k);	  int    v    =(int)Math.abs(u)*    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
297	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u)*  Math.abs(k);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  u)*  Math.abs(k);  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u)*  Math.abs(k);	  int    v    =(int)Math.abs(u)*    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
298	[BUG]  [BUGGY]  if(v  ==  0)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(v  ==  0)  {  v  =  -v;  }  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  ==  0)  {  v  =  -v;  }	  if(q    ==    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
299	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u)/  3;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  int  v  =(int)Math.pow(10,  u)/  3;  [BUGGY]      if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u)/  3;	  int    v    =(int)Math.abs(u)/    3;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
300	[BUG]  [BUGGY]  if(v  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  if(v  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
301	[BUG]  [BUGGY]  for(int  k  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative      [BUGGY]  for(int  k  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	for(int  k  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }	  if(u    >    0)    {    for(int    v    =    0;    v    <    factorials.length;    ++k)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
