bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  0);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.pow(10,  0);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  0);	      int    v    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
2	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  q);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.pow(10,  q);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  q);	      int    v    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
3	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  u);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  float  v  =(float)Math.pow(10,  u);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.pow(10,  u);	      int    v    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
4	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.pow(10,  u  +  1);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u  +  1);	      int    v    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
5	[BUG]  [BUGGY]  if(u  >=  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(u  >=  0)  {  [BUGGY]    v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  >=  0)  {	  if(v    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
6	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  negative);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(factorials.length,  negative);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  negative);	      int    v    =    Math.min(factorials.length,    k);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
7	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(factorials.length,  2);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  2);	      int    v    =    Math.min(factorials.length,    k);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
8	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  k  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(factorials.length,  k  +  1);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  k  +  1);	      int    v    =    Math.min(factorials.length,    k);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
9	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(factorials.length,  1);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  1);	      int    v    =    Math.min(factorials.length,    0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
10	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(factorials.length,  3);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  3);	      int    v    =    Math.min(factorials.length,    0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
11	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(factorials.length,  4);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  4);	      int    v    =    Math.min(factorials.length,    0);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
12	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
13	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
14	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }  [BUGGY]    v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  return  p;  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
15	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  }  [BUGGY]    v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
16	[BUG]  [BUGGY]  v  =  -v;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  v  =  -v;  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	v  =  -v;	      if(u    >    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
17	[BUG]  [BUGGY]  if(k  ==  31)  {  if(u  >  0)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(k  ==  31)  {  if(u  >  0)  {  v  =  -v;  }  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(k  ==  31)  {  if(u  >  0)  {  v  =  -v;  }	      if(u    >    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
18	[BUG]  [BUGGY]  if(u  <  =  0)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(u  <  =  0)  {  v  =  -v;  }  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  <  =  0)  {  v  =  -v;  }	      if(u    >    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
19	[BUG]  [BUGGY]  if(u  <  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(u  <  0)  {  [BUGGY]    v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  <  0)  {	  if(v    <    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
20	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  2  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.abs(u)/  2  +  1;  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  2  +  1;	      int    v    =(int)Math.abs(u)/    2;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
21	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  3;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.abs(u)/  3;  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  3;	      int    v    =(int)Math.abs(u)/    2;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
22	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  4;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.abs(u)/  4;  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  4;	      int    v    =(int)Math.abs(u)/    2;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
23	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)+  Math.abs(v);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  float  v  =(float)Math.abs(u)+  Math.abs(v);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)+  Math.abs(v);	      int    v    =(int)Math.abs(u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
24	[BUG]  [BUGGY]  char  v  =(char)Math.abs(u)+  Math.abs(v);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  char  v  =(char)Math.abs(u)+  Math.abs(v);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =(char)Math.abs(u)+  Math.abs(v);	      int    v    =(int)Math.abs(u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
25	[BUG]  [BUGGY]  int  v  =  Math.min(u,  factorials.length);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(u,  factorials.length);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(u,  factorials.length);	      int    v    =    Math.min(factorials.length,    u);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
26	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  q);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(factorials.size(),  q);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size(),  q);	      int    v    =    Math.min(factorials.size()    -    1,    q);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
27	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size()  -  1,  u);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(factorials.size()  -  1,  u);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size()  -  1,  u);	      int    v    =    Math.min(factorials.size()    -    1,    q);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
28	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size()  +  1,  q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(factorials.size()  +  1,  q);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size()  +  1,  q);	      int    v    =    Math.min(factorials.size()    -    1,    q);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
29	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size()  -  1,  p);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(factorials.size()  -  1,  p);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size()  -  1,  p);	      int    v    =    Math.min(factorials.size()    -    1,    q);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
30	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(k);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(k);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  Math.abs(k);	      int    v    =(int)Math.abs(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
31	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(negative);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(negative);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  Math.abs(negative);	      int    v    =(int)Math.abs(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
32	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  2.0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.abs(u)/  2.0;  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  2.0;	      int    v    =(int)Math.abs(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
33	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(p);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(p);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  Math.abs(p);	      int    v    =(int)Math.abs(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
34	[BUG]  [BUGGY]  if(u  ==  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(u  ==  0)  {  [BUGGY]    v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  ==  0)  {	  if(v    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
35	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(factorials.size(),  2);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size(),  2);	      int    v    =    Math.min(factorials.size(),    p);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
36	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  negative);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(factorials.size(),  negative);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size(),  negative);	      int    v    =    Math.min(factorials.size(),    p);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
37	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(factorials.size(),  0);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size(),  0);	      int    v    =    Math.min(factorials.size(),    p);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
38	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)+  Math.abs(k  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.abs(u)+  Math.abs(k  -  1);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)+  Math.abs(k  -  1);	      int    v    =(int)Math.abs(u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
39	[BUG]  [BUGGY]  char  v  =(char)Math.abs(u)+  Math.abs(k);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  char  v  =(char)Math.abs(u)+  Math.abs(k);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =(char)Math.abs(u)+  Math.abs(k);	      int    v    =(int)Math.abs(u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
40	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)+  Math.abs(k  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.abs(u)+  Math.abs(k  +  1);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)+  Math.abs(k  +  1);	      int    v    =(int)Math.abs(u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
41	[BUG]  [BUGGY]  if(v  >  0)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(v  >  0)  {  v  =  -v;  }  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  >  0)  {  v  =  -v;  }	      if(u    >    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
42	[BUG]  [BUGGY]  if(q  ==  0)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(q  ==  0)  {  v  =  -v;  }  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(q  ==  0)  {  v  =  -v;  }	      if(u    >    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
43	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)+  Math.abs(k);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  float  v  =(float)Math.abs(u)+  Math.abs(k);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)+  Math.abs(k);	      int    v    =(int)Math.abs(u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
44	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)*  Math.abs(k);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.abs(u)*  Math.abs(k);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)*  Math.abs(k);	      int    v    =(int)Math.abs(u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
45	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)+  Math.abs(q);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.abs(u)+  Math.abs(q);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)+  Math.abs(q);	      int    v    =(int)Math.abs(u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
46	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)/  Math.abs(v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  float  v  =(float)Math.abs(u)/  Math.abs(v);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)/  Math.abs(v);	      int    v    =(int)Math.abs(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
47	[BUG]  [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.abs(u)/  Math.abs(q);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.abs(u)/  Math.abs(q);	      int    v    =(int)Math.abs(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
48	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  -u);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.pow(10,  -u);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  -u);	      int    v    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
49	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.length,  positive);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(factorials.length,  positive);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.length,  positive);	      int    v    =    Math.min(factorials.length,    q);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
50	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u)/  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.ceil(u)/  2;  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.ceil(u)/  2;	      int    v    =(int)Math.abs(u)/    2;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
51	[BUG]  [BUGGY]  float  v  =(float)Math.abs(u)/  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  float  v  =(float)Math.abs(u)/  2;  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	float  v  =(float)Math.abs(u)/  2;	      int    v    =(int)Math.abs(u)/    2;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
52	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.abs(v);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.abs(v);  }  [BUGGY]    v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.abs(v);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
53	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(10,  v);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(10,  v);  }  [BUGGY]    v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(10,  v);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
54	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }  [BUGGY]    v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  =  -v;  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
55	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(2  *  q);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(2  *  q);  }  [BUGGY]    v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  >  0)  {  for(int  v  =  0;  v  <  k;  v++)  {  v  +=  Math.pow(2  *  q);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
56	[BUG]  [BUGGY]  if(v  <  0)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(v  <  0)  {  v  =  -v;  }  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  <  0)  {  v  =  -v;  }	      if(u    >    0)    {    v    =    -v;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
57	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.pow(10,  y);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  y);	      int    v    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
58	[BUG]  [BUGGY]  char  v  =  Math.min(factorials.length,  k);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  char  v  =  Math.min(factorials.length,  k);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =  Math.min(factorials.length,  k);	      int    v    =    Math.min(factorials.length,    k);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
59	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u)+  Math.abs(k);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.pow(10,  u)+  Math.abs(k);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u)+  Math.abs(k);	      int    v    =(int)Math.abs(u)+    Math.abs(k);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
60	[BUG]  [BUGGY]  if(v  <  0  ||  v  >  0.0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(v  <  0  ||  v  >  0.0)  {  [BUGGY]    v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(v  <  0  ||  v  >  0.0)  {	  if(v    <    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
61	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u)/  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.pow(10,  u)/  2;  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u)/  2;	      int    v    =(int)Math.abs(u)/    2;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
62	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u)/  Math.abs(v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.ceil(u)/  Math.abs(v);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.ceil(u)/  Math.abs(v);	      int    v    =(int)Math.abs(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
63	[BUG]  [BUGGY]  int  v  =(int)Math.log(u)/  Math.abs(v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.log(u)/  Math.abs(v);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.log(u)/  Math.abs(v);	      int    v    =(int)Math.abs(u)/    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
64	[BUG]  [BUGGY]  char  v  =  Math.min(factorials.length,  u);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  char  v  =  Math.min(factorials.length,  u);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	char  v  =  Math.min(factorials.length,  u);	      int    v    =    Math.min(factorials.length,    u);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
65	[BUG]  [BUGGY]  int  v  =  Math.min(factorials.size(),  positive);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =  Math.min(factorials.size(),  positive);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =  Math.min(factorials.size(),  positive);	      int    v    =    Math.min(factorials.size(),    p);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
66	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u)+  Math.abs(v);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  int  v  =(int)Math.pow(10,  u)+  Math.abs(v);  [BUGGY]    if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	int  v  =(int)Math.pow(10,  u)+  Math.abs(v);	      int    v    =(int)Math.abs(u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
67	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k);  }  [BUGGY]    v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
68	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[q];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[q];  }  [BUGGY]    v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[q];  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
69	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative    [BUGGY]  if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }  [BUGGY]    v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	553	553	2	replace	if(u  >  0)  {  for(int  v  =  0;  v  <  factorials.length;  ++k)  {  v  +=  factorials[j];  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
