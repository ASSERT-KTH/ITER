bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(v  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(v  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  if(u    ==    0    ||    v    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  if(u  ==  0  ||  v  >  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0  ||  v  >  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0  ||  v  >  0)  {	  if(u    ==    0    ||    v    <    0)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
3	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0)  {  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0)  {  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
4	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  return  p  +  k;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0)  {  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  return  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0)  {  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  return  p  +  k;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
5	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
6	[BUG]  [BUGGY]  if(p  <  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  <  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  <  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
7	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
8	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >=  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  0  ||  v  >=  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  =  0  ||  v  >=  0)  {	  if(u    >    0    ||    v    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
9	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  v  =  -p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
10	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -1;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -1;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -1;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
11	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  v  =  b;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  v  =  b;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  31;  k++)  {  v  =  b;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    b;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
12	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  b;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  b;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  b;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    b;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
13	[BUG]  [BUGGY]  if(p  ==  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  b;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  b;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  b;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    b;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
14	[BUG]  [BUGGY]  Integer  p  =(Integer)Math.floor(q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)Math.floor(q);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)Math.floor(q);	  Integer    p    =(Integer)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
15	[BUG]  [BUGGY]  Integer  p  =(Integer)Math.ceil(v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)Math.ceil(v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)Math.ceil(v);	  Integer    p    =(Integer)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
16	[BUG]  [BUGGY]  Integer  p  =(Integer)Math.floor(u);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)Math.floor(u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)Math.floor(u);	  Integer    p    =(Integer)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
17	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  0  ||  v  >  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  =  0  ||  v  >  0)  {	  if(u    <    0    ||    v    >    0)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
18	[BUG]  [BUGGY]  if(u  <  0  ||  v  ==  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  0  ||  v  ==  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  0  ||  v  ==  0)  {	  if(u    <    0    ||    v    >    0)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
19	[BUG]  [BUGGY]  if(u  ==  0  ||  v  ==  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0  ||  v  ==  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0  ||  v  ==  31)  {	  if(u    >    0    ||    v    ==    31)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
20	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  ==  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  0  ||  v  ==  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  =  0  ||  v  ==  31)  {	  if(u    >    0    ||    v    ==    31)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
21	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	  while((    u    &    1)    ==    0    &&    p    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
22	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  p  <  =  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  p  <  =  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  p  <  =  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	  while((    u    &    1)    ==    0    &&    p    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
23	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)!=  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)!=  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	  while((    u    &    1)    ==    0    &&    p    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
24	[BUG]  [BUGGY]  if(p  ==  0)  {  if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }	  if(p    ==    0)    {    if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
25	[BUG]  [BUGGY]  int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }	  for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
26	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  1;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  1;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  1;  }	  for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
27	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  ==  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  0  ||  v  ==  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  =  0  ||  v  ==  0)  {	  if(u    >    0    ||    v    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
28	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p  +  1;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p  +  1;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  31;  k++)  {  v  =  p  +  1;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p    +    1;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
29	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p  +  1;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p  +  1;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p  +  1;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p    +    1;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
30	[BUG]  [BUGGY]  if(p  ==  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p  +  1;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p  +  1;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p  +  1;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p    +    1;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
31	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }	  while((    u    &    1)    ==    0    &&    p    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
32	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  p  <  =  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  p  <  =  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  p  <  =  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }	  while((    u    &    1)    ==    0    &&    p    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }	  while((    u    &    1)    ==    0    &&    p    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
34	[BUG]  [BUGGY]  pendigs.add(p);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  pendigs.add(p);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	pendigs.add(p);	  if(p    <    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
35	[BUG]  [BUGGY]  pend(k,  p);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  pend(k,  p);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	pend(k,  p);	  if(p    <    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
36	[BUG]  [BUGGY]  p  =  p;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  p  =  p;  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	p  =  p;	  if(p    <    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
37	[BUG]  [BUGGY]  p  =  p.next();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  p  =  p.next();  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	p  =  p.next();	  if(p    <    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
38	[BUG]  [BUGGY]  Integer  p  =(Integer)Math.ceil(p);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)Math.ceil(p);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)Math.ceil(p);	  Integer    p    =(Integer)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
39	[BUG]  [BUGGY]  Integer  p  =(Integer)Math.log(p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)Math.log(p);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)Math.log(p);	  Integer    p    =(Integer)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
40	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  ||(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
41	[BUG]  [BUGGY]  if(u  ==  0  ||  v  >=  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0  ||  v  >=  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0  ||  v  >=  31)  {	  if(u    >    0    ||    v    >=    31)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
42	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  q;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  q;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  q;  k++)  {  u  =  p  +  k;  }	  for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
43	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  *  k;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  *  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  *  k;  }	  for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
44	[BUG]  [BUGGY]  int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	  for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
45	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -k;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    30;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
46	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  30;  k++)  {  v  =  -k;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    30;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
47	[BUG]  [BUGGY]  if(u  ==  0  ||  p  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0  ||  p  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0  ||  p  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -k;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    30;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
48	[BUG]  [BUGGY]  if(p  ==  0)  {  if(u  >=  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  if(u  >=  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  if(u  >=  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }	  if(p    ==    0)    {    if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
49	[BUG]  [BUGGY]  if(u  >=  0  ||  v  >  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >=  0  ||  v  >  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >=  0  ||  v  >  31)  {	  if(u    <    0    ||    v    >    31)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
50	[BUG]  [BUGGY]  if(u  <  31  ||  v  >  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  31  ||  v  >  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  31  ||  v  >  31)  {	  if(u    <    0    ||    v    >    31)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
51	[BUG]  [BUGGY]  if(u  ==  0  ||  v  >  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0  ||  v  >  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0  ||  v  >  31)  {	  if(u    <    0    ||    v    >    31)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
52	[BUG]  [BUGGY]  Integer  v  =  p.getIntValue()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  v  =  p.getIntValue()  +  1;  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p.getIntValue()  +  1;	  Integer    v    =    p.getIntValue();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
53	[BUG]  [BUGGY]  Integer  v  =  p.getIntValue()  *  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  v  =  p.getIntValue()  *  2;  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p.getIntValue()  *  2;	  Integer    v    =    p.getIntValue();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
54	[BUG]  [BUGGY]  Integer  v  =  p.getIntValue()  *  4;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  v  =  p.getIntValue()  *  4;  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p.getIntValue()  *  4;	  Integer    v    =    p.getIntValue();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
55	[BUG]  [BUGGY]  Integer  u  =  p.intValue()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  u  =  p.intValue()  +  1;  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  u  =  p.intValue()  +  1;	  Integer    u    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
56	[BUG]  [BUGGY]  Integer  u  =  p.intValue()  *  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  u  =  p.intValue()  *  2;  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  u  =  p.intValue()  *  2;	  Integer    u    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
57	[BUG]  [BUGGY]  Integer  u  =  gcd.intValue();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  u  =  gcd.intValue();  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  u  =  gcd.intValue();	  Integer    u    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
58	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
59	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)!=  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)!=  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
60	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)!=  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)!=  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)!=  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
61	[BUG]  [BUGGY]  int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
62	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }	  for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
63	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  3;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  3;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  3;  k++)  {  v  =  p;  }	  for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
64	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
65	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  v  =  p;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
66	[BUG]  [BUGGY]  if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)&&(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)&&(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)&&(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }	  if(p    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)    ||(v    ==    0))    {    return    Math.abs(u)/    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
67	[BUG]  [BUGGY]  if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  >=  0)||(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  >=  0)||(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  >=  0)||(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }	  if(p    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)    ||(v    ==    0))    {    return    Math.abs(u)/    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
68	[BUG]  [BUGGY]  pendSum  =  Math.pow(10,  p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  pendSum  =  Math.pow(10,  p);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	pendSum  =  Math.pow(10,  p);	  if(u    >    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)/    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
69	[BUG]  [BUGGY]  pends.add(p);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  pends.add(p);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	pends.add(p);	  if(u    >    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)/    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
70	[BUG]  [BUGGY]  pendSum  =  Math.pow(100,  p);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  pendSum  =  Math.pow(100,  p);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	pendSum  =  Math.pow(100,  p);	  if(u    >    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)/    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
71	[BUG]  [BUGGY]  pendSum  =  Math.abs(p);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  pendSum  =  Math.abs(p);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	pendSum  =  Math.abs(p);	  if(u    >    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)/    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
72	[BUG]  [BUGGY]  if(u  ==  -1  ||  v  ==  -1)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  -1  ||  v  ==  -1)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  -1  ||  v  ==  -1)  {	  if(u    ==    -1)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
73	[BUG]  [BUGGY]  if(u  ==  -1  ||  v  ==  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  -1  ||  v  ==  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  -1  ||  v  ==  0)  {	  if(u    ==    -1)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
74	[BUG]  [BUGGY]  if(p  ==  0)  {  if(u  <  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  if(u  <  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  if(u  <  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }	  if(p    ==    0)    {    if(u    >    1)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
75	[BUG]  [BUGGY]  if(p  ==  0)  {  if(v  >  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  if(v  >  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  if(v  >  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }	  if(p    ==    0)    {    if(u    >    1)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
76	[BUG]  [BUGGY]  if(p  ==  0)  {  if(u  >=  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  if(u  >=  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  if(u  >=  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }	  if(p    ==    0)    {    if(u    >    1)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
77	[BUG]  [BUGGY]  if(u  <  =  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  =  0)  {	  if(u    <    0)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
78	[BUG]  [BUGGY]  p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  if(u    ==    0    ||    p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
79	[BUG]  [BUGGY]  if(p  ==  0  ||  u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0  ||  u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0  ||  u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  if(u    ==    0    ||    p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
80	[BUG]  [BUGGY]  if(u  >  0  ||  v  >  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0  ||  v  >  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  ||  v  >  0)  {	  if(u    >=    0    ||    v    >    0)    {    	non-compiled	[CE]  <identifier>  expected	96	None	replace
81	[BUG]  [BUGGY]  if(u  >=  0  ||  v  ==  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >=  0  ||  v  ==  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >=  0  ||  v  ==  0)  {	  if(u    >=    0    ||    v    >    0)    {    	non-compiled	[CE]  <identifier>  expected	96	None	replace
82	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)!=  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)!=  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  while((    u    &    1)    ==    0    &&    v    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
83	[BUG]  [BUGGY]  try  {  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  try  {  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	try  {  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  while((    u    &    1)    ==    0    &&    v    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
84	[BUG]  [BUGGY]  if(u  >  0  &&  v  <  =  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0  &&  v  <  =  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  &&  v  <  =  31)  {	  if(u    >    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
85	[BUG]  [BUGGY]  if(u  ==  0  &&  v  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0  &&  v  <  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0  &&  v  <  31)  {	  if(u    >    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
86	[BUG]  [BUGGY]  if(u  >  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0  &&  k  <  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  &&  k  <  31)  {	  if(u    >    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
87	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)!=  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)!=  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
88	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)!=  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)!=  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)!=  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
89	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    p    =    p;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
90	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    p    =    p;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
91	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
92	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
93	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
94	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
95	[BUG]  [BUGGY]  if(p  <  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  <  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  <  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
96	[BUG]  [BUGGY]  if(u  <  =  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  =  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
97	[BUG]  [BUGGY]  if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
98	[BUG]  [BUGGY]  if(p!=  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p!=  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p!=  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
99	[BUG]  [BUGGY]  if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
100	[BUG]  [BUGGY]  Integer  p  =(Integer)factorials.get(p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)factorials.get(p);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)factorials.get(p);	  Integer    p    =(Integer)mappings.get(p);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
101	[BUG]  [BUGGY]  Integer  p  =(Integer)this.factorials.get(p);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)this.factorials.get(p);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)this.factorials.get(p);	  Integer    p    =(Integer)mappings.get(p);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
102	[BUG]  [BUGGY]  Integer  p  =(Integer)mappings.get(q);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)mappings.get(q);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)mappings.get(q);	  Integer    p    =(Integer)mappings.get(p);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
103	[BUG]  [BUGGY]  Integer  p  =(Integer)factororials.get(p);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)factororials.get(p);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)factororials.get(p);	  Integer    p    =(Integer)mappings.get(p);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
104	[BUG]  [BUGGY]  Integer  p  =  gcd.intValue();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =  gcd.intValue();  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =  gcd.intValue();	  Integer    p    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
105	[BUG]  [BUGGY]  Integer  p  =  p.intValue()  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =  p.intValue()  +  1;  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =  p.intValue()  +  1;	  Integer    p    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
106	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  30;  k++)  {  v  =  -p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    30;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
107	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    30;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
108	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -1;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -1;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -1;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    30;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
109	[BUG]  [BUGGY]  Integer  v  =  p.intValue()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  v  =  p.intValue()  +  1;  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p.intValue()  +  1;	  Integer    v    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
110	[BUG]  [BUGGY]  Integer  v  =  gcd.intValue();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  v  =  gcd.intValue();  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  gcd.intValue();	  Integer    v    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
111	[BUG]  [BUGGY]  Integer  v  =  p.intValue()  *  2;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  v  =  p.intValue()  *  2;  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p.intValue()  *  2;	  Integer    v    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
112	[BUG]  [BUGGY]  Integer  v  =  p.getIntValue(u);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  v  =  p.getIntValue(u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p.getIntValue(u);	  Integer    v    =    p.getIntValue(q);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
113	[BUG]  [BUGGY]  Integer  v  =  p.getIntValue(k);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  v  =  p.getIntValue(k);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p.getIntValue(k);	  Integer    v    =    p.getIntValue(q);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
114	[BUG]  [BUGGY]  Integer  v  =  p.getIntValue(gcd);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  v  =  p.getIntValue(gcd);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p.getIntValue(gcd);	  Integer    v    =    p.getIntValue(q);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
115	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    q;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
116	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    q;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
117	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  1;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  1;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  1;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    q;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
118	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
119	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  v  =  -k;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
120	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  2)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  2)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  (v  &  2)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
121	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  29;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  29;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  29;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    29;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
122	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    29;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
123	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    29;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
124	[BUG]  [BUGGY]  if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    30;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
125	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    30;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
126	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    30;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
127	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    30;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
128	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  29;  k++)  {  v  =  -k;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    29;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
129	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -k;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    29;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
130	[BUG]  [BUGGY]  if(p  ==  1)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  1)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  1)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -k;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    29;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
131	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  p  <  =  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  p  <  =  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  p  <  =  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    p    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
132	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)!=  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)!=  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    p    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
133	[BUG]  [BUGGY]  if(u  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  if(p    <    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
134	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  0  ||  v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  0  ||  v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  if(p    <    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
135	[BUG]  [BUGGY]  if(u  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }	  if(p    <    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
136	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  29;  k++)  {  v  =  -p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    29;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
137	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -1;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -1;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -1;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    29;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
138	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)!=  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)!=  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    v    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
139	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -1;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -1;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -1;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
140	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -p;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
141	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -p;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
142	[BUG]  [BUGGY]  int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
143	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  3;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  3;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  3;  k++)  {  v  =  -k;  }	  for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
144	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }	  for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
145	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    4;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
146	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    4;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
147	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    4;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
148	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
149	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
150	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
151	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
152	[BUG]  [BUGGY]  if(u  >  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0  ||  k  <  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  ||  k  <  31)  {	  if(v    >    0    ||    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
153	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p  +  1;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p  +  1;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p  +  1;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    4;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
154	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  +  k;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
155	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0)  {  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0)  {  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  +  k;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
156	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  *  k;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  *  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  *  k;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
157	[BUG]  [BUGGY]  if(u  <  =  p)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  p)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  =  p)  {	  if(u    >    p)    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
158	[BUG]  [BUGGY]  if(p  >  u)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  u)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  u)  {	  if(u    >    p)    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
159	[BUG]  [BUGGY]  if(u  ==  p)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  p)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  p)  {	  if(u    >    p)    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
160	[BUG]  [BUGGY]  if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
161	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
162	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
163	[BUG]  [BUGGY]  if(v  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(v  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
164	[BUG]  [BUGGY]  if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
165	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
166	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
167	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	  if(p    ==    1)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
168	[BUG]  [BUGGY]  if(p  ==  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  1;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  1;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  1;  }	  if(p    ==    1)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
169	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  <  32)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  0  ||  v  <  32)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  =  0  ||  v  <  32)  {	  if(u    >    0    ||    v    <    32)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
170	[BUG]  [BUGGY]  if(u  ==  0  ||  v  <  32)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0  ||  v  <  32)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0  ||  v  <  32)  {	  if(u    >    0    ||    v    <    32)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
171	[BUG]  [BUGGY]  int  p  =  gcd.intValue();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  p  =  gcd.intValue();  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	int  p  =  gcd.intValue();	  int    p    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
172	[BUG]  [BUGGY]  int  p  =  u.intValue();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  p  =  u.intValue();  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	int  p  =  u.intValue();	  int    p    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
173	[BUG]  [BUGGY]  int  p  =  g.intValue();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  p  =  g.intValue();  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	int  p  =  g.intValue();	  int    p    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
174	[BUG]  [BUGGY]  int  p  =  p.intValue()  +  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  p  =  p.intValue()  +  1;  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	int  p  =  p.intValue()  +  1;	  int    p    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
175	[BUG]  [BUGGY]  luate(gcd,  p,  v);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  luate(gcd,  p,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	luate(gcd,  p,  v);	  luate(gcd,    u,    v);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
176	[BUG]  [BUGGY]  luate(gcd,  u,  p);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  luate(gcd,  u,  p);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	luate(gcd,  u,  p);	  luate(gcd,    u,    v);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
177	[BUG]  [BUGGY]  luate(p,  u,  v);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  luate(p,  u,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	luate(p,  u,  v);	  luate(gcd,    u,    v);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
178	[BUG]  [BUGGY]  if(u  <  0  ||  v  <  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  0  ||  v  <  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  0  ||  v  <  0)  {	  if(u    <    =    0    ||    v    <    0)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
179	[BUG]  [BUGGY]  if(u  ==  0  ||  v  <  =  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0  ||  v  <  =  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0  ||  v  <  =  0)  {	  if(u    <    =    0    ||    v    <    0)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
180	[BUG]  [BUGGY]  if(q  ==  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(q  ==  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(q  ==  0)  {	  if(p    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
181	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  29;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  29;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  29;  k++)  {  v  =  p;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    29;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
182	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  p;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    29;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
183	[BUG]  [BUGGY]  try  {  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  try  {  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	try  {  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    v    <    =    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
184	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)!=  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)!=  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)!=  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    v    <    =    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
185	[BUG]  [BUGGY]  Integer  p  =(Integer)Math.rint(q);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)Math.rint(q);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)Math.rint(q);	  Integer    p    =(Integer)Math.rint(v);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
186	[BUG]  [BUGGY]  Integer  p  =(Integer)Math.rint(u);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)Math.rint(u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)Math.rint(u);	  Integer    p    =(Integer)Math.rint(v);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
187	[BUG]  [BUGGY]  Integer  p  =(Integer)Math.rint(p);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)Math.rint(p);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)Math.rint(p);	  Integer    p    =(Integer)Math.rint(v);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
188	[BUG]  [BUGGY]  Integer  p  =(int)Math.rint(v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(int)Math.rint(v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(int)Math.rint(v);	  Integer    p    =(Integer)Math.rint(v);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
189	[BUG]  [BUGGY]  if(u  ==  0  ||  v  <  =  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0  ||  v  <  =  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0  ||  v  <  =  31)  {	  if(u    ==    0    ||    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
190	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
191	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
192	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  if(p  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0)  {  if(p  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0)  {  if(p  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
193	[BUG]  [BUGGY]  if(p  <  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  <  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  <  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
194	[BUG]  [BUGGY]  if(u  <  0  ||  v  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  0  ||  v  <  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  0  ||  v  <  31)  {	  if(u    >    0    ||    v    <    =    31)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
195	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  6;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  6;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  6;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    6;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
196	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  6;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  6;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  6;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    6;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
197	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  6;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  6;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  6;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    6;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
198	[BUG]  [BUGGY]  if(p!=  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p!=  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p!=  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
199	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
200	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
201	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
202	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  <  =  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  0  ||  v  <  =  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  =  0  ||  v  <  =  0)  {	  if(u    >    0    ||    v    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
203	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    p    =    p;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
204	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    p    =    p;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
205	[BUG]  [BUGGY]  float  p  =  p.intValue();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  p  =  p.intValue();  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	float  p  =  p.intValue();	  int    p    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
206	[BUG]  [BUGGY]  int  p  =  q.intValue();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  p  =  q.intValue();  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	int  p  =  q.intValue();	  int    p    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
207	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
208	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -k;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
209	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -k;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
210	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  u  =  p  +  k;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
211	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  +  q;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  +  q;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  +  q;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
212	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  p  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  p  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  p  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    p    =    p;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
213	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  p  =  p;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  p  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  p  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    p    =    p;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
214	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  p  >  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  p  >  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  p  >  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    p    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
215	[BUG]  [BUGGY]  Integer  u  =  p.intValue()  +  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  u  =  p.intValue()  +  2;  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  u  =  p.intValue()  +  2;	  Integer    u    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
216	[BUG]  [BUGGY]  Integer  u  =  p.intValue()  +  4;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  u  =  p.intValue()  +  4;  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  u  =  p.intValue()  +  4;	  Integer    u    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
217	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    4;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
218	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  p  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  p  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  p  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    4;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
219	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  p  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  p  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  p  =  p;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
220	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
221	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
222	[BUG]  [BUGGY]  if(u  <  p)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  p)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  p)  {	  if(u    >    p)    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
223	[BUG]  [BUGGY]  if(u  >=  p)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >=  p)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >=  p)  {	  if(u    >    p)    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
224	[BUG]  [BUGGY]  while((  u  +  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  +  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  +  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    v    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
225	[BUG]  [BUGGY]  Integer  v  =  p.getIntValue(v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  v  =  p.getIntValue(v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p.getIntValue(v);	  if(u    >    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
226	[BUG]  [BUGGY]  Integer  v  =  p.doubleValue();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  v  =  p.doubleValue();  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p.doubleValue();	  if(u    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
227	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  b;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  b;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  b;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
228	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }	  for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
229	[BUG]  [BUGGY]  if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)-  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)-  Math.abs(v));  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)-  Math.abs(v));  }	  if(p    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)    ||(v    ==    0))    {    return    Math.abs(u)-    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
230	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  b;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  b;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  b;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    b;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
231	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -b;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -b;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -b;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    b;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
232	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  p  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  p  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  p  =  p;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    4;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
233	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p  +  1;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p  +  1;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p  +  1;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    4;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
234	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  v;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  v;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  v;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    4;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
235	[BUG]  [BUGGY]  if(v  <  0  ||  v  >  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  <  0  ||  v  >  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(v  <  0  ||  v  >  31)  {	  if(v    >    0    ||    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
236	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  0  ||  v  >  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  =  0  ||  v  >  31)  {	  if(v    >    0    ||    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
237	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  p;  }	  if(u    ==    0    ||    p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
238	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p  +  1;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p  +  1;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p  +  1;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p    +    1;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
239	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p  +  1;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p  +  1;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p  +  1;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p    +    1;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
240	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  p  +  1;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  p  +  1;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  p  +  1;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p    +    1;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
241	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  +  k;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
242	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p  +  k;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
243	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  u  =  p  +  k;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
244	[BUG]  [BUGGY]  Integer  p  =(Integer)Math.rint(q,  v);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)Math.rint(q,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)Math.rint(q,  v);	  Integer    p    =(Integer)Math.rint(v);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
245	[BUG]  [BUGGY]  if(u  >  0  ||  v  >=  32)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0  ||  v  >=  32)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  ||  v  >=  32)  {	  if(u    >    0    ||    v    <    32)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
246	[BUG]  [BUGGY]  if(p  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)  ||(v  ==  0))  {  return  Math.abs(u)+  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)  ||(v  ==  0))  {  return  Math.abs(u)+  Math.abs(v));  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)  ||(v  ==  0))  {  return  Math.abs(u)+  Math.abs(v));  }	  if(u    >    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)||(v    ==    0))    {    return    Math.abs(u)+    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
247	[BUG]  [BUGGY]  Integer  p  =  m.intValue();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =  m.intValue();  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =  m.intValue();	  Integer    p    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
248	[BUG]  [BUGGY]  luate(gcd,  u,  q);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  luate(gcd,  u,  q);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	luate(gcd,  u,  q);	  luate(gcd,    u,    v);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
249	[BUG]  [BUGGY]  Integer  p  =(Integer)mappings.get(p  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)mappings.get(p  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)mappings.get(p  +  1);	  Integer    p    =(Integer)mappings.get(p);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
250	[BUG]  [BUGGY]  Integer  p  =(Integer)mappings.get(p  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)mappings.get(p  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)mappings.get(p  -  1);	  Integer    p    =(Integer)mappings.get(p);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
251	[BUG]  [BUGGY]  if(p  >  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {	  if(p    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
252	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  >  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  v  >  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  v  >  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  while((    u    &    1)    ==    0    &&    v    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
253	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  while((    u    &    1)    ==    0    &&    v    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
254	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  +  k;  }	  for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
255	[BUG]  [BUGGY]  if(p  >  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  }	  if(p    ==    0)    {    if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
256	[BUG]  [BUGGY]  if(p  ==  0)  {  if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  }	  if(p    ==    0)    {    if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
257	[BUG]  [BUGGY]  if(p  <  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)+  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  <  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)+  Math.abs(v));  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  <  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)+  Math.abs(v));  }	  if(q    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)    ||(v    ==    0))    {    return    Math.abs(u)+    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
258	[BUG]  [BUGGY]  if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }	  if(p    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)    ||(v    ==    0))    {    return    Math.abs(u)/    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
259	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  v  =  p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
260	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
261	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  p;  }	  if(p    ==    0)    {    if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
262	[BUG]  [BUGGY]  int  p  =  p  +  k;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  p  =  p  +  k;  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	int  p  =  p  +  k;	  if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
263	[BUG]  [BUGGY]  Integer  p  =(Integer)gcd.clone();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)gcd.clone();  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)gcd.clone();	  if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
264	[BUG]  [BUGGY]  Integer  p  =(Integer)gcd.get(u);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)gcd.get(u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)gcd.get(u);	  if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
265	[BUG]  [BUGGY]  if(v  ==  0  ||  v  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  ==  0  ||  v  <  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(v  ==  0  ||  v  <  31)  {	  if(u    ==    0    ||    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
266	[BUG]  [BUGGY]  if(u  >=  0  ||  v  ==  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >=  0  ||  v  ==  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >=  0  ||  v  ==  31)  {	  if(u    ==    0    ||    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
267	[BUG]  [BUGGY]  Integer  v  =  p.getIntValue(0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  v  =  p.getIntValue(0);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p.getIntValue(0);	  Integer    v    =    p.getIntValue();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
268	[BUG]  [BUGGY]  Integer  v  =  p.getIntValue(q,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  v  =  p.getIntValue(q,  0);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p.getIntValue(q,  0);	  Integer    v    =    p.getIntValue(q);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
269	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  *  q;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  *  q;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  *  q;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    q;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
270	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  64;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  64;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  64;  k++)  {  u  =  p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
271	[BUG]  [BUGGY]  if(u  >  0  &&  v  >=  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0  &&  v  >=  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  &&  v  >=  0)  {	  if(u    >    0    ||    v    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
272	[BUG]  [BUGGY]  if(v  >  0  ||  v  >=  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  >  0  ||  v  >=  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(v  >  0  ||  v  >=  31)  {	  if(u    >    0    ||    v    >=    31)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
273	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  p  >  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  p  >  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  p  >  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	  while((    u    &    1)    ==    0    &&    p    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
274	[BUG]  [BUGGY]  Integer  v  =  p  +  k;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  v  =  p  +  k;  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p  +  k;	  if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
275	[BUG]  [BUGGY]  Integer  v  =  p  +  k.intValue();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  v  =  p  +  k.intValue();  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p  +  k.intValue();	  if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
276	[BUG]  [BUGGY]  Integer  p  =(Integer)p.clone();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)p.clone();  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)p.clone();	  if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
277	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  v  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  v  =  0;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  31;  k++)  {  v  =  0;  }	  for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
278	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  v  =  -p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
279	[BUG]  [BUGGY]  if(p  ==  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }	  if(p    ==    1)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
280	[BUG]  [BUGGY]  if(p  ==  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  *  k;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  *  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  *  k;  }	  if(p    ==    1)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
281	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  27;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  27;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  27;  k++)  {  v  =  p;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    29;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
282	[BUG]  [BUGGY]  if(p  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)  ||(v  ==  0))  {  return  (Math.abs(u)+  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)  ||(v  ==  0))  {  return  (Math.abs(u)+  Math.abs(v));  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)  ||(v  ==  0))  {  return  (Math.abs(u)+  Math.abs(v));  }	  if(q    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)+    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
283	[BUG]  [BUGGY]  if(p  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)/  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)/  Math.abs(v));  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)/  Math.abs(v));  }	  if(q    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)/    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
284	[BUG]  [BUGGY]  Integer  v  =  p.intValue()  +  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  v  =  p.intValue()  +  2;  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p.intValue()  +  2;	  Integer    v    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
285	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  p  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  p  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  p  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    p    =    p;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
286	[BUG]  [BUGGY]  if(p  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }	  if(u    >    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)/    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
287	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
288	[BUG]  [BUGGY]  if(p  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)  ||(v  ==  0))  {  return  (Math.abs(u)-  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)  ||(v  ==  0))  {  return  (Math.abs(u)-  Math.abs(v));  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)  ||(v  ==  0))  {  return  (Math.abs(u)-  Math.abs(v));  }	  if(q    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)-    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
289	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
290	[BUG]  [BUGGY]  if(p  >  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }	  if(p    ==    0)    {    if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
291	[BUG]  [BUGGY]  while((  u  +  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  +  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  +  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    k    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
292	[BUG]  [BUGGY]  While((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  While((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	While((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    k    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
293	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  p  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  p  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  p  =  p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
294	[BUG]  [BUGGY]  while((  u  +  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  +  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  +  1)  ==  0  &&(v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
295	[BUG]  [BUGGY]  if(u  >  0  &&  v  >=  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0  &&  v  >=  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  &&  v  >=  31)  {	  if(u    >    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
296	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  6;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  6;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  6;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    6;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
297	[BUG]  [BUGGY]  if(p  >  0)  {  if(u  >  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  if(u  >  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  if(u  >  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }	  if(p    ==    0)    {    if(u    >    1)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
298	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  v  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    v    <    =    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
299	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    v    <    =    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
300	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  29;  k++)  {  p  =  -p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  29;  k++)  {  p  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  29;  k++)  {  p  =  -p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    29;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
301	[BUG]  [BUGGY]  if(u  >  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  31)  {	  if(u    <    0    ||    v    >    31)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
302	[BUG]  [BUGGY]  if(u  >  0  ||  v  <  =  32)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0  ||  v  <  =  32)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  ||  v  <  =  32)  {	  if(u    >    0    ||    v    <    32)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
303	[BUG]  [BUGGY]  if(v  >  0  ||  v  <  32)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  >  0  ||  v  <  32)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(v  >  0  ||  v  <  32)  {	  if(u    >    0    ||    v    <    32)    {    	non-compiled	[CE]  <identifier>  expected	95	None	replace
304	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }	  for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
305	[BUG]  [BUGGY]  if(p  >  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
306	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -1;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -1;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -1;  }	  if(p    ==    0)    {    if(u    >    1)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
307	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  -p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
308	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
309	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -k;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
310	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
311	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }	  for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
312	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
313	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  try  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	try  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
314	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  *  k;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  *  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  *  k;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
315	[BUG]  [BUGGY]  Integer  v  =  p.getIntValue(q,  v);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  v  =  p.getIntValue(q,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p.getIntValue(q,  v);	  Integer    v    =    p.getIntValue(q);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
316	[BUG]  [BUGGY]  Integer  v  =  p.getIntValue(q  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  v  =  p.getIntValue(q  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p.getIntValue(q  +  1);	  Integer    v    =    p.getIntValue(q);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
317	[BUG]  [BUGGY]  if(u  >  0  ||  v  >  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0  ||  v  >  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  ||  v  >  31)  {	  if(u    >    0    ||    v    >=    31)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
318	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    p    =    p;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
319	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    p    =    p;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
320	[BUG]  [BUGGY]  if(p  ==  -1)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  -1)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  -1)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    p    =    p;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
321	[BUG]  [BUGGY]  if(u  >  -1  ||  v  >=  -1)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  -1  ||  v  >=  -1)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  -1  ||  v  >=  -1)  {	  if(u    >=    -1)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
322	[BUG]  [BUGGY]  if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||  v  ==  0))  {  return  Math.abs(u)+  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||  v  ==  0))  {  return  Math.abs(u)+  Math.abs(v));  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||  v  ==  0))  {  return  Math.abs(u)+  Math.abs(v));  }	  if(u    >    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)||(v    ==    0))    {    return    Math.abs(u)+    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
323	[BUG]  [BUGGY]  if(v  >  0  &&  v  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  >  0  &&  v  <  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(v  >  0  &&  v  <  31)  {	  if(u    >    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
324	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  try  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	try  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
325	[BUG]  [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(v  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
326	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  v  =  p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
327	[BUG]  [BUGGY]  while((  u  +  1)  ==  0  &&  v  <  =  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  +  1)  ==  0  &&  v  <  =  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  +  1)  ==  0  &&  v  <  =  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    v    <    =    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
328	[BUG]  [BUGGY]  While((  u  &  1)  ==  0  &&  v  <  =  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  While((  u  &  1)  ==  0  &&  v  <  =  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	While((  u  &  1)  ==  0  &&  v  <  =  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    v    <    =    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
329	[BUG]  [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
330	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  *  k;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  *  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  *  k;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
331	[BUG]  [BUGGY]  if(b  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(b  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(b  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    b;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
332	[BUG]  [BUGGY]  if(b  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(b  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(b  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    b;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
333	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  16;  k++)  {  u  =  p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
334	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  32)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  32)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  v  <  32)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    v    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
335	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  32;  k++)  {  v  =  -p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
336	[BUG]  [BUGGY]  if(p  >  1)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  1)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  1)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    32;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
337	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  32)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  32)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  v  <  32)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  while((    u    &    1)    ==    0    &&    v    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
338	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  =  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  =  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  v  <  =  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  while((    u    &    1)    ==    0    &&    v    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
339	[BUG]  [BUGGY]  While((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  While((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	While((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  while((    u    &    1)    ==    0    &&    v    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
340	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  V  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  V  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  V  =  p;  }	  if(u    ==    0    ||    p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
341	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
342	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  6;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  6;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  6;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    6;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
343	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
344	[BUG]  [BUGGY]  if(p  <  0  ||  p  >  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  <  0  ||  p  >  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  <  0  ||  p  >  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }	  if(p    <    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
345	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  -p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
346	[BUG]  [BUGGY]  While((  u  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  While((  u  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	While((  u  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }	  while((    u    &    1)    ==    0    &&    p    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
347	[BUG]  [BUGGY]  while((  u  >  0)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  >  0)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  >  0)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
348	[BUG]  [BUGGY]  luate(gcd,  t,  v);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  luate(gcd,  t,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	luate(gcd,  t,  v);	  luate(gcd,    u,    v);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
349	[BUG]  [BUGGY]  luate(gcd,  v,  p);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  luate(gcd,  v,  p);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	luate(gcd,  v,  p);	  luate(gcd,    u,    v);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
350	[BUG]  [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p  +  1;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p  +  1;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p  +  1;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p    +    1;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
351	[BUG]  [BUGGY]  if(p  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u  +  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u  +  Math.abs(v));  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u  +  Math.abs(v));  }	  if(q    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)    ||(v    ==    0))    {    return    Math.abs(u)+    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
352	[BUG]  [BUGGY]  if(q!=  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)-  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(q!=  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)-  Math.abs(v));  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(q!=  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)-  Math.abs(v));  }	  if(p    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)    ||(v    ==    0))    {    return    Math.abs(u)-    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
353	[BUG]  [BUGGY]  if(u  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)-  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)-  Math.abs(v));  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)-  Math.abs(v));  }	  if(p    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)    ||(v    ==    0))    {    return    Math.abs(u)-    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
354	[BUG]  [BUGGY]  if(u  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }	  if(p    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)    ||(v    ==    0))    {    return    Math.abs(u)/    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
355	[BUG]  [BUGGY]  if(q!=  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(q!=  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(q!=  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }	  if(p    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)    ||(v    ==    0))    {    return    Math.abs(u)/    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
356	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    q;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
357	[BUG]  [BUGGY]  if(q  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(q  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(q  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    q;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
358	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    q;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
359	[BUG]  [BUGGY]  if(p  ==  0)  {  if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  ==  0)  {  if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  if(p    ==    0)    {    if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
360	[BUG]  [BUGGY]  if(v  <  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  <  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(v  <  0)  {	  if(u    <    0    ||    v    >    0)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
361	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  -  k;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  -  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  -  k;  }	  for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
362	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  p;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    29;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
363	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    30;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
364	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    30;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
365	[BUG]  [BUGGY]  if(u  >  p  ||  v  <  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  p  ||  v  <  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  p  ||  v  <  0)  {	  if(u    >    p)    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
366	[BUG]  [BUGGY]  if(u  >  p  &&  v  <  =  p)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  p  &&  v  <  =  p)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  p  &&  v  <  =  p)  {	  if(u    >    p)    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
367	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  p  <  32)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  while((  u  &  1)  ==  0  &&  p  <  32)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  p  <  32)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  while((    u    &    1)    ==    0    &&    p    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
368	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  10;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  10;  k++)  {  v  =  -p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  10;  k++)  {  v  =  -p;  }	  if(p    >    0)    {    for(int    k    =    0;    k    <    30;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
369	[BUG]  [BUGGY]  While((  u  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  While((  u  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	While((  u  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	  while((    u    &    1)    ==    0    &&    p    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
370	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  try  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	try  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
371	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  *  k;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  *  k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  *  k;  }	  if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
372	[BUG]  [BUGGY]  Integer  p  =(Integer)Math.floor(p  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  p  =(Integer)Math.floor(p  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)Math.floor(p  +  1);	  Integer    p    =(Integer)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
373	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  2;  k++)  {  v  =  p;  }	  for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
374	[BUG]  [BUGGY]  Integer  u  =  p.doubleValue();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  Integer  u  =  p.doubleValue();  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  u  =  p.doubleValue();	  Integer    u    =    p.intValue();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
375	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  u  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  u  =  p;  }	  if(u    ==    0)    {    for(int    k    =    0;    k    <    29;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
376	[BUG]  [BUGGY]  if(u  >=  0  ||  v  <  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >=  0  ||  v  <  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >=  0  ||  v  <  0)  {	  if(u    <    =    0    ||    v    <    0)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
377	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -k;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -k;  }	  if(p    ==    0)    {    for(int    k    =    0;    k    <    30;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
378	[BUG]  [BUGGY]  While((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  While((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	While((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	  while((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
