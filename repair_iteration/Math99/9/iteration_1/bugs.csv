bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }		non-compiled	[CE]  <identifier>  expected	18	None	add
2	[BUG]  [BUGGY]    if(p  ==  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(p  ==  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(p  ==  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }		non-compiled	[CE]  <identifier>  expected	18	None	add
3	[BUG]  [BUGGY]    if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }		non-compiled	[CE]  <identifier>  expected	18	None	add
4	[BUG]  [BUGGY]    if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }		non-compiled	[CE]  <identifier>  expected	18	None	add
5	[BUG]  [BUGGY]    if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }		non-compiled	[CE]  <identifier>  expected	18	None	add
6	[BUG]  [BUGGY]  if(u  ==  0)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]  if(u  ==  0)  {  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {	if  (u  >  0)  {  	non-compiled	[CE]  <identifier>  expected	17	None	replace
7	[BUG]  [BUGGY]  if(u  >=  0)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]  if(u  >=  0)  {  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >=  0)  {	if  (u  >  0)  {  	non-compiled	[CE]  <identifier>  expected	17	None	replace
8	[BUG]  [BUGGY]  if(u!=  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]  if(u!=  0)  {  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u!=  0)  {	if  (u  >  0)  {  	non-compiled	[CE]  <identifier>  expected	17	None	replace
9	[BUG]  [BUGGY]  if(u  >  0  ||  v  <  0)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]  if(u  >  0  ||  v  <  0)  {  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  ||  v  <  0)  {	if  (u  >  0)  {  	non-compiled	[CE]  <identifier>  expected	17	None	replace
10	[BUG]  [BUGGY]  if(u  >  -1)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]  if(u  >  -1)  {  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  -1)  {	if  (u  >  0)  {  	non-compiled	[CE]  <identifier>  expected	17	None	replace
11	[BUG]  [BUGGY]    if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)+  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)+  Math.abs(v));  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)+  Math.abs(v));  }		non-compiled	[CE]  <identifier>  expected	18	None	add
12	[BUG]  [BUGGY]    if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)-  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)-  Math.abs(v));  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)-  Math.abs(v));  }		non-compiled	[CE]  <identifier>  expected	18	None	add
13	[BUG]  [BUGGY]    if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)/  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)/  Math.abs(v));  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)/  Math.abs(v));  }		non-compiled	[CE]  <identifier>  expected	18	None	add
14	[BUG]  [BUGGY]    if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)+  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)+  Math.abs(v));  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)+  Math.abs(v));  }		non-compiled	[CE]  <identifier>  expected	18	None	add
15	[BUG]  [BUGGY]  if(u  >  0  ||  v  <  31)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]  if(u  >  0  ||  v  <  31)  {  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  ||  v  <  31)  {	if  (u  >  0)  {  	non-compiled	[CE]  <identifier>  expected	17	None	replace
16	[BUG]  [BUGGY]  if(v  >  0)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]  if(v  >  0)  {  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(v  >  0)  {	if  (u  >  0)  {  	non-compiled	[CE]  <identifier>  expected	17	None	replace
17	[BUG]  [BUGGY]    if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }		non-compiled	[CE]  <identifier>  expected	18	None	add
18	[BUG]  [BUGGY]    if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }		non-compiled	[CE]  <identifier>  expected	18	None	add
19	[BUG]  [BUGGY]    if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }		non-compiled	[CE]  <identifier>  expected	18	None	add
20	[BUG]  [BUGGY]    if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }		non-compiled	[CE]  <identifier>  expected	18	None	add
21	[BUG]  [BUGGY]    if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }        [BUGGY]    if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]  if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	    if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }		non-compiled	[CE]  <identifier>  expected	18	None	add
