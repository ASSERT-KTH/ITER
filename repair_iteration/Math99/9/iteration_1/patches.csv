bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
2	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
3	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  while((  u  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
4	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
5	[BUG]  [BUGGY]  if(u  ==  0  ||  v  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  ==  0  ||  v  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0  ||  v  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
6	[BUG]  [BUGGY]  if(u  ==  0  ||  p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  ==  0  ||  p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0  ||  p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
7	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  <  0  ||  v  >  0)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  0  ||  v  >  0)  {	  if(u    >    0    ||    v    <    0)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
8	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  <  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  <  =  0  ||  v  <  0)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  =  0  ||  v  <  0)  {	  if(u    >    0    ||    v    <    0)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
9	[BUG]  [BUGGY]  if(u  ==  0  ||  v  <  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  ==  0  ||  v  <  0)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0  ||  v  <  0)  {	  if(u    >    0    ||    v    <    0)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
10	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  while((  u  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  if(p  ==  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
13	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
14	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
15	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
16	[BUG]  [BUGGY]  if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
17	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
18	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
19	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  31)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  <  0  ||  v  >  31)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  0  ||  v  >  31)  {	  if(u    >    0    ||    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
20	[BUG]  [BUGGY]  if(u  ==  0  ||  v  <  31)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  ==  0  ||  v  <  31)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0  ||  v  <  31)  {	  if(u    >    0    ||    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
21	[BUG]  [BUGGY]  if(u  >  0  ||  v  <  =  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >  0  ||  v  <  =  31)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  ||  v  <  =  31)  {	  if(u    >    0    ||    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
22	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p;  }	      if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
23	[BUG]  [BUGGY]  if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
24	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
25	[BUG]  [BUGGY]  if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  }	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
26	[BUG]  [BUGGY]  if(p  ==  0)  {  if(u  >  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  if(u  >  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  if(u  >  1)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
27	[BUG]  [BUGGY]  if(u  ==  -1)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  ==  -1)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  -1)  {	  if(u    >    -1)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
28	[BUG]  [BUGGY]  if(u  >=  -1)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >=  -1)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >=  -1)  {	  if(u    >    -1)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
29	[BUG]  [BUGGY]  if(u  <  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  <  0)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  <  0)  {	  if(u    >    -1)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
30	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
31	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  while((  u  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  p  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
32	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  v  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  if(p  ==  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {	  if(u    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
34	[BUG]  [BUGGY]  if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)  ||(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)  ||(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)  ||(v  ==  0))  {  return  Math.abs(u)/  Math.abs(v));  }	      if(p    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)/    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
35	[BUG]  [BUGGY]  if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)  ||(v  ==  0))  {  return  Math.abs(u)-  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)  ||(v  ==  0))  {  return  Math.abs(u)-  Math.abs(v));  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)  ||(v  ==  0))  {  return  Math.abs(u)-  Math.abs(v));  }	      if(p    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)-    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
36	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	      if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
37	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }	      if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
38	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
39	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  while((  u  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
40	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
41	[BUG]  [BUGGY]  if(v  ==  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(v  ==  0)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(v  ==  0)  {	  if(u!=    0)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
42	[BUG]  [BUGGY]  if(u  ==  0  ||  v  ==  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  ==  0  ||  v  ==  0)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0  ||  v  ==  0)  {	  if(u    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
43	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
44	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -p;  }	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
45	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -p;  }	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
46	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -p;  }	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
47	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  u  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
48	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  u  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
49	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  6;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  6;  k++)  {  u  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  6;  k++)  {  u  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
50	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
51	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  b;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  b;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  b;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
52	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
53	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }	      if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
54	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  u  =  p;  }	      if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
55	[BUG]  [BUGGY]  if(u  >  0  ||  v  ==  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >  0  ||  v  ==  0)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  ||  v  ==  0)  {	  if(u    >    0    ||    v    <    0)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
56	[BUG]  [BUGGY]  if(u  >  0  ||  v  >=  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >  0  ||  v  >=  0)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  ||  v  >=  0)  {	  if(u    >    0    ||    v    <    0)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
57	[BUG]  [BUGGY]  Integer  p  =(Integer)Math.rint(v);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  Integer  p  =(Integer)Math.rint(v);  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)Math.rint(v);	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
58	[BUG]  [BUGGY]  Integer  p  =(Integer)Math.floor(v);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  Integer  p  =(Integer)Math.floor(v);  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)Math.floor(v);	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
59	[BUG]  [BUGGY]  Integer  p  =(Integer)Math.floor(p);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  Integer  p  =(Integer)Math.floor(p);  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)Math.floor(p);	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
60	[BUG]  [BUGGY]  Integer  p  =(Integer)mappings.get(p);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  Integer  p  =(Integer)mappings.get(p);  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =(Integer)mappings.get(p);	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
61	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
62	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  p  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
63	[BUG]  [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  u  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  u  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
64	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
65	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  29;  k++)  {  v  =  -k;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
66	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  30;  k++)  {  v  =  -k;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
67	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  +  k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p  +  k;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
68	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  q;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
69	[BUG]  [BUGGY]  if(u  >  p)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >  p)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  p)  {	  if(v    >    0)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
70	[BUG]  [BUGGY]  Integer  v  =  p.intValue();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  Integer  v  =  p.intValue();  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p.intValue();	      if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
71	[BUG]  [BUGGY]  Integer  p  =  p.intValue();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  Integer  p  =  p.intValue();  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  p  =  p.intValue();	      if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
72	[BUG]  [BUGGY]  int  p  =  p.intValue();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  int  p  =  p.intValue();  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	int  p  =  p.intValue();	      if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
73	[BUG]  [BUGGY]  luate(gcd,  u,  v);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  luate(gcd,  u,  v);  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	luate(gcd,  u,  v);	      if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
74	[BUG]  [BUGGY]  if(u  >  0  ||  v  >=  31)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >  0  ||  v  >=  31)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  ||  v  >=  31)  {	  if(u    >    0    ||    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
75	[BUG]  [BUGGY]  if(u  >  0  &&  v  <  31)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >  0  &&  v  <  31)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  &&  v  <  31)  {	  if(u    >    0    ||    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
76	[BUG]  [BUGGY]  if(u  >  0  ||  v  ==  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >  0  ||  v  ==  31)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  ||  v  ==  31)  {	  if(u    >    0    ||    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
77	[BUG]  [BUGGY]  Integer  u  =  p.intValue();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  Integer  u  =  p.intValue();  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  u  =  p.intValue();	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
78	[BUG]  [BUGGY]  Integer  v  =  p.getIntValue();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  Integer  v  =  p.getIntValue();  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p.getIntValue();	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
79	[BUG]  [BUGGY]  Integer  v  =  p.getIntValue(q);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  Integer  v  =  p.getIntValue(q);  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	Integer  v  =  p.getIntValue(q);	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
80	[BUG]  [BUGGY]  if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)  ||(v  ==  0))  {  return  Math.abs(u)+  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)  ||(v  ==  0))  {  return  Math.abs(u)+  Math.abs(v));  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)  ||(v  ==  0))  {  return  Math.abs(u)+  Math.abs(v));  }	      if(p    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)||(v    ==    0))    {    return    Math.abs(u)+    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
81	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  p;  }	      if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
82	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
83	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
84	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  31;  k++)  {  u  =  p  +  k;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p    +    k;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
85	[BUG]  [BUGGY]  if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)+  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)+  Math.abs(v));  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)+  Math.abs(v));  }	      if(p    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)+    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
86	[BUG]  [BUGGY]  if(u  >  0  ||  v  <  =  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >  0  ||  v  <  =  0)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  ||  v  <  =  0)  {	  if(u    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
87	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
88	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
89	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  =  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  while((  u  &  1)  ==  0  &&  v  <  =  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	while((  u  &  1)  ==  0  &&  v  <  =  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
90	[BUG]  [BUGGY]  if(p  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p;  }	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
91	[BUG]  [BUGGY]  if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)-  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)-  Math.abs(v));  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)-  Math.abs(v));  }	      if(p    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)-    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
92	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  u  =  p;  }	      if(p    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
93	[BUG]  [BUGGY]  if(p  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -p;  }	      if(u    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -p;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
94	[BUG]  [BUGGY]  if(v  >  0  ||  v  <  31)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(v  >  0  ||  v  <  31)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(v  >  0  ||  v  <  31)  {	  if(u    >    0    ||    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
95	[BUG]  [BUGGY]  if(u  >  0  ||  v  <  32)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >  0  ||  v  <  32)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0  ||  v  <  32)  {	  if(u    >    0    ||    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
96	[BUG]  [BUGGY]  if(u  >=  0  ||  v  >  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >=  0  ||  v  >  0)  {  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >=  0  ||  v  >  0)  {	  if(u    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
97	[BUG]  [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p  +  1;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p  +  1;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  ==  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  p  +  1;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    p;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
98	[BUG]  [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(p  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(p  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
99	[BUG]  [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  u  =  p;  }	      if(p    ==    0)    {    for(int    k    =    0;    k    <    3;    k++)    {    u    =    p;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
100	[BUG]  [BUGGY]  if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)/  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)/  Math.abs(v));  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(q  ==  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)/  Math.abs(v));  }	      if(p    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)/    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
101	[BUG]  [BUGGY]  if(u  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)/  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)/  Math.abs(v));  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)/  Math.abs(v));  }	      if(p    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)/    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
102	[BUG]  [BUGGY]  if(u  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)+  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  u  =  p;  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }          [BUGGY]  if(u  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)+  Math.abs(v));  }  [BUGGY]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	550	550	2	replace	if(u  >  0)  {  u  =  p;  v  =  q;  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)+  Math.abs(v));  }	      if(p    ==    0)    {    u    =    p;    v    =    q;    if((    u    ==    0)||(v    ==    0))    {    return    Math.abs(u)+    Math.abs(v));    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
