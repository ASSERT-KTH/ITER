bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  2));  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  2));  [BUGGY]    if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  2));	      int    b    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    a));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  if(a  <  0  ||  b  ==  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  if(a  <  0  ||  b  ==  0)  {  [BUGGY]    return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	if(a  <  0  ||  b  ==  0)  {	  if(a    <    =    0    ||    b    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
3	[BUG]  [BUGGY]  if(a  <  =  0  ||  b  >  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  if(a  <  =  0  ||  b  >  0)  {  [BUGGY]    return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	if(a  <  =  0  ||  b  >  0)  {	  if(a    <    =    0    ||    b    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
4	[BUG]  [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1));  [BUGGY]    if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1));	      int    a    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    0));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
5	[BUG]  [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0,  b));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0,  b));  [BUGGY]    if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0,  b));	      int    a    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    0));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
6	[BUG]  [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  2));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  2));  [BUGGY]    if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  2));	      int    a    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    0));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
7	[BUG]  [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  lcm));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  lcm));  [BUGGY]    if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  lcm));	      int    a    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    a));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
8	[BUG]  [BUGGY]  int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1));  [BUGGY]    if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1));	      int    b    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    0));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
9	[BUG]  [BUGGY]  int  b  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  0));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  b  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  0));  [BUGGY]    if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  b  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  0));	      int    b    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    0));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
10	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  a));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  a));  [BUGGY]    return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  a));	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0));  [BUGGY]    return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0));	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]    return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  if(a  <  0  ||  b  >=  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  if(a  <  0  ||  b  >=  0)  {  [BUGGY]    return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	if(a  <  0  ||  b  >=  0)  {	  if    (a    <    0    ||    b    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  int  b  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  b));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  b  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  b));  [BUGGY]    if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  b  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  b));	      int    b    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    b));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1);  [BUGGY]    if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  1);	      int    a    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
16	[BUG]  [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  2);  [BUGGY]    if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  2);	      int    a    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
17	[BUG]  [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b  +  1);  [BUGGY]    if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b  +  1);	      int    a    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    b);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  b));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  b));  [BUGGY]    if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  a  =  Math.abs(mulAndCheck(a  *  gcd(a,  b),  b));	      int    a    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    b));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
19	[BUG]  [BUGGY]  if(a  >=  0  ||  b  ==  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  if(a  >=  0  ||  b  ==  0)  {  [BUGGY]    return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	if(a  >=  0  ||  b  ==  0)  {	  if(a    <    =    0    ||    b    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
20	[BUG]  [BUGGY]  int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)));  [BUGGY]    if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)));	      int    b    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    0));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b  +  1));  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b  +  1));  [BUGGY]    if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b  +  1));	      int    a    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    b));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
22	[BUG]  [BUGGY]  int  x  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  a));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  x  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  a));  [BUGGY]    return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  x  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  a));	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0)-  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0)-  1;  [BUGGY]    if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0)-  1;	      int    a    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
24	[BUG]  [BUGGY]  int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b  +  1));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b  +  1));  [BUGGY]    if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b  +  1));	      int    b    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    b));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b)  +  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b)  +  1);  [BUGGY]    if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b)  +  1);	      int    a    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    b));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
26	[BUG]  [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)),  b);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)),  b);  [BUGGY]    if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b)),  b);	      int    a    =    Math.abs(mulAndCheck(a    /    gcd(a,    b),    b);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
27	[BUG]  [BUGGY]  int  x  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  a);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  lcm(int  a,  int  b)  {    [BUGGY]  int  x  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  a);  [BUGGY]    return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	int  x  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  a);	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
