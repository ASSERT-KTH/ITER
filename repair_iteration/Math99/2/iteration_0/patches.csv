bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (a  <  0  ||  b  >  0)  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]  if  (a  <  0  ||  b  >  0)  {  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	if  (a  <  0  ||  b  >  0)  {	if  (a==0  ||  b==0){  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	  	if  (a==0  ||  b==0){  	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]    int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  a));  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  a));  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  a));		non-compiled	[CE]  illegal  start  of  type	4	None	add
4	[BUG]  [BUGGY]    int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  a));  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  a));  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  a));		non-compiled	[CE]  illegal  start  of  type	4	None	add
5	[BUG]  [BUGGY]    int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  a);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  a);  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  a);		non-compiled	[CE]  illegal  start  of  type	4	None	add
6	[BUG]  [BUGGY]    int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0));  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0));  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0));		non-compiled	[CE]  illegal  start  of  type	4	None	add
7	[BUG]  [BUGGY]    int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0));  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0));		non-compiled	[CE]  illegal  start  of  type	4	None	add
8	[BUG]  [BUGGY]    int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));		non-compiled	[CE]  illegal  start  of  type	4	None	add
9	[BUG]  [BUGGY]    int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    int  b  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));		non-compiled	[CE]  <identifier>  expected	4	None	add
10	[BUG]  [BUGGY]    int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b);  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b);		non-compiled	[CE]  <identifier>  expected	4	None	add
11	[BUG]  [BUGGY]    int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]    int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0);  [BUGGY]  if  (a==0  ||  b==0){  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	    int  a  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  0);		non-compiled	[CE]  <identifier>  expected	4	None	add
12	[BUG]  [BUGGY]  if(a  <  =  0  ||  b  ==  0)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  int  lcm(int  a,  int  b)  {  [BUGGY]  if(a  <  =  0  ||  b  ==  0)  {  [BUGGY]  return  0;  }  int  lcm  =  Math.abs(mulAndCheck(a  /  gcd(a,  b),  b));  return  lcm;  }  [CLASS]  MathUtils  [METHOD]  lcm  [RETURN_TYPE]  int  int  a  int  b  [VARIABLES]  short  NS  PS  ZS  x  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  value  x  y  byte  NB  PB  ZB  x  int  a  b  lcm  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	710	710	2	replace	if(a  <  =  0  ||  b  ==  0)  {	if  (a==0  ||  b==0){  	non-compiled	[CE]  <identifier>  expected	3	None	replace
