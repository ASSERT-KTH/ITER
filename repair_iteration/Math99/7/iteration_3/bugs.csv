bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  float  q  =(float)Math.ceil(u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  q  =(float)Math.ceil(u);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  q  =(float)Math.ceil(u);	  float    q    =(float)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
2	[BUG]  [BUGGY]  float  q  =(float)Math.ceil(p,  q);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  q  =(float)Math.ceil(p,  q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  q  =(float)Math.ceil(p,  q);	  float    q    =(float)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
3	[BUG]  [BUGGY]  float  q  =(float)Math.ceil(gcd);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  q  =(float)Math.ceil(gcd);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  q  =(float)Math.ceil(gcd);	  float    q    =(float)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
4	[BUG]  [BUGGY]  char  q  =(char)Math.ceil(gcd);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  q  =(char)Math.ceil(gcd);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  q  =(char)Math.ceil(gcd);	  int    q    =(int)Math.ceil(gcd);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
5	[BUG]  [BUGGY]  int  q  =(int)Math.ceil(gcd,  p);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  q  =(int)Math.ceil(gcd,  p);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  q  =(int)Math.ceil(gcd,  p);	  int    q    =(int)Math.ceil(gcd);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
6	[BUG]  [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)&&(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
7	[BUG]  [BUGGY]  try  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
8	[BUG]  [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)&&(q  ==  0))  {	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
9	[BUG]  [BUGGY]  while((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
10	[BUG]  [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
11	[BUG]  [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
12	[BUG]  [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)&&(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
13	[BUG]  [BUGGY]  while((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
14	[BUG]  [BUGGY]  double  v  =  gcd(p,  q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  double  v  =  gcd(p,  q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	double  v  =  gcd(p,  q);	  float    v    =    gcd(p,    q);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
15	[BUG]  [BUGGY]  float  v  =  gcd(p,  q  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  v  =  gcd(p,  q  +  1);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  v  =  gcd(p,  q  +  1);	  float    v    =    gcd(p,    q);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
16	[BUG]  [BUGGY]  float  v  =  gcd(p,  u);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  v  =  gcd(p,  u);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  v  =  gcd(p,  u);	  float    v    =    gcd(p,    q);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
17	[BUG]  [BUGGY]  String  v  =  gcd;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  String  v  =  gcd;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	String  v  =  gcd;	  char    v    =    gcd;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
18	[BUG]  [BUGGY]  char  v  =  gcd.charAt(0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  v  =  gcd.charAt(0);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  v  =  gcd.charAt(0);	  char    v    =    gcd;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
19	[BUG]  [BUGGY]  char  v  =  gcd.charAt(q);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  v  =  gcd.charAt(q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  v  =  gcd.charAt(q);	  char    v    =    gcd;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
20	[BUG]  [BUGGY]  parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q);  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)-    Math.abs(q);    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
21	[BUG]  [BUGGY]  char  v  =(char)Math.ceil(p);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  v  =(char)Math.ceil(p);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  v  =(char)Math.ceil(p);	  int    v    =(int)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
22	[BUG]  [BUGGY]  float  v  =(float)Math.ceil(p);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  v  =(float)Math.ceil(p);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  v  =(float)Math.ceil(p);	  int    v    =(int)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
23	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(p,  q);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(int)Math.ceil(p,  q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(int)Math.ceil(p,  q);	  int    v    =(int)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
24	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(q);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(int)Math.ceil(q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(int)Math.ceil(q);	  int    v    =(int)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
25	[BUG]  [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
26	[BUG]  [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  if((  p  >=  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  if((  p  >=  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)&&(q  ==  0))  {  if((  p  >=  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
27	[BUG]  [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q!=  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q!=  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q!=  0))  {  return  Math.abs(p)-  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
28	[BUG]  [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)&&(q  ==  0))  {  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }	  try    {    [Delete]    catch(Exception    e)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
29	[BUG]  [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)&&(q  ==  0))  {  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }	  try    {    [Delete]    catch(Exception    e)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
30	[BUG]  [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)&&(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));	  try    {    [Delete]    catch(Exception    e)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
31	[BUG]  [BUGGY]  while((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));	  try    {    [Delete]    catch(Exception    e)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
32	[BUG]  [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
33	[BUG]  [BUGGY]  String  v  =  u;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  String  v  =  u;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	String  v  =  u;	  char    v    =    u;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
34	[BUG]  [BUGGY]  char  v  =  p;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  v  =  p;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  v  =  p;	  char    v    =    u;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
35	[BUG]  [BUGGY]  char  v  =  gcd(p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  v  =  gcd(p);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  v  =  gcd(p);	  char    v    =    u;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
36	[BUG]  [BUGGY]  int  v  =(u  ==  0)?  0  :  q;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(u  ==  0)?  0  :  q;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(u  ==  0)?  0  :  q;	  int    v    =(q    ==    0)?    0    :    q;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
37	[BUG]  [BUGGY]  int  v  =(q  ==  0)?  1  :  q;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  ==  0)?  1  :  q;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  ==  0)?  1  :  q;	  int    v    =(q    ==    0)?    0    :    q;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
38	[BUG]  [BUGGY]  int  v  =(q  ==  0)?  0  :  gcd;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  ==  0)?  0  :  gcd;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  ==  0)?  0  :  gcd;	  int    v    =(q    ==    0)?    0    :    q;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
39	[BUG]  [BUGGY]  float  q  =(float)Math.pow(10,  q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  q  =(float)Math.pow(10,  q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  q  =(float)Math.pow(10,  q);	  int    q    =(int)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
40	[BUG]  [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(p);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
41	[BUG]  [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)&&(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(p);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
42	[BUG]  [BUGGY]  while((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(p);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
43	[BUG]  [BUGGY]  String  v  =  gcd(p,  q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  String  v  =  gcd(p,  q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	String  v  =  gcd(p,  q);	  char    v    =    gcd(p,    q);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
44	[BUG]  [BUGGY]  char  v  =  gcd(p,  q  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  v  =  gcd(p,  q  +  1);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  v  =  gcd(p,  q  +  1);	  char    v    =    gcd(p,    q);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
45	[BUG]  [BUGGY]  char  v  =  gcd(p,  q,  u);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  v  =  gcd(p,  q,  u);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  v  =  gcd(p,  q,  u);	  char    v    =    gcd(p,    q);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
46	[BUG]  [BUGGY]  int  v  =  p  /  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  p  /  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  p  /  1;	  int    v    =    q    /    1;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
47	[BUG]  [BUGGY]  int  v  =  u  /  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  u  /  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  u  /  1;	  int    v    =    q    /    1;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
48	[BUG]  [BUGGY]  int  v  =  q  /  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  q  /  2;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  q  /  2;	  int    v    =    q    /    1;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
49	[BUG]  [BUGGY]  int  v  =  gcd  /  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd  /  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd  /  1;	  int    v    =    q    /    1;    	non-compiled	[CE]  <identifier>  expected	88	None	replace
50	[BUG]  [BUGGY]  int  u  =  gcd(p,  q  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  u  =  gcd(p,  q  +  1);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  u  =  gcd(p,  q  +  1);	  int    u    =    gcd(p,    q);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
51	[BUG]  [BUGGY]  char  u  =  gcd(p,  q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  u  =  gcd(p,  q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  u  =  gcd(p,  q);	  int    u    =    gcd(p,    q);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
52	[BUG]  [BUGGY]  int  u  =  gcd(p,  q,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  u  =  gcd(p,  q,  0);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  u  =  gcd(p,  q,  0);	  int    u    =    gcd(p,    q);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
53	[BUG]  [BUGGY]  char  q  =(char)Math.rint(u);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  q  =(char)Math.rint(u);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  q  =(char)Math.rint(u);	  int    q    =(int)Math.rint(u);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
54	[BUG]  [BUGGY]  float  q  =(float)Math.rint(u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  q  =(float)Math.rint(u);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  q  =(float)Math.rint(u);	  int    q    =(int)Math.rint(u);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
55	[BUG]  [BUGGY]  int  q  =(int)Math.rint(p,  u);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  q  =(int)Math.rint(p,  u);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  q  =(int)Math.rint(p,  u);	  int    q    =(int)Math.rint(u);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
56	[BUG]  [BUGGY]  int  v  =(q  ==  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  ==  1)?  1  :  0;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  ==  1)?  1  :  0;	  int    v    =    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
57	[BUG]  [BUGGY]  int  v  =  2;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  2;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  2;	  int    v    =    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
58	[BUG]  [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)&&(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p));	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
59	[BUG]  [BUGGY]  while((  p  ==  0)||(q  ==  0))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)||(q  ==  0))  {  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)||(q  ==  0))  {	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
60	[BUG]  [BUGGY]  String  q  =(String)Math.floor(p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  String  q  =(String)Math.floor(p);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	String  q  =(String)Math.floor(p);	  char    q    =(char)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
61	[BUG]  [BUGGY]  char  q  =(char)Math.floor(u);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  q  =(char)Math.floor(u);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  q  =(char)Math.floor(u);	  char    q    =(char)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
62	[BUG]  [BUGGY]  char  q  =(char)Math.log(p);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  q  =(char)Math.log(p);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  q  =(char)Math.log(p);	  char    q    =(char)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
63	[BUG]  [BUGGY]  while((  u  >=  0)&&(q  ==  0))  {  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  >=  0)&&(q  ==  0))  {  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  >=  0)&&(q  ==  0))  {  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    if((    u    >=    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
64	[BUG]  [BUGGY]  while((  u  >=  0)&&(q  ==  0))  {  if((  u  >>  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  >=  0)&&(q  ==  0))  {  if((  u  >>  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  >=  0)&&(q  ==  0))  {  if((  u  >>  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    if((    u    >=    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
65	[BUG]  [BUGGY]  while((  u  >=  0)||(q  ==  0))  {  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  >=  0)||(q  ==  0))  {  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  >=  0)||(q  ==  0))  {  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    if((    u    >=    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
66	[BUG]  [BUGGY]  parent!=  null  &&(q  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(q  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(q  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(p);    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
67	[BUG]  [BUGGY]  parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(p);    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
68	[BUG]  [BUGGY]  int  v  =  gcd  +  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd  +  2;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd  +  2;	  int    v    =    gcd    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
69	[BUG]  [BUGGY]  int  q  =(int)Math.log(u);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  q  =(int)Math.log(u);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  q  =(int)Math.log(u);	  int    q    =(int)Math.floor(u);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
70	[BUG]  [BUGGY]  float  q  =(float)Math.floor(u);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  q  =(float)Math.floor(u);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  q  =(float)Math.floor(u);	  int    q    =(int)Math.floor(u);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
71	[BUG]  [BUGGY]  throws  JsonError(t)  {  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  throws  JsonError(t)  {  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	throws  JsonError(t)  {  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
72	[BUG]  [BUGGY]  throws  JsonError(t)  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  throws  JsonError(t)  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	throws  JsonError(t)  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p);  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
73	[BUG]  [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  if((  p  >=  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  if((  p  >=  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)&&(q  ==  0))  {  if((  p  >=  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
74	[BUG]  [BUGGY]  while((  p  ==  0)||(q  ==  0))  {  if((  p  <  0)||(p  >  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)||(q  ==  0))  {  if((  p  <  0)||(p  >  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)||(q  ==  0))  {  if((  p  <  0)||(p  >  0))  {  return  Math.abs(p)+  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
75	[BUG]  [BUGGY]  char  q  =(char)Math.ceil(p,  q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  q  =(char)Math.ceil(p,  q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  q  =(char)Math.ceil(p,  q);	  int    q    =(int)Math.ceil(p,    q);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
76	[BUG]  [BUGGY]  int  q  =(int)Math.ceil(u,  q);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  q  =(int)Math.ceil(u,  q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  q  =(int)Math.ceil(u,  q);	  int    q    =(int)Math.ceil(p,    q);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
77	[BUG]  [BUGGY]  mutableValues(p)  {  if((  q  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  mutableValues(p)  {  if((  q  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	mutableValues(p)  {  if((  q  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }	  mutableValues(u)    {    if((    q    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
78	[BUG]  [BUGGY]  mutableValues(p)  {  if((  q  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  mutableValues(p)  {  if((  q  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	mutableValues(p)  {  if((  q  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }	  mutableValues(u)    {    if((    q    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
79	[BUG]  [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  [Delete]  catch(NumberFormatException  nfe)  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
80	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  [Delete]  catch(Throwable  t)  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
81	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if((  u  >=  0)  ||(v  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if((  u  >=  0)  ||(v  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  [Delete]  catch(Exception  e)  {  if((  u  >=  0)  ||(v  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
82	[BUG]  [BUGGY]  float  q  =(float)Math.pow(10,  gcd);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  q  =(float)Math.pow(10,  gcd);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  q  =(float)Math.pow(10,  gcd);	  int    q    =(int)Math.pow(10,    gcd);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
83	[BUG]  [BUGGY]  char  q  =(char)Math.pow(10,  gcd);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  q  =(char)Math.pow(10,  gcd);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  q  =(char)Math.pow(10,  gcd);	  int    q    =(int)Math.pow(10,    gcd);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
84	[BUG]  [BUGGY]  float  q  =(float)Math.rint(p,  q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  q  =(float)Math.rint(p,  q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  q  =(float)Math.rint(p,  q);	  float    q    =(float)Math.rint(p);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
85	[BUG]  [BUGGY]  float  q  =(float)Math.rint(p  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  q  =(float)Math.rint(p  +  1);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  q  =(float)Math.rint(p  +  1);	  float    q    =(float)Math.rint(p);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
86	[BUG]  [BUGGY]  int  v  =  p  +  q  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  p  +  q  +  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  p  +  q  +  1;	  int    v    =    p    +    q;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
87	[BUG]  [BUGGY]  int  v  =  p  +  gcd;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  p  +  gcd;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  p  +  gcd;	  int    v    =    p    +    q;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
88	[BUG]  [BUGGY]  int  v  =  p  +  u;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  p  +  u;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  p  +  u;	  int    v    =    p    +    q;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
89	[BUG]  [BUGGY]  char  v  =  gcd(p,  u);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  v  =  gcd(p,  u);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  v  =  gcd(p,  u);	  int    v    =    gcd(p,    u);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
90	[BUG]  [BUGGY]  char  q  =(char)Math.ceil(u);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  q  =(char)Math.ceil(u);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  q  =(char)Math.ceil(u);	  int    q    =(int)Math.ceil(u);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
91	[BUG]  [BUGGY]  int  q  =(int)Math.ceil(p,  u);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  q  =(int)Math.ceil(p,  u);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  q  =(int)Math.ceil(p,  u);	  int    q    =(int)Math.ceil(u);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
92	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	throw  new  IllegalArgumentException( " ");	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(k));    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
93	[BUG]  [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)&&(q  ==  0))  {	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(k));    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
94	[BUG]  [BUGGY]  int  v  =(q  >  0)?  0  :  q;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  >  0)?  0  :  q;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  >  0)?  0  :  q;	  int    v    =(q    >=    0)?    0    :    q;    	non-compiled	[CE]  <identifier>  expected	99	None	replace
95	[BUG]  [BUGGY]  int  v  =(u  >=  0)?  0  :  q;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(u  >=  0)?  0  :  q;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(u  >=  0)?  0  :  q;	  int    v    =(q    >=    0)?    0    :    q;    	non-compiled	[CE]  <identifier>  expected	99	None	replace
96	[BUG]  [BUGGY]  int  u  =  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  u  =  1;  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  u  =  1;	  int    u    =    0;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
97	[BUG]  [BUGGY]  int  u  =  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  u  =  2;  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  u  =  2;	  int    u    =    0;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
98	[BUG]  [BUGGY]  int  u  =  p  +  4;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  u  =  p  +  4;  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  u  =  p  +  4;	  int    u    =    p    +    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
99	[BUG]  [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)&&(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
100	[BUG]  [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  [Delete]  catch(NumberFormatException  nfe)  {  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }	  if(q    ==    0)    {    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
101	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  [Delete]  catch(Throwable  t)  {  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }	  if(q    ==    0)    {    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
102	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if((  u  ==  0)  ||(v  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if((  u  ==  0)  ||(v  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  [Delete]  catch(Exception  e)  {  if((  u  ==  0)  ||(v  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }	  if(q    ==    0)    {    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
103	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  [Delete]  catch(Throwable  t)  {  if((  u  ==  0)||(v  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }	  if(q    ==    0)    {    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
104	[BUG]  [BUGGY]  int  v  =  p  /  q;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  p  /  q;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  p  /  q;	  int    v    =    p    *    q;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
105	[BUG]  [BUGGY]  int  v  =  p  *  q  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  p  *  q  +  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  p  *  q  +  1;	  int    v    =    p    *    q;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
106	[BUG]  [BUGGY]  int  v  =  p  -  q;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  p  -  q;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  p  -  q;	  int    v    =    p    *    q;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
107	[BUG]  [BUGGY]  int  v  =  p  *  q  +  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  p  *  q  +  2;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  p  *  q  +  2;	  int    v    =    p    *    q;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
108	[BUG]  [BUGGY]  String  v  =  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  String  v  =  0;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	String  v  =  0;	  char    v    =    0;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
109	[BUG]  [BUGGY]  Character  v  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  Character  v  =  0;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	Character  v  =  0;	  char    v    =    0;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
110	[BUG]  [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(k));    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
111	[BUG]  [BUGGY]  while((  p  ==  0)||(q  ==  0))  {  if((  p  <  0)||(q  >  0))  {  return  Math.abs(p)+  Math.abs(k));  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)||(q  ==  0))  {  if((  p  <  0)||(q  >  0))  {  return  Math.abs(p)+  Math.abs(k));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)||(q  ==  0))  {  if((  p  <  0)||(q  >  0))  {  return  Math.abs(p)+  Math.abs(k));  }	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(k));    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
112	[BUG]  [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)&&(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(k));    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
113	[BUG]  [BUGGY]  while((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(k));    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
114	[BUG]  [BUGGY]  while((  p  ==  0)||(q  ==  0))  {  if((  p  <  0)||(q  >  0))  {  return  Math.abs(p)+  Math.abs(p);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)||(q  ==  0))  {  if((  p  <  0)||(q  >  0))  {  return  Math.abs(p)+  Math.abs(p);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)||(q  ==  0))  {  if((  p  <  0)||(q  >  0))  {  return  Math.abs(p)+  Math.abs(p);  }	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(p);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
115	[BUG]  [BUGGY]  int  v  =(int)Math.rint(p,  q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(int)Math.rint(p,  q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(int)Math.rint(p,  q);	  int    v    =(int)Math.rint(p);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
116	[BUG]  [BUGGY]  char  v  =(char)Math.rint(p);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  v  =(char)Math.rint(p);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  v  =(char)Math.rint(p);	  int    v    =(int)Math.rint(p);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
117	[BUG]  [BUGGY]  int  v  =(int)Math.rint(q);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(int)Math.rint(q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(int)Math.rint(q);	  int    v    =(int)Math.rint(p);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
118	[BUG]  [BUGGY]  float  v  =(float)Math.rint(p);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  v  =(float)Math.rint(p);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  v  =(float)Math.rint(p);	  int    v    =(int)Math.rint(p);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
119	[BUG]  [BUGGY]  int  v  =  gcd(p,  u  +  1,  q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd(p,  u  +  1,  q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd(p,  u  +  1,  q);	  int    v    =    gcd(p,    q    +    1,    q);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
120	[BUG]  [BUGGY]  int  v  =  gcd(p,  q  +  1,  u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd(p,  q  +  1,  u);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd(p,  q  +  1,  u);	  int    v    =    gcd(p,    q    +    1,    q);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
121	[BUG]  [BUGGY]  char  v  =  gcd(p,  q  +  1,  q);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  v  =  gcd(p,  q  +  1,  q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  v  =  gcd(p,  q  +  1,  q);	  int    v    =    gcd(p,    q    +    1,    q);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
122	[BUG]  [BUGGY]  float  v  =  gcd(p,  q  +  1,  q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  v  =  gcd(p,  q  +  1,  q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  v  =  gcd(p,  q  +  1,  q);	  int    v    =    gcd(p,    q    +    1,    q);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
123	[BUG]  [BUGGY]  int  v  =  p  &  q;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  p  &  q;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  p  &  q;	  int    v    =    gcd    &    q;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
124	[BUG]  [BUGGY]  int  v  =  gcd  &  p;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd  &  p;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd  &  p;	  int    v    =    gcd    &    q;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
125	[BUG]  [BUGGY]  int  v  =  gcd  -  q;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd  -  q;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd  -  q;	  int    v    =    gcd    &    q;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
126	[BUG]  [BUGGY]  int  v  =  q  &  gcd;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  q  &  gcd;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  q  &  gcd;	  int    v    =    gcd    &    q;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
127	[BUG]  [BUGGY]  parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
128	[BUG]  [BUGGY]  int  v  =  p  +  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  p  +  2;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  p  +  2;	  int    v    =    p    +    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
129	[BUG]  [BUGGY]  int  v  =  p  +  3;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  p  +  3;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  p  +  3;	  int    v    =    p    +    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
130	[BUG]  [BUGGY]  int  v  =  p  +  4;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  p  +  4;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  p  +  4;	  int    v    =    p    +    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
131	[BUG]  [BUGGY]  int  v  =  gcd(p,  q  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd(p,  q  +  2);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd(p,  q  +  2);	  int    v    =    gcd(p,    q    +    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
132	[BUG]  [BUGGY]  int  v  =  gcd(p,  q  *  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd(p,  q  *  1);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd(p,  q  *  1);	  int    v    =    gcd(p,    q    +    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
133	[BUG]  [BUGGY]  try  {  [Delete]  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [Delete]  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  [Delete]	  try    {    if((    p    ==    0)    ||(q    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
134	[BUG]  [BUGGY]  tries  {  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  tries  {  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	tries  {  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p));  }	  try    {    if((    p    ==    0)    ||(q    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
135	[BUG]  [BUGGY]  tries  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(Math.abs(p));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  tries  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(Math.abs(p));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	tries  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(Math.abs(p));  }	  try    {    if((    p    ==    0)    ||(q    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
136	[BUG]  [BUGGY]  tries  {  if((  p  ==  0)&&(q  ==  0))  {  return  (Math.abs(p));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  tries  {  if((  p  ==  0)&&(q  ==  0))  {  return  (Math.abs(p));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	tries  {  if((  p  ==  0)&&(q  ==  0))  {  return  (Math.abs(p));  }	  try    {    if((    p    ==    0)    ||(q    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
137	[BUG]  [BUGGY]  while((  u  >=  0)&&(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  >=  0)&&(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  >=  0)&&(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));	  try    {    [Delete]    catch(Exception    e)    {    if((    u    >=    0)||(q    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
138	[BUG]  [BUGGY]  while((  u  >=  0)&&(q  ==  0))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  >=  0)&&(q  ==  0))  {  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  >=  0)&&(q  ==  0))  {	  try    {    [Delete]    catch(Exception    e)    {    if((    u    >=    0)||(q    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
139	[BUG]  [BUGGY]  while((  u  >=  0)&&(q  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  >=  0)&&(q  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  >=  0)&&(q  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));	  try    {    [Delete]    catch(Exception    e)    {    if((    u    >=    0)||(q    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
140	[BUG]  [BUGGY]  parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(k));    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
141	[BUG]  [BUGGY]  float  q  =(float)Math.pow(10,  u);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  q  =(float)Math.pow(10,  u);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  q  =(float)Math.pow(10,  u);	  int    q    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
142	[BUG]  [BUGGY]  char  q  =(char)Math.pow(10,  u);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  q  =(char)Math.pow(10,  u);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  q  =(char)Math.pow(10,  u);	  int    q    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
143	[BUG]  [BUGGY]  parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q);  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
144	[BUG]  [BUGGY]  String  q  =(String)Math.rint(p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  String  q  =(String)Math.rint(p);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	String  q  =(String)Math.rint(p);	  char    q    =(char)Math.rint(p);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
145	[BUG]  [BUGGY]  char  q  =(char)Math.rint(p,  q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  q  =(char)Math.rint(p,  q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  q  =(char)Math.rint(p,  q);	  char    q    =(char)Math.rint(p);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
146	[BUG]  [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)&&(q  ==  0))  {  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(k));    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
147	[BUG]  [BUGGY]  int  v  =(p  ==  0)?  0  :  q;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(p  ==  0)?  0  :  q;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(p  ==  0)?  0  :  q;	  int    v    =(q    ==    0)?    0    :    p;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
148	[BUG]  [BUGGY]  int  v  =(q  ==  0)?  1  :  p;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  ==  0)?  1  :  p;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  ==  0)?  1  :  p;	  int    v    =(q    ==    0)?    0    :    p;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
149	[BUG]  [BUGGY]  int  v  =(q  ==  0)?  0  :  p  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  ==  0)?  0  :  p  +  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  ==  0)?  0  :  p  +  1;	  int    v    =(q    ==    0)?    0    :    p;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
150	[BUG]  [BUGGY]  char  v  =  Math.abs(p);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  v  =  Math.abs(p);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  v  =  Math.abs(p);	  int    v    =    Math.abs(p);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
151	[BUG]  [BUGGY]  int  v  =  Math.abs(q);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  Math.abs(q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  Math.abs(q);	  int    v    =    Math.abs(p);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
152	[BUG]  [BUGGY]  float  v  =  Math.abs(p);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  v  =  Math.abs(p);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  v  =  Math.abs(p);	  int    v    =    Math.abs(p);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
153	[BUG]  [BUGGY]  int  v  =  Math.abs(p  +  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  Math.abs(p  +  1);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  Math.abs(p  +  1);	  int    v    =    Math.abs(p);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
154	[BUG]  [BUGGY]  while((  u  ==  0)||(q  ==  0))  {  if((  p  <  0)||(p  >  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)||(q  ==  0))  {  if((  p  <  0)||(p  >  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)||(q  ==  0))  {  if((  p  <  0)||(p  >  0))  {  return  Math.abs(p)+  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
155	[BUG]  [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)&&(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
156	[BUG]  [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  if((  p  <  0)||(q  >  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  if((  p  <  0)||(q  >  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)&&(q  ==  0))  {  if((  p  <  0)||(q  >  0))  {  return  Math.abs(p)+  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
157	[BUG]  [BUGGY]  parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
158	[BUG]  [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  [Delete]  catch(NumberFormatException  nfe)  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p));  }	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
159	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if((  u  >=  0)  ||(v  ==  0))  {  return  (Math.abs(p));  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if((  u  >=  0)  ||(v  ==  0))  {  return  (Math.abs(p));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  [Delete]  catch(Exception  e)  {  if((  u  >=  0)  ||(v  ==  0))  {  return  (Math.abs(p));  }	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
160	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  if((  u  >=  0)  ||(v  ==  0))  {  return  (Math.abs(p));  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  if((  u  >=  0)  ||(v  ==  0))  {  return  (Math.abs(p));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  [Delete]  catch(Throwable  t)  {  if((  u  >=  0)  ||(v  ==  0))  {  return  (Math.abs(p));  }	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
161	[BUG]  [BUGGY]  int  v  =(u  ==  0)?  1  :  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(u  ==  0)?  1  :  0;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(u  ==  0)?  1  :  0;	  int    v    =(q    ==    0)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
162	[BUG]  [BUGGY]  int  v  =(p  ==  0)?  1  :  0;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(p  ==  0)?  1  :  0;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(p  ==  0)?  1  :  0;	  int    v    =(q    ==    0)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
163	[BUG]  [BUGGY]  int  v  =(q  ==  0)?  1  :  -1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  ==  0)?  1  :  -1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  ==  0)?  1  :  -1;	  int    v    =(q    ==    0)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
164	[BUG]  [BUGGY]  int  v  =  p  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  p  -  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  p  -  1;	  int    v    =    q    -    1;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
165	[BUG]  [BUGGY]  int  v  =  u  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  u  -  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  u  -  1;	  int    v    =    q    -    1;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
166	[BUG]  [BUGGY]  int  v  =  q  <  <  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  q  <  <  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  q  <  <  1;	  int    v    =    q    -    1;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
167	[BUG]  [BUGGY]  int  v  =  gcd.length  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd.length  -  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd.length  -  1;	  int    v    =    gcd.length;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
168	[BUG]  [BUGGY]  int  v  =  p.length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  p.length;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  p.length;	  int    v    =    gcd.length;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
169	[BUG]  [BUGGY]  int  v  =  gcd.length  -  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd.length  -  2;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd.length  -  2;	  int    v    =    gcd.length;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
170	[BUG]  [BUGGY]  int  v  =  gcd.length  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd.length  +  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd.length  +  1;	  int    v    =    gcd.length;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
171	[BUG]  [BUGGY]  int  v  =(u  ==  0)?  0  :  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(u  ==  0)?  0  :  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(u  ==  0)?  0  :  1;	  int    v    =(q    ==    0)?    0    :    1;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
172	[BUG]  [BUGGY]  int  v  =(p  ==  0)?  0  :  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(p  ==  0)?  0  :  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(p  ==  0)?  0  :  1;	  int    v    =(q    ==    0)?    0    :    1;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
173	[BUG]  [BUGGY]  char  q  =(char)Math.pow(10,  q);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  q  =(char)Math.pow(10,  q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  q  =(char)Math.pow(10,  q);	  char    q    =(char)Math.pow(10,    p);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
174	[BUG]  [BUGGY]  String  q  =(String)Math.pow(10,  p);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  String  q  =(String)Math.pow(10,  p);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	String  q  =(String)Math.pow(10,  p);	  char    q    =(char)Math.pow(10,    p);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
175	[BUG]  [BUGGY]  char  q  =(char)Math.pow(100,  p);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  q  =(char)Math.pow(100,  p);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  q  =(char)Math.pow(100,  p);	  char    q    =(char)Math.pow(10,    p);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
176	[BUG]  [BUGGY]  float  v  =  0L;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  v  =  0L;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  v  =  0L;	  int    v    =    0L;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
177	[BUG]  [BUGGY]  String  q  =(String)Math.ceil(p);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  String  q  =(String)Math.ceil(p);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	String  q  =(String)Math.ceil(p);	  char    q    =(char)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
178	[BUG]  [BUGGY]  char  q  =(char)Math.ceil(p  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  q  =(char)Math.ceil(p  +  1);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  q  =(char)Math.ceil(p  +  1);	  char    q    =(char)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
179	[BUG]  [BUGGY]  int  q  =(int)Math.rint(u,  q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  q  =(int)Math.rint(u,  q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  q  =(int)Math.rint(u,  q);	  int    q    =(int)Math.rint(p,    q);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
180	[BUG]  [BUGGY]  int  q  =(int)Math.rint(p,  q  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  q  =(int)Math.rint(p,  q  +  1);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  q  =(int)Math.rint(p,  q  +  1);	  int    q    =(int)Math.rint(p,    q);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
181	[BUG]  [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  [Delete]  catch(NumberFormatException  nfe)  {  if((  u  ==  0)||(v  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }	  if(q    ==    0)    {    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
182	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  if((  u  ==  0)  ||(v  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  if((  u  ==  0)  ||(v  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  [Delete]  catch(Throwable  t)  {  if((  u  ==  0)  ||(v  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }	  if(q    ==    0)    {    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
183	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if((  u  ==  0)  ||(v  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if((  u  ==  0)  ||(v  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  [Delete]  catch(Exception  e)  {  if((  u  ==  0)  ||(v  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }	  if(q    ==    0)    {    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
184	[BUG]  [BUGGY]  int  v  =  u  +  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  u  +  2;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  u  +  2;	  int    v    =    u    +    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
185	[BUG]  [BUGGY]  parent!=  null  &&(q  ==  0)||(q  ==  0))  {  return  Math.abs(p);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(q  ==  0)||(q  ==  0))  {  return  Math.abs(p);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(q  ==  0)||(q  ==  0))  {  return  Math.abs(p);  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
186	[BUG]  [BUGGY]  parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p);  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
187	[BUG]  [BUGGY]  if(u  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if(u  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if(u  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	95	None	replace
188	[BUG]  [BUGGY]  if(u  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  gcd: "  +  p);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if(u  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  gcd: "  +  p);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if(u  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  gcd: "  +  p);  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	95	None	replace
189	[BUG]  [BUGGY]  int  u  =  p  +  Math.abs(q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  u  =  p  +  Math.abs(q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  u  =  p  +  Math.abs(q);	  [Delete]    	non-compiled	[CE]  <identifier>  expected	95	None	replace
190	[BUG]  [BUGGY]  if(u  ==  0)  {  throw  new  IllegalArgumentException( "Missing  number  of  gcd  values. ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if(u  ==  0)  {  throw  new  IllegalArgumentException( "Missing  number  of  gcd  values. ");  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if(u  ==  0)  {  throw  new  IllegalArgumentException( "Missing  number  of  gcd  values. ");  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	95	None	replace
191	[BUG]  [BUGGY]  while((  u  ==  0)||(q  ==  0))  {  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)||(q  ==  0))  {  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)||(q  ==  0))  {  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
192	[BUG]  [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  if((  p  >=  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  if((  p  >=  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)&&(q  ==  0))  {  if((  p  >=  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }	  try    {    [Delete]    catch(Exception    e)    {    if((    u    ==    0)    ||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
193	[BUG]  [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)&&(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
194	[BUG]  [BUGGY]  int  v  =(q  <  0)?  0  :  p;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  <  0)?  0  :  p;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  <  0)?  0  :  p;	  int    v    =(q    <    0)?    0    :    q;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
195	[BUG]  [BUGGY]  int  v  =(u  <  0)?  0  :  q;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(u  <  0)?  0  :  q;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(u  <  0)?  0  :  q;	  int    v    =(q    <    0)?    0    :    q;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
196	[BUG]  [BUGGY]  while((  u  ==  0)||(q  ==  0))  {  if((  p  ==  0)||(p  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)||(q  ==  0))  {  if((  p  ==  0)||(p  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)||(q  ==  0))  {  if((  p  ==  0)||(p  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
197	[BUG]  [BUGGY]  int  u  =  gcd  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  u  =  gcd  +  1;  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  u  =  gcd  +  1;	  int    u    =    gcd;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
198	[BUG]  [BUGGY]  int  u  =  gcd.length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  u  =  gcd.length;  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  u  =  gcd.length;	  int    u    =    gcd;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
199	[BUG]  [BUGGY]  char  u  =  gcd;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  u  =  gcd;  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  u  =  gcd;	  int    u    =    gcd;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
200	[BUG]  [BUGGY]  parent!=  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(p));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
201	[BUG]  [BUGGY]  parent!=  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p));	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(p));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
202	[BUG]  [BUGGY]  char  v  =(char)Math.floor(p);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  v  =(char)Math.floor(p);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  v  =(char)Math.floor(p);	  int    v    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
203	[BUG]  [BUGGY]  int  v  =(int)Math.floor(q);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(int)Math.floor(q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(int)Math.floor(q);	  int    v    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
204	[BUG]  [BUGGY]  float  v  =(float)Math.floor(p);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  v  =(float)Math.floor(p);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  v  =(float)Math.floor(p);	  int    v    =(int)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
205	[BUG]  [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)&&(q  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    ==    0)||(q    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
206	[BUG]  [BUGGY]  int  v  =  gcd(p,  q,  t);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd(p,  q,  t);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd(p,  q,  t);	  int    v    =    gcd(p,    q,    u);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
207	[BUG]  [BUGGY]  int  v  =  gcd(p,  q,  u  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd(p,  q,  u  +  1);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd(p,  q,  u  +  1);	  int    v    =    gcd(p,    q,    u);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
208	[BUG]  [BUGGY]  float  v  =  gcd(p,  q,  u);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  v  =  gcd(p,  q,  u);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  v  =  gcd(p,  q,  u);	  int    v    =    gcd(p,    q,    u);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
209	[BUG]  [BUGGY]  parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent  ==  null  &&(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k);  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(k);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
210	[BUG]  [BUGGY]  float  q  =(float)Math.pow(100,  p);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  q  =(float)Math.pow(100,  p);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  q  =(float)Math.pow(100,  p);	  float    q    =(float)Math.pow(10,    p);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
211	[BUG]  [BUGGY]  int  q  =(int)Math.rint(p  +  1,  u);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  q  =(int)Math.rint(p  +  1,  u);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  q  =(int)Math.rint(p  +  1,  u);	  int    q    =(int)Math.rint(p    +    1,    q);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
212	[BUG]  [BUGGY]  int  q  =(int)Math.rint(u  +  1,  q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  q  =(int)Math.rint(u  +  1,  q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  q  =(int)Math.rint(u  +  1,  q);	  int    q    =(int)Math.rint(p    +    1,    q);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
213	[BUG]  [BUGGY]  int  q  =(int)Math.rint(p  *  1,  q);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  q  =(int)Math.rint(p  *  1,  q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  q  =(int)Math.rint(p  *  1,  q);	  int    q    =(int)Math.rint(p    +    1,    q);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
214	[BUG]  [BUGGY]  float  q  =(float)Math.rint(p  +  1,  q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  q  =(float)Math.rint(p  +  1,  q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  q  =(float)Math.rint(p  +  1,  q);	  int    q    =(int)Math.rint(p    +    1,    q);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
215	[BUG]  [BUGGY]  int  v  =  gcd  -  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd  -  2;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd  -  2;	  int    v    =    gcd    -    1;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
216	[BUG]  [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [Delete]  catch(NumberFormatException  nfe)  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p)-  Math.abs(q));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  [Delete]  catch(NumberFormatException  nfe)  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p)-  Math.abs(q));  }	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
217	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if((  u  >=  0)  ||(v  ==  0))  {  return  (Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if((  u  >=  0)  ||(v  ==  0))  {  return  (Math.abs(p)-  Math.abs(q));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  [Delete]  catch(Exception  e)  {  if((  u  >=  0)  ||(v  ==  0))  {  return  (Math.abs(p)-  Math.abs(q));  }	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
218	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p)-  Math.abs(q));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  [Delete]  catch(Throwable  t)  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p)-  Math.abs(q));  }	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
219	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if((  u  >=  0)  ||(v  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  if((  u  >=  0)  ||(v  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  [Delete]  catch(Exception  e)  {  if((  u  >=  0)  ||(v  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
220	[BUG]  [BUGGY]  int  v  =  gcd  -  1L;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd  -  1L;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd  -  1L;	  int    v    =    gcd    -    1;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
221	[BUG]  [BUGGY]  int  v  =  gcd  -  4;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd  -  4;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd  -  4;	  int    v    =    gcd    -    1;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
222	[BUG]  [BUGGY]  int  v  =(q  ==  0)?  -1  :  q;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  ==  0)?  -1  :  q;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  ==  0)?  -1  :  q;	  int    v    =(q    ==    0)?    0    :    q;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
223	[BUG]  [BUGGY]  while((  u  >=  0)||(q  ==  0))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  >=  0)||(q  ==  0))  {  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  >=  0)||(q  ==  0))  {	  try    {    [Delete]    catch(Exception    e)    {    if((    u    >=    0)||(q    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
224	[BUG]  [BUGGY]  return  Math.abs(u)+  Math.abs(q);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  return  Math.abs(u)+  Math.abs(q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	return  Math.abs(u)+  Math.abs(q);	  try    {    [Delete]    catch(Exception    e)    {    if((    u    >=    0)||(q    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
225	[BUG]  [BUGGY]  int  v  =  q  *  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  q  *  2;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  q  *  2;	  int    v    =    q    +    2;    	non-compiled	[CE]  <identifier>  expected	87	None	replace
226	[BUG]  [BUGGY]  int  v  =  p  *  gcd;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  p  *  gcd;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  p  *  gcd;	  int    v    =    p    *    q;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
227	[BUG]  [BUGGY]  while((  u  >>  0)&&(q  ==  0))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  >>  0)&&(q  ==  0))  {  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  >>  0)&&(q  ==  0))  {	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    >=    0)||(q    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
228	[BUG]  [BUGGY]  while((  u  ==  0)||(q  ==  0))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)||(q  ==  0))  {  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)||(q  ==  0))  {	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
229	[BUG]  [BUGGY]  parent!=  null  &&(q  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(q  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(q  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k);  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(k);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
230	[BUG]  [BUGGY]  tryReturn(t)  {  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  tryReturn(t)  {  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	tryReturn(t)  {  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
231	[BUG]  [BUGGY]  int  q  =(int)Math.ceil(gcd,  q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  q  =(int)Math.ceil(gcd,  q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  q  =(int)Math.ceil(gcd,  q);	  int    q    =(int)Math.ceil(p,    q);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
232	[BUG]  [BUGGY]  int  v  =  gcd  &  q  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd  &  q  +  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd  &  q  +  1;	  int    v    =    gcd    &    q;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
233	[BUG]  [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
234	[BUG]  [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p);  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
235	[BUG]  [BUGGY]  if(u  ==  0  ||  q  ==  0)  {  return  Math.abs(p)+  Math.abs(q);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if(u  ==  0  ||  q  ==  0)  {  return  Math.abs(p)+  Math.abs(q);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if(u  ==  0  ||  q  ==  0)  {  return  Math.abs(p)+  Math.abs(q);  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
236	[BUG]  [BUGGY]  int  v  =  q  -  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  q  -  2;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  q  -  2;	  int    v    =    q    -    1;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
237	[BUG]  [BUGGY]  mutableValues(p,  q);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  mutableValues(p,  q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	mutableValues(p,  q);	  if(q    ==    0)    {    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
238	[BUG]  [BUGGY]  mutableValues.add(p);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  mutableValues.add(p);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	mutableValues.add(p);	  if(q    ==    0)    {    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
239	[BUG]  [BUGGY]  parent  ==  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent  ==  null;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent  ==  null;	  if(q    ==    0)    {    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
240	[BUG]  [BUGGY]  pend(p,  q);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  pend(p,  q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	pend(p,  q);	  if(q    ==    0)    {    if((    u    ==    0)||(v    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
241	[BUG]  [BUGGY]  int  u  =(q  ==  0)?  1  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  u  =(q  ==  0)?  1  :  0;  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  u  =(q  ==  0)?  1  :  0;	  int    u    =    0;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
242	[BUG]  [BUGGY]  int  v  =(q  ==  0)?  0  :  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  ==  0)?  0  :  0;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  ==  0)?  0  :  0;	  int    v    =    0L;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
243	[BUG]  [BUGGY]  int  v  =(q  ==  0)?  0L  :  0L;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  ==  0)?  0L  :  0L;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  ==  0)?  0L  :  0L;	  int    v    =    0L;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
244	[BUG]  [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
245	[BUG]  [BUGGY]  int  v  =(q  <  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  <  1)?  1  :  0;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  <  1)?  1  :  0;	  int    v    =    1;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
246	[BUG]  [BUGGY]  int  v  =(q  ==  0)?  3  :  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  ==  0)?  3  :  0;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  ==  0)?  3  :  0;	  int    v    =(q    ==    0)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
247	[BUG]  [BUGGY]  int  u  =  gcd  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  u  =  gcd  -  1;  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  u  =  gcd  -  1;	  int    u    =    gcd;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
248	[BUG]  [BUGGY]  float  u  =  gcd;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  u  =  gcd;  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  u  =  gcd;	  int    u    =    gcd;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
249	[BUG]  [BUGGY]  char  v  =  q;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  v  =  q;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  v  =  q;	  char    v    =    u;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
250	[BUG]  [BUGGY]  Char  v  =  gcd(p,  q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  Char  v  =  gcd(p,  q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	Char  v  =  gcd(p,  q);	  char    v    =    gcd(p,    q);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
251	[BUG]  [BUGGY]  int  u  =  p  *  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  u  =  p  *  2;  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  u  =  p  *  2;	  int    u    =    p    +    2;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
252	[BUG]  [BUGGY]  tryReturn(t)  {  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  tryReturn(t)  {  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	tryReturn(t)  {  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    ==    0)||(q    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
253	[BUG]  [BUGGY]  tryReturn(t)  {  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  tryReturn(t)  {  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	tryReturn(t)  {  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    ==    0)||(q    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
254	[BUG]  [BUGGY]  char  q  =(char)Math.ceil(q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  q  =(char)Math.ceil(q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  q  =(char)Math.ceil(q);	  char    q    =(char)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
255	[BUG]  [BUGGY]  char  v  =  gcd  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  v  =  gcd  +  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  v  =  gcd  +  1;	  char    v    =    gcd;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
256	[BUG]  [BUGGY]  char  v  =  gcd  *  q;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  v  =  gcd  *  q;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  v  =  gcd  *  q;	  char    v    =    gcd;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
257	[BUG]  [BUGGY]  return  Math.abs(p)+  Math.abs(q);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  return  Math.abs(p)+  Math.abs(q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	return  Math.abs(p)+  Math.abs(q);	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
258	[BUG]  [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
259	[BUG]  [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q);  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
260	[BUG]  [BUGGY]  tryReturn(t)  {  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  tryReturn(t)  {  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	tryReturn(t)  {  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    >=    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
261	[BUG]  [BUGGY]  tryReturn(t)  {  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)/  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  tryReturn(t)  {  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)/  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	tryReturn(t)  {  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)/  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    >=    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
262	[BUG]  [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(k));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(k));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(k));  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(k));    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
263	[BUG]  [BUGGY]  parent!=  null  ||(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  ||(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  ||(p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q);  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)-    Math.abs(q);    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
264	[BUG]  [BUGGY]  int  v  =  gcd(p,  q  *  1,  q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd(p,  q  *  1,  q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd(p,  q  *  1,  q);	  int    v    =    gcd(p,    q    +    1,    q);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
265	[BUG]  [BUGGY]  char  v  =  0L;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  v  =  0L;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  v  =  0L;	  char    v    =    0;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
266	[BUG]  [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
267	[BUG]  [BUGGY]  int  q  =(int)Math.log(gcd);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  q  =(int)Math.log(gcd);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  q  =(int)Math.log(gcd);	  int    q    =(int)Math.log(p);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
268	[BUG]  [BUGGY]  float  q  =(float)Math.ceil(q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  q  =(float)Math.ceil(q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  q  =(float)Math.ceil(q);	  float    q    =(float)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
269	[BUG]  [BUGGY]  float  q  =(float)Math.floor(p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  q  =(float)Math.floor(p);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  q  =(float)Math.floor(p);	  float    q    =(float)Math.ceil(p);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
270	[BUG]  [BUGGY]  mutableValues(q)  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  mutableValues(q)  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	mutableValues(q)  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p));  }	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
271	[BUG]  [BUGGY]  if(q  ==  0)  {  if((  u  >  0)||(v  ==  0))  {  return  (Math.abs(p));  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if(q  ==  0)  {  if((  u  >  0)||(v  ==  0))  {  return  (Math.abs(p));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if(q  ==  0)  {  if((  u  >  0)||(v  ==  0))  {  return  (Math.abs(p));  }	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
272	[BUG]  [BUGGY]  char  q  =(char)Math.floor(q);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  q  =(char)Math.floor(q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  q  =(char)Math.floor(q);	  char    q    =(char)Math.floor(p);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
273	[BUG]  [BUGGY]  try  {  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p));  }	  try    {    if((    p    ==    0)    ||(q    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
274	[BUG]  [BUGGY]  try  {  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }	  try    {    if((    p    ==    0)    ||(q    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
275	[BUG]  [BUGGY]  try  {  if((  p  ==  0)&&(q  ==  0))  {  return  (Math.abs(p));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  if((  p  ==  0)&&(q  ==  0))  {  return  (Math.abs(p));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  if((  p  ==  0)&&(q  ==  0))  {  return  (Math.abs(p));  }	  try    {    if((    p    ==    0)    ||(q    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
276	[BUG]  [BUGGY]  int  q  =(int)Math.pow(10,  gcd  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  q  =(int)Math.pow(10,  gcd  -  1);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  q  =(int)Math.pow(10,  gcd  -  1);	  int    q    =(int)Math.pow(10,    gcd);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
277	[BUG]  [BUGGY]  int  v  =(q  ==  0)?  -1  :  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  ==  0)?  -1  :  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  ==  0)?  -1  :  1;	  int    v    =(q    ==    0)?    0    :    1;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
278	[BUG]  [BUGGY]  int  v  =(q  ==  1)?  0  :  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  ==  1)?  0  :  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  ==  1)?  0  :  1;	  int    v    =(q    ==    0)?    0    :    1;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
279	[BUG]  [BUGGY]  mutableValues(p)  {  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  mutableValues(p)  {  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	mutableValues(p)  {  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }	  mutableValues(u)    {    if((    q    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
280	[BUG]  [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  (Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  (Math.abs(p)-  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  (Math.abs(p)-  Math.abs(q));  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
281	[BUG]  [BUGGY]  int  v  =(q  <  0)?  1  :  q;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  <  0)?  1  :  q;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  <  0)?  1  :  q;	  int    v    =(q    <    0)?    0    :    q;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
282	[BUG]  [BUGGY]  int  v  =(q!=  0)?  0  :  q;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q!=  0)?  0  :  q;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q!=  0)?  0  :  q;	  int    v    =(q    <    0)?    0    :    q;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
283	[BUG]  [BUGGY]  int  v  =  gcd(p,  q  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd(p,  q  -  1);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd(p,  q  -  1);	  int    v    =    gcd(p,    q    +    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
284	[BUG]  [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(p));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
285	[BUG]  [BUGGY]  int  v  =  p  +  q  +  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  p  +  q  +  2;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  p  +  q  +  2;	  int    v    =    p    +    q;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
286	[BUG]  [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(k));    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
287	[BUG]  [BUGGY]  int  q  =(int)Math.ceil(gcd,  u);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  q  =(int)Math.ceil(gcd,  u);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  q  =(int)Math.ceil(gcd,  u);	  int    q    =(int)Math.ceil(u);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
288	[BUG]  [BUGGY]  int  q  =(int)Math.floor(u  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  q  =(int)Math.floor(u  +  1);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  q  =(int)Math.floor(u  +  1);	  int    q    =(int)Math.floor(u);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
289	[BUG]  [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
290	[BUG]  [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q);  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
291	[BUG]  [BUGGY]  float  v  =  gcd(u,  q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  v  =  gcd(u,  q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  v  =  gcd(u,  q);	  float    v    =    gcd(p,    q);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
292	[BUG]  [BUGGY]  int  v  =  Math.abs(p  +  q);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  Math.abs(p  +  q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  Math.abs(p  +  q);	  int    v    =    Math.abs(p);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
293	[BUG]  [BUGGY]  float  q  =(float)Math.pow(20,  p);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  q  =(float)Math.pow(20,  p);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  q  =(float)Math.pow(20,  p);	  float    q    =(float)Math.pow(10,    p);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
294	[BUG]  [BUGGY]  if(u  <  =  0)  {  return  gcd.intValue();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if(u  <  =  0)  {  return  gcd.intValue();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if(u  <  =  0)  {  return  gcd.intValue();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	95	None	replace
295	[BUG]  [BUGGY]  if(u  <  =  0)  {  return  gcd.intValue();  }  else  {  return  gcd.intValue();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if(u  <  =  0)  {  return  gcd.intValue();  }  else  {  return  gcd.intValue();  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if(u  <  =  0)  {  return  gcd.intValue();  }  else  {  return  gcd.intValue();  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	95	None	replace
296	[BUG]  [BUGGY]  if(u  <  =  0)  {  return  gcd.intValue();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if(u  <  =  0)  {  return  gcd.intValue();  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if(u  <  =  0)  {  return  gcd.intValue();  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	95	None	replace
297	[BUG]  [BUGGY]  if(u  <  =  0)  {  return  gcd.intValue();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if(u  <  =  0)  {  return  gcd.intValue();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if(u  <  =  0)  {  return  gcd.intValue();  }  else  {  throw  new  IllegalStateException( " ");  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	95	None	replace
298	[BUG]  [BUGGY]  int  v  =  gcd(u,  p);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd(u,  p);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd(u,  p);	  int    v    =    gcd(p,    u);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
299	[BUG]  [BUGGY]  float  q  =(float)Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  float  q  =(float)Math.pow(10,  y);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	float  q  =(float)Math.pow(10,  y);	  float    q    =(float)Math.pow(10,    p);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
300	[BUG]  [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(k));    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
301	[BUG]  [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(k));    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
302	[BUG]  [BUGGY]  }  else  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  }  else  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	}  else  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
303	[BUG]  [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
304	[BUG]  [BUGGY]  int  v  =  q  *  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  q  *  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  q  *  1;	  int    v    =    q    -    1;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
305	[BUG]  [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)&&(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)&&(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }	  try    {    [Delete]    catch(Exception    e)    {    if((    u    ==    0)    ||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
306	[BUG]  [BUGGY]  while((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));	  try    {    [Delete]    catch(Exception    e)    {    if((    u    ==    0)    ||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
307	[BUG]  [BUGGY]  if(u  <  0  ||  q  >  0)  {  return  Math.abs(p)+  Math.abs(q);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if(u  <  0  ||  q  >  0)  {  return  Math.abs(p)+  Math.abs(q);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if(u  <  0  ||  q  >  0)  {  return  Math.abs(p)+  Math.abs(q);  }	  try    {    [Delete]    catch(Exception    e)    {    if((    u    ==    0)    ||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
308	[BUG]  [BUGGY]  parent!=  null  &&(q  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(q  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(q  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k));  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(k));    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
309	[BUG]  [BUGGY]  int  v  =(q  >=  0)?  0  :  p;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  >=  0)?  0  :  p;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  >=  0)?  0  :  p;	  int    v    =(q    >=    0)?    0    :    q;    	non-compiled	[CE]  <identifier>  expected	99	None	replace
310	[BUG]  [BUGGY]  int  u  =  p  *  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  u  =  p  *  1;  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  u  =  p  *  1;	  int    u    =    p    +    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
311	[BUG]  [BUGGY]  int  u  =  p  /  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  u  =  p  /  2;  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  u  =  p  /  2;	  int    u    =    p    +    2;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
312	[BUG]  [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(p);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
313	[BUG]  [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(p);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
314	[BUG]  [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
315	[BUG]  [BUGGY]  if((  q  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  q  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  q  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
316	[BUG]  [BUGGY]  int  v  =(q  ==  0)?  1  :  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  ==  0)?  1  :  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  ==  0)?  1  :  1;	  int    v    =(q    ==    0)?    0    :    1;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
317	[BUG]  [BUGGY]  int  v  =(q  ==  1)?  1  :  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  ==  1)?  1  :  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  ==  1)?  1  :  1;	  int    v    =(q    ==    0)?    0    :    1;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
318	[BUG]  [BUGGY]  int  v  =  q.length;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  q.length;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  q.length;	  int    v    =    gcd.length;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
319	[BUG]  [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(k);  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(k);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
320	[BUG]  [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
321	[BUG]  [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
322	[BUG]  [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    ==    0)||(q    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
323	[BUG]  [BUGGY]  }  else  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  }  else  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	}  else  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    ==    0)||(q    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
324	[BUG]  [BUGGY]  parent  ==  null  ||  q  ==  parent.next())  {  return(Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent  ==  null  ||  q  ==  parent.next())  {  return(Math.abs(p)+  Math.abs(q));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent  ==  null  ||  q  ==  parent.next())  {  return(Math.abs(p)+  Math.abs(q));  }	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
325	[BUG]  [BUGGY]  parent  ==  null  ||  q  ==  parent.getParent())  {  return(Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent  ==  null  ||  q  ==  parent.getParent())  {  return(Math.abs(p)+  Math.abs(q));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent  ==  null  ||  q  ==  parent.getParent())  {  return(Math.abs(p)+  Math.abs(q));  }	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
326	[BUG]  [BUGGY]  int  v  =  gcd  +  q;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd  +  q;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd  +  q;	  int    v    =    gcd    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
327	[BUG]  [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
328	[BUG]  [BUGGY]  if((  u  >=  0)||(q  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  u  >=  0)||(q  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  u  >=  0)||(q  ==  0))  {  return  (Math.abs(u)+  Math.abs(q));  }	  try    {    [Delete]    catch(Exception    e)    {    if((    u    >=    0)||(q    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
329	[BUG]  [BUGGY]  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }	  try    {    [Delete]    catch(Exception    e)    {    if((    u    >=    0)||(q    ==    0))    {    return    (Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
330	[BUG]  [BUGGY]  parent!=  null  &&(q  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(q  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(q  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(p));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
331	[BUG]  [BUGGY]  try  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  if((  u  >=  0)||(v  ==  0))  {  return  (Math.abs(p));  }	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
332	[BUG]  [BUGGY]  try  {  if((  u  ==  0)  ||(v  ==  0))  {  return  (Math.abs(p));  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  try  {  if((  u  ==  0)  ||(v  ==  0))  {  return  (Math.abs(p));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	try  {  if((  u  ==  0)  ||(v  ==  0))  {  return  (Math.abs(p));  }	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
333	[BUG]  [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(p);  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(p);    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
334	[BUG]  [BUGGY]  if(u  >  0)  {  if(!factorials.isEmpty()  ||!factorials.isEmpty())  {  return  0;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if(u  >  0)  {  if(!factorials.isEmpty()  ||!factorials.isEmpty())  {  return  0;  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if(u  >  0)  {  if(!factorials.isEmpty()  ||!factorials.isEmpty())  {  return  0;  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	95	None	replace
335	[BUG]  [BUGGY]  if(u  >  0)  {  if(!factorials.isEmpty()  ||!factorials.isEmpty())  {  return  -1;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if(u  >  0)  {  if(!factorials.isEmpty()  ||!factorials.isEmpty())  {  return  -1;  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if(u  >  0)  {  if(!factorials.isEmpty()  ||!factorials.isEmpty())  {  return  -1;  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	95	None	replace
336	[BUG]  [BUGGY]  if(u  >  0)  {  if(!factorials.isEmpty()  ||!factorials.isEmpty())  {  return  gcd;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if(u  >  0)  {  if(!factorials.isEmpty()  ||!factorials.isEmpty())  {  return  gcd;  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if(u  >  0)  {  if(!factorials.isEmpty()  ||!factorials.isEmpty())  {  return  gcd;  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	95	None	replace
337	[BUG]  [BUGGY]  if(u  >  0)  {  if(!factorials.isEmpty()  ||!factorials.isEmpty())  {  return  p;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if(u  >  0)  {  if(!factorials.isEmpty()  ||!factorials.isEmpty())  {  return  p;  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if(u  >  0)  {  if(!factorials.isEmpty()  ||!factorials.isEmpty())  {  return  p;  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	95	None	replace
338	[BUG]  [BUGGY]  }  else  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  }  else  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	}  else  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
339	[BUG]  [BUGGY]  int  v  =  gcd(p,  q,  q  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd(p,  q,  q  +  1);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd(p,  q,  q  +  1);	  int    v    =    gcd(p,    q,    u);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
340	[BUG]  [BUGGY]  int  q  =(int)Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  q  =(int)Math.pow(10,  y);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  q  =(int)Math.pow(10,  y);	  int    q    =(int)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
341	[BUG]  [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(k));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(k));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(k));  }	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(k));    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
342	[BUG]  [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(k));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(k));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(k));  }	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(k));    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
343	[BUG]  [BUGGY]  }  else  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  }  else  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	}  else  if((  p  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
344	[BUG]  [BUGGY]  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)/  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)/  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)/  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    >=    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
345	[BUG]  [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
346	[BUG]  [BUGGY]  parent!=  null  &&(p  >  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(p  >  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(p  >  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
347	[BUG]  [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
348	[BUG]  [BUGGY]  }  else  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  }  else  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	}  else  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
349	[BUG]  [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)/  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)/  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)/  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
350	[BUG]  [BUGGY]  Char  q  =(char)Math.pow(10,  q);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  Char  q  =(char)Math.pow(10,  q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	Char  q  =(char)Math.pow(10,  q);	  char    q    =(char)Math.pow(10,    p);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
351	[BUG]  [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p));  }	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)    ||(q    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
352	[BUG]  [BUGGY]  if((  q  ==  0)||(q  ==  0))  {  return  (Math.abs(p));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  q  ==  0)||(q  ==  0))  {  return  (Math.abs(p));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  q  ==  0)||(q  ==  0))  {  return  (Math.abs(p));  }	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)    ||(q    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
353	[BUG]  [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  p  ==  0)&&(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  p  ==  0)&&(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q));  }	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)||(q    ==    0))    {    return    Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
354	[BUG]  [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p)-  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p)-  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
355	[BUG]  [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p)-  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p)-  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
356	[BUG]  [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  p  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(q));  }	  try    {    [Delete]    catch(Throwable    t)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
357	[BUG]  [BUGGY]  parent  ==  null  ||  q  ==  parent.getParent())  {  return(Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent  ==  null  ||  q  ==  parent.getParent())  {  return(Math.abs(p)-  Math.abs(q));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent  ==  null  ||  q  ==  parent.getParent())  {  return(Math.abs(p)-  Math.abs(q));  }	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
358	[BUG]  [BUGGY]  parent  ==  null  ||  q  ==  parent.next())  {  return(Math.abs(p)-  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent  ==  null  ||  q  ==  parent.next())  {  return(Math.abs(p)-  Math.abs(q));  }  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent  ==  null  ||  q  ==  parent.next())  {  return(Math.abs(p)-  Math.abs(q));  }	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
359	[BUG]  [BUGGY]  parent  ==  null  ||  q  ==  parent.getParent())  {  return(Math.abs(p)-  Math.abs(q));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent  ==  null  ||  q  ==  parent.getParent())  {  return(Math.abs(p)-  Math.abs(q));  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent  ==  null  ||  q  ==  parent.getParent())  {  return(Math.abs(p)-  Math.abs(q));	  if(q    ==    0)    {    if((    u    >=    0)||(v    ==    0))    {    return    (Math.abs(p)-    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
360	[BUG]  [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q);  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  Math.abs(p)-  Math.abs(q);  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    Math.abs(p)-    Math.abs(q);    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
361	[BUG]  [BUGGY]  int  v  =  gcd(p,  q  +  1,  q  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd(p,  q  +  1,  q  +  1);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd(p,  q  +  1,  q  +  1);	  int    v    =    gcd(p,    q    +    1,    q);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
362	[BUG]  [BUGGY]  int  v  =  gcd(p,  q  *  q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd(p,  q  *  q);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd(p,  q  *  q);	  int    v    =    gcd(p,    q    +    1,    q);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
363	[BUG]  [BUGGY]  int  v  =  gcd(p,  q  +  1,  q  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd(p,  q  +  1,  q  -  1);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd(p,  q  +  1,  q  -  1);	  int    v    =    gcd(p,    q    +    1,    q);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
364	[BUG]  [BUGGY]  int  u  =(p  >  0)?  p  -  q  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  u  =(p  >  0)?  p  -  q  :  0;  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  u  =(p  >  0)?  p  -  q  :  0;	  int    u    =    0;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
365	[BUG]  [BUGGY]  int  u  =(p  >  0)?  p  :  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  u  =(p  >  0)?  p  :  0;  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  u  =(p  >  0)?  p  :  0;	  int    u    =    0;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
366	[BUG]  [BUGGY]  int  u  =(p  <  0)?  0  :  p;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  u  =(p  <  0)?  0  :  p;  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  u  =(p  <  0)?  0  :  p;	  int    u    =    0;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
367	[BUG]  [BUGGY]  int  q  =(int)Math.rint(p  /  1,  q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  q  =(int)Math.rint(p  /  1,  q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  q  =(int)Math.rint(p  /  1,  q);	  int    q    =(int)Math.rint(p    +    1,    q);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
368	[BUG]  [BUGGY]  int  q  =(int)Math.rint(p  +  1,  q  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  q  =(int)Math.rint(p  +  1,  q  +  1);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  q  =(int)Math.rint(p  +  1,  q  +  1);	  int    q    =(int)Math.rint(p    +    1,    q);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
369	[BUG]  [BUGGY]  int  v  =  p  *  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  p  *  1;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  p  *  1;	  int    v    =    p    +    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
370	[BUG]  [BUGGY]  int  v  =  Math.pow(10,  p);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  Math.pow(10,  p);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  Math.pow(10,  p);	  int    v    =    Math.abs(p);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
371	[BUG]  [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  (Math.abs(p));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  (Math.abs(p));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(p  <  =  0)||(q  ==  0))  {  return  (Math.abs(p));  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    (Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
372	[BUG]  [BUGGY]  parent!=  null  &&(q  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  parent!=  null  &&(q  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	parent!=  null  &&(q  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  }	  parent!=    null    &&(p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
373	[BUG]  [BUGGY]  int  v  =(q  <  0)?  0  :  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  <  0)?  0  :  0;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  <  0)?  0  :  0;	  int    v    =    0L;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
374	[BUG]  [BUGGY]  int  v  =(q  <  0)?  0L  :  0L;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =(q  <  0)?  0L  :  0L;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =(q  <  0)?  0L  :  0L;	  int    v    =    0L;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
375	[BUG]  [BUGGY]  int  v  =  q  *  p;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  q  *  p;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  q  *  p;	  int    v    =    p    *    q;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
376	[BUG]  [BUGGY]  char  q  =(char)Math.rint(p  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  char  q  =(char)Math.rint(p  +  1);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	char  q  =(char)Math.rint(p  +  1);	  char    q    =(char)Math.rint(p);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
377	[BUG]  [BUGGY]  int  u  =  gcd(p,  q,  q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  u  =  gcd(p,  q,  q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  u  =  gcd(p,  q,  q);	  int    u    =    gcd(p,    q);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
378	[BUG]  [BUGGY]  int  u  =  gcd(p,  q  +  1,  q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  u  =  gcd(p,  q  +  1,  q);  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  u  =  gcd(p,  q  +  1,  q);	  int    u    =    gcd(p,    q);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
379	[BUG]  [BUGGY]  if(u  <  0  ||  q  >  0)  {  catch(NumberFormatException  nfe)  {  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if(u  <  0  ||  q  >  0)  {  catch(NumberFormatException  nfe)  {  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if(u  <  0  ||  q  >  0)  {  catch(NumberFormatException  nfe)  {  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
380	[BUG]  [BUGGY]  if(u  <  0  ||  q  >  0)  {  catch(NumberFormatException  nfe)  {  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)/  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if(u  <  0  ||  q  >  0)  {  catch(NumberFormatException  nfe)  {  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)/  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if(u  <  0  ||  q  >  0)  {  catch(NumberFormatException  nfe)  {  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(u)/  Math.abs(q));  }	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
381	[BUG]  [BUGGY]  Char  v  =  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  Char  v  =  0;  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	Char  v  =  0;	  char    v    =    0;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
382	[BUG]  [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if((  u  ==  0)||(q  ==  0))  {  return  (Math.abs(p)+  Math.abs(p));  }	  try    {    [Delete]    catch(Exception    e)    {    if((    p    ==    0)||(q    ==    0))    {    return    (Math.abs(p)+    Math.abs(p));    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
383	[BUG]  [BUGGY]  if(u  <  0  ||  q  >  0)  {  catch(NumberFormatException  nfe)  {  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  if(u  <  0  ||  q  >  0)  {  catch(NumberFormatException  nfe)  {  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	if(u  <  0  ||  q  >  0)  {  catch(NumberFormatException  nfe)  {  if((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
384	[BUG]  [BUGGY]  while((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  ==  0)||(q  ==  0))  {  return  Math.abs(p)+  Math.abs(q));  }	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    if((    u    ==    0)||(q    ==    0))    {    return    Math.abs(p)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
385	[BUG]  [BUGGY]  while((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    if((    u    >=    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
386	[BUG]  [BUGGY]  while((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  while((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }  [BUGGY]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	while((  u  >=  0)||(q  ==  0))  {  return  Math.abs(u)+  Math.abs(q));  }	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    if((    u    >=    0)||(q    ==    0))    {    return    Math.abs(u)+    Math.abs(q));    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
387	[BUG]  [BUGGY]  int  v  =  gcd(p,  q  /  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(final  int  p,  final  int  q)  {  int  u  =  p;      [BUGGY]  int  v  =  gcd(p,  q  /  1);  [BUGGY]      if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  u  =  -u;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	541	541	2	replace	int  v  =  gcd(p,  q  /  1);	  int    v    =    gcd(p,    q    +    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
