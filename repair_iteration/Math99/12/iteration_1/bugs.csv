bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    u  =  -u;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [BUGGY]    u  =  -u;  [BUGGY]  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	554	554	2	replace	    u  =  -u;		non-compiled	[CE]  <identifier>  expected	24	None	add
2	[BUG]  [BUGGY]    if(u  >  0)  {  u  =  -u;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [BUGGY]    if(u  >  0)  {  u  =  -u;  }  [BUGGY]  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	554	554	2	replace	    if(u  >  0)  {  u  =  -u;  }		non-compiled	[CE]  <identifier>  expected	24	None	add
3	[BUG]  [BUGGY]    v  =  -u;  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [BUGGY]    v  =  -u;  [BUGGY]  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	554	554	2	replace	    v  =  -u;		non-compiled	[CE]  <identifier>  expected	24	None	add
4	[BUG]  [BUGGY]    if(u  >  0)  {  v  =  -u;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [BUGGY]    if(u  >  0)  {  v  =  -u;  }  [BUGGY]  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	554	554	2	replace	    if(u  >  0)  {  v  =  -u;  }		non-compiled	[CE]  <identifier>  expected	24	None	add
5	[BUG]  [BUGGY]    if(u  >  0)  {  v  =  -p;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [BUGGY]    if(u  >  0)  {  v  =  -p;  }  [BUGGY]  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	554	554	2	replace	    if(u  >  0)  {  v  =  -p;  }		non-compiled	[CE]  <identifier>  expected	24	None	add
6	[BUG]  [BUGGY]  v  =  -1;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [BUGGY]  v  =  -1;  [BUGGY]  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	554	554	2	replace	v  =  -1;	v  =  -v;  	non-compiled	[CE]  <identifier>  expected	23	None	replace
7	[BUG]  [BUGGY]  v  =  -k;  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [BUGGY]  v  =  -k;  [BUGGY]  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	554	554	2	replace	v  =  -k;	v  =  -v;  	non-compiled	[CE]  <identifier>  expected	23	None	replace
8	[BUG]  [BUGGY]  v  =  -n;  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [BUGGY]  v  =  -n;  [BUGGY]  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	554	554	2	replace	v  =  -n;	v  =  -v;  	non-compiled	[CE]  <identifier>  expected	23	None	replace
9	[BUG]  [BUGGY]    if(u  >  0)  {  v  =  -v;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [BUGGY]    if(u  >  0)  {  v  =  -v;  }  [BUGGY]  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	554	554	2	replace	    if(u  >  0)  {  v  =  -v;  }		non-compiled	[CE]  <identifier>  expected	24	None	add
10	[BUG]  [BUGGY]    if(u  >  0)  {  v  =  -v;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [BUGGY]    if(u  >  0)  {  v  =  -v;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	554	554	2	replace	    if(u  >  0)  {  v  =  -v;  }  else  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  <identifier>  expected	24	None	add
11	[BUG]  [BUGGY]    if(u  >  0)  {  v  =  -v;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [BUGGY]    if(u  >  0)  {  v  =  -v;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	554	554	2	replace	    if(u  >  0)  {  v  =  -v;  }  else  {  throw  new  IllegalStateException( " ");  }		non-compiled	[CE]  <identifier>  expected	24	None	add
12	[BUG]  [BUGGY]  v  =  -v  +  1;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [BUGGY]  v  =  -v  +  1;  [BUGGY]  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	554	554	2	replace	v  =  -v  +  1;	v  =  -v;  	non-compiled	[CE]  <identifier>  expected	23	None	replace
13	[BUG]  [BUGGY]  v  =  -v  -  1;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [BUGGY]  v  =  -v  -  1;  [BUGGY]  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	554	554	2	replace	v  =  -v  -  1;	v  =  -v;  	non-compiled	[CE]  <identifier>  expected	23	None	replace
14	[BUG]  [BUGGY]    int  v  =(int)Math.ceil((  u  -  1)/  2);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  }      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  [BUGGY]    int  v  =(int)Math.ceil((  u  -  1)/  2);  [BUGGY]  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	554	554	2	replace	    int  v  =(int)Math.ceil((  u  -  1)/  2);		non-compiled	[CE]  <identifier>  expected	24	None	add
