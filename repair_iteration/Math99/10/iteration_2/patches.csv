bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  v  =  -u;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  -u;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  -u;	  v    =    -v;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
2	[BUG]  [BUGGY]  v  =  -1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  -1;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  -1;	  v    =    -v;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
3	[BUG]  [BUGGY]  v  =  -k;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  -k;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  -k;	  v    =    -v;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
4	[BUG]  [BUGGY]  mutableValues.add( "- "  +  u);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  mutableValues.add( "- "  +  u);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	mutableValues.add( "- "  +  u);	  mutableValues.add(   "-   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
5	[BUG]  [BUGGY]  ||  q  >  0)  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ||  q  >  0)  {  v  =  -q;  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	||  q  >  0)  {  v  =  -q;  }	  if(q    >    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
6	[BUG]  [BUGGY]  ||  q  <  0)  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ||  q  <  0)  {  v  =  -q;  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	||  q  <  0)  {  v  =  -q;  }	  if(q    >    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
7	[BUG]  [BUGGY]  v  =  -q  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  -q  +  1;  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  -q  +  1;	  v    =    -q;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
8	[BUG]  [BUGGY]  v  =  -p;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  -p;  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  -p;	  v    =    -q;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
9	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	throw  new  IllegalArgumentException( " ");	  aughtInvalidArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
10	[BUG]  [BUGGY]  if(u  >  0)  {  aughtInvalidArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  if(u  >  0)  {  aughtInvalidArgumentException( " ");  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	if(u  >  0)  {  aughtInvalidArgumentException( " ");  }	  aughtInvalidArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
11	[BUG]  [BUGGY]  if(u  >  0)  {  aughtInvalidArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  if(u  >  0)  {  aughtInvalidArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	if(u  >  0)  {  aughtInvalidArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtInvalidArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
12	[BUG]  [BUGGY]  ((  u  +  1)  ==  0)||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  +  1)  ==  0)||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0)||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));	  ((    u    +    1)    ==    0)&&(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(v));    	non-compiled	[CE]  <identifier>  expected	58	None	replace
13	[BUG]  [BUGGY]  v  =(int)Math.pow(10,  y  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =(int)Math.pow(10,  y  +  1);  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =(int)Math.pow(10,  y  +  1);	  v    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
14	[BUG]  [BUGGY]  v  =(int)Math.pow(10,  q);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =(int)Math.pow(10,  q);  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =(int)Math.pow(10,  q);	  v    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
15	[BUG]  [BUGGY]  v  =(int)Math.pow(10,  x);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =(int)Math.pow(10,  x);  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =(int)Math.pow(10,  x);	  v    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
16	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));	  ((    u    &    1)    ==    0    ||(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(k));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
17	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  float  v  =(float)Math.pow(10,  y);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	float  v  =(float)Math.pow(10,  y);	  float    v    =(float)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
18	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  q  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  float  v  =(float)Math.pow(10,  q  +  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	float  v  =(float)Math.pow(10,  q  +  1);	  float    v    =(float)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
19	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  k);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  float  v  =(float)Math.pow(10,  k);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	float  v  =(float)Math.pow(10,  k);	  float    v    =(float)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
20	[BUG]  [BUGGY]  u  =  31;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  31;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  31;	  u    =    0;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
21	[BUG]  [BUGGY]  mutableValues(u,  v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  mutableValues(u,  v);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	mutableValues(u,  v);	  mutableValues(v,    u);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
22	[BUG]  [BUGGY]  MutableValues.assertEquals(u,  v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  MutableValues.assertEquals(u,  v);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	MutableValues.assertEquals(u,  v);	  mutableValues(v,    u);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
23	[BUG]  [BUGGY]  MutableValues.assertEquals(v,  u);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  MutableValues.assertEquals(v,  u);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	MutableValues.assertEquals(v,  u);	  mutableValues(v,    u);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
24	[BUG]  [BUGGY]  mutableValues(u);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  mutableValues(u);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	mutableValues(u);	  mutableValues(v);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
25	[BUG]  [BUGGY]  MutableValues.checkState(u  <  =  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  MutableValues.checkState(u  <  =  0);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	MutableValues.checkState(u  <  =  0);	  mutableValues(v);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
26	[BUG]  [BUGGY]  u  =  -u  +  4;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  -u  +  4;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -u  +  4;	  u    =    -u    +    3;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
27	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));	  ((    u    &    1)    ==    0    ||(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(v));    	non-compiled	[CE]  <identifier>  expected	31	None	replace
28	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u  -  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  int  v  =(int)Math.pow(10,  u  -  2);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	int  v  =(int)Math.pow(10,  u  -  2);	  int    v    =(int)Math.pow(10,    u    -    1);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
29	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u  /  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  int  v  =(int)Math.pow(10,  u  /  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	int  v  =(int)Math.pow(10,  u  /  1);	  int    v    =(int)Math.pow(10,    u    -    1);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
30	[BUG]  [BUGGY]  v  =  Math.pow(10,  u  +  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.pow(10,  u  +  2);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  u  +  2);	  v    =    Math.pow(10,    u    +    1);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
31	[BUG]  [BUGGY]  v  =  Math.pow(10,  u  +  3);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.pow(10,  u  +  3);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  u  +  3);	  v    =    Math.pow(10,    u    +    1);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
32	[BUG]  [BUGGY]  vice.addChildToFront(u);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  vice.addChildToFront(u);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	vice.addChildToFront(u);	  vice.addChildToFront(q);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
33	[BUG]  [BUGGY]  vice.addChildToFront(v);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  vice.addChildToFront(v);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	vice.addChildToFront(v);	  vice.addChildToFront(q);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
34	[BUG]  [BUGGY]  u.addChildToFront(q);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u.addChildToFront(q);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u.addChildToFront(q);	  vice.addChildToFront(q);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
35	[BUG]  [BUGGY]  v  =  Math.pow(10,  y  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.pow(10,  y  -  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  y  -  1);	  v    =    Math.pow(10,    k    -    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
36	[BUG]  [BUGGY]  ||(q  <  0  &&  u  >  0))  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ||(q  <  0  &&  u  >  0))  {  v  =  -q;  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	||(q  <  0  &&  u  >  0))  {  v  =  -q;  }	  if(q    <    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
37	[BUG]  [BUGGY]  u  =  Math.abs(v)+  Math.abs(p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.abs(v)+  Math.abs(p);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.abs(v)+  Math.abs(p);	  !=    [Delete]    	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  ||  q!=  0)  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ||  q!=  0)  {  v  =  -q;  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	||  q!=  0)  {  v  =  -q;  }	  if(q!=    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
39	[BUG]  [BUGGY]  ||  q  ==  0)  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ||  q  ==  0)  {  v  =  -q;  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	||  q  ==  0)  {  v  =  -q;  }	  if(q!=    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
40	[BUG]  [BUGGY]  u  =  -v  +  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  -v  +  2;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -v  +  2;	  u    =    -v    +    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
41	[BUG]  [BUGGY]  u  =  -v  /  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  -v  /  1;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -v  /  1;	  u    =    -v    +    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
42	[BUG]  [BUGGY]  u  =  -v  +  3;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  -v  +  3;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -v  +  3;	  u    =    -v    +    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
43	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));	  ((    u    &    1)    ==    0    ||(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(p));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
44	[BUG]  [BUGGY]  ||  q  ==  -1)  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ||  q  ==  -1)  {  v  =  -q;  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	||  q  ==  -1)  {  v  =  -q;  }	  if(q    ==    -1)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
45	[BUG]  [BUGGY]  ||  q  ==  -1  ||  q  ==  -1)  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ||  q  ==  -1  ||  q  ==  -1)  {  v  =  -q;  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	||  q  ==  -1  ||  q  ==  -1)  {  v  =  -q;  }	  if(q    ==    -1)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
46	[BUG]  [BUGGY]  ||  u  ==  0)  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ||  u  ==  0)  {  v  =  -q;  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	||  u  ==  0)  {  v  =  -q;  }	  if(q    ==    -1)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
47	[BUG]  [BUGGY]  v  =  Math.pow(10,  y  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.pow(10,  y  +  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  y  +  1);	  v    =    Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
48	[BUG]  [BUGGY]  v  =  Math.abs(u)+  Math.abs(k);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.abs(u)+  Math.abs(k);  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.abs(u)+  Math.abs(k);	  v    =    Math.abs(u)+    Math.abs(q);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
49	[BUG]  [BUGGY]  v  =  Math.abs(u)+  Math.abs(v);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.abs(u)+  Math.abs(v);  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.abs(u)+  Math.abs(v);	  v    =    Math.abs(u)+    Math.abs(q);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
50	[BUG]  [BUGGY]  v  =  Math.abs(u)/  Math.abs(q);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.abs(u)/  Math.abs(q);  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.abs(u)/  Math.abs(q);	  v    =    Math.abs(u)+    Math.abs(q);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
51	[BUG]  [BUGGY]  v  =  Math.abs(u)+  Math.abs(p);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.abs(u)+  Math.abs(p);  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.abs(u)+  Math.abs(p);	  v    =    Math.abs(u)+    Math.abs(q);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
52	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));	  ((    u    &    1)    ==    0)&&(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	16	None	replace
53	[BUG]  [BUGGY]  v  =  Math.pow(10,  u  -  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.pow(10,  u  -  2);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  u  -  2);	  v    =    Math.pow(10,    u    -    1);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
54	[BUG]  [BUGGY]  ((  u  +  1)  ==  0)||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  +  1)  ==  0)||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0)||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));	  ((    u    +    1)    ==    0)&&(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(k));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
55	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  y  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  int  v  =(int)Math.pow(10,  y  +  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	int  v  =(int)Math.pow(10,  y  +  1);	  int    v    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
56	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  x);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  int  v  =(int)Math.pow(10,  x);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	int  v  =(int)Math.pow(10,  x);	  int    v    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
57	[BUG]  [BUGGY]  ((  u  +  1)  ==  0)||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  +  1)  ==  0)||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0)||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));	  ((    u    +    1)    ==    0)&&(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
58	[BUG]  [BUGGY]  aughtExceptionHandler(throw  new  IllegalArgumentException( "));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  aughtExceptionHandler(throw  new  IllegalArgumentException( "));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	aughtExceptionHandler(throw  new  IllegalArgumentException( "));	  aughtExceptionHandler(throw    new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
59	[BUG]  [BUGGY]  v  =  Math.pow(10,  -u  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.pow(10,  -u  +  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  -u  +  1);	  v    =    Math.pow(10,    -u);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
60	[BUG]  [BUGGY]  v  =  Math.pow(10,  -u  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.pow(10,  -u  -  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  -u  -  1);	  v    =    Math.pow(10,    -u);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
61	[BUG]  [BUGGY]  v  =  Math.pow(10,  -q);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.pow(10,  -q);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  -q);	  v    =    Math.pow(10,    -u);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
62	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  u  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  float  v  =(float)Math.pow(10,  u  +  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	float  v  =(float)Math.pow(10,  u  +  1);	  float    v    =(float)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
63	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  float  v  =(float)Math.pow(10,  i);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	float  v  =(float)Math.pow(10,  i);	  float    v    =(float)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
64	[BUG]  [BUGGY]  u  =  Math.abs(v)+  Math.abs(q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.abs(v)+  Math.abs(q);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.abs(v)+  Math.abs(q);	  ==    [Delete]    	non-compiled	[CE]  <identifier>  expected	6	None	replace
65	[BUG]  [BUGGY]  u  =  Math.max(0,  u);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.max(0,  u);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.max(0,  u);	  ==    [Delete]    	non-compiled	[CE]  <identifier>  expected	6	None	replace
66	[BUG]  [BUGGY]  return  Math.abs(u)/  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  return  Math.abs(u)/  2;  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	return  Math.abs(u)/  2;	  ==    [Delete]    	non-compiled	[CE]  <identifier>  expected	6	None	replace
67	[BUG]  [BUGGY]  u  =  Math.max(u,  p  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.max(u,  p  +  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.max(u,  p  +  1);	  u    =    Math.max(u,    p);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
68	[BUG]  [BUGGY]  u  =  Math.max(u,  k);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.max(u,  k);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.max(u,  k);	  u    =    Math.max(u,    p);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
69	[BUG]  [BUGGY]  u  =  Math.max(u,  q);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.max(u,  q);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.max(u,  q);	  u    =    Math.max(u,    p);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
70	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  -u  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  int  v  =(int)Math.pow(10,  -u  +  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	int  v  =(int)Math.pow(10,  -u  +  1);	  int    v    =(int)Math.pow(10,    -u);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
71	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  -u  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  int  v  =(int)Math.pow(10,  -u  -  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	int  v  =(int)Math.pow(10,  -u  -  1);	  int    v    =(int)Math.pow(10,    -u);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
72	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  -1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  int  v  =(int)Math.pow(10,  -1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	int  v  =(int)Math.pow(10,  -1);	  int    v    =(int)Math.pow(10,    -u);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
73	[BUG]  [BUGGY]  u  =  Math.min(u,  k);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.min(u,  k);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.min(u,  k);	  u    =    Math.min(p,    k);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
74	[BUG]  [BUGGY]  u  =  Math.min(p,  k  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.min(p,  k  -  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.min(p,  k  -  1);	  u    =    Math.min(p,    k);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
75	[BUG]  [BUGGY]  u  =  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  2;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  2;	  u    =    1;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
76	[BUG]  [BUGGY]  u  =  3;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  3;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  3;	  u    =    1;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
77	[BUG]  [BUGGY]  u  =  Math.min(u,  v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.min(u,  v);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.min(u,  v);	  u    =    Math.min(k,    v);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
78	[BUG]  [BUGGY]  u  =  Math.max(u,  v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.max(u,  v);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.max(u,  v);	  u    =    Math.min(k,    v);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
79	[BUG]  [BUGGY]  ((  u  +  1)  ==  0)||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  +  1)  ==  0)||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0)||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));	  ((    u    +    1)    ==    0)&&(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(p));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
80	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  int  v  =(int)Math.pow(10,  u  +  2);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	int  v  =(int)Math.pow(10,  u  +  2);	  int    v    =(int)Math.pow(10,    u    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
81	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u  *  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  int  v  =(int)Math.pow(10,  u  *  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	int  v  =(int)Math.pow(10,  u  *  1);	  int    v    =(int)Math.pow(10,    u    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
82	[BUG]  [BUGGY]  vice.addChildToBack(u);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  vice.addChildToBack(u);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	vice.addChildToBack(u);	  vice.addChildToBack(p);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
83	[BUG]  [BUGGY]  vice.addChildToBack(q);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  vice.addChildToBack(q);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	vice.addChildToBack(q);	  vice.addChildToBack(p);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
84	[BUG]  [BUGGY]  p.addChildToBack(v);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  p.addChildToBack(v);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	p.addChildToBack(v);	  vice.addChildToBack(p);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
85	[BUG]  [BUGGY]  vice.addChildToBack(v);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  vice.addChildToBack(v);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	vice.addChildToBack(v);	  vice.addChildToBack(p);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
86	[BUG]  [BUGGY]  u  =  -u  /  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  -u  /  2;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -u  /  2;	  u    =    -u    /    1;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
87	[BUG]  [BUGGY]  u  =  -u  /  3;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  -u  /  3;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -u  /  3;	  u    =    -u    /    1;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
88	[BUG]  [BUGGY]  u  =  -u  /  4;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  -u  /  4;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -u  /  4;	  u    =    -u    /    1;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
89	[BUG]  [BUGGY]  mutableValues(u,  q);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  mutableValues(u,  q);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	mutableValues(u,  q);	  mutableValues(v,    q);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
90	[BUG]  [BUGGY]  MutableValues.mutableValues(u,  q);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  MutableValues.mutableValues(u,  q);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	MutableValues.mutableValues(u,  q);	  mutableValues(v,    q);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
91	[BUG]  [BUGGY]  mutableValues(v,  p);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  mutableValues(v,  p);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	mutableValues(v,  p);	  mutableValues(v,    q);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
92	[BUG]  [BUGGY]  v  =  Math.pow(10,  w  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.pow(10,  w  -  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  w  -  1);	  v    =    Math.pow(10,    w);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
93	[BUG]  [BUGGY]  v  =(int)Math.pow(10,  u  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =(int)Math.pow(10,  u  -  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =(int)Math.pow(10,  u  -  1);	  int    v    =(int)Math.pow(10,    q    -    1);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
94	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  y  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  int  v  =(int)Math.pow(10,  y  -  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	int  v  =(int)Math.pow(10,  y  -  1);	  int    v    =(int)Math.pow(10,    q    -    1);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
95	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  q  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  float  v  =(float)Math.pow(10,  q  -  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	float  v  =(float)Math.pow(10,  q  -  1);	  int    v    =(int)Math.pow(10,    q    -    1);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
96	[BUG]  [BUGGY]  u  =  Math.min(p,  v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.min(p,  v);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.min(p,  v);	  u    =    Math.min(v,    p);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
97	[BUG]  [BUGGY]  u  =  Math.min(v,  p  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.min(v,  p  +  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.min(v,  p  +  1);	  u    =    Math.min(v,    p);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
98	[BUG]  [BUGGY]  ((  u  &  1)  ==  0)||(v  >  31))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  &  1)  ==  0)||(v  >  31))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0)||(v  >  31))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));	  ((    u    &    1)    ==    0)    ||(v    >    31))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
99	[BUG]  [BUGGY]  ((  u  &  1)  ==  0)||(v  <  31))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  &  1)  ==  0)||(v  <  31))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0)||(v  <  31))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));	  ((    u    &    1)    ==    0)    ||(v    >    31))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
100	[BUG]  [BUGGY]  u  =  Math.min(u,  p  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.min(u,  p  +  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.min(u,  p  +  1);	  u    =    Math.min(u,    p);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
101	[BUG]  [BUGGY]  u  =  Math.min(u,  q);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.min(u,  q);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.min(u,  q);	  u    =    Math.min(u,    p);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
102	[BUG]  [BUGGY]  u  =  Math.abs(u)+  Math.abs(q);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.abs(u)+  Math.abs(q);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.abs(u)+  Math.abs(q);	  [Delete]    	non-compiled	[CE]  <identifier>  expected	4	None	replace
103	[BUG]  [BUGGY]  u  =  Math.abs(u)+  Math.abs(v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.abs(u)+  Math.abs(v);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.abs(u)+  Math.abs(v);	  [Delete]    	non-compiled	[CE]  <identifier>  expected	4	None	replace
104	[BUG]  [BUGGY]  u  =  Math.abs(u)+  Math.abs(p);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.abs(u)+  Math.abs(p);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.abs(u)+  Math.abs(p);	  [Delete]    	non-compiled	[CE]  <identifier>  expected	4	None	replace
105	[BUG]  [BUGGY]  v  =(int)Math.pow(10,  u  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =(int)Math.pow(10,  u  +  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =(int)Math.pow(10,  u  +  1);	  v    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
106	[BUG]  [BUGGY]  p.addChildToFront(v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  p.addChildToFront(v);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	p.addChildToFront(v);	  vice.addChildToFront(p);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
107	[BUG]  [BUGGY]  v  =  Math.pow(10,  i  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.pow(10,  i  -  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  i  -  1);	  v    =    Math.pow(10,    i);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
108	[BUG]  [BUGGY]  char  v  =(char)Math.pow(10,  u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  char  v  =(char)Math.pow(10,  u);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	char  v  =(char)Math.pow(10,  u);	  char    v    =(char)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
109	[BUG]  [BUGGY]  String  v  =(String)Math.pow(10,  q);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  String  v  =(String)Math.pow(10,  q);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	String  v  =(String)Math.pow(10,  q);	  char    v    =(char)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
110	[BUG]  [BUGGY]  char  v  =(char)Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  char  v  =(char)Math.pow(10,  y);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	char  v  =(char)Math.pow(10,  y);	  char    v    =(char)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
111	[BUG]  [BUGGY]  char  v  =(char)Math.pow(10,  q  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  char  v  =(char)Math.pow(10,  q  +  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	char  v  =(char)Math.pow(10,  q  +  1);	  char    v    =(char)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
112	[BUG]  [BUGGY]  u  =  -k  +  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  -k  +  2;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -k  +  2;	  u    =    -k    +    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
113	[BUG]  [BUGGY]  u  =  -k  /  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  -k  /  1;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -k  /  1;	  u    =    -k    +    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
114	[BUG]  [BUGGY]  u  =  -k  +  3;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  -k  +  3;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -k  +  3;	  u    =    -k    +    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
115	[BUG]  [BUGGY]  ((  u  +  1)  ==  0)&&(v  >  31))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  +  1)  ==  0)&&(v  >  31))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0)&&(v  >  31))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));	  ((    u    &    1)    ==    0)    ||(v    >    31))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
116	[BUG]  [BUGGY]  ((  u  &  1)  ==  0)||(v  &  31))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  &  1)  ==  0)||(v  &  31))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0)||(v  &  31))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));	  ((    u    &    1)    ==    0)    ||(v    >    31))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
117	[BUG]  [BUGGY]  aughtExceptionHandler(throw  new  IllegalArgumentException( " ").toString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  aughtExceptionHandler(throw  new  IllegalArgumentException( " ").toString());  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	aughtExceptionHandler(throw  new  IllegalArgumentException( " ").toString());	  aughtExceptionHandler(throw    new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
118	[BUG]  [BUGGY]  u  =  -q  +  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  -q  +  2;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -q  +  2;	  u    =    -q    +    1;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
119	[BUG]  [BUGGY]  u  =  -q  +  3;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  -q  +  3;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -q  +  3;	  u    =    -q    +    1;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
120	[BUG]  [BUGGY]  >=  [Delete]  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  >=  [Delete]  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	>=  [Delete]	  if(u    >    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
121	[BUG]  [BUGGY]  u  =  Math.min(v,  k);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.min(v,  k);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.min(v,  k);	  u    =    Math.min(k,    v);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
122	[BUG]  [BUGGY]  u  =  Math.min(k,  v  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.min(k,  v  -  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.min(k,  v  -  1);	  u    =    Math.min(k,    v);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
123	[BUG]  [BUGGY]  u  =  Math.min(q,  v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.min(q,  v);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.min(q,  v);	  u    =    Math.min(k,    v);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
124	[BUG]  [BUGGY]  v  =  -v  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  -v  +  1;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  -v  +  1;	  v    =    -v;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
125	[BUG]  [BUGGY]  u  =  Math.max(u,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.max(u,  0);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.max(u,  0);	  u    =    Math.max(u,    p);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
126	[BUG]  [BUGGY]  MutableValues.checkNotNull(u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  MutableValues.checkNotNull(u);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	MutableValues.checkNotNull(u);	  mutableValues(v,    u);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
127	[BUG]  [BUGGY]  MutableValues.checkState(u,  v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  MutableValues.checkState(u,  v);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	MutableValues.checkState(u,  v);	  mutableValues(v,    u);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
128	[BUG]  [BUGGY]  if(u  ==  0)  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  if(u  ==  0)  {  v  =  -q;  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	if(u  ==  0)  {  v  =  -q;  }	  if(q    ==    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
129	[BUG]  [BUGGY]  if(q  ==  0)  {  v  =  -q  +  1;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  if(q  ==  0)  {  v  =  -q  +  1;  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	if(q  ==  0)  {  v  =  -q  +  1;  }	  if(q    ==    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
130	[BUG]  [BUGGY]  u  =  -u  *  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  -u  *  2;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -u  *  2;	  u    =    -u    +    2;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
131	[BUG]  [BUGGY]  v  =  Math.min(k,  p);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.min(k,  p);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.min(k,  p);	  ==    [Delete]    	non-compiled	[CE]  <identifier>  expected	6	None	replace
132	[BUG]  [BUGGY]  v  =  Math.pow(10.0,  q);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.pow(10.0,  q);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10.0,  q);	  ==    [Delete]    	non-compiled	[CE]  <identifier>  expected	6	None	replace
133	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  +  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));	  ((    u    +    1)    ==    0)&&(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(v));    	non-compiled	[CE]  <identifier>  expected	58	None	replace
134	[BUG]  [BUGGY]  vant  <  0)  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  vant  <  0)  {  v  =  -q;  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	vant  <  0)  {  v  =  -q;  }	  if(q    <    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
135	[BUG]  [BUGGY]  if(q  <  0)  {  v  =  -q  +  1;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  if(q  <  0)  {  v  =  -q  +  1;  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	if(q  <  0)  {  v  =  -q  +  1;  }	  if(q    <    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
136	[BUG]  [BUGGY]  u  =  Math.min(i,  k);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.min(i,  k);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.min(i,  k);	  u    =    Math.min(p,    k);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
137	[BUG]  [BUGGY]  ((  u  &  1)  ==  0)||(v  >>  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  &  1)  ==  0)||(v  >>  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0)||(v  >>  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));	  ((    u    &    1)    ==    0)||(v    >=    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	44	None	replace
138	[BUG]  [BUGGY]  mutableValues.add( "- ".trim());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  mutableValues.add( "- ".trim());  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	mutableValues.add( "- ".trim());	  mutableValues.add(   "-   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
139	[BUG]  [BUGGY]  v  =(int)Math.pow(10,  -u);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =(int)Math.pow(10,  -u);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =(int)Math.pow(10,  -u);	  v    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
140	[BUG]  [BUGGY]  v  =  Math.pow(10,  x);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.pow(10,  x);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  x);	  v    =    Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
141	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  u  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  float  v  =(float)Math.pow(10,  u  -  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	float  v  =(float)Math.pow(10,  u  -  1);	  int    v    =(int)Math.pow(10,    u    -    1);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
142	[BUG]  [BUGGY]  if(u  >  0)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  if(u  >  0)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	if(u  >  0)  {  throw  new  UnsupportedOperationException( " ");  }	  aughtInvalidArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
143	[BUG]  [BUGGY]  v  =  Math.pow(10,  q  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.pow(10,  q  +  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  q  +  1);	  v    =    Math.pow(10,    u    +    1);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
144	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  +  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));	  ((    u    +    1)    ==    0)&&(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
145	[BUG]  [BUGGY]  v  =  Math.abs(v)+  Math.abs(q);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.abs(v)+  Math.abs(q);  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.abs(v)+  Math.abs(q);	  v    =    Math.abs(u)+    Math.abs(q);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
146	[BUG]  [BUGGY]  v  =  Math.abs(p)+  Math.abs(q);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.abs(p)+  Math.abs(q);  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.abs(p)+  Math.abs(q);	  v    =    Math.abs(u)+    Math.abs(q);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
147	[BUG]  [BUGGY]  v  =  Math.abs(q)+  Math.abs(u);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.abs(q)+  Math.abs(u);  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.abs(q)+  Math.abs(u);	  v    =    Math.abs(u)+    Math.abs(q);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
148	[BUG]  [BUGGY]  u  =  Math.min(v,  q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.min(v,  q);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.min(v,  q);	  u    =    Math.min(v,    p);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
149	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  -u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  float  v  =(float)Math.pow(10,  -u);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	float  v  =(float)Math.pow(10,  -u);	  float    v    =(float)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
150	[BUG]  [BUGGY]  if(q  >  0)  {  v  =  -q  +  1;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  if(q  >  0)  {  v  =  -q  +  1;  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	if(q  >  0)  {  v  =  -q  +  1;  }	  if(q    >    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
151	[BUG]  [BUGGY]  u  =  -u  *  3;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  -u  *  3;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -u  *  3;	  u    =    -u    +    3;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
152	[BUG]  [BUGGY]  MutableValues.checkNotNull(v);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  MutableValues.checkNotNull(v);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	MutableValues.checkNotNull(v);	  mutableValues(v);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
153	[BUG]  [BUGGY]  MutableValues.checkState(u  >  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  MutableValues.checkState(u  >  0);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	MutableValues.checkState(u  >  0);	  mutableValues(v);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
154	[BUG]  [BUGGY]  if(u!=  0)  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  if(u!=  0)  {  v  =  -q;  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	if(u!=  0)  {  v  =  -q;  }	  if(q!=    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
155	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  +  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));	  ((    u    +    1)    ==    0)&&(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(p));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
156	[BUG]  [BUGGY]  aughtException( "Math  is  less  than  1: "  +  Math.abs(u));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  aughtException( "Math  is  less  than  1: "  +  Math.abs(u));  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	aughtException( "Math  is  less  than  1: "  +  Math.abs(u));	  if(u    >    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    Math.abs(u));    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
157	[BUG]  [BUGGY]  aughtInvalidArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  aughtInvalidArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	aughtInvalidArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));	  if(u    >    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    Math.abs(u));    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
158	[BUG]  [BUGGY]  aughtException( "Math  is  less  than  1: "  +  Math.abs(v));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  aughtException( "Math  is  less  than  1: "  +  Math.abs(v));  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	aughtException( "Math  is  less  than  1: "  +  Math.abs(v));	  if(u    >    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    Math.abs(u));    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
159	[BUG]  [BUGGY]  if(u  >  0)  {  aughtExceptionHandler(throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  if(u  >  0)  {  aughtExceptionHandler(throw  new  IllegalArgumentException( " ");  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	if(u  >  0)  {  aughtExceptionHandler(throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler(throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	69	None	replace
160	[BUG]  [BUGGY]  aughtExceptionHandler(throw  new  IllegalArgumentException( " "  +  u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  aughtExceptionHandler(throw  new  IllegalArgumentException( " "  +  u);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	aughtExceptionHandler(throw  new  IllegalArgumentException( " "  +  u);	  aughtExceptionHandler(throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	69	None	replace
161	[BUG]  [BUGGY]  ((  u  &  1)  ==  0)&&(v  <  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  &  1)  ==  0)&&(v  <  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0)&&(v  <  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));	  ((    u    &    1)    ==    0)    ||(v    <    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	64	None	replace
162	[BUG]  [BUGGY]  ((  u  +  1)  ==  0)&&(v  <  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  +  1)  ==  0)&&(v  <  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0)&&(v  <  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));	  ((    u    &    1)    ==    0)    ||(v    <    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	64	None	replace
163	[BUG]  [BUGGY]  ((  u  &  1)  ==  0)||(v  &  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  &  1)  ==  0)||(v  &  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0)||(v  &  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));	  ((    u    &    1)    ==    0)    ||(v    <    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	64	None	replace
164	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  +  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));	  ((    u    +    1)    ==    0)&&(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(k));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
165	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  +  1)  ==  0  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));	  ((    u    +    1)    ==    0)&&(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(k));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
166	[BUG]  [BUGGY]  v  =(int)Math.pow(10,  y  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =(int)Math.pow(10,  y  -  1);  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =(int)Math.pow(10,  y  -  1);	  v    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
167	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  -q);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  int  v  =(int)Math.pow(10,  -q);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	int  v  =(int)Math.pow(10,  -q);	  int    v    =(int)Math.pow(10,    -u);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
168	[BUG]  [BUGGY]  ((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)/  Math.abs(p));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)/  Math.abs(p));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)/  Math.abs(p));	  ((    u    +    1)    ==    0)&&(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(p));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
169	[BUG]  [BUGGY]  ||  q  ==  -1  ||  v  ==  -1)  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ||  q  ==  -1  ||  v  ==  -1)  {  v  =  -q;  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	||  q  ==  -1  ||  v  ==  -1)  {  v  =  -q;  }	  if(q    ==    -1)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
170	[BUG]  [BUGGY]  u  =  Math.min(math.min(v,  k));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.min(math.min(v,  k));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.min(math.min(v,  k));	  u    =    Math.min(k,    v);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
171	[BUG]  [BUGGY]  mutableValues.add( "- ".);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  mutableValues.add( "- ".);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	mutableValues.add( "- ".);	  mutableValues.add(   "-   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
172	[BUG]  [BUGGY]  mutableValues.add( "- ".concat(v));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  mutableValues.add( "- ".concat(v));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	mutableValues.add( "- ".concat(v));	  mutableValues.add(   "-   ");    	non-compiled	[CE]  <identifier>  expected	60	None	replace
173	[BUG]  [BUGGY]  u  =  Math.min(mapping.nextInt(p,  k));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.min(mapping.nextInt(p,  k));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.min(mapping.nextInt(p,  k));	  u    =    Math.min(p,    k);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
174	[BUG]  [BUGGY]  u  =  Math.max(v,  p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.max(v,  p);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.max(v,  p);	  u    =    Math.max(u,    p);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
175	[BUG]  [BUGGY]  u  =  Math.max(0,  p);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  u  =  Math.max(0,  p);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.max(0,  p);	  u    =    Math.max(u,    p);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
176	[BUG]  [BUGGY]  v  =  Math.pow(10.0,  u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.pow(10.0,  u);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10.0,  u);	  ==    [Delete]    	non-compiled	[CE]  <identifier>  expected	6	None	replace
177	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  w);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  float  v  =(float)Math.pow(10,  w);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	float  v  =(float)Math.pow(10,  w);	  float    v    =(float)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
178	[BUG]  [BUGGY]  ((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)/  Math.abs(k));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)/  Math.abs(k));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)/  Math.abs(k));	  ((    u    +    1)    ==    0)&&(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(k));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
179	[BUG]  [BUGGY]  v  =  Math.pow(10,  i  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.pow(10,  i  +  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  i  +  1);	  v    =    Math.pow(10,    i);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
180	[BUG]  [BUGGY]  Char  v  =(char)Math.pow(10,  u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  Char  v  =(char)Math.pow(10,  u);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	Char  v  =(char)Math.pow(10,  u);	  char    v    =(char)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
181	[BUG]  [BUGGY]  char  v  =(char)Math.pow(10,  q  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  char  v  =(char)Math.pow(10,  q  -  1);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	char  v  =(char)Math.pow(10,  q  -  1);	  int    v    =(int)Math.pow(10,    q    -    1);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
182	[BUG]  [BUGGY]  aughtInvalidArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  aughtInvalidArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  }  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	aughtInvalidArgumentException( "Math  is  less  than  1: "  +  Math.abs(v));  }	  if(u    >    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    Math.abs(u));    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
183	[BUG]  [BUGGY]  aughtInvalidArgumentException( "Math  is  less  than  1: "  +  Math.abs(q));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  aughtInvalidArgumentException( "Math  is  less  than  1: "  +  Math.abs(q));  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	aughtInvalidArgumentException( "Math  is  less  than  1: "  +  Math.abs(q));	  if(u    >    0)    {    throw    new    IllegalArgumentException(   "Math    is    less    than    1:   "    +    Math.abs(u));    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
184	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)/  Math.abs(k));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)/  Math.abs(k));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0  &&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)/  Math.abs(k));	  ((    u    &    1)    ==    0    ||(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(k));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
185	[BUG]  [BUGGY]  MutableValues.checkState(u);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  MutableValues.checkState(u);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	MutableValues.checkState(u);	  mutableValues(v);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
186	[BUG]  [BUGGY]  MutableValues.checkNegative(false);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  MutableValues.checkNegative(false);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	MutableValues.checkNegative(false);	  mutableValues(v);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
187	[BUG]  [BUGGY]  ((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)/  Math.abs(q));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)/  Math.abs(q));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)/  Math.abs(q));	  ((    u    +    1)    ==    0)&&(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	56	None	replace
188	[BUG]  [BUGGY]  v  =  Math.pow(10,  -i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.pow(10,  -i);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  -i);	  v    =    Math.pow(10,    -u);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
189	[BUG]  [BUGGY]  v  =  Math.abs(q)+  Math.abs(v);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  Math.abs(q)+  Math.abs(v);  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.abs(q)+  Math.abs(v);	  v    =    Math.abs(u)+    Math.abs(q);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
190	[BUG]  [BUGGY]  v.addChildToFront(q);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v.addChildToFront(q);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v.addChildToFront(q);	  vice.addChildToFront(q);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
191	[BUG]  [BUGGY]  vi.addChildToFront(q);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  vi.addChildToFront(q);  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	vi.addChildToFront(q);	  vice.addChildToFront(q);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
192	[BUG]  [BUGGY]  ((  u  +  1)  ==  0)&&(v  >=  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  ((  u  +  1)  ==  0)&&(v  >=  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0)&&(v  >=  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));	  ((    u    &    1)    ==    0)||(v    >=    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	44	None	replace
193	[BUG]  [BUGGY]  if(q  <  =  0)  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  if(q  <  =  0)  {  v  =  -q;  }  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	if(q  <  =  0)  {  v  =  -q;  }	  if(q    <    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
194	[BUG]  [BUGGY]  v  =  -v  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  v  =  -v  -  1;  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  -v  -  1;	  v    =    -v;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
195	[BUG]  [BUGGY]  aughtInvalidStateException( " ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  aughtInvalidStateException( " ");  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	aughtInvalidStateException( " ");	  if(u    >    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
196	[BUG]  [BUGGY]  aughtException( " ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  aughtException( " ");  [BUGGY]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	aughtException( " ");	  if(u    >    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
197	[BUG]  [BUGGY]  reportInvalidArgumentException( " ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {      [BUGGY]  reportInvalidArgumentException( " ");  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	reportInvalidArgumentException( " ");	  aughtInvalidArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
