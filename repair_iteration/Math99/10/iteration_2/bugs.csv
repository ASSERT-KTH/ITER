bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  u  =  -v  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -v  +  1;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -v  +  1;	  u    =    -v;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
2	[BUG]  [BUGGY]  ((  u  &  1)  ==  0)  ||(v  >  31))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  ((  u  &  1)  ==  0)  ||(v  >  31))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0)  ||(v  >  31))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));	      ((    u    &    1)    ==    0)||(v    >    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
3	[BUG]  [BUGGY]  ((  u  &  1)  ==  0)||(v  <  =  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  ((  u  &  1)  ==  0)||(v  <  =  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0)||(v  <  =  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));	      ((    u    &    1)    ==    0)||(v    >    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
4	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  [Delete]  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	[Delete]	      if(u    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
5	[BUG]  [BUGGY]  >>  [Delete]  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  >>  [Delete]  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	>>  [Delete]	      if(u    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
6	[BUG]  [BUGGY]  ==  [Delete]  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  ==  [Delete]  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	==  [Delete]	      if(u    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
7	[BUG]  [BUGGY]  !=  [Delete]  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  !=  [Delete]  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	!=  [Delete]	      if(u    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
8	[BUG]  [BUGGY]  ((  u  &  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  ((  u  &  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));	      ((    u    &    1)    ==    0)    ||(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(p));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
9	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));	      ((    u    &    1)    ==    0)    ||(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(p));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
10	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  q);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  float  v  =(float)Math.pow(10,  q);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	float  v  =(float)Math.pow(10,  q);	      int    v    =(int)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
11	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.pow(10,  y);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	int  v  =(int)Math.pow(10,  y);	      int    v    =(int)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
12	[BUG]  [BUGGY]  v  =(int)Math.pow(10,  u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  v  =(int)Math.pow(10,  u);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =(int)Math.pow(10,  u);	      int    v    =(int)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
13	[BUG]  [BUGGY]  v  =  Math.pow(10,  q  -  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  v  =  Math.pow(10,  q  -  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  q  -  1);	      v    =    Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
14	[BUG]  [BUGGY]  v  =  Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  v  =  Math.pow(10,  y);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  y);	      v    =    Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
15	[BUG]  [BUGGY]  v  =  Math.pow(10,  i);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  v  =  Math.pow(10,  i);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  i);	      v    =    Math.pow(10,    p);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
16	[BUG]  [BUGGY]  ((  u  &  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  ((  u  &  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));	      ((    u    &    1)    ==    0)    ||(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
17	[BUG]  [BUGGY]  ((  u  &  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  ((  u  &  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));	      ((    u    &    1)    ==    0)    ||(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(k));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
18	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));	      ((    u    &    1)    ==    0)    ||(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(k));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
19	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.pow(10,  u  +  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	int  v  =(int)Math.pow(10,  u  +  1);	      int    v    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
20	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.pow(10,  u  -  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	int  v  =(int)Math.pow(10,  u  -  1);	      int    v    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
21	[BUG]  [BUGGY]  u  =  0;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  0;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  0;	  u    =    -1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
22	[BUG]  [BUGGY]  u  =  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  1;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  1;	  u    =    -1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
23	[BUG]  [BUGGY]  v  =  -q;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  v  =  -q;  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  -q;	      if(u    >    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
24	[BUG]  [BUGGY]  vice.addChildToFront(p);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  vice.addChildToFront(p);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	vice.addChildToFront(p);	      if(u    >    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
25	[BUG]  [BUGGY]  vice.addChildToBack(p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  vice.addChildToBack(p);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	vice.addChildToBack(p);	      if(u    >    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
26	[BUG]  [BUGGY]  vice.addChildToFront(q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  vice.addChildToFront(q);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	vice.addChildToFront(q);	      if(u    >    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
27	[BUG]  [BUGGY]  u  =  -u  +  2;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -u  +  2;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -u  +  2;	  u    =    -u    +    1;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
28	[BUG]  [BUGGY]  u  =  -u  +  3;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -u  +  3;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -u  +  3;	  u    =    -u    +    1;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
29	[BUG]  [BUGGY]  u  =  -u  /  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -u  /  1;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -u  /  1;	  u    =    -u    +    1;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
30	[BUG]  [BUGGY]  ((  u  &  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  ((  u  &  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));	      ((    u    &    1)    ==    0)    ||(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(v));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
31	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));	      ((    u    &    1)    ==    0)    ||(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(v));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
32	[BUG]  [BUGGY]  v  =  Math.pow(10,  k  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  v  =  Math.pow(10,  k  -  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  k  -  1);	      v    =    Math.pow(10,    k);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
33	[BUG]  [BUGGY]  v  =  Math.pow(10,  u  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  v  =  Math.pow(10,  u  -  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  u  -  1);	      v    =    Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
34	[BUG]  [BUGGY]  v  =  Math.pow(10,  u  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  v  =  Math.pow(10,  u  +  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  u  +  1);	      v    =    Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
35	[BUG]  [BUGGY]  u  =  -k  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -k  +  1;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -k  +  1;	  u    =    -k;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
36	[BUG]  [BUGGY]  u  =  -q  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -q  +  1;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -q  +  1;	  u    =    -q;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
37	[BUG]  [BUGGY]  u  =  Math.min(u,  p);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  Math.min(u,  p);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.min(u,  p);	      u    =    Math.min(k,    p);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
38	[BUG]  [BUGGY]  u  =  Math.min(p,  k);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  Math.min(p,  k);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.min(p,  k);	      u    =    Math.min(k,    p);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
39	[BUG]  [BUGGY]  u  =  Math.max(u,  p);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  Math.max(u,  p);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.max(u,  p);	      u    =    Math.min(k,    p);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
40	[BUG]  [BUGGY]  u  =  Math.min(v,  p);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  Math.min(v,  p);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.min(v,  p);	      u    =    Math.min(k,    p);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
41	[BUG]  [BUGGY]  if(u  >  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  if(u  >  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	if(u  >  0)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
42	[BUG]  [BUGGY]  if(u  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs(u));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  if(u  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs(u));  }  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	if(u  >  0)  {  throw  new  IllegalArgumentException( "Math  is  less  than  1: "  +  Math.abs(u));  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
43	[BUG]  [BUGGY]  v  =  Math.abs(u)+  Math.abs(q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  v  =  Math.abs(u)+  Math.abs(q);  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.abs(u)+  Math.abs(q);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
44	[BUG]  [BUGGY]  ((  u  &  1)  ==  0)||(v  >=  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  ((  u  &  1)  ==  0)||(v  >=  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0)||(v  >=  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));	      ((    u    &    1)    ==    0)||(v    >    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
45	[BUG]  [BUGGY]  v  =  Math.pow(10,  -u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  v  =  Math.pow(10,  -u);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  -u);	      v    =    Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
46	[BUG]  [BUGGY]  if(q  ==  -1)  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  if(q  ==  -1)  {  v  =  -q;  }  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	if(q  ==  -1)  {  v  =  -q;  }	      if(u    >    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
47	[BUG]  [BUGGY]  if(q  ==  0)  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  if(q  ==  0)  {  v  =  -q;  }  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	if(q  ==  0)  {  v  =  -q;  }	      if(u    >    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
48	[BUG]  [BUGGY]  if(q!=  0)  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  if(q!=  0)  {  v  =  -q;  }  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	if(q!=  0)  {  v  =  -q;  }	      if(u    >    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
49	[BUG]  [BUGGY]  mutableValues(v,  q);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  mutableValues(v,  q);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	mutableValues(v,  q);	      if(u    >    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
50	[BUG]  [BUGGY]  ((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  ((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));	      ((    u    &    1)    ==    0)    ||(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(k));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
51	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  q  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.pow(10,  q  -  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	int  v  =(int)Math.pow(10,  q  -  1);	      int    v    =(int)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
52	[BUG]  [BUGGY]  v  =  Math.pow(10,  v);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  v  =  Math.pow(10,  v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  v);	      v    =    Math.pow(10,    p);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
53	[BUG]  [BUGGY]  ((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  ((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));	      ((    u    &    1)    ==    0)    ||(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(p));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
54	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  -u);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.pow(10,  -u);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	int  v  =(int)Math.pow(10,  -u);	      int    v    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
55	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  u);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  float  v  =(float)Math.pow(10,  u);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	float  v  =(float)Math.pow(10,  u);	      int    v    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
56	[BUG]  [BUGGY]  ((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  ((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));	      ((    u    &    1)    ==    0)    ||(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
57	[BUG]  [BUGGY]  u  =  Math.min(k,  v);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  Math.min(k,  v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  Math.min(k,  v);	      u    =    Math.min(k,    p);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
58	[BUG]  [BUGGY]  ((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  ((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  +  1)  ==  0)&&(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));	      ((    u    &    1)    ==    0)    ||(v    &    2)    ==    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(v));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
59	[BUG]  [BUGGY]  mutableValues(v);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  mutableValues(v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	mutableValues(v);	      if(u    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
60	[BUG]  [BUGGY]  mutableValues.add( "- ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  mutableValues.add( "- ");  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	mutableValues.add( "- ");	      if(u    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
61	[BUG]  [BUGGY]  mutableValues(v,  u);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  mutableValues(v,  u);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	mutableValues(v,  u);	      if(u    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
62	[BUG]  [BUGGY]  if(q  >  0)  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  if(q  >  0)  {  v  =  -q;  }  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	if(q  >  0)  {  v  =  -q;  }	      if(u    >    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
63	[BUG]  [BUGGY]  if(q  <  0)  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  if(q  <  0)  {  v  =  -q;  }  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	if(q  <  0)  {  v  =  -q;  }	      if(u    >    0)    {    v    =    -q;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
64	[BUG]  [BUGGY]  ((  u  &  1)  ==  0)  ||(v  <  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  ((  u  &  1)  ==  0)  ||(v  <  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	((  u  &  1)  ==  0)  ||(v  <  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));	      ((    u    &    1)    ==    0)||(v    >    0))    {    return    Math.abs(Math.abs(u)+    Math.abs(q));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
65	[BUG]  [BUGGY]  v  =  Math.pow(10,  w);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  v  =  Math.pow(10,  w);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  Math.pow(10,  w);	      v    =    Math.pow(10,    k);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
66	[BUG]  [BUGGY]  v  =  -v;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  v  =  -v;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =  -v;	  u    =    -v;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
67	[BUG]  [BUGGY]  v  =(int)Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  v  =(int)Math.pow(10,  y);  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	v  =(int)Math.pow(10,  y);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
68	[BUG]  [BUGGY]  aughtInvalidArgumentException( " ");  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  aughtInvalidArgumentException( " ");  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	aughtInvalidArgumentException( " ");	      if(u    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
69	[BUG]  [BUGGY]  aughtExceptionHandler(throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  aughtExceptionHandler(throw  new  IllegalArgumentException( " ");  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	aughtExceptionHandler(throw  new  IllegalArgumentException( " ");	      if(u    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
70	[BUG]  [BUGGY]  aughtExceptionHandler(throw  new  IllegalArgumentException( " "));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  aughtExceptionHandler(throw  new  IllegalArgumentException( " "));  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	aughtExceptionHandler(throw  new  IllegalArgumentException( " "));	      if(u    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
71	[BUG]  [BUGGY]  char  v  =(char)Math.pow(10,  q);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  char  v  =(char)Math.pow(10,  q);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	char  v  =(char)Math.pow(10,  q);	      int    v    =(int)Math.pow(10,    q);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
