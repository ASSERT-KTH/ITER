bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  u  =  -1;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]  u  =  -1;  [BUGGY]  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -1;	u  =  -u;  	non-compiled	[CE]  <identifier>  expected	19	None	replace
2	[BUG]  [BUGGY]  u  =  -q;  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]  u  =  -q;  [BUGGY]  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -q;	u  =  -u;  	non-compiled	[CE]  <identifier>  expected	19	None	replace
3	[BUG]  [BUGGY]  u  =  -k;  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]  u  =  -k;  [BUGGY]  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -k;	u  =  -u;  	non-compiled	[CE]  <identifier>  expected	19	None	replace
4	[BUG]  [BUGGY]  u  =  -v;  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]  u  =  -v;  [BUGGY]  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -v;	u  =  -u;  	non-compiled	[CE]  <identifier>  expected	19	None	replace
5	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    [BUGGY]  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	  	u  =  -u;  	non-compiled	[CE]  <identifier>  expected	19	None	replace
6	[BUG]  [BUGGY]    ((  u  &  1)  ==  0)  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    ((  u  &  1)  ==  0)  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    ((  u  &  1)  ==  0)  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));		non-compiled	[CE]  <identifier>  expected	20	None	add
7	[BUG]  [BUGGY]    ((  u  &  1)  ==  0)  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    ((  u  &  1)  ==  0)  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    ((  u  &  1)  ==  0)  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(v));		non-compiled	[CE]  <identifier>  expected	20	None	add
8	[BUG]  [BUGGY]    ((  u  &  1)  ==  0)  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    ((  u  &  1)  ==  0)  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    ((  u  &  1)  ==  0)  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(k));		non-compiled	[CE]  <identifier>  expected	20	None	add
9	[BUG]  [BUGGY]    ((  u  &  1)  ==  0)  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    ((  u  &  1)  ==  0)  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    ((  u  &  1)  ==  0)  ||(v  &  2)  ==  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(p));		non-compiled	[CE]  <identifier>  expected	20	None	add
10	[BUG]  [BUGGY]    ((  u  &  1)  ==  0)||(v  >  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    ((  u  &  1)  ==  0)||(v  >  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    ((  u  &  1)  ==  0)||(v  >  0))  {  return  Math.abs(Math.abs(u)+  Math.abs(q));		non-compiled	[CE]  <identifier>  expected	20	None	add
11	[BUG]  [BUGGY]    v  =  Math.pow(10,  q);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    v  =  Math.pow(10,  q);  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    v  =  Math.pow(10,  q);		non-compiled	[CE]  <identifier>  expected	20	None	add
12	[BUG]  [BUGGY]    u  =  Math.min(k,  p);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    u  =  Math.min(k,  p);  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    u  =  Math.min(k,  p);		non-compiled	[CE]  <identifier>  expected	20	None	add
13	[BUG]  [BUGGY]    v  =  Math.pow(10,  p);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    v  =  Math.pow(10,  p);  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    v  =  Math.pow(10,  p);		non-compiled	[CE]  <identifier>  expected	20	None	add
14	[BUG]  [BUGGY]    v  =  Math.pow(10,  k);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    v  =  Math.pow(10,  k);  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    v  =  Math.pow(10,  k);		non-compiled	[CE]  <identifier>  expected	20	None	add
15	[BUG]  [BUGGY]    v  =  Math.pow(10,  u);  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    v  =  Math.pow(10,  u);  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    v  =  Math.pow(10,  u);		non-compiled	[CE]  <identifier>  expected	20	None	add
16	[BUG]  [BUGGY]    if(u  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    if(u  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    if(u  >  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  <identifier>  expected	20	None	add
17	[BUG]  [BUGGY]    int  v  =(int)Math.pow(10,  u);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    int  v  =(int)Math.pow(10,  u);  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    int  v  =(int)Math.pow(10,  u);		non-compiled	[CE]  <identifier>  expected	20	None	add
18	[BUG]  [BUGGY]    int  v  =(int)Math.pow(10,  q);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    int  v  =(int)Math.pow(10,  q);  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    int  v  =(int)Math.pow(10,  q);		non-compiled	[CE]  <identifier>  expected	20	None	add
19	[BUG]  [BUGGY]    if(u  >  0)  {  v  =  -q;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]    if(u  >  0)  {  v  =  -q;  }  [BUGGY]  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	    if(u  >  0)  {  v  =  -q;  }		non-compiled	[CE]  <identifier>  expected	20	None	add
20	[BUG]  [BUGGY]  u  =  -u  +  1;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  int  v  =  q;  if  ((u  ==  0)  ||  (v  ==  0))  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {  [BUGGY]  u  =  -u  +  1;  [BUGGY]  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  final  int  p  final  int  q  [VARIABLES]  short  NS  PS  ZS  boolean  long[]  factorials  double  EPSILON  SAFE_MIN  TWO_PI  eps  logSum  result  x  y  byte  NB  PB  ZB  int  k  p  q  t  u  v  	projects/Math99/src/java/org/apache/commons/math/util/MathUtils.java	0.6324555320336759	551	551	2	replace	u  =  -u  +  1;	u  =  -u;  	non-compiled	[CE]  <identifier>  expected	19	None	replace
