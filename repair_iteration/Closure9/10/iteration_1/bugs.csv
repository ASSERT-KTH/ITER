bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  >>. "  +  Pattern.quote(MODULE_SLASH),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  >>. "  +  Pattern.quote(MODULE_SLASH),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  >>. "  +  Pattern.quote(MODULE_SLASH),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")    .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
2	[BUG]  [BUGGY]  return  filename.replaceAll( "  ^. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filename.replaceAll( "  ^. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  ^. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")    .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
3	[BUG]  [BUGGY]  return  filename.replaceAll( "  >>. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filename.replaceAll( "  >>. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  >>. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")    .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
4	[BUG]  [BUGGY]  return  filename.replaceAll( "  >=. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filename.replaceAll( "  >=. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  >=. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")    .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
5	[BUG]  [BUGGY]  return  filename.replaceAll( "  <. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filename.replaceAll( "  <. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")    .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
6	[BUG]  [BUGGY]  return  filename.replaceAll( "!=. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filename.replaceAll( "!=. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "!=. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")    .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
7	[BUG]  [BUGGY]  return  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")    .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]    [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	  	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")    .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
9	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  >=. "  +  Pattern.quote(MODULE_SLASH),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  >=. "  +  Pattern.quote(MODULE_SLASH),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  >=. "  +  Pattern.quote(MODULE_SLASH),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")    .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
10	[BUG]  [BUGGY]  return  filename.replaceAll( ". "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filename.replaceAll( ". "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ". "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")    .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
11	[BUG]  [BUGGY]  return  filename  +  filename.replaceAll( ". "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  public  static  String  toModuleName(String  filename)  {  [BUGGY]  return  filename  +  filename.replaceAll( ". "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll( "\\.js$ ",   " ").replaceAll( "- ",   "_ ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filename.replaceAll( ". "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	return  MODULE_NAME_PREFIX  +  filename.replaceAll( "^\\. "  +  Pattern.quote(MODULE_SLASH),   " ")    .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
