bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  filenamePrefix  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename    +    PREFIX.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
2	[BUG]  [BUGGY]  return  filename  +  Prefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  Prefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  Prefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename    +    PREFIX.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
3	[BUG]  [BUGGY]  return  filenamePrefix  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR	  return    filename    +    PREFIX.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
4	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
5	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
6	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
7	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
8	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
9	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
10	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
11	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
12	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    ^.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
13	[BUG]  [BUGGY]  String  filename  =  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "[.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
14	[BUG]  [BUGGY]  return  filename.replaceAll( ".[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "[.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
15	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "[.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
16	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "[.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
17	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX,  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX,  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX,  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_	  return    filename.replaceAll(   "[.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
18	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
19	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
20	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
21	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
22	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
23	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
24	[BUG]  [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
25	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
26	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
27	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
28	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
29	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
30	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_S  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_S  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_S	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
31	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
32	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
33	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODUL  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODUL	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
34	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
35	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
36	[BUG]  [BUGGY]  return  filename.replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
37	[BUG]  [BUGGY]  String  filename  =  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
38	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
39	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_SLASH),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
40	[BUG]  [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( ".   "  +  Pattern.quote(MODULE_SLASH),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( ".   "  +  Pattern.quote(MODULE_SLASH),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  suffix.replaceAll( ".   "  +  Pattern.quote(MODULE_SLASH),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_SLASH),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
41	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_SLASH),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
42	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_FILENAME),   ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_FILENAME),   ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_FILENAME),   ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_SLASH),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
43	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( " ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( " ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( " ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
44	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N	  return    filenamePrefix    +    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
45	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N	  return    filenamePrefix    +    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
46	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
47	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
48	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
49	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
50	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
51	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
52	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
53	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
54	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
55	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
56	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
57	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
58	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_S  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_S  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_S	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
59	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length());  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	filename  =  filename.substring(0,  filename.length());	  filename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
60	[BUG]  [BUGGY]  filename  = " "  +  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  filename  = " "  +  filename.substring(0,  filename.length()  -  1);  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	filename  = " "  +  filename.substring(0,  filename.length()  -  1);	  filename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
61	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length()  +  1);  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	filename  =  filename.substring(0,  filename.length()  +  1);	  filename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
62	[BUG]  [BUGGY]  filename  =  filenamePrefix.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  filename  =  filenamePrefix.substring(0,  filename.length()  -  1);  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	filename  =  filenamePrefix.substring(0,  filename.length()  -  1);	  filename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
63	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
64	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
65	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".] ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".] ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".] ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
66	[BUG]  [BUGGY]  return  filename.replaceAll( "].   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "].   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "].   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
67	[BUG]  [BUGGY]  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
68	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
69	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
70	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
71	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
72	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX), ".. ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX), ".. ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX), ".. ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
73	[BUG]  [BUGGY]  return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename    +    filenamePrefix.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
74	[BUG]  [BUGGY]  return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename    +    filenamePrefix.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
75	[BUG]  [BUGGY]  return  filename  +  suffix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  suffix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  suffix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename    +    filenamePrefix.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
76	[BUG]  [BUGGY]  return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR	  return    filename    +    filenamePrefix.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
77	[BUG]  [BUGGY]  return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename    +    filenamePrefix.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
78	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N	  return    filename    +    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
79	[BUG]  [BUGGY]  return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR	  return    filename    +    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
80	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename    +    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
81	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filename    +    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
82	[BUG]  [BUGGY]  return  filename  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N	  return    filename    +    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
83	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename    +    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
84	[BUG]  [BUGGY]  return  filename  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename    +    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
85	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename    +    filename.replaceAll(   "..       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
86	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".. ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".. ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".. ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename    +    filename.replaceAll(   "..       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
87	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename    +    filename.replaceAll(   "..       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
88	[BUG]  [BUGGY]  return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename    +    filename.replaceAll(   "..       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
89	[BUG]  [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
90	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_S  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_S  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_S	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
91	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
92	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_S  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_S  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_S	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
93	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
94	[BUG]  [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
95	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
96	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
97	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
98	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
99	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  filename.substring(0,  filename.length();  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.substring(0,  filename.length();	  String    filename    =    filename.substring(0,    filename.length()    -    4);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
100	[BUG]  [BUGGY]  String  filename  =  files.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  files.substring(0,  filename.length());  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  files.substring(0,  filename.length());	  String    filename    =    filename.substring(0,    filename.length()    -    4);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
101	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_FILENAME),   ".   ").replaceAll(Pattern.quote(MODULE_FILENAME),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_FILENAME),   ".   ").replaceAll(Pattern.quote(MODULE_FILENAME),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_FILENAME),   ".   ").replaceAll(Pattern.quote(MODULE_FILENAME),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_SLASH),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
102	[BUG]  [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( ".   "  +  Pattern.quote(MODULE_SLASH),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( ".   "  +  Pattern.quote(MODULE_SLASH),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  suffix.replaceAll( ".   "  +  Pattern.quote(MODULE_SLASH),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_SLASH),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
103	[BUG]  [BUGGY]  return  filename.replaceAll( "  <   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
104	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    filename).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
105	[BUG]  [BUGGY]  return  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    filename).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
106	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    filename).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
107	[BUG]  [BUGGY]  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    filename).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
108	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".. ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".. ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".. ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "!=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
109	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
110	[BUG]  [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
111	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
112	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
113	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
114	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
115	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
116	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
117	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  +  1);  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.substring(0,  filename.length()  +  1);	  String    filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
118	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  +  2);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  +  2);  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.substring(0,  filename.length()  +  2);	  String    filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
119	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODUL    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
120	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFI  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFI  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFI	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODUL    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
121	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODUL    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
122	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_FILENAME_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_FILENAME_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_FILENAME_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODUL    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
123	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODUL    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
124	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX,  MODUL  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX,  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX,  MODUL	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODUL    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
125	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  filename.substring(0,  filename.length()));  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.substring(0,  filename.length()));	  String    filename    =    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
126	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "[.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "]   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
127	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "[.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "]   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
128	[BUG]  [BUGGY]  String  filename  =  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "[.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "]   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
129	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ").replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ").replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ").replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "[.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "]   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
130	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "[.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "]   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
131	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
132	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
133	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
134	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
135	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFI  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFI  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFI	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
136	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX,  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX,  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX,	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
137	[BUG]  [BUGGY]  return  filename.replaceAll( "  ^.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  ^.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  ^.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
138	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
139	[BUG]  [BUGGY]  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
140	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  EXPORTS).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  EXPORTS).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  EXPORTS).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    null).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
141	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX,  MODULE  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX,  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX,  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
142	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
143	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
144	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  EXPORTS).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  EXPORTS).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  EXPORTS).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    null).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
145	[BUG]  [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    null).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
146	[BUG]  [BUGGY]  String  filename  =  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    null).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
147	[BUG]  [BUGGY]  String  filename  =  filename.trim()  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  filename.trim()  +  File.separator;  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.trim()  +  File.separator;	  String    filename    =    filename.trim();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
148	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length())+  1;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  filename.substring(0,  filename.length())+  1;  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.substring(0,  filename.length())+  1;	  String    filename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
149	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
150	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
151	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "n ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "n ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "n ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
152	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
153	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
154	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "n ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "n ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "n ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
155	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
156	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
157	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
158	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
159	[BUG]  [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(MODULE_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(MODULE_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(MODULE_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
160	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
161	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "').replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "').replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "').replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
162	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
163	[BUG]  [BUGGY]  return  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
164	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
165	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
166	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
167	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_SEPARATOR	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
168	[BUG]  [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
169	[BUG]  [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
170	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
171	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_SEPARATOR),       ".   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
172	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_SEPARATOR),   ".. ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_SEPARATOR),   ".. ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_SEPARATOR),   ".. ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_SEPARATOR),       ".   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
173	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_SEPARATOR),       ".   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
174	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_SEPARATOR),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_SEPARATOR),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_SEPARATOR),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_SEPARATOR),       ".   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
175	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
176	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
177	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
178	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR	  return    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
179	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
180	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_SEPARATOR	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
181	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
182	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename    +    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
183	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename    +    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
184	[BUG]  [BUGGY]  return  filename  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename    +    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
185	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL	  return    filename    +    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
186	[BUG]  [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  suffix.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
187	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
188	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
189	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
190	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
191	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "://.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "://.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "://.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
192	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR	  return    filenamePrefix    +    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
193	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
194	[BUG]  [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "..       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
195	[BUG]  [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "..       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
196	[BUG]  [BUGGY]  String  filename  =  filename.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  filename.toLowerCase(Locale.ENGLISH);  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.toLowerCase(Locale.ENGLISH);	  String    filename    =    filename.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
197	[BUG]  [BUGGY]  String  filename  =  filename.toLowerCase()  +  1;  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  filename.toLowerCase()  +  1;  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.toLowerCase()  +  1;	  String    filename    =    filename.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
198	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "[.       "    +    Pattern.quote(MODULE_SLASH),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
199	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(MODULE_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(MODULE_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(MODULE_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "[.       "    +    Pattern.quote(MODULE_SLASH),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
200	[BUG]  [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( "[.   "  +  Pattern.quote(MODULE_SLASH),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  suffix.replaceAll( "[.   "  +  Pattern.quote(MODULE_SLASH),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  suffix.replaceAll( "[.   "  +  Pattern.quote(MODULE_SLASH),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "[.       "    +    Pattern.quote(MODULE_SLASH),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
201	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(MODULE_SEPARATOR),   "] ".replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(MODULE_SEPARATOR),   "] ".replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(MODULE_SEPARATOR),   "] ".replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "[.       "    +    Pattern.quote(MODULE_SLASH),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
202	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "[.       "    +    Pattern.quote(MODULE_SLASH),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
203	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR	  return    filenamePrefix    +    filename.replaceAll(   "[.       "    +    Pattern.quote(MODULE_SLASH),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
204	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(MODULE_FILENAME),   "] ".replaceAll(Pattern.quote(MODULE_FILENAME),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(MODULE_FILENAME),   "] ".replaceAll(Pattern.quote(MODULE_FILENAME),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(MODULE_FILENAME),   "] ".replaceAll(Pattern.quote(MODULE_FILENAME),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "[.       "    +    Pattern.quote(MODULE_SLASH),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
205	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
206	[BUG]  [BUGGY]  String  filename  =  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".*   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
207	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".*   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
208	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".*   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
209	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".*   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
210	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".. ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".. ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".. ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
211	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
212	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
213	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
214	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "n ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "n ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "n ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
215	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
216	[BUG]  [BUGGY]  return  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
217	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
218	[BUG]  [BUGGY]  return  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "n ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "n ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "n ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
219	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
220	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
221	[BUG]  [BUGGY]  return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    *.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
222	[BUG]  [BUGGY]  return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    *.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
223	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    null).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
224	[BUG]  [BUGGY]  return  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    null).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
225	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
226	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
227	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
228	[BUG]  [BUGGY]  return  filename.replaceAll( "  <   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
229	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
230	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
231	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
232	[BUG]  [BUGGY]  String  filename  =  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
233	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
234	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")&&    all(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
235	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")&&    all(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
236	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")||  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")||  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")||  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")&&    all(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
237	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")&&    all(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
238	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")&&    all(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
239	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_SEPARATOR),       "       ").replaceAll(Pattern.quote(MODULE_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
240	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_SEPARATOR),       "       ").replaceAll(Pattern.quote(MODULE_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
241	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_SEPARATOR),       "       ").replaceAll(Pattern.quote(MODULE_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
242	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(MODULE_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(MODULE_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(MODULE_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_SEPARATOR),       "       ").replaceAll(Pattern.quote(MODULE_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
243	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DECULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DECULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DECULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_SEPARATOR),       "       ").replaceAll(Pattern.quote(MODULE_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
244	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
245	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
246	[BUG]  [BUGGY]  return  filename.replaceAll( "  ^.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  ^.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  ^.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
247	[BUG]  [BUGGY]  return  filename.replaceAll( "  <   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
248	[BUG]  [BUGGY]  filename  = " "  +  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  filename  = " "  +  filename.substring(0,  filename.length());  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	filename  = " "  +  filename.substring(0,  filename.length());	  filename    =    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
249	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length();  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	filename  =  filename.substring(0,  filename.length();	  filename    =    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
250	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  +  2);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length()  +  2);  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	filename  =  filename.substring(0,  filename.length()  +  2);	  filename    =    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
251	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
252	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length()));  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	filename  =  filename.substring(0,  filename.length()));	  filename    =    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
253	[BUG]  [BUGGY]  return  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "n ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "n ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }  n "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "n ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
254	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "- ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "- ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "- ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
255	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
256	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
257	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
258	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
259	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
260	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_SLASH),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
261	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX	  return    filenamePrefix    +    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
262	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
263	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  ^.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  ^.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  ^.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX	  return    filenamePrefix    +    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
264	[BUG]  [BUGGY]  return  filename.replaceAll( "  }  n ".  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }  n ".  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }  n ".  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
265	[BUG]  [BUGGY]  return  filename.replaceAll( "!=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "!=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "!=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
266	[BUG]  [BUGGY]  return  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
267	[BUG]  [BUGGY]  return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".. ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".. ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".. ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename    +    filename.replaceAll(   "..       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
268	[BUG]  [BUGGY]  return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename    +    filename.replaceAll(   "..       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
269	[BUG]  [BUGGY]  return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filename    +    filename.replaceAll(   "..       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
270	[BUG]  [BUGGY]  return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filename    +    filename.replaceAll(   "..       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
271	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
272	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".. ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".. ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".. ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
273	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
274	[BUG]  [BUGGY]  return  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
275	[BUG]  [BUGGY]  return  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR	  return    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
276	[BUG]  [BUGGY]  return  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
277	[BUG]  [BUGGY]  return  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")&&    all(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
278	[BUG]  [BUGGY]  String  filename  =  filename.substring(1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  filename.substring(1);  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.substring(1);	  String    filename    =    filename.trim();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
279	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODUL  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODUL	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
280	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
281	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ", ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ", ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ", ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
282	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "[.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "]   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
283	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "[.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "]   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
284	[BUG]  [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
285	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
286	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
287	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_S  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_S  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_S	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
288	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
289	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_N  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_N	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
290	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
291	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
292	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
293	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_SEPARATOR),       "       ").replaceAll(Pattern.quote(MODULE_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
294	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_SEPARATOR),       "       ").replaceAll(Pattern.quote(MODULE_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
295	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_S  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_S  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_S	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_SEPARATOR),       "       ").replaceAll(Pattern.quote(MODULE_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
296	[BUG]  [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
297	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
298	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
299	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
300	[BUG]  [BUGGY]  return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename    +    filenamePrefix.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
301	[BUG]  [BUGGY]  return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filename    +    filenamePrefix.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
302	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
303	[BUG]  [BUGGY]  return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL	  return    filename    +    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
304	[BUG]  [BUGGY]  return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL	  return    filename    +    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
305	[BUG]  [BUGGY]  return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename    +    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
306	[BUG]  [BUGGY]  return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),	  return    filename    +    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
307	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
308	[BUG]  [BUGGY]  return  filename.replaceAll( "  }  n ".  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }  n ".  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }  n ".  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
309	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
310	[BUG]  [BUGGY]  return  filename  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filename    +    PREFIX.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
311	[BUG]  [BUGGY]  return  filename  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename    +    PREFIX.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
312	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  10);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  10);  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.substring(0,  filename.length()  -  10);	  String    filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
313	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  6);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  6);  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.substring(0,  filename.length()  -  6);	  String    filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
314	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
315	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
316	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
317	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ", ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ", ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ", ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
318	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
319	[BUG]  [BUGGY]  return  filename.replaceAll( "  }  n ".  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }  n ".  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }  n ".  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".*   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
320	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ", ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ", ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ", ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
321	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
322	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
323	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
324	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
325	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_S  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_S  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_S	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
326	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
327	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR)	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
328	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "[.       "    +    Pattern.quote(MODULE_SLASH),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
329	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   "[.       "    +    Pattern.quote(MODULE_SLASH),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
330	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "[.       "    +    Pattern.quote(MODULE_SLASH),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
331	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "[.       "    +    Pattern.quote(MODULE_SLASH),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
332	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL	  return    filenamePrefix    +    filename.replaceAll(   "[.       "    +    Pattern.quote(MODULE_SLASH),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
333	[BUG]  [BUGGY]  return  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR	  return    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
334	[BUG]  [BUGGY]  return  filename.replaceAll( "!=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "!=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "!=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR	  return    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
335	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll('.'  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll('.'  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll('.'  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
336	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
337	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
338	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ", ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ", ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ", ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
339	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
340	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ", ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ", ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ", ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
341	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
342	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "? ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
343	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ", ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ", ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ", ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
344	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
345	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length())+  1;  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length())+  1;  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	filename  =  filename.substring(0,  filename.length())+  1;	  filename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
346	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODUL    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
347	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_N	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
348	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
349	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
350	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
351	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
352	[BUG]  [BUGGY]  return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "    *.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
353	[BUG]  [BUGGY]  return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "    *.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
354	[BUG]  [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "..       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
355	[BUG]  [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_SEPARATOR	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
356	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  2);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  2);  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.substring(0,  filename.length()  2);	  String    filename    =    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
357	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
358	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
359	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
360	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
361	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
362	[BUG]  [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
363	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
364	[BUG]  [BUGGY]  return  filename.replaceAll( "  }  n ".  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }  n ".  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }  n ".  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    null).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
365	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    null).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
366	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    null).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
367	[BUG]  [BUGGY]  return  filename.replaceAll( "  }  n ".  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "n ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }  n ".  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "n ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }  n ".  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "n ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
368	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
369	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
370	[BUG]  [BUGGY]  File  filename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  File  filename  =  filename.substring(0,  filename.length());  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	File  filename  =  filename.substring(0,  filename.length());	  String    filename    =    filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
371	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    null).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
372	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SEPARATOR),  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SEPARATOR),  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SEPARATOR),	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    null).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
373	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_S  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_S  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_S	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
374	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filenamePrefix.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
375	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filenamePrefix.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
376	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "[.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
377	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
378	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_SEPARATOR),       ".   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
379	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
380	[BUG]  [BUGGY]  return  filename.replaceAll( "  }  n ".  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }  n ".  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }  n ".  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    filename).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
381	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    null).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
382	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT).replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT).replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT).replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    null).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
383	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_SLASH),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
384	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_NAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_NAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_NAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_SLASH),       ".   ")).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
385	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    null).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
386	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    null).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
387	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    null).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
388	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(MODULE_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(MODULE_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(MODULE_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    null).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
389	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    null).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
390	[BUG]  [BUGGY]  return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "!=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
391	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
392	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(DEFAULT_FILENAME  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(DEFAULT_FILENAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(DEFAULT_FILENAME	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
393	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
394	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
395	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
396	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
397	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
398	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
399	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  sourceName.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  sourceName.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  sourceName.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
400	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    filename).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
401	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    filename).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
402	[BUG]  [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    filename).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
403	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(DEFAULT_FILENAME  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(DEFAULT_FILENAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(DEFAULT_FILENAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
404	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(DEFAULT_FILE  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(DEFAULT_FILE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(DEFAULT_FILE	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
405	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
406	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(DEFAULT_FILENAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
407	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX	  return    filenamePrefix    +    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
408	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX	  return    filenamePrefix    +    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
409	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    >>.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
410	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
411	[BUG]  [BUGGY]  return  filename.replaceAll( "].   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "].   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "].   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
412	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()).trim();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length()).trim();  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	filename  =  filename.substring(0,  filename.length()).trim();	  filename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
413	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
414	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
415	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
416	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_SLASH),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
417	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_SLASH),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
418	[BUG]  [BUGGY]  return  filename  +  Prefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  Prefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  Prefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename    +    PREFIX.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
419	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODUL    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
420	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(DEFAULT_  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(DEFAULT_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(DEFAULT_	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODUL    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
421	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
422	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_N	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
423	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
424	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_NAME    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
425	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "[.       "    +    Pattern.quote(MODULE_SLASH),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
426	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  ']'.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  ']'.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  ']'.replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "[.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
427	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX].replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX].replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX].replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "[.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
428	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "[.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "]   ".replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
429	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
430	[BUG]  [BUGGY]  return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL	  return    filename    +    filenamePrefix.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
431	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
432	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
433	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filenamePrefix.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
434	[BUG]  [BUGGY]  return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    *.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
435	[BUG]  [BUGGY]  return  filename.replaceAll( "!=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "!=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "!=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ")&&    all(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
436	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    }       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
437	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
438	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
439	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()).trim();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  filename.substring(0,  filename.length()).trim();  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.substring(0,  filename.length()).trim();	  String    filename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
440	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  1);  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.substring(0,  filename.length()  1);	  String    filename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
441	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
442	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
443	[BUG]  [BUGGY]  return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filename    +    filename.replaceAll(   "..       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
444	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
445	[BUG]  [BUGGY]  filename  = "- "  +  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  filename  = "- "  +  filename.substring(0,  filename.length());  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	filename  = "- "  +  filename.substring(0,  filename.length());	  filename    =    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
446	[BUG]  [BUGGY]  filename  = "_ "  +  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  filename  = "_ "  +  filename.substring(0,  filename.length());  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	filename  = "_ "  +  filename.substring(0,  filename.length());	  filename    =    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
447	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
448	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
449	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
450	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MOD  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MOD  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MOD	  return    filenamePrefix    +    filename.replaceAll(   "    >=.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
451	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
452	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".. ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".. ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".. ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_PREFIX),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
453	[BUG]  [BUGGY]  return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE	  return    filename    +    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
454	[BUG]  [BUGGY]  return  filename  +  PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename  +  PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  PREFIX  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL	  return    filename    +    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
455	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_S  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_S  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_S	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(MODULE_SEPARATOR),       ".   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
456	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
457	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
458	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ")).replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    <.       "    +    Pattern.quote(MODULE_SEPARATOR),       "       ").replaceAll(Pattern.quote(MODULE_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
459	[BUG]  [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "..       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
460	[BUG]  [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  '.').replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  '.').replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  '.').replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "..       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       ".   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
461	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
462	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODUL	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
463	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
464	[BUG]  [BUGGY]  String  filename  =  filename.toUpperCase();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  String  filename  =  filename.toUpperCase();  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.toUpperCase();	  String    filename    =    filename.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
465	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(DEFAULT_FILE  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(DEFAULT_FILE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(DEFAULT_FILE	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
466	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),	  return    filenamePrefix    +    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),    MODULE_    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
467	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH,  MODULE	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
468	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename.replaceAll(   "    }.       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
469	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   ".       "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),    DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
470	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(FILENAME_PREFIX),  DEFAULT_FILENAME_PREFIX).replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
471	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_S  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_S  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_S	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
472	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  static  String  toModuleName(String  filename)  {      [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_  [BUGGY]      filename.replaceAll(     "^\\.     "  +  Pattern.quote(MODULE_SLASH),       "     ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(     "\\.js$     ",       "     ").replaceAll(     "-     ",       "_     ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   ".       "    +    Pattern.quote(FILENAME_PREFIX),       "       ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
