bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_SLASH),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_SLASH),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_SLASH),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
7	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
8	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_SEPARATOR),   ". ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_SEPARATOR),   ". ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_SEPARATOR),   ". ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
9	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_SLASH),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_SLASH),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_SLASH),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
10	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(MODULE_SLASH),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(MODULE_SLASH),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "[.   "  +  Pattern.quote(MODULE_SLASH),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(MODULE_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
12	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.substring(0,  filename.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.substring(0,  filename.length()  -  2);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  3);  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.substring(0,  filename.length()  -  3);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  String  filename  =  filename.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  String  filename  =  filename.toLowerCase();  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.toLowerCase();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
16	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  String  filename  =  filename.substring(0,  filename.length()  -  4);  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.substring(0,  filename.length()  -  4);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
17	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  String  filename  =  filename.substring(0,  filename.length());  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.substring(0,  filename.length());	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
18	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(MODULE_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(MODULE_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(MODULE_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_PREFIX),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
21	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(MODULE_SEPARATOR),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(MODULE_SEPARATOR),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(MODULE_SEPARATOR),   "   ").replaceAll(Pattern.quote(MODULE_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >=.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
24	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >=.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
25	[BUG]  [BUGGY]  return  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >=.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  return  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >=.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  return  filename.replaceAll( "!=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "!=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "!=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >=.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename    +    filename.replaceAll(   ".   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
29	[BUG]  [BUGGY]  return  filename  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  PREFIX.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename    +    filename.replaceAll(   ".   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
30	[BUG]  [BUGGY]  return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename    +    filename.replaceAll(   ".   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
31	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    ^.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    ^.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  return  filename.replaceAll( "  ^.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  ^.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  ^.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    ^.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
34	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
35	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
36	[BUG]  [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
37	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  null).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
38	[BUG]  [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
39	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
40	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( ".   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
41	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
42	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME_SEPARATOR	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
43	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(FILENAME_SEPARATOR),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
44	[BUG]  [BUGGY]  return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename    +    filename.replaceAll(   ".   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
45	[BUG]  [BUGGY]  return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filename.replaceAll( "..   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename    +    filename.replaceAll(   ".   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
46	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
47	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
48	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "!=.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
49	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	filename  =  filename.substring(0,  filename.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	filename  =  filename.substring(0,  filename.length()  -  2);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
51	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "    >=.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  return  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")&&  all(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >=.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  return  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }. "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   " ".replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
54	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
55	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ".* ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
56	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
57	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "    <.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
58	[BUG]  [BUGGY]  return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   ".   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   ".   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
60	[BUG]  [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "[.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "] ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >>.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  return  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    >>.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
62	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE	  return    filenamePrefix    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
63	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODUL	  return    filenamePrefix    +    filename.replaceAll(   "    >=.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
64	[BUG]  [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  <.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   "    >=.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
65	[BUG]  [BUGGY]  return  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  >=.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "    >=.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
66	[BUG]  [BUGGY]  return  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "    >=.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR	  return    filename.replaceAll(   ".   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
68	[BUG]  [BUGGY]  return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename    +    filename.replaceAll(   ".   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
69	[BUG]  [BUGGY]  return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename  +  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename    +    filename.replaceAll(   ".   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
70	[BUG]  [BUGGY]  return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  *.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "!=.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
71	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
72	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
73	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  >>.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
74	[BUG]  [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filenamePrefix  +  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   "   ").replaceAll(Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_	  return    filenamePrefix    +    filename.replaceAll(   "    >>.   "    +    Pattern.quote(MODULE_SLASH),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
75	[BUG]  [BUGGY]  String  filename  =  filename.trim();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  String  filename  =  filename.trim();  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	String  filename  =  filename.trim();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
76	[BUG]  [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( ".   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),   ". ")).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    ^.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
77	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  filename).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
78	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  MODULE_NAME_SEPARATOR).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
79	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
80	[BUG]  [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    public  static  String  toModuleName(String  filename)  {    [BUGGY]  return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_  [BUGGY]    filename.replaceAll(   "^\\.   "  +  Pattern.quote(MODULE_SLASH),     "   ")  .replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_NAME_SEPARATOR)  .replaceAll(   "\\.js$   ",     "   ").replaceAll(   "-   ",     "_   ");  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  toModuleName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  filename  filenamePrefix  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	89	91	1	replace	return  filename.replaceAll( "  }.   "  +  Pattern.quote(DEFAULT_FILENAME_PREFIX),  DEFAULT_NAME_PREFIX).replaceAll(Pattern.quote(MODULE_SLASH),  MODULE_	  return    filename.replaceAll(   "    }.   "    +    Pattern.quote(DEFAULT_FILENAME_PREFIX),       "   ").replaceAll(Pattern.quote(MODULE_SLASH),    MODULE_NAME_SEPARATOR)    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
