bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length());  [CE]  not  a  statement  [FE]    ComparisonFailure  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  [BUGGY]  filename  =  filename.substring(0,  filename.length());  [BUGGY]  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length());	filename  =  filename.substring(filenamePrefix.length());  	non-compiled	[CE]  not  a  statement	5	None	replace
2	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  1);  [CE]  ';'  expected  [FE]      ComparisonFailure  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length()  -  1);	filename  =  filename.substring(filenamePrefix.length());  	non-compiled	[CE]  ';'  expected	5	None	replace
3	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  2);  [CE]  ';'  expected  [FE]        ComparisonFailure  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length()  -  2);	filename  =  filename.substring(filenamePrefix.length());  	non-compiled	[CE]  ';'  expected	5	None	replace
4	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  3);  [CE]  ';'  expected  [FE]          ComparisonFailure  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  3);  [BUGGY]  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length()  -  3);	filename  =  filename.substring(filenamePrefix.length());  	non-compiled	[CE]  ';'  expected	5	None	replace
5	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  4);  [CE]  ';'  expected  [FE]            ComparisonFailure  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  4);  [BUGGY]  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length()  -  4);	filename  =  filename.substring(filenamePrefix.length());  	non-compiled	[CE]  ';'  expected	5	None	replace
6	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length());  [CE]  ';'  expected  [FE]              ComparisonFailure  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length());  [BUGGY]  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.length());	filename  =  filename.substring(filenamePrefix.length());  	non-compiled	[CE]  ';'  expected	5	None	replace
7	[BUG]  [BUGGY]    [CE]  ';'  expected  [FE]                ComparisonFailure  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  [BUGGY]    [BUGGY]  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	  	filename  =  filename.substring(filenamePrefix.length());  	non-compiled	[CE]  ';'  expected	5	None	replace
8	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  1);  [CE]  ';'  expected  [FE]    ComparisonFailure  [CONTEXT]  private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  1);  [BUGGY]  }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.length()  -  1);	filename  =  filename.substring(filenamePrefix.length());  	non-compiled	[CE]  ';'  expected	5	None	replace
