bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  filename  =  sourceName.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  sourceName.substring(0,  filename.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  sourceName.substring(0,  filename.length());	  filename    =    sourceName.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
2	[BUG]  [BUGGY]  filename  =  filename.substring(0,  sourceName.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  sourceName.length()  -  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  sourceName.length()  -  1);	  filename    =    sourceName.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
3	[BUG]  [BUGGY]  filename  =  filename.substring(0,  sourceName.length());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  sourceName.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  sourceName.length());	  filename    =    sourceName.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
4	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.indexOf('.'));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.indexOf('.'));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.indexOf('.'));	  filename    =    sourceName.substring(0,    filename.indexOf(filenamePrefix));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
5	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.indexOf('_'));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.indexOf('_'));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.indexOf('_'));	  filename    =    sourceName.substring(0,    filename.indexOf(filenamePrefix));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
6	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.indexOf('/'));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.indexOf('/'));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.indexOf('/'));	  filename    =    sourceName.substring(0,    filename.indexOf(filenamePrefix));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
7	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.indexOf(currentFilename));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.indexOf(currentFilename));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.indexOf(currentFilename));	  filename    =    sourceName.substring(0,    filename.indexOf(filenamePrefix));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
8	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.indexOf(filename));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.indexOf(filename));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.indexOf(filename));	  filename    =    sourceName.substring(0,    filename.indexOf(filenamePrefix));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
9	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.indexOf( "_ "));  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.indexOf( "_ "));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.indexOf( "_ "));	  filename    =    sourceName.substring(0,    filename.indexOf(filenamePrefix));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
10	[BUG]  [BUGGY]  filename  =  filename.trim().toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.trim().toLowerCase(Locale.ENGLISH);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.trim().toLowerCase(Locale.ENGLISH);	  filename    =    filename.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
11	[BUG]  [BUGGY]  filename  =  filename.trim().toLowerCase()  +  1;  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.trim().toLowerCase()  +  1;  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.trim().toLowerCase()  +  1;	  filename    =    filename.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
12	[BUG]  [BUGGY]  filename  =  filename.trim().toLowerCase(Locale.getDefault());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.trim().toLowerCase(Locale.getDefault());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.trim().toLowerCase(Locale.getDefault());	  filename    =    filename.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
13	[BUG]  [BUGGY]  filename  =  filename.trim().toLowerCase(Locale.US);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.trim().toLowerCase(Locale.US);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.trim().toLowerCase(Locale.US);	  filename    =    filename.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
14	[BUG]  [BUGGY]  filename  =  filename.trim().substring(0,  filenamePrefix.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.trim().substring(0,  filenamePrefix.length()  -  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.trim().substring(0,  filenamePrefix.length()  -  1);	  filename    =    filename.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
15	[BUG]  [BUGGY]  filename  =  filename.trim().substring(0,  filenamePrefix.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.trim().substring(0,  filenamePrefix.length()  -  2);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.trim().substring(0,  filenamePrefix.length()  -  2);	  filename    =    filename.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
16	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length();  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.length();	  filename    =    filename.substring(0,    filename.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
17	[BUG]  [BUGGY]  filename  =  filenamePrefix.substring(0,  filename.length();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filenamePrefix.substring(0,  filename.length();  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filenamePrefix.substring(0,  filename.length();	  filename    =    filename.substring(0,    filename.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
18	[BUG]  [BUGGY]  filename  =  filename.substring(1,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(1,  filename.length()  -  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(1,  filename.length()  -  1);	  filename    =    filename.substring(0,    filename.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.length()  1);	  filename    =    filename.substring(0,    filename.length()    1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
20	[BUG]  [BUGGY]  filename  =  filenamePrefix.substring(0,  filename.length()  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filenamePrefix.substring(0,  filename.length()  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filenamePrefix.substring(0,  filename.length()  1);	  filename    =    filename.substring(0,    filename.length()    1);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
21	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.lastIndexOf('.')+  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.lastIndexOf('.')+  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.lastIndexOf('.')+  1);	  filename    =    filename.substring(0,    filenamePrefix.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
22	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.lastIndexOf('.',  0));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.lastIndexOf('.',  0));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.lastIndexOf('.',  0));	  filename    =    filename.substring(0,    filenamePrefix.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
23	[BUG]  [BUGGY]  filename  +=  filename.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  +=  filename.substring(0,  filenamePrefix.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  +=  filename.substring(0,  filenamePrefix.length());	  filename    +=    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
24	[BUG]  [BUGGY]  filename  +=  filenamePrefix.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  +=  filenamePrefix.substring(0,  filename.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  +=  filenamePrefix.substring(0,  filename.length());	  filename    +=    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
25	[BUG]  [BUGGY]  filename  +=  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  +=  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  +=  filename.substring(0,  filename.length()  -  1);	  filename    +=    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
26	[BUG]  [BUGGY]  filename  +=  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  +=  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  +=  filename.substring(0,  filename.length()  -  2);	  filename    +=    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
27	[BUG]  [BUGGY]  filename  -=  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  -=  filename.substring(0,  filename.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  -=  filename.substring(0,  filename.length());	  filename    +=    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
28	[BUG]  [BUGGY]  filename  +=  filename.substring(0,  filename.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  +=  filename.substring(0,  filename.length()  -  4);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  +=  filename.substring(0,  filename.length()  -  4);	  filename    +=    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
29	[BUG]  [BUGGY]  filename  +=  filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  +=  filename.substring(0,  filename.length()  -  3);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  +=  filename.substring(0,  filename.length()  -  3);	  filename    +=    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
30	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  1)+  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  1)+  1;  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length()  -  1)+  1;	  filename    =    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length())+  1;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length())+  1;  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.length())+  1;	  filename    =    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  +  1)+  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length()  +  1)+  1;  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length()  +  1)+  1;	  filename    =    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  filename  =  filenamePrefix.substring(0,  filename.length())+  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filenamePrefix.substring(0,  filename.length())+  1;  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filenamePrefix.substring(0,  filename.length())+  1;	  filename    =    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length())+  2;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length())+  2;  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length())+  2;	  filename    =    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  1));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length()  -  1));	  filename    =    filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
36	[BUG]  [BUGGY]  filename  =  filenamePrefix.substring(0,  filename.length()));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filenamePrefix.substring(0,  filename.length()));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filenamePrefix.substring(0,  filename.length()));	  filename    =    filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
37	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  2));  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  2));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length()  -  2));	  filename    =    filename.substring(0,    filename.length()));    	non-compiled	[CE]  ';'  expected	21	None	replace
38	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.indexOf('n'));  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.indexOf('n'));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.indexOf('n'));	  filename    =    filename.substring(0,    filenamePrefix.indexOf(filenamePrefix));    	non-compiled	[CE]  ';'  expected	34	None	replace
39	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf( "$$ "));  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf( "$$ "));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.lastIndexOf( "$$ "));	  filename    =    filename.substring(0,    filenamePrefix.indexOf(filenamePrefix));    	non-compiled	[CE]  	34	None	replace
40	[BUG]  [BUGGY]  filename  =   "# "  +  filename.substring(0,  filenamePrefix.length());  [CE]  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =   "# "  +  filename.substring(0,  filenamePrefix.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =   "# "  +  filename.substring(0,  filenamePrefix.length());	  filename    =   "#   "    +    filename.substring(0,    filename.length());    	non-compiled	[CE]  	2	None	replace
41	[BUG]  [BUGGY]  filename  =  new  String(filename.substring(0,  filename.length()  -  1));  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  new  String(filename.substring(0,  filename.length()  -  1));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  new  String(filename.substring(0,  filename.length()  -  1));	  filename    =   "#   "    +    filename.substring(0,    filename.length());    	non-compiled	[CE]  ';'  expected	2	None	replace
42	[BUG]  [BUGGY]  filename  =  new  String(filename.substring(0,  filename.length()));  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  new  String(filename.substring(0,  filename.length()));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  new  String(filename.substring(0,  filename.length()));	  filename    =   "#   "    +    filename.substring(0,    filename.length());    	non-compiled	[CE]  ';'  expected	2	None	replace
43	[BUG]  [BUGGY]  filename  =   "# "  +  filename.substring(0,  filename.length()  -  1);  [CE]  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =   "# "  +  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =   "# "  +  filename.substring(0,  filename.length()  -  1);	  filename    =   "#   "    +    filename.substring(0,    filename.length());    	non-compiled	[CE]  	2	None	replace
44	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  1));  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  1));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.length()  -  1));	  filename    =    filename.substring(0,    filenamePrefix.length()));    	non-compiled	[CE]  ';'  expected	39	None	replace
45	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  2));  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  2));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.length()  -  2));	  filename    =    filename.substring(0,    filenamePrefix.length()));    	non-compiled	[CE]  ';'  expected	39	None	replace
46	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix  +  1);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix  +  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix  +  1);	  filename    =    filename.substring(0,    filenamePrefix);    	non-compiled	[CE]  ';'  expected	36	None	replace
47	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix  -  1);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix  -  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix  -  1);	  filename    =    filename.substring(0,    filenamePrefix);    	non-compiled	[CE]  ';'  expected	36	None	replace
48	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix  +  2);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix  +  2);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix  +  2);	  filename    =    filename.substring(0,    filenamePrefix);    	non-compiled	[CE]  ';'  expected	36	None	replace
49	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix  +  3);  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix  +  3);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix  +  3);	  filename    =    filename.substring(0,    filenamePrefix);    	non-compiled	[CE]  ';'  expected	36	None	replace
50	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix  +  1).trim();  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix  +  1).trim();  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix  +  1).trim();	  filename    =    filename.substring(0,    filenamePrefix);    	non-compiled	[CE]  ';'  expected	36	None	replace
51	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix  +  1,  filename.length());  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix  +  1,  filename.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix  +  1,  filename.length());	  filename    =    filename.substring(0,    filenamePrefix);    	non-compiled	[CE]  ';'  expected	36	None	replace
52	[BUG]  [BUGGY]  filename  =  filenamePrefix.substring(0,  filename.length()  -  1);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filenamePrefix.substring(0,  filename.length()  -  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filenamePrefix.substring(0,  filename.length()  -  1);	  filename    =    filenamePrefix.substring(0,    filename.length());    	non-compiled	[CE]  ';'  expected	17	None	replace
53	[BUG]  [BUGGY]  filename  =  filenamePrefix.substring(0,  filename.length()  -  2);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filenamePrefix.substring(0,  filename.length()  -  2);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filenamePrefix.substring(0,  filename.length()  -  2);	  filename    =    filenamePrefix.substring(0,    filename.length());    	non-compiled	[CE]  ';'  expected	17	None	replace
54	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.lastIndexOf('.'));  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.lastIndexOf('.'));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	String  currentFilename  =  filename.substring(0,  filename.lastIndexOf('.'));	  String    currentFilename    =    filename.substring(0,    filename.indexOf(currentFilename));    	non-compiled	[CE]  ';'  expected	16	None	replace
55	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.indexOf(filenamePrefix));  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.indexOf(filenamePrefix));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	String  currentFilename  =  filename.substring(0,  filename.indexOf(filenamePrefix));	  String    currentFilename    =    filename.substring(0,    filename.indexOf(currentFilename));    	non-compiled	[CE]  ';'  expected	16	None	replace
56	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filenamePrefix.indexOf(currentFilename));  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filenamePrefix.indexOf(currentFilename));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	String  currentFilename  =  filename.substring(0,  filenamePrefix.indexOf(currentFilename));	  String    currentFilename    =    filename.substring(0,    filename.indexOf(currentFilename));    	non-compiled	[CE]  ';'  expected	16	None	replace
57	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.lastIndexOf('/'));  [CE]  ';'  expected  [FE]                                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.lastIndexOf('/'));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	String  currentFilename  =  filename.substring(0,  filename.lastIndexOf('/'));	  String    currentFilename    =    filename.substring(0,    filename.indexOf(currentFilename));    	non-compiled	[CE]  ';'  expected	16	None	replace
58	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.indexOf(requiredFilenamePrefix));  [CE]  ';'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.indexOf(requiredFilenamePrefix));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	String  currentFilename  =  filename.substring(0,  filename.indexOf(requiredFilenamePrefix));	  String    currentFilename    =    filename.substring(0,    filename.indexOf(currentFilename));    	non-compiled	[CE]  ';'  expected	16	None	replace
59	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.lastIndexOf( "$$ "));  [CE]  ';'  expected  [FE]                                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.lastIndexOf( "$$ "));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	String  currentFilename  =  filename.substring(0,  filename.lastIndexOf( "$$ "));	  String    currentFilename    =    filename.substring(0,    filename.indexOf(currentFilename));    	non-compiled	[CE]  ';'  expected	16	None	replace
60	[BUG]  [BUGGY]  filename  =  filename.substring(1,  filenamePrefix.length());  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(1,  filenamePrefix.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(1,  filenamePrefix.length());	  filename    =    filename.substring(1,    filename.length());    	non-compiled	[CE]  ';'  expected	20	None	replace
61	[BUG]  [BUGGY]  filename  =  filenamePrefix.substring(1,  filename.length());  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filenamePrefix.substring(1,  filename.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filenamePrefix.substring(1,  filename.length());	  filename    =    filename.substring(1,    filename.length());    	non-compiled	[CE]  ';'  expected	20	None	replace
62	[BUG]  [BUGGY]  filename  =  filename.substring(1,  filename.length()  -  2);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(1,  filename.length()  -  2);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(1,  filename.length()  -  2);	  filename    =    filename.substring(1,    filename.length());    	non-compiled	[CE]  ';'  expected	20	None	replace
63	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrettyPrint.length()  -  1);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrettyPrint.length()  -  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrettyPrint.length()  -  1);	  filename    =    filename.substring(0,    filenamePrettyPrint.length());    	non-compiled	[CE]  ';'  expected	26	None	replace
64	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrettyPrint.length()  -  2);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrettyPrint.length()  -  2);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrettyPrint.length()  -  2);	  filename    =    filename.substring(0,    filenamePrettyPrint.length());    	non-compiled	[CE]  ';'  expected	26	None	replace
65	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrettyPrint.length()  +  1);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrettyPrint.length()  +  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrettyPrint.length()  +  1);	  filename    =    filename.substring(0,    filenamePrettyPrint.length());    	non-compiled	[CE]  ';'  expected	26	None	replace
66	[BUG]  [BUGGY]  filename  =  filenamePrefix.substring(0,  filenamePrettyPrint.length());  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filenamePrefix.substring(0,  filenamePrettyPrint.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filenamePrefix.substring(0,  filenamePrettyPrint.length());	  filename    =    filename.substring(0,    filenamePrettyPrint.length());    	non-compiled	[CE]  ';'  expected	26	None	replace
67	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.',  0));  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.',  0));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.lastIndexOf('.',  0));	  filename    =    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  ';'  expected	14	None	replace
68	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.',  1));  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.',  1));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.lastIndexOf('.',  1));	  filename    =    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  ';'  expected	14	None	replace
69	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.',  2));  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.',  2));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.lastIndexOf('.',  2));	  filename    =    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  ';'  expected	14	None	replace
70	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenameIndex.length()  -  1);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenameIndex.length()  -  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenameIndex.length()  -  1);	  filename    =    filename.substring(0,    filenamePosition.length()    -    1);    	non-compiled	[CE]  ';'  expected	8	None	replace
71	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  2);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  2);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.length()  2);	  filename    =    filename.substring(0,    filename.length()    2);    	non-compiled	[CE]  ';'  expected	30	None	replace
72	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  0);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  0);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.length()  0);	  filename    =    filename.substring(0,    filename.length()    2);    	non-compiled	[CE]  ';'  expected	30	None	replace
73	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.indexOf('.')+  1);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.indexOf('.')+  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.indexOf('.')+  1);	  filename    =    filename.substring(0,    filenamePrefix.indexOf('.'));    	non-compiled	[CE]  ';'  expected	37	None	replace
74	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.indexOf('.')+  1);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.indexOf('.')+  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.indexOf('.')+  1);	  filename    =    filename.substring(0,    filenamePrefix.indexOf('.'));    	non-compiled	[CE]  ';'  expected	37	None	replace
75	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenameIndex.length()  -  2);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenameIndex.length()  -  2);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenameIndex.length()  -  2);	  filename    =    filename.substring(0,    filenameIndex.length());    	non-compiled	[CE]  ';'  expected	28	None	replace
76	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenameIndex.length()  -  4);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenameIndex.length()  -  4);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenameIndex.length()  -  4);	  filename    =    filename.substring(0,    filenameIndex.length());    	non-compiled	[CE]  ';'  expected	28	None	replace
77	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.indexOf(SOURCENAME_PREFIX));  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.indexOf(SOURCENAME_PREFIX));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.indexOf(SOURCENAME_PREFIX));	  filename    =    filename.substring(0,    filename.indexOf(filenamePrefix));    	non-compiled	[CE]  ';'  expected	13	None	replace
78	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('/'));  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('/'));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.lastIndexOf('/'));	  filename    =    filename.substring(0,    filename.indexOf(filenamePrefix));    	non-compiled	[CE]  ';'  expected	13	None	replace
79	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenameName.length()  -  1);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenameName.length()  -  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenameName.length()  -  1);	  filename    =    filename.substring(0,    filenameName.length());    	non-compiled	[CE]  ';'  expected	27	None	replace
80	[BUG]  [BUGGY]  filename  =  filenameName.substring(0,  filenamePrefix.length());  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filenameName.substring(0,  filenamePrefix.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filenameName.substring(0,  filenamePrefix.length());	  filename    =    filename.substring(0,    filenameName.length());    	non-compiled	[CE]  ';'  expected	27	None	replace
81	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenameName.length()  -  2);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenameName.length()  -  2);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenameName.length()  -  2);	  filename    =    filename.substring(0,    filenameName.length());    	non-compiled	[CE]  ';'  expected	27	None	replace
82	[BUG]  [BUGGY]  filename  =   "   "  +  filename.substring(0,  filenamePrefix.length());  [CE]  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =   "   "  +  filename.substring(0,  filenamePrefix.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =   "   "  +  filename.substring(0,  filenamePrefix.length());	  filename    =   "   "    +    filename.substring(0,    filename.length());    	non-compiled	[CE]  	31	None	replace
83	[BUG]  [BUGGY]  filename  =   "   "  +  filename.substring(0,  filename.length()  -  1);  [CE]  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =   "   "  +  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =   "   "  +  filename.substring(0,  filename.length()  -  1);	  filename    =   "   "    +    filename.substring(0,    filename.length());    	non-compiled	[CE]  	31	None	replace
84	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrettyPrinter.length());  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrettyPrinter.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrettyPrinter.length());	  filename    =    filename.substring(0,    filenamePrefix.length()    -    4);    	non-compiled	[CE]  ';'  expected	11	None	replace
85	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.indexOf(filenamePrefix  +  1));  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.indexOf(filenamePrefix  +  1));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	String  currentFilename  =  filename.substring(0,  filename.indexOf(filenamePrefix  +  1));	  String    currentFilename    =    filename.substring(0,    filename.indexOf(currentFilenamePrefix));    	non-compiled	[CE]  ';'  expected	15	None	replace
86	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.lastIndexOf(currentFilenamePrefix));  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.lastIndexOf(currentFilenamePrefix));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	String  currentFilename  =  filename.substring(0,  filename.lastIndexOf(currentFilenamePrefix));	  String    currentFilename    =    filename.substring(0,    filename.indexOf(currentFilenamePrefix));    	non-compiled	[CE]  ';'  expected	15	None	replace
87	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.indexOf('_'));  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.indexOf('_'));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	String  currentFilename  =  filename.substring(0,  filename.indexOf('_'));	  String    currentFilename    =    filename.substring(0,    filename.indexOf(currentFilenamePrefix));    	non-compiled	[CE]  ';'  expected	15	None	replace
88	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePosition.length()  -  2);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePosition.length()  -  2);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePosition.length()  -  2);	  filename    =    filename.substring(0,    filenamePosition.length());    	non-compiled	[CE]  ';'  expected	9	None	replace
89	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.')+  2);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.')+  2);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.lastIndexOf('.')+  2);	  filename    =    filename.substring(0,    filename.lastIndexOf('.')+    1);    	non-compiled	[CE]  ';'  expected	24	None	replace
90	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.')+  3);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.')+  3);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.lastIndexOf('.')+  3);	  filename    =    filename.substring(0,    filename.lastIndexOf('.')+    1);    	non-compiled	[CE]  ';'  expected	24	None	replace
91	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.')+  1).trim();  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.')+  1).trim();  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.lastIndexOf('.')+  1).trim();	  filename    =    filename.substring(0,    filename.lastIndexOf('.')+    1);    	non-compiled	[CE]  ';'  expected	24	None	replace
92	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.')+  4);  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.')+  4);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.lastIndexOf('.')+  4);	  filename    =    filename.substring(0,    filename.lastIndexOf('.')+    1);    	non-compiled	[CE]  ';'  expected	24	None	replace
93	[BUG]  [BUGGY]  filename  =  filename.substring(1,  filename.length()));  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(1,  filename.length()));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(1,  filename.length()));	  filename    =    filename.substring(0,    filename.length()));    	non-compiled	[CE]  ';'  expected	21	None	replace
94	[BUG]  [BUGGY]  filename  +=  filename.substring(1,  filename.length());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  +=  filename.substring(1,  filename.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  +=  filename.substring(1,  filename.length());	  filename    +=    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
95	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.indexOf(filenamePrefix)+  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.indexOf(filenamePrefix)+  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	String  currentFilename  =  filename.substring(0,  filename.indexOf(filenamePrefix)+  1);	  String    currentFilename    =    filename.substring(0,    filename.indexOf(currentFilenamePrefix));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
96	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.indexOf(currentFilenamePrefix  +  1));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.indexOf(currentFilenamePrefix  +  1));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	String  currentFilename  =  filename.substring(0,  filename.indexOf(currentFilenamePrefix  +  1));	  String    currentFilename    =    filename.substring(0,    filename.indexOf(currentFilenamePrefix));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
97	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.indexOf(currentFilenamePrefix)+  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.indexOf(currentFilenamePrefix)+  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	String  currentFilename  =  filename.substring(0,  filename.indexOf(currentFilenamePrefix)+  1);	  String    currentFilename    =    filename.substring(0,    filename.indexOf(currentFilenamePrefix));    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
98	[BUG]  [BUGGY]  filename  =  DEFAULT_FILENAME_PREFIX  +  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  DEFAULT_FILENAME_PREFIX  +  filename.substring(0,  filename.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  DEFAULT_FILENAME_PREFIX  +  filename.substring(0,  filename.length());	  filename    =   "   "    +    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
99	[BUG]  [BUGGY]  filename  =   "/ "  +  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =   "/ "  +  filename.substring(0,  filename.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =   "/ "  +  filename.substring(0,  filename.length());	  filename    =   "   "    +    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
100	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.lastIndexOf( "/ "));  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.lastIndexOf( "/ "));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	String  currentFilename  =  filename.substring(0,  filename.lastIndexOf( "/ "));	  String    currentFilename    =    filename.substring(0,    filename.indexOf(currentFilename));    	non-compiled	[CE]  ';'  expected	16	None	replace
101	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	String  currentFilename  =  filename.substring(0,  filename.length()  -  1);	  String    currentFilename    =    filename.substring(0,    filename.indexOf(currentFilename));    	non-compiled	[CE]  ';'  expected	16	None	replace
102	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix  +  suffix);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix  +  suffix);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix  +  suffix);	  filename    =    filename.substring(0,    filenamePrefix);    	non-compiled	[CE]  ';'  expected	36	None	replace
103	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix  +  4);  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix  +  4);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix  +  4);	  filename    =    filename.substring(0,    filenamePrefix);    	non-compiled	[CE]  ';'  expected	36	None	replace
104	[BUG]  [BUGGY]  filename  =  files.substring(0,  filename.length());  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  files.substring(0,  filename.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  files.substring(0,  filename.length());	  filename    =    filename.substring(0,    filename.length()    +    4);    	non-compiled	[CE]  ';'  expected	3	None	replace
105	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrettyPrint.length()  -  4);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrettyPrint.length()  -  4);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrettyPrint.length()  -  4);	  filename    =    filename.substring(0,    filenamePrettyPrint.length());    	non-compiled	[CE]  ';'  expected	26	None	replace
106	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrettyPrint.length()  -  3);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrettyPrint.length()  -  3);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrettyPrint.length()  -  3);	  filename    =    filename.substring(0,    filenamePrettyPrint.length());    	non-compiled	[CE]  ';'  expected	26	None	replace
107	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  2)+  1;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  2)+  1;  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length()  -  2)+  1;	  filename    =    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  ';'  expected	5	None	replace
108	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenameSuffix.length());  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenameSuffix.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenameSuffix.length());	  filename    =    filename.substring(0,    filenamePrefix.length()    -    10);    	non-compiled	[CE]  ';'  expected	19	None	replace
109	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.'),  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.'),  filenamePrefix);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.lastIndexOf('.'),  filenamePrefix);	  filename    =    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
110	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.',  filenamePrefix));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.',  filenamePrefix));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.lastIndexOf('.',  filenamePrefix));	  filename    =    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
111	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePosition.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePosition.length()  -  4);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePosition.length()  -  4);	  filename    =    filename.substring(0,    filenamePosition.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
112	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePosition.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePosition.length()  -  3);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePosition.length()  -  3);	  filename    =    filename.substring(0,    filenamePosition.length());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
113	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenameIndex.length()  -  3);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenameIndex.length()  -  3);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenameIndex.length()  -  3);	  filename    =    filename.substring(0,    filenameIndex.length());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
114	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.indexOf( "__ "));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.indexOf( "__ "));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.indexOf( "__ "));	  filename    =    sourceName.substring(0,    filename.indexOf(filenamePrefix));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
115	[BUG]  [BUGGY]  filename  =  filenamePrefix.trim().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filenamePrefix.trim().toLowerCase();  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filenamePrefix.trim().toLowerCase();	  filename    =    filename.trim().toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
116	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  4));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  4));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.length()  -  4));	  filename    =    filename.substring(0,    filenamePrefix.length()));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
117	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  10  +  suffix.length()));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  10  +  suffix.length()));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.length()  -  10  +  suffix.length()));	  filename    =    filename.substring(0,    filenamePrefix.length()));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
118	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.')-  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.')-  1);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.lastIndexOf('.')-  1);	  filename    =    filename.substring(0,    filename.lastIndexOf('.')+    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
119	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.indexOf('/'));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.indexOf('/'));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.indexOf('/'));	  filename    =    filename.substring(0,    filenamePrefix.indexOf(filenamePrefix));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
120	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.indexOf('_'));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.indexOf('_'));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.indexOf('_'));	  filename    =    filename.substring(0,    filenamePrefix.indexOf(filenamePrefix));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
121	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.indexOf('.')+  2);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.indexOf('.')+  2);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.indexOf('.')+  2);	  filename    =    filename.substring(0,    filenamePrefix.indexOf('.'));    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
122	[BUG]  [BUGGY]  filename  = " "  +  filename.substring(0,  filenameName.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  = " "  +  filename.substring(0,  filenameName.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  = " "  +  filename.substring(0,  filenameName.length());	  filename    =    filename.substring(0,    filenameName.length());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
123	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix  +  10);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix  +  10);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix  +  10);	  filename    =    filename.substring(0,    filenamePrefix);    	non-compiled	[CE]  ';'  expected	36	None	replace
124	[BUG]  [BUGGY]  filename  =  filenamePrefix  +  filename.substring(0,  filename.length());  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filenamePrefix  +  filename.substring(0,  filename.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filenamePrefix  +  filename.substring(0,  filename.length());	  filename    =   "   "    +    filename.substring(0,    filename.length());    	non-compiled	[CE]  ';'  expected	31	None	replace
125	[BUG]  [BUGGY]  filename  = " "  +  filename.substring(0,  filename.length()));  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  = " "  +  filename.substring(0,  filename.length()));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  = " "  +  filename.substring(0,  filename.length()));	  filename    =    filename.substring(0,    filename.length()));    	non-compiled	[CE]  	21	None	replace
126	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.indexOf( "/ "));  [CE]  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.indexOf( "/ "));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.indexOf( "/ "));	  filename    =    sourceName.substring(0,    filename.indexOf(filenamePrefix));    	non-compiled	[CE]  	22	None	replace
127	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  2;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  2;  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.length()  -  2;	  filename    =    filename.substring(0,    filename.length();    	non-compiled	[CE]  ';'  expected	1	None	replace
128	[BUG]  [BUGGY]  filename,  filename.substring(0,  filename.length());  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename,  filename.substring(0,  filename.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename,  filename.substring(0,  filename.length());	  filename    =    filename.substring(0,    filename.length()    +    4);    	non-compiled	[CE]  ';'  expected	3	None	replace
129	[BUG]  [BUGGY]  filename  =  fileName.substring(0,  filename.length());  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  fileName.substring(0,  filename.length());  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  fileName.substring(0,  filename.length());	  filename    =    sourceName.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  ';'  expected	23	None	replace
130	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.',  len));  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.',  len));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.lastIndexOf('.',  len));	  filename    =    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  ';'  expected	14	None	replace
131	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.'  +  filenamePrefix));  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.'  +  filenamePrefix));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.lastIndexOf('.'  +  filenamePrefix));	  filename    =    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  ';'  expected	14	None	replace
132	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.',  prefix));  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.',  prefix));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.lastIndexOf('.',  prefix));	  filename    =    filename.substring(0,    filename.lastIndexOf('.'));    	non-compiled	[CE]  ';'  expected	14	None	replace
133	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.lastIndexOf(currentFilename));  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.lastIndexOf(currentFilename));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	String  currentFilename  =  filename.substring(0,  filename.lastIndexOf(currentFilename));	  String    currentFilename    =    filename.substring(0,    filename.indexOf(currentFilename));    	non-compiled	[CE]  ';'  expected	16	None	replace
134	[BUG]  [BUGGY]  String  currentFilename  =  filenamePrefix.substring(0,  filename.indexOf(currentFilename));  [CE]  ';'  expected  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  String  currentFilename  =  filenamePrefix.substring(0,  filename.indexOf(currentFilename));  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	String  currentFilename  =  filenamePrefix.substring(0,  filename.indexOf(currentFilename));	  String    currentFilename    =    filename.substring(0,    filename.indexOf(currentFilename));    	non-compiled	[CE]  ';'  expected	16	None	replace
135	[BUG]  [BUGGY]  filename  =  filename.trim().toLowerCase()  +  File.separator;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.trim().toLowerCase()  +  File.separator;  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.trim().toLowerCase()  +  File.separator;	  filename    =    filename.trim().toLowerCase();    	non-compiled	[CE]  ';'  expected	35	None	replace
136	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.')+  1,  filenamePrefix);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {      [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.')+  1,  filenamePrefix);  [BUGGY]      }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.lastIndexOf('.')+  1,  filenamePrefix);	  filename    =    filename.substring(0,    filename.lastIndexOf('.')+    1);    	non-compiled	[CE]  ';'  expected	24	None	replace
