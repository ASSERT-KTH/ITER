bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length();  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filename.length();  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length();	  filename    =    filename.substring(0,    filename.length()    -    4);    	non-compiled	[CE]  ';'  expected	5	None	replace
2	[BUG]  [BUGGY]  filename  = "# "  +  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  = "# "  +  filename.substring(0,  filename.length());  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  = "# "  +  filename.substring(0,  filename.length());	  filename    =    filename.substring(0,    filename.length()    -    4);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
3	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  +  4);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filename.length()  +  4);  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length()  +  4);	  filename    =    filename.substring(0,    filename.length()    -    4);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
4	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  +  1);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filename.length()  +  1);  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length()  +  1);	  filename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length())+  1;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filename.length())+  1;  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length())+  1;	  filename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  +  2);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filename.length()  +  2);  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length()  +  2);	  filename    =    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  +  1);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  +  1);  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.length()  +  1);	  filename    =    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
8	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePosition.length()  -  1);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filenamePosition.length()  -  1);  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePosition.length()  -  1);	  filename    =    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePosition.length());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filenamePosition.length());  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePosition.length());	  filename    =    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
10	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  2);  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.length()  -  2);	  filename    =    filename.substring(0,    filenamePrefix.length());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  4);  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.length()  -  4);	  filename    =    filename.substring(0,    filenamePrefix.length());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  3);  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.length()  -  3);	  filename    =    filename.substring(0,    filenamePrefix.length());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.indexOf(filenamePrefix));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filename.indexOf(filenamePrefix));  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.indexOf(filenamePrefix));	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.'));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.'));  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.lastIndexOf('.'));	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.indexOf(currentFilenamePrefix));  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.indexOf(currentFilenamePrefix));  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	String  currentFilename  =  filename.substring(0,  filename.indexOf(currentFilenamePrefix));	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.indexOf(currentFilename));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.indexOf(currentFilename));  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	String  currentFilename  =  filename.substring(0,  filename.indexOf(currentFilename));	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  filename  =  filenamePrefix.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filenamePrefix.substring(0,  filename.length());  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filenamePrefix.substring(0,  filename.length());	  filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
18	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  +  3);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filename.length()  +  3);  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length()  +  3);	  filename    =    filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  10);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()  -  10);  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.length()  -  10);	  filename    =    filename.substring(0,    filenamePrefix.length());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  filename  =  filename.substring(1,  filename.length());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(1,  filename.length());  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(1,  filename.length());	  filename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filename.length()));  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length()));	  filename    =    filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  filename  =  sourceName.substring(0,  filename.indexOf(filenamePrefix));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  sourceName.substring(0,  filename.indexOf(filenamePrefix));  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  sourceName.substring(0,  filename.indexOf(filenamePrefix));	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
23	[BUG]  [BUGGY]  filename  =  sourceName.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  sourceName.substring(0,  filename.length()  -  1);  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  sourceName.substring(0,  filename.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.')+  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filename.lastIndexOf('.')+  1);  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.lastIndexOf('.')+  1);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
25	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenameNamePrefix.length());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filenameNamePrefix.length());  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenameNamePrefix.length());	  filename    =    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
26	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrettyPrint.length());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filenamePrettyPrint.length());  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrettyPrint.length());	  filename    =    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
27	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenameName.length());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filenameName.length());  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenameName.length());	  filename    =    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
28	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenameIndex.length());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filenameIndex.length());  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenameIndex.length());	  filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
29	[BUG]  [BUGGY]  filename  +=  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  +=  filename.substring(0,  filename.length());  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  +=  filename.substring(0,  filename.length());	  filename    =    filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  2);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filename.length()  2);  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length()  2);	  filename    =    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
31	[BUG]  [BUGGY]  filename  = " "  +  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  = " "  +  filename.substring(0,  filename.length());  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  = " "  +  filename.substring(0,  filename.length());	  filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
32	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenameprefix.length());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filenameprefix.length());  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenameprefix.length());	  filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.lastIndexOf('.'));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.lastIndexOf('.'));  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.lastIndexOf('.'));	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
34	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.indexOf(filenamePrefix));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.indexOf(filenamePrefix));  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.indexOf(filenamePrefix));	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
35	[BUG]  [BUGGY]  filename  =  filename.trim().toLowerCase();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.trim().toLowerCase();  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.trim().toLowerCase();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
36	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filenamePrefix);  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
37	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.indexOf('.'));  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.indexOf('.'));  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.indexOf('.'));	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
38	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  1);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filename.length()  1);  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filename.length()  1);	  filename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
39	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()));  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {    [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length()));  [BUGGY]    }  return  filename;  }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	1.0	121	121	1	replace	filename  =  filename.substring(0,  filenamePrefix.length()));	  filename    =    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
