bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  returns  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  returns  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	returns  filename.substring(0,  filename.length()  -  1);	  returns    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  returns  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  returns  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	returns  filename.substring(0,  filename.length()  -  2);	  returns    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  returns  filename.substring(0,  filename.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  returns  filename.substring(0,  filename.length()  +  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	returns  filename.substring(0,  filename.length()  +  1);	  returns    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  returns  filename.substring(0,  filename.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  returns  filename.substring(0,  filename.length()  -  4);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	returns  filename.substring(0,  filename.length()  -  4);	  returns    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  returns  filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  returns  filename.substring(0,  filename.length()  -  3);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	returns  filename.substring(0,  filename.length()  -  3);	  returns    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
6	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  1));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  -  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length()  -  1));	  return    filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
7	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  2));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  -  2));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length()  -  2));	  return    filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
8	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  +  1));  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  +  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length()  +  1));	  return    filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
9	[BUG]  [BUGGY]  return  filename.substring(0,  filenamePrefix.length()));  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filenamePrefix.length()));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filenamePrefix.length()));	  return    filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
10	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  +  2));  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  +  2));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length()  +  2));	  return    filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
11	[BUG]  [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
12	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
13	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
14	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
15	[BUG]  [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFor(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
16	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
17	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
18	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  1)+  1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  -  1)+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length()  -  1)+  1;	  return    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
19	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  +  1)+  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  +  1)+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length()  +  1)+  1;	  return    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
20	[BUG]  [BUGGY]  return  filename.substring(0,  filenamePrefix.length())+  1;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filenamePrefix.length())+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filenamePrefix.length())+  1;	  return    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
21	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length())+  2;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length())+  2;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length())+  2;	  return    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
22	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  +  2)+  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  +  2)+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length()  +  2)+  1;	  return    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
23	[BUG]  [BUGGY]  return  normalizeSourceName(filename,  filename);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  normalizeSourceName(filename,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  normalizeSourceName(filename,  filename);	  return    normalizeSourceName(filename);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
24	[BUG]  [BUGGY]  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  normalizeSourceName(filename,  DEFAULT_FILENAME_PREFIX);	  return    normalizeSourceName(filename);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
25	[BUG]  [BUGGY]  return  normalizeSourceName(filename.substring(0,  filename.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  normalizeSourceName(filename.substring(0,  filename.length()  -  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  normalizeSourceName(filename.substring(0,  filename.length()  -  1));	  return    normalizeSourceName(filename);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
26	[BUG]  [BUGGY]  return  normalizeSourceName(filename,  filename.length());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  normalizeSourceName(filename,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  normalizeSourceName(filename,  filename.length());	  return    normalizeSourceName(filename);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
27	[BUG]  [BUGGY]  return  normalizeSourceName(filename.substring(0,  filename.length()  -  2));  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  normalizeSourceName(filename.substring(0,  filename.length()  -  2));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  normalizeSourceName(filename.substring(0,  filename.length()  -  2));	  return    normalizeSourceName(filename);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
28	[BUG]  [BUGGY]  return  normalizeSourceName(filename,  filename.substring(0,  filename.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  normalizeSourceName(filename,  filename.substring(0,  filename.length()  -  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  normalizeSourceName(filename,  filename.substring(0,  filename.length()  -  1));	  return    normalizeSourceName(filename);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
29	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  +  2);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  +  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length()  +  2);	  return    filename.substring(0,    filenameName.length());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
30	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
31	[BUG]  [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
32	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
33	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	for(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
34	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
35	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.getDefault()  +  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.getDefault()  +  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.getDefault()  +  1);	  return    filename.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
36	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.getDefault(),  true);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.getDefault(),  true);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.getDefault(),  true);	  return    filename.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
37	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.getDefault(),  false);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.getDefault(),  false);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.getDefault(),  false);	  return    filename.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
38	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.US);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.US);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.US);	  return    filename.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
39	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.getDefault()  +  File.separator);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.getDefault()  +  File.separator);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.getDefault()  +  File.separator);	  return    filename.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
40	[BUG]  [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase()  +  filename.substring(0,  filename.length());	  return    filename.toLowerCase()    +    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
41	[BUG]  [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filenamePrefix.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filenamePrefix.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase()  +  filename.substring(0,  filenamePrefix.length()  -  1);	  return    filename.toLowerCase()    +    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
42	[BUG]  [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filename.lastIndexOf('.')-  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filename.lastIndexOf('.')-  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase()  +  filename.substring(0,  filename.lastIndexOf('.')-  1);	  return    filename.toLowerCase()    +    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
43	[BUG]  [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filename.length();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filename.length();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase()  +  filename.substring(0,  filename.length();	  return    filename.toLowerCase()    +    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
44	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
45	[BUG]  [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFor(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
47	[BUG]  [BUGGY]  For(String  filename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  filename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  filename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  filename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  filename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  filename.substring(0,  filename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
48	[BUG]  [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFor(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
49	[BUG]  [BUGGY]  filename  =  currentFilename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  currentFilename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename  =  currentFilename.substring(0,  filename.length()  -  1);	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(0,  filename.length()  1))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(0,  filename.length()  1))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.substring(0,  filename.length()  1))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
51	[BUG]  [BUGGY]  null  scriptNodeCount  =  filename.lastIndexOf('.');  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  null  scriptNodeCount  =  filename.lastIndexOf('.');  compiler.reportCodeChange();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	null  scriptNodeCount  =  filename.lastIndexOf('.');  compiler.reportCodeChange();	  int    scriptNodeCount    =    filename.lastIndexOf('.');    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
52	[BUG]  [BUGGY]  null  scriptNodeCount  =  filename.lastIndexOf('.');  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  null  scriptNodeCount  =  filename.lastIndexOf('.');  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	null  scriptNodeCount  =  filename.lastIndexOf('.');	  int    scriptNodeCount    =    filename.lastIndexOf('.');    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
53	[BUG]  [BUGGY]  int  scriptNodeCount  =  filename.lastIndexOf('.',  0);  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  int  scriptNodeCount  =  filename.lastIndexOf('.',  0);  compiler.reportCodeChange();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	int  scriptNodeCount  =  filename.lastIndexOf('.',  0);  compiler.reportCodeChange();	  int    scriptNodeCount    =    filename.lastIndexOf('.');    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
54	[BUG]  [BUGGY]  String  scriptNodeCount  =  filename.lastIndexOf('.');  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  scriptNodeCount  =  filename.lastIndexOf('.');  compiler.reportCodeChange();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	String  scriptNodeCount  =  filename.lastIndexOf('.');  compiler.reportCodeChange();	  int    scriptNodeCount    =    filename.lastIndexOf('.');    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
55	[BUG]  [BUGGY]  int  scriptNodeCount  =  filename.lastIndexOf('.',  1);  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  int  scriptNodeCount  =  filename.lastIndexOf('.',  1);  compiler.reportCodeChange();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	int  scriptNodeCount  =  filename.lastIndexOf('.',  1);  compiler.reportCodeChange();	  int    scriptNodeCount    =    filename.lastIndexOf('.');    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
56	[BUG]  [BUGGY]  long  scriptNodeCount  =  filename.lastIndexOf('.');  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  long  scriptNodeCount  =  filename.lastIndexOf('.');  compiler.reportCodeChange();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	long  scriptNodeCount  =  filename.lastIndexOf('.');  compiler.reportCodeChange();	  int    scriptNodeCount    =    filename.lastIndexOf('.');    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
57	[BUG]  [BUGGY]  int  scriptNodeCount  =  filename.lastIndexOf('.',  2);  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  int  scriptNodeCount  =  filename.lastIndexOf('.',  2);  compiler.reportCodeChange();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	int  scriptNodeCount  =  filename.lastIndexOf('.',  2);  compiler.reportCodeChange();	  int    scriptNodeCount    =    filename.lastIndexOf('.');    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
58	[BUG]  [BUGGY]  pendingFor(String  currentFilename  :  filename.split( "   "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFor(String  currentFilename  :  filename.split( "   "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFor(String  currentFilename  :  filename.split( "   "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.split(   "   "))    {    currentFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.split( "/ "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.split( "/ "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.split( "/ "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.split(   "   "))    {    currentFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
60	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.split( "   "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.split( "   "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.split( "   "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.split(   "   "))    {    currentFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
61	[BUG]  [BUGGY]  pendingFor(String  currentFilename  :  filename.split( "/ "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFor(String  currentFilename  :  filename.split( "/ "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFor(String  currentFilename  :  filename.split( "/ "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.split(   "   "))    {    currentFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
62	[BUG]  [BUGGY]  pendingFor(String  currentFilename  :  filename.split( "n "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFor(String  currentFilename  :  filename.split( "n "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFor(String  currentFilename  :  filename.split( "n "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.split(   "   "))    {    currentFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
63	[BUG]  [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    expectedFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
64	[BUG]  [BUGGY]  pendingFilename  =  currentFilename.substring(currentFilename.length());  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFilename  =  currentFilename.substring(currentFilename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFilename  =  currentFilename.substring(currentFilename.length());	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    expectedFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
65	[BUG]  [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(currentFilename.length());  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(currentFilename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(currentFilename.length());	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    expectedFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
66	[BUG]  [BUGGY]  File  currentFilename  =  filename.substring(currentFilename.length());  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  File  currentFilename  =  filename.substring(currentFilename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	File  currentFilename  =  filename.substring(currentFilename.length());	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    expectedFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
67	[BUG]  [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    expectedFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
68	[BUG]  [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(filename.length());  }  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(filename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    expectedFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
69	[BUG]  [BUGGY]  return  filename.trim()  +  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  +  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.trim()  +  filename.substring(0,  filename.length());	  return    filename.trim()    +    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
70	[BUG]  [BUGGY]  return  filename,  filename.trim()  +  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename,  filename.trim()  +  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename,  filename.trim()  +  filename.substring(0,  filename.length());	  return    filename.trim()    +    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
71	[BUG]  [BUGGY]  return  filename.trim()  +  filename.substring(0,  filename.length();  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  +  filename.substring(0,  filename.length();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.trim()  +  filename.substring(0,  filename.length();	  return    filename.trim()    +    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
72	[BUG]  [BUGGY]  return  fileName.trim()  +  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  fileName.trim()  +  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  fileName.trim()  +  filename.substring(0,  filename.length());	  return    filename.trim()    +    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
73	[BUG]  [BUGGY]  Return  filename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  Return  filename  =  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	Return  filename  =  filename.substring(0,  filename.length());	  Return    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
74	[BUG]  [BUGGY]  String  filename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  filename  =  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	String  filename  =  filename.substring(0,  filename.length());	  Return    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
75	[BUG]  [BUGGY]  Return  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  Return  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	Return  filename.substring(0,  filename.length()  -  1);	  Return    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
76	[BUG]  [BUGGY]  Return  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  Return  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	Return  filename.substring(0,  filename.length()  -  2);	  Return    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
77	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  /  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  /  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length()  /  1);	  return    filename.substring(0,    filename.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(this.currentFilename,  0,  filename,  0,  filename.length());  currentFilename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(this.currentFilename,  0,  filename,  0,  filename.length());  currentFilename  =  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(this.currentFilename,  0,  filename,  0,  filename.length());  currentFilename  =  filename.substring(0,  filename.length());	  System.arraycopy(filename,    0,    this.currentFilename,    0,    filename.length());    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
79	[BUG]  [BUGGY]  System.arraycopy(this.currentFilename,  0,  filename,  0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(this.currentFilename,  0,  filename,  0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(this.currentFilename,  0,  filename,  0,  filename.length());	  System.arraycopy(filename,    0,    this.currentFilename,    0,    filename.length());    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
80	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  this.currentFilename,  0,  filename.length());  currentFilename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  this.currentFilename,  0,  filename.length());  currentFilename  =  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  this.currentFilename,  0,  filename.length());  currentFilename  =  filename.substring(0,  filename.length());	  System.arraycopy(filename,    0,    this.currentFilename,    0,    filename.length());    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
81	[BUG]  [BUGGY]  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	currentFilename  =  filename.substring(0,  filename.length()  -  1);	  System.arraycopy(filename,    0,    this.currentFilename,    0,    filename.length());    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
82	[BUG]  [BUGGY]  System.arraycopy(this.currentFilename,  0,  filename,  0,  filename.length());  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(this.currentFilename,  0,  filename,  0,  filename.length());  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(this.currentFilename,  0,  filename,  0,  filename.length());  currentFilename  =  filename.substring(0,  filename.length()  -  1);	  System.arraycopy(filename,    0,    this.currentFilename,    0,    filename.length());    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
83	[BUG]  [BUGGY]  Filename  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  Filename  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	Filename  currentFilename  =  filename.substring(0,  filename.length()  -  1);	  System.arraycopy(filename,    0,    this.currentFilename,    0,    filename.length());    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
84	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	String  currentFilename  =  filename.substring(0,  filename.length()  -  2);	  String    currentFilename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
85	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filenamePrefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	String  currentFilename  =  filename.substring(0,  filenamePrefix.length());	  String    currentFilename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
86	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  4);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	String  currentFilename  =  filename.substring(0,  filename.length()  -  4);	  String    currentFilename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
87	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  3);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	String  currentFilename  =  filename.substring(0,  filename.length()  -  3);	  String    currentFilename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
88	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  +  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	String  currentFilename  =  filename.substring(0,  filename.length()  +  1);	  String    currentFilename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
89	[BUG]  [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
90	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
91	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filenamePrefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename  =  filename.substring(0,  filenamePrefix.length());	  filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
92	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename  =  filename.substring(0,  filename.length()  -  1);	  filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
93	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename  =  filename.substring(0,  filename.length()  -  2);	  filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
94	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  4);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename  =  filename.substring(0,  filename.length()  -  4);	  filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
95	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  3);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename  =  filename.substring(0,  filename.length()  -  3);	  filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
96	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filename.length()  +  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename  =  filename.substring(0,  filename.length()  +  1);	  filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
97	[BUG]  [BUGGY]  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename.substring(0,  filename.length()  -  1);	  filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
98	[BUG]  [BUGGY]  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename.substring(0,  filename.length()  -  2);	  filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
99	[BUG]  [BUGGY]  filename.substring(0,  filename.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.substring(0,  filename.length()  +  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename.substring(0,  filename.length()  +  1);	  filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
100	[BUG]  [BUGGY]  filename.substring(0,  filename.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.substring(0,  filename.length()  -  4);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename.substring(0,  filename.length()  -  4);	  filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
101	[BUG]  [BUGGY]  filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.substring(0,  filename.length()  -  3);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename.substring(0,  filename.length()  -  3);	  filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
102	[BUG]  [BUGGY]  filename.append(filename.substring(0,  filename.length()  -  1));  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.append(filename.substring(0,  filename.length()  -  1));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename.append(filename.substring(0,  filename.length()  -  1));	  filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
103	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  2;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  -  2;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length()  -  2;	  return    filename.substring(0,    filename.length();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
104	[BUG]  [BUGGY]  return  filename.toUpperCase();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toUpperCase();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toUpperCase();	  return    filename.toLowerCase()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
105	[BUG]  [BUGGY]  return  filename,  filename.toLowerCase();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename,  filename.toLowerCase();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename,  filename.toLowerCase();	  return    filename.toLowerCase()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
106	[BUG]  [BUGGY]  return  filename.toLowerCase(),  1;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(),  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(),  1;	  return    filename.toLowerCase()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
107	[BUG]  [BUGGY]  return  filename.toLowerCase(0L);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(0L);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(0L);	  return    filename.toLowerCase()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
108	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  filename,  0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  filename,  0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  filename,  0,  filename.length());	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
109	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  currentFilename,  0,  filename.length()  -  1);	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
110	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  requiredFilename,  0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  requiredFilename,  0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  requiredFilename,  0,  filename.length());	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
111	[BUG]  [BUGGY]  System.arraycopy(currentFilename,  0,  filename,  0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(currentFilename,  0,  filename,  0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(currentFilename,  0,  filename,  0,  filename.length());	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  currentFilename,  0,  filename.length()  -  2);	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
113	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  filename,  0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  filename,  0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  currentFilename,  filename,  0,  filename.length());	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
114	[BUG]  [BUGGY]  result  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	result  =  filename.substring(0,  filename.length()  -  1);	  result    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
115	[BUG]  [BUGGY]  result  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	result  =  filename.substring(0,  filename.length()  -  2);	  result    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
116	[BUG]  [BUGGY]  result  =  filename.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result  =  filename.substring(0,  filenamePrefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	result  =  filename.substring(0,  filenamePrefix.length());	  result    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
117	[BUG]  [BUGGY]  result  =  filename.substring(0,  filename.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result  =  filename.substring(0,  filename.length()  -  4);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	result  =  filename.substring(0,  filename.length()  -  4);	  result    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
118	[BUG]  [BUGGY]  result  =  filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result  =  filename.substring(0,  filename.length()  -  3);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	result  =  filename.substring(0,  filename.length()  -  3);	  result    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
119	[BUG]  [BUGGY]  result  =  filename.substring(0,  filename.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result  =  filename.substring(0,  filename.length()  +  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	result  =  filename.substring(0,  filename.length()  +  1);	  result    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
120	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filenamePrefix.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filenamePrefix.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	String  currentFilename  =  filename.substring(0,  filenamePrefix.length()  -  1);	  String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
121	[BUG]  [BUGGY]  File  currentFilename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  File  currentFilename  =  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	File  currentFilename  =  filename.substring(0,  filename.length());	  String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
122	[BUG]  [BUGGY]  char  currentFilename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  char  currentFilename  =  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	char  currentFilename  =  filename.substring(0,  filename.length());	  String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
123	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  this.currentFilename,  0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  this.currentFilename,  0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  this.currentFilename,  0,  filename.length()  -  1);	  System.arraycopy(filename,    0,    this.currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
124	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  this.currentFilename,  filename,  0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  this.currentFilename,  filename,  0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  this.currentFilename,  filename,  0,  filename.length());	  System.arraycopy(filename,    0,    this.currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
125	[BUG]  [BUGGY]  System.arraycopy(this.currentFilename,  0,  filename,  0,  this.currentFilename.length());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(this.currentFilename,  0,  filename,  0,  this.currentFilename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(this.currentFilename,  0,  filename,  0,  this.currentFilename.length());	  System.arraycopy(filename,    0,    this.currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
126	[BUG]  [BUGGY]  System.arraycopy(sourceName,  0,  this.currentFilename,  0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(sourceName,  0,  this.currentFilename,  0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(sourceName,  0,  this.currentFilename,  0,  filename.length());	  System.arraycopy(filename,    0,    this.currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
127	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH,  0);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH,  0);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.ENGLISH,  0);	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
128	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH,  filename);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.ENGLISH,  filename);	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
129	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH,  true);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH,  true);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.ENGLISH,  true);	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
130	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH  +  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH  +  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.ENGLISH  +  1);	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
131	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH,  false);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH,  false);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.ENGLISH,  false);	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
132	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH  +  File.separatorChar  +  filename);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH  +  File.separatorChar  +  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.ENGLISH  +  File.separatorChar  +  filename);	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
133	[BUG]  [BUGGY]  return  filename.toUpperCase()  +  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toUpperCase()  +  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toUpperCase()  +  filename.substring(0,  filename.length());	  return    filename.toLowerCase()    +    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
134	[BUG]  [BUGGY]  return  filename,  filename.toLowerCase()  +  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename,  filename.toLowerCase()  +  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename,  filename.toLowerCase()  +  filename.substring(0,  filename.length());	  return    filename.toLowerCase()    +    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
135	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  requiredFilename,  0,  filename.length());  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  requiredFilename,  0,  filename.length());  compiler.reportCodeChange();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  requiredFilename,  0,  filename.length());  compiler.reportCodeChange();	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
136	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  expectedFilename,  0,  filename.length());  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  expectedFilename,  0,  filename.length());  compiler.reportCodeChange();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  expectedFilename,  0,  filename.length());  compiler.reportCodeChange();	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
137	[BUG]  [BUGGY]  while(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  while(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	while(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
138	[BUG]  [BUGGY]  return  filename.substring(0,  filenameIndex.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filenameIndex.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filenameIndex.length());	  return    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
139	[BUG]  [BUGGY]  return  filename.trim()  +  filename.substring(0,  filenamePrefix.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  +  filename.substring(0,  filenamePrefix.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.trim()  +  filename.substring(0,  filenamePrefix.length()  -  1);	  return    filename.trim()    +    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
140	[BUG]  [BUGGY]  return  filename,  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename,  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename,  filename.substring(0,  filename.length()  -  1);	  return    filename,    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
141	[BUG]  [BUGGY]  return  filename,  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename,  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename,  filename.substring(0,  filename.length()  -  2);	  return    filename,    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
142	[BUG]  [BUGGY]  return  filename,  filename.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename,  filename.substring(0,  filenamePrefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename,  filename.substring(0,  filenamePrefix.length());	  return    filename,    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
143	[BUG]  [BUGGY]  return  filename,  filename.substring(0,  filename.length()  +  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename,  filename.substring(0,  filename.length()  +  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename,  filename.substring(0,  filename.length()  +  1);	  return    filename,    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
144	[BUG]  [BUGGY]  return  filename,  filename.substring(0,  filename.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename,  filename.substring(0,  filename.length()  -  4);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename,  filename.substring(0,  filename.length()  -  4);	  return    filename,    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
145	[BUG]  [BUGGY]  return  filename,  filename.substring(0,  filename.length()  -  3);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename,  filename.substring(0,  filename.length()  -  3);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename,  filename.substring(0,  filename.length()  -  3);	  return    filename,    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
146	[BUG]  [BUGGY]  while(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  while(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	while(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
147	[BUG]  [BUGGY]  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
148	[BUG]  [BUGGY]  filename  =  currentFilename.substring(currentFilename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  currentFilename.substring(currentFilename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename  =  currentFilename.substring(currentFilename.length()  -  1);	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
149	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
150	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
151	[BUG]  [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
152	[BUG]  [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
153	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
154	[BUG]  [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
155	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
156	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
157	[BUG]  [BUGGY]  while(filename!=  null  &&  filename.indexOf(currentFilename)  ==  0)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  while(filename!=  null  &&  filename.indexOf(currentFilename)  ==  0)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	while(filename!=  null  &&  filename.indexOf(currentFilename)  ==  0)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
158	[BUG]  [BUGGY]  while(filename!=  null  &&  filename.indexOf(currentFilename)  ==  0)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  while(filename!=  null  &&  filename.indexOf(currentFilename)  ==  0)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	while(filename!=  null  &&  filename.indexOf(currentFilename)  ==  0)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
159	[BUG]  [BUGGY]  while(filename!=  null  &&  filename.indexOf(currentFilename)  ==  0)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  while(filename!=  null  &&  filename.indexOf(currentFilename)  ==  0)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	while(filename!=  null  &&  filename.indexOf(currentFilename)  ==  0)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
160	[BUG]  [BUGGY]  return  filename.toLowerCase()  -  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase()  -  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase()  -  1;	  return    filename.toLowerCase()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
161	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  filename,  0,  filename.length());  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  filename,  0,  filename.length());  compiler.reportCodeChange();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  filename,  0,  filename.length());  compiler.reportCodeChange();	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
162	[BUG]  [BUGGY]  System.arraycopy(currentFilename,  0,  filename,  0,  filename.length());  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(currentFilename,  0,  filename,  0,  filename.length());  compiler.reportCodeChange();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(currentFilename,  0,  filename,  0,  filename.length());  compiler.reportCodeChange();	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
163	[BUG]  [BUGGY]  return  fileName.toLowerCase()  +  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  fileName.toLowerCase()  +  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  fileName.toLowerCase()  +  filename.substring(0,  filename.length());	  return    filename.toLowerCase()    +    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
164	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()));  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	String  currentFilename  =  filename.substring(0,  filename.length()));	  String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
165	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  10);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename  =  filename.substring(0,  filename.length()  -  10);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename  =  filename.substring(0,  filename.length()  -  10);	  filename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
166	[BUG]  [BUGGY]  int  scriptNodeCount  =  filename.lastIndexOf('.',  DEFAULT_FILENAME_PREFIX);  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  int  scriptNodeCount  =  filename.lastIndexOf('.',  DEFAULT_FILENAME_PREFIX);  compiler.reportCodeChange();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	int  scriptNodeCount  =  filename.lastIndexOf('.',  DEFAULT_FILENAME_PREFIX);  compiler.reportCodeChange();	  int    scriptNodeCount    =    filename.lastIndexOf('.');    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
167	[BUG]  [BUGGY]  int  scriptNodeCount  =  filename.lastIndexOf('.',  -1);  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  int  scriptNodeCount  =  filename.lastIndexOf('.',  -1);  compiler.reportCodeChange();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	int  scriptNodeCount  =  filename.lastIndexOf('.',  -1);  compiler.reportCodeChange();	  int    scriptNodeCount    =    filename.lastIndexOf('.');    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
168	[BUG]  [BUGGY]  int  scriptNodeCount  =  filename.lastIndexOf('.',  4);  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  int  scriptNodeCount  =  filename.lastIndexOf('.',  4);  compiler.reportCodeChange();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	int  scriptNodeCount  =  filename.lastIndexOf('.',  4);  compiler.reportCodeChange();	  int    scriptNodeCount    =    filename.lastIndexOf('.');    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
169	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
170	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
171	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
172	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
173	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
174	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  filename,  0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  filename,  0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  filename,  0,  filename.length()  -  1);	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
175	[BUG]  [BUGGY]  return  filename.toLowerCase()  /  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase()  /  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase()  /  filename.substring(0,  filename.length()  -  1);	  return    filename.toLowerCase()    +    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
176	[BUG]  [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filename.length())+  1;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filename.length())+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase()  +  filename.substring(0,  filename.length())+  1;	  return    filename.toLowerCase()    +    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
177	[BUG]  [BUGGY]  result  =  filename.substring(0,  filename.length()  -  10);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  result  =  filename.substring(0,  filename.length()  -  10);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	result  =  filename.substring(0,  filename.length()  -  10);	  result    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
178	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
179	[BUG]  [BUGGY]  Return  filename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  Return  filename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	Return  filename  =  filename.substring(0,  filename.length()  -  1);	  Return    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
180	[BUG]  [BUGGY]  Return  filename  =  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  Return  filename  =  filename.substring(0,  filename.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	Return  filename  =  filename.substring(0,  filename.length()  -  2);	  Return    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
181	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  2)+  1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  -  2)+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length()  -  2)+  1;	  return    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
182	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length())+  3;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length())+  3;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length())+  3;	  return    filename.substring(0,    filename.length())+    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
183	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  10);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  10);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	String  currentFilename  =  filename.substring(0,  filename.length()  -  10);	  String    currentFilename    =    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
184	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH  +  File.separator);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH  +  File.separator);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.ENGLISH  +  File.separator);	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
185	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH  +  filename);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH  +  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.ENGLISH  +  filename);	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
186	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()).trim();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()).trim();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length()).trim();	  return    filename.substring(0,    filename.length()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
187	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  -  4));  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length()  -  4));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length()  -  4));	  return    filename.substring(0,    filename.length()));    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
188	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.getDefault(),  filename);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.getDefault(),  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.getDefault(),  filename);	  return    filename.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
189	[BUG]  [BUGGY]  return  normalizeSourceName(filename,  requiredFilename);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  normalizeSourceName(filename,  requiredFilename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  normalizeSourceName(filename,  requiredFilename);	  return    normalizeSourceName(filename);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
190	[BUG]  [BUGGY]  return  normalizeSourceName(filename,  sourceFilename);  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  normalizeSourceName(filename,  sourceFilename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  normalizeSourceName(filename,  sourceFilename);	  return    normalizeSourceName(filename);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
191	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  filename,  0,  this.currentFilename.length());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  filename,  0,  this.currentFilename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  filename,  0,  this.currentFilename.length());	  System.arraycopy(filename,    0,    this.currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
192	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length())+  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filename.length())+  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length())+  filename.substring(0,  filename.length());	  return    filename.trim()    +    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
193	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  expectedFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  expectedFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  expectedFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    expectedFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
194	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    expectedFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
195	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    expectedFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
196	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  expectedFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  expectedFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  expectedFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    expectedFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
197	[BUG]  [BUGGY]  aught(String.valueOf(currentFilename))  {  expectedFilename  =  filename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  aught(String.valueOf(currentFilename))  {  expectedFilename  =  filename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	aught(String.valueOf(currentFilename))  {  expectedFilename  =  filename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    expectedFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
198	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	for(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
199	[BUG]  [BUGGY]  return  filename.substring(0,  filenamePrefix.length()  -  2);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filenamePrefix.length()  -  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filenamePrefix.length()  -  2);	  return    filename.substring(0,    filenamePrefix.length());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
200	[BUG]  [BUGGY]  return  filename.substring(0,  filenamePrefix.length()  -  4);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filenamePrefix.length()  -  4);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filenamePrefix.length()  -  4);	  return    filename.substring(0,    filenamePrefix.length());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
201	[BUG]  [BUGGY]  while(filename!=  null)  {  for(String  currentFilename  :  filename.split( "   "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  while(filename!=  null)  {  for(String  currentFilename  :  filename.split( "   "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	while(filename!=  null)  {  for(String  currentFilename  :  filename.split( "   "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.split(   "   "))    {    currentFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
202	[BUG]  [BUGGY]  for(String  currentFilename  :  filename.split( "   "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  for(String  currentFilename  :  filename.split( "   "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	for(String  currentFilename  :  filename.split( "   "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.split(   "   "))    {    currentFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
203	[BUG]  [BUGGY]  while(filename!=  null)  {  for(String  currentFilename  :  filename.split( "/ "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  while(filename!=  null)  {  for(String  currentFilename  :  filename.split( "/ "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	while(filename!=  null)  {  for(String  currentFilename  :  filename.split( "/ "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.split(   "   "))    {    currentFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
204	[BUG]  [BUGGY]  return  files.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  files.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  files.substring(0,  filename.length()  -  1);	  return    files.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
205	[BUG]  [BUGGY]  return  filename.substring(0,  filenamePrettyPrint.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filenamePrettyPrint.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filenamePrettyPrint.length());	  return    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
206	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
207	[BUG]  [BUGGY]  filename.append('n');  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.append('n');  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename.append('n');	  filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
208	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
209	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()),  requiredFilename)  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()),  requiredFilename)  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.substring(currentFilename.length()),  requiredFilename)  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
210	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilenamePrefix.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilenamePrefix.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.substring(currentFilenamePrefix.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
211	[BUG]  [BUGGY]  rmândrmând(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  rmândrmând(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	rmândrmând(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
212	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
213	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(1,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(1,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.substring(1,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
214	[BUG]  [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFor(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
215	[BUG]  [BUGGY]  rmândrmând(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  rmândrmând(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	rmândrmând(String  currentFilename  :  filename.substring(0,  filename.length()))  {  requiredFilename  =  currentFilename.substring(0,  filename.length());	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(0,    filename.length()    -    1))    {    requiredFilename    =    currentFilename.substring(0,    filename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
216	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.getDefault())+  1;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.getDefault())+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.getDefault())+  1;	  return    filename.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
217	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.getDefault()).trim();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.getDefault()).trim();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.getDefault()).trim();	  return    filename.toLowerCase(Locale.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
218	[BUG]  [BUGGY]  rmândrmând(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  rmândrmând(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	rmândrmând(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
219	[BUG]  [BUGGY]  rmândrmând(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  rmândrmând(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	rmândrmând(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
220	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
221	[BUG]  [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFor(String  currentFilename  :  filename.substring(0,  currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
222	[BUG]  [BUGGY]  return  filename.substring(0,  filenameprefix.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.substring(0,  filenameprefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filenameprefix.length());	  return    filename.substring(0,    filenamePrefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
223	[BUG]  [BUGGY]  filename.append('/');  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  filename.append('/');  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename.append('/');	  filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
224	[BUG]  [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filename.indexOf('.')-  1);  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filename.indexOf('.')-  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase()  +  filename.substring(0,  filename.indexOf('.')-  1);	  return    filename.toLowerCase()    +    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
225	[BUG]  [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length();  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFor(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length();  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
226	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length();  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length();  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length();  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
227	[BUG]  [BUGGY]  expectedFilename  =  currentFilename.substring(currentFilename.length());  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  expectedFilename  =  currentFilename.substring(currentFilename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	expectedFilename  =  currentFilename.substring(currentFilename.length());	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    expectedFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
228	[BUG]  [BUGGY]  pendingFilename  =  expectedFilename.substring(currentFilename.length());  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFilename  =  expectedFilename.substring(currentFilename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFilename  =  expectedFilename.substring(currentFilename.length());	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    expectedFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
229	[BUG]  [BUGGY]  expectedFilename  =  filename.substring(currentFilename.length());  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  expectedFilename  =  filename.substring(currentFilename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	expectedFilename  =  filename.substring(currentFilename.length());	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    expectedFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
230	[BUG]  [BUGGY]  pendingFilename  =  currentFilename.substring(0,  currentFilename.length());  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFilename  =  currentFilename.substring(0,  currentFilename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFilename  =  currentFilename.substring(0,  currentFilename.length());	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    expectedFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
231	[BUG]  [BUGGY]  pendingFilename  =  filename.substring(currentFilename.length());  [CE]  illegal  start  of  expression  [FE]                                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  pendingFilename  =  filename.substring(currentFilename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	pendingFilename  =  filename.substring(currentFilename.length());	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    expectedFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
232	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingSourceName(filename,  requiredFilename,  filename);  [CE]  illegal  start  of  expression  [FE]                                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  aughtExceptionHandler.handleMissingSourceName(filename,  requiredFilename,  filename);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	aughtExceptionHandler.handleMissingSourceName(filename,  requiredFilename,  filename);	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    expectedFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
233	[BUG]  [BUGGY]  rmândrmând(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  rmândrmând(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	rmândrmând(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
234	[BUG]  [BUGGY]  returns  filename.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  returns  filename.substring(0,  filenamePrefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	returns  filename.substring(0,  filenamePrefix.length());	  returns    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
235	[BUG]  [BUGGY]  rmândrmând(String  currentFilename  :  filename.split( "/ "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  rmândrmând(String  currentFilename  :  filename.split( "/ "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	rmândrmând(String  currentFilename  :  filename.split( "/ "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.split(   "   "))    {    currentFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
236	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH).trim();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH).trim();  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.ENGLISH).trim();	  return    filename.toLowerCase(Locale.ENGLISH);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
237	[BUG]  [BUGGY]  return  filename.trim()  +  File.separatorChar  +  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  +  File.separatorChar  +  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.trim()  +  File.separatorChar  +  filename.substring(0,  filename.length());	  return    filename.trim()    +    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
238	[BUG]  [BUGGY]  return  filename.trim()  +  files.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  +  files.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.trim()  +  files.substring(0,  filename.length());	  return    filename.trim()    +    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
239	[BUG]  [BUGGY]  int  scriptNodeCount  =  filename.lastIndexOf('.',  1);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  int  scriptNodeCount  =  filename.lastIndexOf('.',  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	int  scriptNodeCount  =  filename.lastIndexOf('.',  1);	  int    scriptNodeCount    =    filename.lastIndexOf('.');    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
240	[BUG]  [BUGGY]  int  scriptNodeCount  =  filename.lastIndexOf('.',  DEFAULT_FILENAME_PREFIX);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  int  scriptNodeCount  =  filename.lastIndexOf('.',  DEFAULT_FILENAME_PREFIX);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	int  scriptNodeCount  =  filename.lastIndexOf('.',  DEFAULT_FILENAME_PREFIX);	  int    scriptNodeCount    =    filename.lastIndexOf('.');    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
241	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  filename.length(),  requiredFilename.length());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  filename.length(),  requiredFilename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  currentFilename,  filename.length(),  requiredFilename.length());	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
242	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  filenamePrefix,  0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  filenamePrefix,  0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  currentFilename,  filenamePrefix,  0,  filename.length());	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
243	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  filename,  1,  filename.length());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  filename,  1,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  filename,  1,  filename.length());	  System.arraycopy(filename,    0,    currentFilename,    0,    filename.length());    compiler.reportCodeChange();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
244	[BUG]  [BUGGY]  rmândrmând(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  rmândrmând(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	rmândrmând(String  currentFilename  :  filename.substring(currentFilename.length()  +  1))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	  if(filename    ==    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(0,    currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
245	[BUG]  [BUGGY]  return  filename,  filename.toLowerCase()  +  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename,  filename.toLowerCase()  +  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename,  filename.toLowerCase()  +  1;	  return    filename.toLowerCase()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
246	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  this.currentFilename,  filenamePrefix,  0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(filename,  0,  this.currentFilename,  filenamePrefix,  0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  this.currentFilename,  filenamePrefix,  0,  filename.length());	  System.arraycopy(filename,    0,    this.currentFilename,    0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
247	[BUG]  [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filename.lastIndexOf('.'));  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filename.lastIndexOf('.'));  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase()  +  filename.substring(0,  filename.lastIndexOf('.'));	  return    filename.toLowerCase()    +    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
248	[BUG]  [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filename.lastIndexOf('.')-  2);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filename.lastIndexOf('.')-  2);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase()  +  filename.substring(0,  filename.lastIndexOf('.')-  2);	  return    filename.toLowerCase()    +    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
249	[BUG]  [BUGGY]  System.arraycopy(this.currentFilename,  0,  currentFilename,  0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  System.arraycopy(this.currentFilename,  0,  currentFilename,  0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(this.currentFilename,  0,  currentFilename,  0,  filename.length());	  System.arraycopy(filename,    0,    this.currentFilename,    0,    filename.length());    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
250	[BUG]  [BUGGY]  currentFilename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  currentFilename  =  filename.substring(0,  filename.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	currentFilename  =  filename.substring(0,  filename.length());	  String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
251	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length())+  1;  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length())+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	String  currentFilename  =  filename.substring(0,  filename.length())+  1;	  String    currentFilename    =    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
252	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilenamePrefix.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilenamePrefix.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.substring(currentFilenamePrefix.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
253	[BUG]  [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()),  requiredFilename)  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  For(String  currentFilename  :  filename.substring(currentFilename.length()),  requiredFilename)  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	For(String  currentFilename  :  filename.substring(currentFilename.length()),  requiredFilename)  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	  if(filename!=    null)    {    for(String    currentFilename    :    filename.substring(currentFilename.length()))    {    requiredFilename    =    currentFilename.substring(currentFilename.length());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
254	[BUG]  [BUGGY]  return  filename.trim()  +  File.separatorChar  +  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  +  File.separatorChar  +  filename.substring(0,  filename.length()  -  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.trim()  +  File.separatorChar  +  filename.substring(0,  filename.length()  -  1);	  return    filename.trim()    +    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
255	[BUG]  [BUGGY]  return  filename.trim()  +  filename.substring(0,  filename.lastIndexOf('.')-  1);  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  +  filename.substring(0,  filename.lastIndexOf('.')-  1);  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.trim()  +  filename.substring(0,  filename.lastIndexOf('.')-  1);	  return    filename.trim()    +    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
256	[BUG]  [BUGGY]  return  filename.trim()  +  filename.substring(0,  filename.length())+  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  return  filename.trim()  +  filename.substring(0,  filename.length())+  1;  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.trim()  +  filename.substring(0,  filename.length())+  1;	  return    filename.trim()    +    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
257	[BUG]  [BUGGY]  Return  filename  =  filename.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }      [BUGGY]  Return  filename  =  filename.substring(0,  filenamePrefix.length());  [BUGGY]      }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	Return  filename  =  filename.substring(0,  filenamePrefix.length());	  Return    filename.substring(0,    filename.length());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
