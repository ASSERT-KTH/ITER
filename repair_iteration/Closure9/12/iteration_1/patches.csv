bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.substring(0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length());	  return    filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  return  filename,  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename,  filename.substring(0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename,  filename.substring(0,  filename.length());	  return    filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  result  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  result  =  filename.substring(0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	result  =  filename.substring(0,  filename.length());	  return    filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  returns  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  returns  filename.substring(0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	returns  filename.substring(0,  filename.length());	  return    filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  filename.substring(0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename.substring(0,  filename.length());	  return    filename.substring(0,    filename.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
6	[BUG]  [BUGGY]  filename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  filename  =  filename.substring(0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	filename  =  filename.substring(0,  filename.length());	  return    filename.substring(0,    filename.length()    -    10);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.substring(0,  filename.length();  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length();	  return    filename.substring(0,    filename.length()    -    4);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  filename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  filename.length()  -  1);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(0,  filename.length()  -  1))  {  requiredFilename  =  currentFilename.substring(0,  filename.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
9	[BUG]  [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.split( " "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.split( " "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename  ==  null)  {  for(String  currentFilename  :  filename.split( " "))  {  currentFilename  =  currentFilename.substring(0,  currentFilename.length());  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  int  scriptNodeCount  =  filename.lastIndexOf('.');  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  int  scriptNodeCount  =  filename.lastIndexOf('.');  compiler.reportCodeChange();  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	int  scriptNodeCount  =  filename.lastIndexOf('.');  compiler.reportCodeChange();	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename  ==  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  return  filename.trim()  +  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.trim()  +  filename.substring(0,  filename.length()  -  1);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.trim()  +  filename.substring(0,  filename.length()  -  1);	  return    filename.trim();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  return  filename.trim()  +  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.trim()  +  filename.substring(0,  filename.length()  -  2);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.trim()  +  filename.substring(0,  filename.length()  -  2);	  return    filename.trim();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	String  currentFilename  =  filename.substring(0,  filename.length()  -  1);	  return    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
16	[BUG]  [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  String  currentFilename  =  filename.substring(0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	String  currentFilename  =  filename.substring(0,  filename.length());	  return    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
17	[BUG]  [BUGGY]  return  filename.substring(0,  filenamePrefix.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.substring(0,  filenamePrefix.length()  -  1);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filenamePrefix.length()  -  1);	  return    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
18	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.toLowerCase(Locale.ENGLISH);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.ENGLISH);	  return    filename.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  return  filename.toLowerCase(Locale.getDefault());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.toLowerCase(Locale.getDefault());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase(Locale.getDefault());	  return    filename.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  return  filename.toLowerCase()  +  1;  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.toLowerCase()  +  1;  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase()  +  1;	  return    filename.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length());  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(currentFilename.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
23	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  currentFilename,  0,  filename.length());	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
24	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length());  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  requiredFilename  =  currentFilename.substring(0,  currentFilename.length()  -  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(currentFilename.length());  }  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(currentFilename.length());  }  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	if(filename!=  null)  {  for(String  currentFilename  :  filename.substring(currentFilename.length()))  {  expectedFilename  =  currentFilename.substring(currentFilename.length());  }	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
27	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()));  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.substring(0,  filename.length()));  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length()));	  return    filename.substring(0,    filename.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
28	[BUG]  [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filename.length()  -  1);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase()  +  filename.substring(0,  filename.length()  -  1);	  return    filename.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length()  +  1);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.substring(0,  filename.length()  +  1);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length()  +  1);	  return    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
30	[BUG]  [BUGGY]  return  filename.substring(0,  filename.length())+  1;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.substring(0,  filename.length())+  1;  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filename.length())+  1;	  return    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  Return  filename.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  Return  filename.substring(0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	Return  filename.substring(0,  filename.length());	  return    filename.substring(0,    filename.length()    -    10);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
32	[BUG]  [BUGGY]  return  fileName.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  fileName.substring(0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  fileName.substring(0,  filename.length());	  return    filename.substring(0,    filename.length()    -    10);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  return  filename.substring(0,  filenameName.length());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.substring(0,  filenameName.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filenameName.length());	  return    filename.substring(0,    filename.length()    -    4);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  return  files.substring(0,  filename.length());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  files.substring(0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  files.substring(0,  filename.length());	  return    filename.substring(0,    filename.length()    -    10);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
35	[BUG]  [BUGGY]  return  filename.substring(0,  filenamePrefix.length());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.substring(0,  filenamePrefix.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.substring(0,  filenamePrefix.length());	  return    filename.substring(0,    filename.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
36	[BUG]  [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filename.length()  -  2);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  filename.toLowerCase()  +  filename.substring(0,  filename.length()  -  2);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  filename.toLowerCase()  +  filename.substring(0,  filename.length()  -  2);	  return    filename.toLowerCase();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  return  normalizeSourceName(filename);  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  return  normalizeSourceName(filename);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	return  normalizeSourceName(filename);	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  0,  filename.length());  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  System.arraycopy(filename,  0,  currentFilename,  0,  filename.length());  compiler.reportCodeChange();  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  currentFilename,  0,  filename.length());  compiler.reportCodeChange();	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  this.currentFilename,  0,  filename.length());  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  System.arraycopy(filename,  0,  this.currentFilename,  0,  filename.length());  currentFilename  =  filename.substring(0,  filename.length()  -  1);  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  this.currentFilename,  0,  filename.length());  currentFilename  =  filename.substring(0,  filename.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  System.arraycopy(filename,  0,  this.currentFilename,  0,  filename.length());  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    private  String  normalizeSourceName(String  filename)  {    if  (filename.indexOf(filenamePrefix)  ==  0)  {  filename  =  filename.substring(filenamePrefix.length());  }    [BUGGY]  System.arraycopy(filename,  0,  this.currentFilename,  0,  filename.length());  [BUGGY]    }  [CLASS]  ProcessCommonJSModules  ProcessCommonJsModulesCallback  SuffixVarsCallback  [METHOD]  normalizeSourceName  [RETURN_TYPE]  String  String  filename  [VARIABLES]  AbstractCompiler  compiler  boolean  reportDependencies  Set  modulesWithExports  JSModule  module  String  DEFAULT_FILENAME_PREFIX  EXPORTS  MODULE_NAME_PREFIX  MODULE_NAME_SEPARATOR  MODULE_SLASH  currentFilename  filename  filenamePrefix  requiredFilename  suffix  int  scriptNodeCount  	projects/Closure9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java	0.4082482904638631	124	124	1	replace	System.arraycopy(filename,  0,  this.currentFilename,  0,  filename.length());	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
