bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  JsonParser[]  p  =  new  JsonParser[first.size()  ];  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  p  =  new  JsonParser[first.size()  ];  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  p  =  new  JsonParser[first.size()  ];	  JsonParser[]    p    =    new    JsonParser[_nextParser.size()    ];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
2	[BUG]  [BUGGY]  JsonParser[]  p  =  new  JsonParser[_nextParser.size()  +  1];  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  p  =  new  JsonParser[_nextParser.size()  +  1];  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  p  =  new  JsonParser[_nextParser.size()  +  1];	  JsonParser[]    p    =    new    JsonParser[_nextParser.size()    ];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(first  ==  null  ||!(second  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {	  if(first    ==    null    ||!(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
4	[BUG]  [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first  ==  null  ||!(second  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {	  if(first    ==    null    ||!(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  &&  first  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(first  ==  null  ||!(second  instanceof  JsonParserSequence  &&  first  instanceof  JsonParserSequence))  {	  if(first    ==    null    ||!(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
6	[BUG]  [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  &&  first  instanceof  JsonParserSequence))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  &&  first  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first  ==  null  ||!(second  instanceof  JsonParserSequence  &&  first  instanceof  JsonParserSequence))  {	  if(first    ==    null    ||!(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  ==  null  ||  second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(first  ==  null  ||  second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  if(first    ==    null    ||!(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
8	[BUG]  [BUGGY]  if(first  ==  null  ||  second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  ==  null  ||  second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first  ==  null  ||  second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  if(first    ==    null    ||!(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||(second    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	9	1	replace
10	[BUG]  [BUGGY]  if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||(second    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	9	1	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)&&(second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)&&(second  instanceof  JsonParserSequence))  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||(second    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	9	1	replace
12	[BUG]  [BUGGY]  if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)&&(second  instanceof  JsonParserSequence))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)&&(second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)&&(second  instanceof  JsonParserSequence))  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||(second    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	9	1	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
14	[BUG]  [BUGGY]  if(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(second  instanceof  JsonParserSequence)  {	  if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
16	[BUG]  [BUGGY]  if(second  instanceof  JsonParserSequence)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(second  instanceof  JsonParserSequence)  {	  if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
17	[BUG]  [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(1);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(1);	  ArrayList    <    JsonParser>    p    =    new    ArrayList    <    JsonParser>();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(0);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(0);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(0);	  ArrayList    <    JsonParser>    p    =    new    ArrayList    <    JsonParser>();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
19	[BUG]  [BUGGY]  List  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  List  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>();  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	List  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>();	  ArrayList    <    JsonParser>    p    =    new    ArrayList    <    JsonParser>();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
20	[BUG]  [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first    ==    null    ||!(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence))    {    if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {	  	non-compiled	[CE]  ';'  expected	27	None	add
21	[BUG]  [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first    ==    null    ||!(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence))    {    if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {	  	non-compiled	[CE]  ';'  expected	27	None	add
22	[BUG]  [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  if(first!=  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  if(first!=  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first    ==    null    ||!(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence))    {    if(first!=  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {	  	non-compiled	[CE]  ';'  expected	27	None	add
23	[BUG]  [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  If(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  If(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first    ==    null    ||!(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence))    {    If(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {	  	non-compiled	[CE]  ';'  expected	27	None	add
24	[BUG]  [BUGGY]  JsonParser[]  p  =(JsonParser[])_parsers.toArray(new  JsonParser[_nextParser  +  1]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  p  =(JsonParser[])_parsers.toArray(new  JsonParser[_nextParser  +  1]);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  p  =(JsonParser[])_parsers.toArray(new  JsonParser[_nextParser  +  1]);	  JsonParser[]    p    =(JsonParser[])_parsers.toArray(new    JsonParser[_nextParser]);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
25	[BUG]  [BUGGY]  JsonParser[]  p  =(JsonParser[])_parsers.toArray(new  JsonParser[_nextParser],  first);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  p  =(JsonParser[])_parsers.toArray(new  JsonParser[_nextParser],  first);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  p  =(JsonParser[])_parsers.toArray(new  JsonParser[_nextParser],  first);	  JsonParser[]    p    =(JsonParser[])_parsers.toArray(new    JsonParser[_nextParser]);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
26	[BUG]  [BUGGY]  JsonParser[]  p  =(JsonParser[])_parsers.toArray(new  JsonParser[_nextParser  -  1]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  p  =(JsonParser[])_parsers.toArray(new  JsonParser[_nextParser  -  1]);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  p  =(JsonParser[])_parsers.toArray(new  JsonParser[_nextParser  -  1]);	  JsonParser[]    p    =(JsonParser[])_parsers.toArray(new    JsonParser[_nextParser]);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  if(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	16	1	replace
28	[BUG]  [BUGGY]  if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  if(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	16	1	replace
29	[BUG]  [BUGGY]  If(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  If(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	If(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    If(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
30	[BUG]  [BUGGY]  if(second  instanceof  JsonParserSequence)  {  If(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(second  instanceof  JsonParserSequence)  {  If(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(second  instanceof  JsonParserSequence)  {  If(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    If(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
31	[BUG]  [BUGGY]  JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[first.size()  +  1]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[first.size()  +  1]);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[first.size()  +  1]);	  JsonParser[]    second    =    _parsers.values().toArray(new    JsonParser[first.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
32	[BUG]  [BUGGY]  JsonParser[]  second  =  _parsers.keySet().toArray(new  JsonParser[first.size()  ]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  second  =  _parsers.keySet().toArray(new  JsonParser[first.size()  ]);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =  _parsers.keySet().toArray(new  JsonParser[first.size()  ]);	  JsonParser[]    second    =    _parsers.values().toArray(new    JsonParser[first.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
33	[BUG]  [BUGGY]  JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[First.size()  ]);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[First.size()  ]);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[First.size()  ]);	  JsonParser[]    second    =    _parsers.values().toArray(new    JsonParser[first.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
34	[BUG]  [BUGGY]  JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[_nextParser.size()  ]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[_nextParser.size()  ]);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[_nextParser.size()  ]);	  JsonParser[]    second    =    _parsers.values().toArray(new    JsonParser[_parsers.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
35	[BUG]  [BUGGY]  JsonParser[]  second  =  _parsers.keySet().toArray(new  JsonParser[_parsers.size()  ]);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  second  =  _parsers.keySet().toArray(new  JsonParser[_parsers.size()  ]);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =  _parsers.keySet().toArray(new  JsonParser[_parsers.size()  ]);	  JsonParser[]    second    =    _parsers.values().toArray(new    JsonParser[_parsers.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
36	[BUG]  [BUGGY]  JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[_parsers.size()  +  1]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[_parsers.size()  +  1]);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[_parsers.size()  +  1]);	  JsonParser[]    second    =    _parsers.values().toArray(new    JsonParser[_parsers.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
37	[BUG]  [BUGGY]  int  _nextParser  =  first.getParserCount()  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  int  _nextParser  =  first.getParserCount()  -  1;  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	int  _nextParser  =  first.getParserCount()  -  1;	  int    _nextParser    =    first.getParserCount();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
38	[BUG]  [BUGGY]  int  _nextParser  =  first.getParserCount()  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  int  _nextParser  =  first.getParserCount()  +  1;  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	int  _nextParser  =  first.getParserCount()  +  1;	  int    _nextParser    =    first.getParserCount();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
39	[BUG]  [BUGGY]  int  _nextParser  =  first.getParserCount()  -  2;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  int  _nextParser  =  first.getParserCount()  -  2;  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	int  _nextParser  =  first.getParserCount()  -  2;	  int    _nextParser    =    first.getParserCount();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
40	[BUG]  [BUGGY]  if(First  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [CE]  cannot  find  symbol  First  [FE]              AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(First  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(First  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    if(First    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    	non-compiled	[CE]  cannot  find  symbol  First	22	None	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||    first    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
42	[BUG]  [BUGGY]  if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||    first    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
43	[BUG]  [BUGGY]  if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)    {    if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
44	[BUG]  [BUGGY]  if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  If(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  If(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)    {    If(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
45	[BUG]  [BUGGY]  if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  if(first  instanceof  JsonParserSequence  &&  first  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  if(first  instanceof  JsonParserSequence  &&  first  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)    {    if(first  instanceof  JsonParserSequence  &&  first  instanceof  JsonParserSequence)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
46	[BUG]  [BUGGY]  if(_parsers  ==  null)  {  [CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(_parsers  ==  null)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(_parsers  ==  null)  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    if(!(first    instanceof    JsonParserSequence    &&    first    instanceof    JsonParserSequence))    {    	non-compiled	[CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context	14	None	replace
47	[BUG]  [BUGGY]  if(_parsers!=  null  ||!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  [CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(_parsers!=  null  ||!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(_parsers!=  null  ||!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {	  if(_parsers    ==    null    ||!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    	non-compiled	[CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context	1	None	replace
48	[BUG]  [BUGGY]  ArrayList  <  JsonParser>  p  =  Lists.newArrayList(first);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  ArrayList  <  JsonParser>  p  =  Lists.newArrayList(first);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	ArrayList  <  JsonParser>  p  =  Lists.newArrayList(first);	  ArrayList    <    JsonParser>    p    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
49	[BUG]  [BUGGY]  List  <  JsonParser>  p  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  List  <  JsonParser>  p  =  Lists.newArrayList();  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	List  <  JsonParser>  p  =  Lists.newArrayList();	  ArrayList    <    JsonParser>    p    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
50	[BUG]  [BUGGY]  if(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  if(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  if(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence)    {    if(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
51	[BUG]  [BUGGY]  if(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  if(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  if(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence)    {    if(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
52	[BUG]  [BUGGY]  if(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  if(first  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  if(first  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence)    {    if(first  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
53	[BUG]  [BUGGY]  if(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  If(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  If(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence)    {    If(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
54	[BUG]  [BUGGY]  if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  If(!first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  If(!first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  If(!first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    If(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    	non-compiled	[CE]  ';'  expected	13	None	replace
55	[BUG]  [BUGGY]  if(second  instanceof  JsonParserSequence)  {  If(!first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(second  instanceof  JsonParserSequence)  {  If(!first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(second  instanceof  JsonParserSequence)  {  If(!first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    If(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    	non-compiled	[CE]  ';'  expected	13	None	replace
56	[BUG]  [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first    ==    null    ||!(second    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence))    {    if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {	  	non-compiled	[CE]  ';'  expected	2	None	add
57	[BUG]  [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  if(first!=  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  if(first!=  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first    ==    null    ||!(second    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence))    {    if(first!=  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {	  	non-compiled	[CE]  ';'  expected	2	None	add
58	[BUG]  [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  If(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  If(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first    ==    null    ||!(second    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence))    {    If(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {	  	non-compiled	[CE]  ';'  expected	2	None	add
59	[BUG]  [BUGGY]  JsonParser[]  second  =  _parsers.get(first,  second);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  second  =  _parsers.get(first,  second);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =  _parsers.get(first,  second);	  JsonParser[]    second    =    _parsers.get(first);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
60	[BUG]  [BUGGY]  JsonParser[]  second  =  parsers.get(first);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  second  =  parsers.get(first);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =  parsers.get(first);	  JsonParser[]    second    =    _parsers.get(first);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
61	[BUG]  [BUGGY]  JsonParser[]  second  =(JsonParser[])_parsers.get(first);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  second  =(JsonParser[])_parsers.get(first);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =(JsonParser[])_parsers.get(first);	  JsonParser[]    second    =    _parsers.get(first);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
62	[BUG]  [BUGGY]  JsonParser[]  second  =(_parsers!=  null)?  _parsers.get(first):  first;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  second  =(_parsers!=  null)?  _parsers.get(first):  first;  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =(_parsers!=  null)?  _parsers.get(first):  first;	  JsonParser[]    second    =    _parsers.get(first);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
63	[BUG]  [BUGGY]  if(_parsers  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  [CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(_parsers  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(_parsers  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {	  if(first    ==    null    ||!(second    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence))    {    	non-compiled	[CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context	3	None	replace
64	[BUG]  [BUGGY]  JsonParser[]  p  =  new  JsonParser[_parsers.size()  +  1];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  p  =  new  JsonParser[_parsers.size()  +  1];  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  p  =  new  JsonParser[_parsers.size()  +  1];	  JsonParser[]    p    =    new    JsonParser[_parsers.size()    ];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
65	[BUG]  [BUGGY]  JsonParser[]  p  =  new  JsonParser[_parsers.size()  -  1];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  p  =  new  JsonParser[_parsers.size()  -  1];  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  p  =  new  JsonParser[_parsers.size()  -  1];	  JsonParser[]    p    =    new    JsonParser[_parsers.size()    ];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
66	[BUG]  [BUGGY]  JsonParser[]  p  =  new  JsonParser[_parsers.size()  *  2];  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  p  =  new  JsonParser[_parsers.size()  *  2];  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  p  =  new  JsonParser[_parsers.size()  *  2];	  JsonParser[]    p    =    new    JsonParser[_parsers.size()    ];    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(first  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {	  if(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	18	1	replace
68	[BUG]  [BUGGY]  if(first  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {	  if(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	18	1	replace
69	[BUG]  [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||    first    instanceof    JsonParserSequence)    {    if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
70	[BUG]  [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  if(!(first  instanceof  JsonParserSequence  &&  first  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  if(!(first  instanceof  JsonParserSequence  &&  first  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||    first    instanceof    JsonParserSequence)    {    if(!(first  instanceof  JsonParserSequence  &&  first  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
71	[BUG]  [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  If(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  If(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||    first    instanceof    JsonParserSequence)    {    If(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
72	[BUG]  [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(_parsers.length,  second);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(_parsers.length,  second);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(_parsers.length,  second);	  ArrayList    <    JsonParser>    p    =    new    ArrayList    <    JsonParser>(_parsers.length);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
73	[BUG]  [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(_parsers.length  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(_parsers.length  +  1);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(_parsers.length  +  1);	  ArrayList    <    JsonParser>    p    =    new    ArrayList    <    JsonParser>(_parsers.length);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
74	[BUG]  [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(_parsers.length,  first);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(_parsers.length,  first);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(_parsers.length,  first);	  ArrayList    <    JsonParser>    p    =    new    ArrayList    <    JsonParser>(_parsers.length);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
75	[BUG]  [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(_parsers.size());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(_parsers.size());  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(_parsers.size());	  ArrayList    <    JsonParser>    p    =    new    ArrayList    <    JsonParser>(_parsers.length);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
76	[BUG]  [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||(second    instanceof    JsonParserSequence))    {    if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {	  	non-compiled	[CE]  ';'  expected	8	None	add
77	[BUG]  [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  If(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  If(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||(second    instanceof    JsonParserSequence))    {    If(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {	  	non-compiled	[CE]  ';'  expected	8	None	add
78	[BUG]  [BUGGY]  JsonParser[]  p  =  new  JsonParser[second.size()  ];  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  p  =  new  JsonParser[second.size()  ];  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  p  =  new  JsonParser[second.size()  ];	  JsonParser[]    p    =    new    JsonParser[_nextParser.size()    ];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
79	[BUG]  [BUGGY]  if(_parsers  ==  null  ||  first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  [CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(_parsers  ==  null  ||  first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(_parsers  ==  null  ||  first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {	  if(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)    {    	non-compiled	[CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context	16	None	replace
80	[BUG]  [BUGGY]  if(First  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  [CE]  cannot  find  symbol  First  [FE]              AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(First  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(First  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {	  if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    if(First    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    	non-compiled	[CE]  cannot  find  symbol  First	22	None	replace
81	[BUG]  [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(first);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(first);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(first);	  ArrayList    <    JsonParser>    p    =    new    ArrayList    <    JsonParser>();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
82	[BUG]  [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(2);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(2);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(2);	  ArrayList    <    JsonParser>    p    =    new    ArrayList    <    JsonParser>();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
83	[BUG]  [BUGGY]  ArrayList  <  JsonParser>  p  =  Lists.newArrayList(second);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  ArrayList  <  JsonParser>  p  =  Lists.newArrayList(second);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	ArrayList  <  JsonParser>  p  =  Lists.newArrayList(second);	  ArrayList    <    JsonParser>    p    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
84	[BUG]  [BUGGY]  ArrayList  <  JsonParser>  p  =  Lists.newLinkedList();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  ArrayList  <  JsonParser>  p  =  Lists.newLinkedList();  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	ArrayList  <  JsonParser>  p  =  Lists.newLinkedList();	  ArrayList    <    JsonParser>    p    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
85	[BUG]  [BUGGY]  if(!first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [CE]  bad  operand  type  JsonParser  for  unary  operator  '!'  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(!first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(!first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||(second    instanceof    JsonParserSequence))    {    	non-compiled	[CE]  bad  operand  type  JsonParser  for  unary  operator  '!'	9	None	replace
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)||  second  instanceof  JsonParserSequence)  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||    first    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
87	[BUG]  [BUGGY]  if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)||  second  instanceof  JsonParserSequence)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)||  second  instanceof  JsonParserSequence)  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||    first    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
88	[BUG]  [BUGGY]  if(first  ==  null  ||  second  ==  null  ||!second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [CE]  bad  operand  type  JsonParser  for  unary  operator  '!'  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  ==  null  ||  second  ==  null  ||!second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first  ==  null  ||  second  ==  null  ||!second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  if(first    ==    null    ||!(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence))    {    	non-compiled	[CE]  bad  operand  type  JsonParser  for  unary  operator  '!'	28	None	replace
89	[BUG]  [BUGGY]  JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[first.size()  -  1]);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[first.size()  -  1]);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[first.size()  -  1]);	  JsonParser[]    second    =    _parsers.values().toArray(new    JsonParser[first.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
90	[BUG]  [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  if(!(first  instanceof  JsonParserSequence  &&  first  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  if(!(first  instanceof  JsonParserSequence  &&  first  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||(second    instanceof    JsonParserSequence))    {    if(!(first  instanceof  JsonParserSequence  &&  first  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {	  	non-compiled	[CE]  ';'  expected	8	None	add
91	[BUG]  [BUGGY]  JsonParser[]  second  =  _parsers.get(first,  first);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  second  =  _parsers.get(first,  first);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =  _parsers.get(first,  first);	  JsonParser[]    second    =    _parsers.get(first);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(!(first  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(!(first  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {	  if(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	18	1	replace
93	[BUG]  [BUGGY]  if(!(first  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(!(first  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(!(first  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {	  if(second    instanceof    JsonParserSequence    ||    first    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	18	1	replace
94	[BUG]  [BUGGY]  JsonParser[]  second  =  _parsers.values().get(first);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  second  =  _parsers.values().get(first);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =  _parsers.values().get(first);	  JsonParser[]    second    =    _parsers.get(first);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
95	[BUG]  [BUGGY]  JsonParser[]  second  =  _parsers.get(second);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  second  =  _parsers.get(second);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =  _parsers.get(second);	  JsonParser[]    second    =    _parsers.get(first);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
96	[BUG]  [BUGGY]  If(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  If(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	If(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    If(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    	non-compiled	[CE]  ';'  expected	13	None	replace
97	[BUG]  [BUGGY]  JsonParser[]  p  =  new  JsonParser[_parsers.size()  ],  second);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  p  =  new  JsonParser[_parsers.size()  ],  second);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  p  =  new  JsonParser[_parsers.size()  ],  second);	  JsonParser[]    p    =    new    JsonParser[_parsers.size()    ];    	non-compiled	[CE]  ';'  expected	5	None	replace
98	[BUG]  [BUGGY]  JsonParser[]  second  =  _parsers.toArray(new  JsonParser[_nextParser.size()  ]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  second  =  _parsers.toArray(new  JsonParser[_nextParser.size()  ]);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =  _parsers.toArray(new  JsonParser[_nextParser.size()  ]);	  JsonParser[]    second    =    _parsers.values().toArray(new    JsonParser[_parsers.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
99	[BUG]  [BUGGY]  ArrayList  <  JsonParser>  p  =  Lists.newArrayList(_parsers);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  ArrayList  <  JsonParser>  p  =  Lists.newArrayList(_parsers);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	ArrayList  <  JsonParser>  p  =  Lists.newArrayList(_parsers);	  ArrayList    <    JsonParser>    p    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
100	[BUG]  [BUGGY]  ArrayList  <  JsonParser>  p  =  Lists.newArrayListWithCapacity(second);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  ArrayList  <  JsonParser>  p  =  Lists.newArrayListWithCapacity(second);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	ArrayList  <  JsonParser>  p  =  Lists.newArrayListWithCapacity(second);	  ArrayList    <    JsonParser>    p    =    Lists.newArrayList();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
101	[BUG]  [BUGGY]  if(_parsers  ==  null  ||!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  [CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(_parsers  ==  null  ||!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(_parsers  ==  null  ||!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||    first    instanceof    JsonParserSequence)    {    	non-compiled	[CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context	11	None	replace
102	[BUG]  [BUGGY]  if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  if(First  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  if(First  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)    {    if(First  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  ==  null  ||  first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(first  ==  null  ||  first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  if(first    ==    null    ||!(second    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	3	1	replace
104	[BUG]  [BUGGY]  if(first  ==  null  ||  first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  ==  null  ||  first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first  ==  null  ||  first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  if(first    ==    null    ||!(second    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	3	1	replace
105	[BUG]  [BUGGY]  JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[first.size()  ],  second);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[first.size()  ],  second);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[first.size()  ],  second);	  JsonParser[]    second    =    _parsers.values().toArray(new    JsonParser[first.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
106	[BUG]  [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(_parsers);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(_parsers);  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(_parsers);	  ArrayList    <    JsonParser>    p    =    new    ArrayList    <    JsonParser>();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(first  instanceof  JsonParserSequence)  {	  if(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	16	1	replace
108	[BUG]  [BUGGY]  if(first  instanceof  JsonParserSequence)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first  instanceof  JsonParserSequence)  {	  if(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	16	1	replace
109	[BUG]  [BUGGY]  if(_parsers  ==  null  ||!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  [CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context  [FE]    AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(_parsers  ==  null  ||!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(_parsers  ==  null  ||!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||(second    instanceof    JsonParserSequence))    {    	non-compiled	[CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context	9	None	replace
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||(second    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	9	1	replace
111	[BUG]  [BUGGY]  if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence)||(second    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	9	1	replace
112	[BUG]  [BUGGY]  JsonParser[]  p  =  new  JsonParser[16.size()  ];  [CE]  ']'  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  JsonParser[]  p  =  new  JsonParser[16.size()  ];  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  p  =  new  JsonParser[16.size()  ];	  JsonParser[]    p    =    new    JsonParser[_nextParser.size()    ];    	non-compiled	[CE]  ']'  expected	7	None	replace
113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  ==  null  ||!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(first  ==  null  ||!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {	  if(_parsers    ==    null    ||!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	1	1	replace
114	[BUG]  [BUGGY]  if(first  ==  null  ||!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(first  ==  null  ||!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first  ==  null  ||!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {	  if(_parsers    ==    null    ||!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	1	1	replace
115	[BUG]  [BUGGY]  if(_nextParser  ==  null)  {  [CE]  non-static  variable  _nextParser  cannot  be  referenced  from  a  static  context  [FE]        AssertionFailedError      [CONTEXT]      public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {      [BUGGY]  if(_nextParser  ==  null)  {  [BUGGY]        return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(_nextParser  ==  null)  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    	non-compiled	[CE]  non-static  variable  _nextParser  cannot  be  referenced  from  a  static  context	12	None	replace
