bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_parsers  ==  null  ||!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  [CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context  [FE]        AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(_parsers  ==  null  ||!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(_parsers  ==  null  ||!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {	  if(_parsers    ==    null    ||!(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence))    {    	non-compiled	[CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context	6	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {	  if(_parsers    ==    null    ||!(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
3	[BUG]  [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {	  if(_parsers    ==    null    ||!(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
4	[BUG]  [BUGGY]  JsonParser[]  p  =(JsonParser[])_parsers.toArray(new  JsonParser[_nextParser]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  JsonParser[]  p  =(JsonParser[])_parsers.toArray(new  JsonParser[_nextParser]);  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  p  =(JsonParser[])_parsers.toArray(new  JsonParser[_nextParser]);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  JsonParser[]  p  =  new  JsonParser[_parsers.size()  ];  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  JsonParser[]  p  =  new  JsonParser[_parsers.size()  ];  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  p  =  new  JsonParser[_parsers.size()  ];	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
6	[BUG]  [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>();  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
7	[BUG]  [BUGGY]  JsonParser[]  p  =  new  JsonParser[_nextParser.size()  ];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  JsonParser[]  p  =  new  JsonParser[_nextParser.size()  ];  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  p  =  new  JsonParser[_nextParser.size()  ];	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
9	[BUG]  [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||(second  instanceof  JsonParserSequence))  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
11	[BUG]  [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)||  first  instanceof  JsonParserSequence)  {	  if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
12	[BUG]  [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {	  	non-compiled	[CE]  ';'  expected	3	None	add
13	[BUG]  [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  If(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  If(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    If(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {	  	non-compiled	[CE]  ';'  expected	3	None	add
14	[BUG]  [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  if(!(first  instanceof  JsonParserSequence  &&  first  instanceof  JsonParserSequence))  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(!(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence))  {  if(!(first  instanceof  JsonParserSequence  &&  first  instanceof  JsonParserSequence))  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(!(first    instanceof    JsonParserSequence    &&    second    instanceof    JsonParserSequence))    {    if(!(first  instanceof  JsonParserSequence  &&  first  instanceof  JsonParserSequence))  {	  	non-compiled	[CE]  ';'  expected	3	None	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {	  if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
16	[BUG]  [BUGGY]  if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first  instanceof  JsonParserSequence  &&  second  instanceof  JsonParserSequence)  {	  if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {	  if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
18	[BUG]  [BUGGY]  if(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {	  if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
19	[BUG]  [BUGGY]  if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
20	[BUG]  [BUGGY]  if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  If(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  If(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    If(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
21	[BUG]  [BUGGY]  if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  if(first  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  if(first  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    if(first  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
22	[BUG]  [BUGGY]  if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  if(First  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  if(First  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence)    {    if(First  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
23	[BUG]  [BUGGY]  JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[_parsers.size()  ]);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[_parsers.size()  ]);  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[_parsers.size()  ]);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
24	[BUG]  [BUGGY]  JsonParser[]  second  =  _parsers.get(first);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  JsonParser[]  second  =  _parsers.get(first);  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =  _parsers.get(first);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[first.size()  ]);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[first.size()  ]);  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	JsonParser[]  second  =  _parsers.values().toArray(new  JsonParser[first.size()  ]);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  int  _nextParser  =  first.getParserCount();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  int  _nextParser  =  first.getParserCount();  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	int  _nextParser  =  first.getParserCount();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	add	if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {	  if(_parsers    ==    null    ||!(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
28	[BUG]  [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	if(first  ==  null  ||!(second  instanceof  JsonParserSequence  ||  first  instanceof  JsonParserSequence))  {	  if(_parsers    ==    null    ||!(first    instanceof    JsonParserSequence    ||    second    instanceof    JsonParserSequence))    {    	compilable	  [FE]  AssertionFailedError  	6	1	replace
29	[BUG]  [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(_parsers.length);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(_parsers.length);  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	ArrayList  <  JsonParser>  p  =  new  ArrayList  <  JsonParser>(_parsers.length);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
30	[BUG]  [BUGGY]  ArrayList  <  JsonParser>  p  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {    [BUGGY]  ArrayList  <  JsonParser>  p  =  Lists.newArrayList();  [BUGGY]      return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  });  }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	60	60	1	replace	ArrayList  <  JsonParser>  p  =  Lists.newArrayList();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
