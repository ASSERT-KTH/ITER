bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  _parsers.length  }  );  [CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context  [FE]        AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  _parsers.length  }  );  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  _parsers.length  }  );	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second,    _nextParser    }    );    	non-compiled	[CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context	1	None	replace
2	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  createFlattened(first,  second  }  );  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  createFlattened(first,  second  }  );  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  createFlattened(first,  second  }  );	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second,    _nextParser    }    );    	non-compiled	[CE]  ')'  expected	1	None	replace
3	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  _parsers.size()  }  );  [CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  _parsers.size()  }  );  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  _parsers.size()  }  );	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second,    _nextParser    }    );    	non-compiled	[CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context	1	None	replace
4	[BUG]  [BUGGY]  ((  JsonParserSequence)second).addFlattenedActiveParsers(p);  [CE]  cannot  find  symbol  p  [FE]    AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  ((  JsonParserSequence)second).addFlattenedActiveParsers(p);  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	((  JsonParserSequence)second).addFlattenedActiveParsers(p);	      	non-compiled	[CE]  cannot  find  symbol  p	5	None	replace
5	[BUG]  [BUGGY]  ((  JsonParserSequence)first).addFlattenedActiveParsers(p);  [CE]  cannot  find  symbol  p  [FE]      AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  ((  JsonParserSequence)first).addFlattenedActiveParsers(p);  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	((  JsonParserSequence)first).addFlattenedActiveParsers(p);	      	non-compiled	[CE]  cannot  find  symbol  p	5	None	replace
6	[BUG]  [BUGGY]  ((  JsonParserSequence)second).setFlattenedActiveParsers(p);  [CE]  cannot  find  symbol  p  [FE]        AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  ((  JsonParserSequence)second).setFlattenedActiveParsers(p);  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	((  JsonParserSequence)second).setFlattenedActiveParsers(p);	      	non-compiled	[CE]  cannot  find  symbol  p	5	None	replace
7	[BUG]  [BUGGY]  _parsers.add(first);  [CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  _parsers.add(first);  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	_parsers.add(first);	      	non-compiled	[CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context	5	None	replace
8	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  },  _parsers.length);  [CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context  [FE]          AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  },  _parsers.length);  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  },  _parsers.length);	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second    },    _nextParser);    	non-compiled	[CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context	2	None	replace
9	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  },  _parsers.size());  [CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context  [FE]            AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  },  _parsers.size());  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  },  _parsers.size());	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second    },    _nextParser);    	non-compiled	[CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context	2	None	replace
10	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  },  createFlattened(first,  second));  [CE]  constructor  JsonParserSequence  in  class  JsonParserSequence  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  },  createFlattened(first,  second));  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  },  createFlattened(first,  second));	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second    },    _nextParser);    	non-compiled	[CE]  constructor  JsonParserSequence  in  class  JsonParserSequence  cannot  be  applied  to  given  types;	2	None	replace
11	[BUG]  [BUGGY]      return  createFlattened(first,  second);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]      return  createFlattened(first,  second);  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	        return  createFlattened(first,  second);	  	non-compiled	[CE]  unreachable  statement	4	None	add
12	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  _parsers);  [CE]  '}'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  _parsers);  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  _parsers);	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second    ==    _parsers);    	non-compiled	[CE]  '}'  expected	6	None	replace
13	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second1,  _parsers);  [CE]  '}'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second1,  _parsers);  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second1,  _parsers);	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second    ==    _parsers);    	non-compiled	[CE]  '}'  expected	6	None	replace
14	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  },  createFlattened);  [CE]  cannot  find  symbol  createFlattened  [FE]            AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  },  createFlattened);  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  },  createFlattened);	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second    },    _parsers);    	non-compiled	[CE]  cannot  find  symbol  createFlattened	3	None	replace
15	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  },  null);  [CE]  constructor  JsonParserSequence  in  class  JsonParserSequence  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  },  null);  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  },  null);	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second    },    _parsers);    	non-compiled	[CE]  constructor  JsonParserSequence  in  class  JsonParserSequence  cannot  be  applied  to  given  types;	3	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  null  }  );  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	add	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  null  }  );	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second,    _parsers    }    );    	compilable	  [FE]  AssertionFailedError  	7	2	replace
17	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  null  }  );  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  null  }  );  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  null  }  );	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second,    _parsers    }    );    	compilable	  [FE]  AssertionFailedError  	7	2	replace
18	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  }  _parsers);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  }  _parsers);  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  }  _parsers);	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second    ==    _parsers);    	non-compiled	[CE]  ')'  expected	6	None	replace
19	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  _nextParser  ==  _parsers);  [CE]  '}'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  _nextParser  ==  _parsers);  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  _nextParser  ==  _parsers);	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second    ==    _parsers);    	non-compiled	[CE]  '}'  expected	6	None	replace
20	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  false,  null  }  );  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  false,  null  }  );  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  false,  null  }  );	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second,    _parsers    }    );    	non-compiled	[CE]  incompatible  types	7	None	replace
21	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  createFlattened  }  );  [CE]  cannot  find  symbol  createFlattened  [FE]          AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  createFlattened  }  );  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  createFlattened  }  );	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second,    _parsers    }    );    	non-compiled	[CE]  cannot  find  symbol  createFlattened	7	None	replace
22	[BUG]  [BUGGY]      JsonParser[]  p  =  new  JsonParserSequence[_parsers.size()  ];  [CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context  [FE]    AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]      JsonParser[]  p  =  new  JsonParserSequence[_parsers.size()  ];  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	        JsonParser[]  p  =  new  JsonParserSequence[_parsers.size()  ];	  	non-compiled	[CE]  non-static  variable  _parsers  cannot  be  referenced  from  a  static  context	4	None	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  first  }  );  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	add	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  first  }  );	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second,    _nextParser    }    );    	compilable	  [FE]  AssertionFailedError  	1	2	replace
24	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  first  }  );  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  first  }  );  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  first  }  );	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second,    _nextParser    }    );    	compilable	  [FE]  AssertionFailedError  	1	2	replace
25	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  },  parsers);  [CE]  cannot  find  symbol  parsers  [FE]            AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  },  parsers);  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  },  parsers);	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second    },    _parsers);    	non-compiled	[CE]  cannot  find  symbol  parsers	3	None	replace
26	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  ==  _parsers,  second);  [CE]  '}'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  ==  _parsers,  second);  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  ==  _parsers,  second);	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second    ==    _parsers);    	non-compiled	[CE]  '}'  expected	6	None	replace
27	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  ==  _nextParser,  _parsers);  [CE]  '}'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  ==  _nextParser,  _parsers);  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second  ==  _nextParser,  _parsers);	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second    ==    _parsers);    	non-compiled	[CE]  '}'  expected	6	None	replace
28	[BUG]  [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  int_nextParser  }  );  [CE]  cannot  find  symbol  int_nextParser  [FE]        AssertionFailedError    [CONTEXT]    public  static  JsonParserSequence  createFlattened(JsonParser  first,  JsonParser  second)  {  if  (!(first  instanceof  JsonParserSequence  ||  second  instanceof  JsonParserSequence))  {      [BUGGY]  return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  int_nextParser  }  );  [BUGGY]    }  ArrayList<JsonParser>  p  =  new  ArrayList<JsonParser>();  if  (first  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  first).addFlattenedActiveParsers(p);  }  else  {  p.add(first);  }  if  (second  instanceof  JsonParserSequence)  {  ((JsonParserSequence)  second).addFlattenedActiveParsers(p);  }  else  {  [CLASS]  JsonParserSequence  [METHOD]  createFlattened  [RETURN_TYPE]  JsonParserSequence  JsonParser  first  JsonParser  second  [VARIABLES]  ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  	projects/JacksonCore16/src/main/java/com/fasterxml/jackson/core/util/JsonParserSequence.java	0.7071067811865475	62	62	1	replace	return  new  JsonParserSequence(new  JsonParser[]  {  first,  second,  int_nextParser  }  );	  return    new    JsonParserSequence(new    JsonParser[]    {    first,    second,    _parsers    }    );    	non-compiled	[CE]  cannot  find  symbol  int_nextParser	7	None	replace
