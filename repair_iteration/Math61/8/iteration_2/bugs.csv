bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(0.0,  0.0,  DEFAULT_EPSILON,  maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(0.0,  0.0,  DEFAULT_EPSILON,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(0.0,  0.0,  DEFAULT_EPSILON,  maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(0.0,    0.0,    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	5	None	replace
2	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(0.0,  1.0,  epsilon,  maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                  MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(0.0,  1.0,  epsilon,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(0.0,  1.0,  epsilon,  maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(0.0,    0.0,    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	5	None	replace
3	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(0.0,  0.0,  epsilon,  maxIterations,  DEFAULT_EPSILON);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(0.0,  0.0,  epsilon,  maxIterations,  DEFAULT_EPSILON);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(0.0,  0.0,  epsilon,  maxIterations,  DEFAULT_EPSILON);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(0.0,    0.0,    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	5	None	replace
4	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(p,  FastMath.sqrt(deFAULT_EPSILON));  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(p,  FastMath.sqrt(deFAULT_EPSILON));  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(p,  FastMath.sqrt(deFAULT_EPSILON));	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p));    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	13	None	replace
5	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(p,  FastMath.sqrt(p));  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(p,  FastMath.sqrt(p));  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(p,  FastMath.sqrt(p));	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p));    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	13	None	replace
6	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(epsilon));  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(epsilon));  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(epsilon));	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p));    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	13	None	replace
7	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(deFAULT_MAX_ITERATIONS));  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                  MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(deFAULT_MAX_ITERATIONS));  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(deFAULT_MAX_ITERATIONS));	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p));    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	13	None	replace
8	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this,  DEFAULT_EPSILON,  epsilon,  maxIterations,  mean);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this,  DEFAULT_EPSILON,  epsilon,  maxIterations,  mean);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this,  DEFAULT_EPSILON,  epsilon,  maxIterations,  mean);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this,    DEFAULT_EPSILON,    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	2	None	replace
9	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this,  DEFAULT_EPSILON,  p,  maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this,  DEFAULT_EPSILON,  p,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this,  DEFAULT_EPSILON,  p,  maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this,    DEFAULT_EPSILON,    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	2	None	replace
10	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this,  DEFAULT_EPSILON,  epsilon,  MAX_ITERATIONS);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this,  DEFAULT_EPSILON,  epsilon,  MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this,  DEFAULT_EPSILON,  epsilon,  MAX_ITERATIONS);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this,    DEFAULT_EPSILON,    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	2	None	replace
11	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  epsilon,  maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  epsilon,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  epsilon,  maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this.epsilon,    DEFAULT_EPSILON,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	4	None	replace
12	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DEFAULT_EPSILON,  p,  maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DEFAULT_EPSILON,  p,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DEFAULT_EPSILON,  p,  maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this.epsilon,    DEFAULT_EPSILON,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	4	None	replace
13	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(epsilon,  DEFAULT_EPSILON,  maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                  MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(epsilon,  DEFAULT_EPSILON,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(epsilon,  DEFAULT_EPSILON,  maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this.epsilon,    DEFAULT_EPSILON,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	4	None	replace
14	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_MAX_ITERATIONS,  maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_MAX_ITERATIONS,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_MAX_ITERATIONS,  maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this.epsilon,    DEFAULT_EPSILON,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	4	None	replace
15	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON  /  DEFAULT_MAX_ITERATIONS;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean  =  DEFAULT_EPSILON  /  DEFAULT_MAX_ITERATIONS;	  mean    =    DEFAULT_EPSILON;    	compilable	  [FE]  MathRuntimeException$4  	7	6	replace
16	[BUG]  [BUGGY]  mean  =  DEFAULT_EPSILON  /  DEFAULT_MAX_ITERATIONS;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON  /  DEFAULT_MAX_ITERATIONS;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  =  DEFAULT_EPSILON  /  DEFAULT_MAX_ITERATIONS;	  mean    =    DEFAULT_EPSILON;    	compilable	  [FE]  MathRuntimeException$4  	7	6	replace
17	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON  +  1;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean  =  DEFAULT_EPSILON  +  1;	  mean    =    DEFAULT_EPSILON;    	compilable	  [FE]  MathRuntimeException$4  	7	6	replace
18	[BUG]  [BUGGY]  mean  =  DEFAULT_EPSILON  +  1;  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON  +  1;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  =  DEFAULT_EPSILON  +  1;	  mean    =    DEFAULT_EPSILON;    	compilable	  [FE]  MathRuntimeException$4  	7	6	replace
19	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON  *  DEFAULT_MAX_ITERATIONS;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean  =  DEFAULT_EPSILON  *  DEFAULT_MAX_ITERATIONS;	  mean    =    DEFAULT_EPSILON;    	compilable	  [FE]  MathRuntimeException$4  	7	6	replace
20	[BUG]  [BUGGY]  mean  =  DEFAULT_EPSILON  *  DEFAULT_MAX_ITERATIONS;  [FE]  MathRuntimeException$4  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON  *  DEFAULT_MAX_ITERATIONS;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  =  DEFAULT_EPSILON  *  DEFAULT_MAX_ITERATIONS;	  mean    =    DEFAULT_EPSILON;    	compilable	  [FE]  MathRuntimeException$4  	7	6	replace
21	[BUG]  [BUGGY]  Integer  epsilon  =  FastMath.sqrt(p,  DEFAULT_EPSILON);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  Integer  epsilon  =  FastMath.sqrt(p,  DEFAULT_EPSILON);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	Integer  epsilon  =  FastMath.sqrt(p,  DEFAULT_EPSILON);	      Integer    epsilon    =    FastMath.sqrt(p);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	17	None	replace
22	[BUG]  [BUGGY]  Integer  epsilon  =  FastMath.sqrt(p,  maxIterations);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  Integer  epsilon  =  FastMath.sqrt(p,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	Integer  epsilon  =  FastMath.sqrt(p,  maxIterations);	      Integer    epsilon    =    FastMath.sqrt(p);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	17	None	replace
23	[BUG]  [BUGGY]  Integer  epsilon  =  FastMath.sqrt(maxIterations);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  Integer  epsilon  =  FastMath.sqrt(maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	Integer  epsilon  =  FastMath.sqrt(maxIterations);	      Integer    epsilon    =    FastMath.sqrt(p);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	17	None	replace
24	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(p),  DEFAULT_MAX_ITERATIONS,  mean);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(p),  DEFAULT_MAX_ITERATIONS,  mean);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(p),  DEFAULT_MAX_ITERATIONS,  mean);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p),    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	11	None	replace
25	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(p),  DEFAULT_MAX_ITERATIONS,  maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(p),  DEFAULT_MAX_ITERATIONS,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(p),  DEFAULT_MAX_ITERATIONS,  maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p),    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	11	None	replace
26	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(p,  FastMath.sqrt(p),  DEFAULT_MAX_ITERATIONS);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(p,  FastMath.sqrt(p),  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(p,  FastMath.sqrt(p),  DEFAULT_MAX_ITERATIONS);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p),    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	11	None	replace
27	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DEFAULT_EPSILON,  FastMath.sqrt(p),  DEFAULT_MAX_ITERATIONS);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DEFAULT_EPSILON,  FastMath.sqrt(p),  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DEFAULT_EPSILON,  FastMath.sqrt(p),  DEFAULT_MAX_ITERATIONS);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p),    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	11	None	replace
28	[BUG]  [BUGGY]  mean  =  DEFAULT_EPSILON?  DEFAULT_EPSILON  :  DEFAULT_MAX_ITERATIONS;  [CE]  incompatible  types  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON?  DEFAULT_EPSILON  :  DEFAULT_MAX_ITERATIONS;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  =  DEFAULT_EPSILON?  DEFAULT_EPSILON  :  DEFAULT_MAX_ITERATIONS;	  mean    =    DEFAULT_EPSILON?    DEFAULT_EPSILON    :    p;    	non-compiled	[CE]  incompatible  types	8	None	replace
29	[BUG]  [BUGGY]  mean  =  DEFAULT_EPSILON  |  DEFAULT_EPSILON  :  p;  [CE]  ';'  expected  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON  |  DEFAULT_EPSILON  :  p;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  =  DEFAULT_EPSILON  |  DEFAULT_EPSILON  :  p;	  mean    =    DEFAULT_EPSILON?    DEFAULT_EPSILON    :    p;    	non-compiled	[CE]  ';'  expected	8	None	replace
30	[BUG]  [BUGGY]  mean  =  DEFAULT_EPSILON?  DEFAULT_EPSILON  :  epsilon;  [CE]  incompatible  types  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON?  DEFAULT_EPSILON  :  epsilon;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  =  DEFAULT_EPSILON?  DEFAULT_EPSILON  :  epsilon;	  mean    =    DEFAULT_EPSILON?    DEFAULT_EPSILON    :    p;    	non-compiled	[CE]  incompatible  types	8	None	replace
31	[BUG]  [BUGGY]  PoissonDistributionImpl(p,  epsilon,  maxIterations,  DEFAULT_EPSILON);  [CE]  cannot  find  symbol  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl(p,  epsilon,  maxIterations,  DEFAULT_EPSILON);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl(p,  epsilon,  maxIterations,  DEFAULT_EPSILON);	      PoissonDistributionImpl(p,    epsilon,    maxIterations);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
32	[BUG]  [BUGGY]  PoissonDistributionImpl(p,  epsilon,  DEFAULT_EPSILON,  maxIterations);  [CE]  cannot  find  symbol  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl(p,  epsilon,  DEFAULT_EPSILON,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl(p,  epsilon,  DEFAULT_EPSILON,  maxIterations);	      PoissonDistributionImpl(p,    epsilon,    maxIterations);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
33	[BUG]  [BUGGY]  PoissonDistributionImpl(p,  maxIterations,  epsilon);  [CE]  cannot  find  symbol  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl(p,  maxIterations,  epsilon);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl(p,  maxIterations,  epsilon);	      PoissonDistributionImpl(p,    epsilon,    maxIterations);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
34	[BUG]  [BUGGY]  PoissonDistributionImpl(p,  epsilon,  maxIterations,  mean);  [CE]  cannot  find  symbol  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl(p,  epsilon,  maxIterations,  mean);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl(p,  epsilon,  maxIterations,  mean);	      PoissonDistributionImpl(p,    epsilon,    maxIterations);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
35	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON  +  p;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean  =  DEFAULT_EPSILON  +  p;	  mean    =    p    +    DEFAULT_EPSILON;    	compilable	  [FE]  MathRuntimeException$4  	10	1	replace
36	[BUG]  [BUGGY]  mean  =  DEFAULT_EPSILON  +  p;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON  +  p;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  =  DEFAULT_EPSILON  +  p;	  mean    =    p    +    DEFAULT_EPSILON;    	compilable	  [FE]  MathRuntimeException$4  	10	1	replace
37	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  p  +  1;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean  =  p  +  1;	  mean    =    p    +    DEFAULT_EPSILON;    	compilable	  [FE]  MathRuntimeException$4  	10	6	replace
38	[BUG]  [BUGGY]  mean  =  p  +  1;  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  p  +  1;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  =  p  +  1;	  mean    =    p    +    DEFAULT_EPSILON;    	compilable	  [FE]  MathRuntimeException$4  	10	6	replace
39	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  p  *  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean  =  p  *  DEFAULT_EPSILON;	  mean    =    p    +    DEFAULT_EPSILON;    	compilable	  [FE]  MathRuntimeException$4  	10	6	replace
40	[BUG]  [BUGGY]  mean  =  p  *  DEFAULT_EPSILON;  [FE]  MathRuntimeException$4  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  p  *  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  =  p  *  DEFAULT_EPSILON;	  mean    =    p    +    DEFAULT_EPSILON;    	compilable	  [FE]  MathRuntimeException$4  	10	6	replace
41	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON  /  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean  =  DEFAULT_EPSILON  /  DEFAULT_EPSILON;	  mean    =    p    +    DEFAULT_EPSILON;    	compilable	  [FE]  MathRuntimeException$4  	10	6	replace
42	[BUG]  [BUGGY]  mean  =  DEFAULT_EPSILON  /  DEFAULT_EPSILON;  [FE]  MathRuntimeException$4  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON  /  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  =  DEFAULT_EPSILON  /  DEFAULT_EPSILON;	  mean    =    p    +    DEFAULT_EPSILON;    	compilable	  [FE]  MathRuntimeException$4  	10	6	replace
43	[BUG]  [BUGGY]  Integer  epsilon  =  Math.max(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  Integer  epsilon  =  Math.max(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	Integer  epsilon  =  Math.max(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);	      Integer    epsilon    =    Math.max(epsilon,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	21	None	replace
44	[BUG]  [BUGGY]  Integer  epsilon  =  Math.max(deFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                  MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  Integer  epsilon  =  Math.max(deFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	Integer  epsilon  =  Math.max(deFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);	      Integer    epsilon    =    Math.max(epsilon,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	21	None	replace
45	[BUG]  [BUGGY]  Integer  epsilon  =  Math.max(defulT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  Integer  epsilon  =  Math.max(defulT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	Integer  epsilon  =  Math.max(defulT_EPSILON,  DEFAULT_MAX_ITERATIONS);	      Integer    epsilon    =    Math.max(epsilon,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	21	None	replace
46	[BUG]  [BUGGY]  Integer  epsilon  =  Math.max(defult_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                      MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  Integer  epsilon  =  Math.max(defult_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	Integer  epsilon  =  Math.max(defult_EPSILON,  DEFAULT_MAX_ITERATIONS);	      Integer    epsilon    =    Math.max(epsilon,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	21	None	replace
47	[BUG]  [BUGGY]  int  epsilon  =  Math.max(mean,  maxIterations);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  int  epsilon  =  Math.max(mean,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	int  epsilon  =  Math.max(mean,  maxIterations);	      int    epsilon    =    Math.max(epsilon,    maxIterations);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	20	None	replace
48	[BUG]  [BUGGY]  int  epsilon  =  Math.max(peer,  maxIterations);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  int  epsilon  =  Math.max(peer,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	int  epsilon  =  Math.max(peer,  maxIterations);	      int    epsilon    =    Math.max(epsilon,    maxIterations);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	20	None	replace
49	[BUG]  [BUGGY]  int  epsilon  =  Math.max(mapping,  maxIterations);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                  MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  int  epsilon  =  Math.max(mapping,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	int  epsilon  =  Math.max(mapping,  maxIterations);	      int    epsilon    =    Math.max(epsilon,    maxIterations);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	20	None	replace
50	[BUG]  [BUGGY]  int  epsilon  =  Math.max(definable,  maxIterations);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  int  epsilon  =  Math.max(definable,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	int  epsilon  =  Math.max(definable,  maxIterations);	      int    epsilon    =    Math.max(epsilon,    maxIterations);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	20	None	replace
51	[BUG]  [BUGGY]  [FE]  FunctionEvaluationException  [FE]    FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean  -=  DEFAULT_EPSILON;	  mean    -=    p;    	compilable	  [FE]  FunctionEvaluationException  	16	10	replace
52	[BUG]  [BUGGY]  mean  -=  DEFAULT_EPSILON;  [FE]  FunctionEvaluationException  [FE]    FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  -=  DEFAULT_EPSILON;	  mean    -=    p;    	compilable	  [FE]  FunctionEvaluationException  	16	10	replace
53	[BUG]  [BUGGY]  [FE]  FunctionEvaluationException  [FE]      FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p  +  1;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean  -=  p  +  1;	  mean    -=    p;    	compilable	  [FE]  FunctionEvaluationException  	16	10	replace
54	[BUG]  [BUGGY]  mean  -=  p  +  1;  [FE]  FunctionEvaluationException  [FE]      FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p  +  1;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  -=  p  +  1;	  mean    -=    p;    	compilable	  [FE]  FunctionEvaluationException  	16	10	replace
55	[BUG]  [BUGGY]  mean  -=  p.epsilon;  [CE]  double  cannot  be  dereferenced  [FE]        FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p.epsilon;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  -=  p.epsilon;	  mean    -=    p;    	non-compiled	[CE]  double  cannot  be  dereferenced	16	None	replace
56	[BUG]  [BUGGY]  [FE]  FunctionEvaluationException  [FE]          FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  Math.max(0.0,  p);  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean  -=  Math.max(0.0,  p);	  mean    -=    p;    	compilable	  [FE]  FunctionEvaluationException  	16	10	replace
57	[BUG]  [BUGGY]  mean  -=  Math.max(0.0,  p);  [FE]  FunctionEvaluationException  [FE]          FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  Math.max(0.0,  p);  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  -=  Math.max(0.0,  p);	  mean    -=    p;    	compilable	  [FE]  FunctionEvaluationException  	16	10	replace
58	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON;  mean  =  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean    =    DEFAULT_EPSILON;    mean  =  DEFAULT_EPSILON;	  	compilable	  [FE]  MathRuntimeException$4  	6	1	add
59	[BUG]  [BUGGY]  mean  =  DEFAULT_EPSILON;  mean  =  DEFAULT_EPSILON;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON;  mean  =  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    =    DEFAULT_EPSILON;    mean  =  DEFAULT_EPSILON;	  	compilable	  [FE]  MathRuntimeException$4  	6	1	add
60	[BUG]  [BUGGY]  mean  =  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]      MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    =    DEFAULT_EPSILON;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	6	None	add
61	[BUG]  [BUGGY]  mean  =  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    =    DEFAULT_EPSILON;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	6	None	add
62	[BUG]  [BUGGY]  mean  =  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    =    DEFAULT_EPSILON;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	6	None	add
63	[BUG]  [BUGGY]  mean  =  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    =    DEFAULT_EPSILON;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	6	None	add
64	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p;  mean  -=  p;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean    -=    p;    mean  -=  p;	  	compilable	  [FE]  MathRuntimeException$4  	15	1	add
65	[BUG]  [BUGGY]  mean  -=  p;  mean  -=  p;  [FE]  MathRuntimeException$4  [FE]    FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p;  mean  -=  p;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    -=    p;    mean  -=  p;	  	compilable	  [FE]  MathRuntimeException$4  	15	1	add
66	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]      FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p;  p  -=  p;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean    -=    p;    p  -=  p;	  	compilable	  [FE]  MathRuntimeException$4  	15	12	add
67	[BUG]  [BUGGY]  mean  -=  p;  p  -=  p;  [FE]  MathRuntimeException$4  [FE]      FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p;  p  -=  p;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    -=    p;    p  -=  p;	  	compilable	  [FE]  MathRuntimeException$4  	15	12	add
68	[BUG]  [BUGGY]  [FE]  FunctionEvaluationException  [FE]        FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p;  epsilon  -=  p;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean    -=    p;    epsilon  -=  p;	  	compilable	  [FE]  FunctionEvaluationException  	15	8	add
69	[BUG]  [BUGGY]  mean  -=  p;  epsilon  -=  p;  [FE]  FunctionEvaluationException  [FE]        FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p;  epsilon  -=  p;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    -=    p;    epsilon  -=  p;	  	compilable	  [FE]  FunctionEvaluationException  	15	8	add
70	[BUG]  [BUGGY]  mean  -=  p;  Math.max(Math.abs(p)/  DEFAULT_EPSILON);  [CE]  no  suitable  method  found  for  max(double)  [FE]          FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p;  Math.max(Math.abs(p)/  DEFAULT_EPSILON);  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    -=    p;    Math.max(Math.abs(p)/  DEFAULT_EPSILON);	  	non-compiled	[CE]  no  suitable  method  found  for  max(double)	15	None	add
71	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]            FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p;  Math.sqrt(Math.abs(p));  mean  -=  p;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean    -=    p;    Math.sqrt(Math.abs(p));  mean  -=  p;	  	compilable	  [FE]  MathRuntimeException$4  	15	1	add
72	[BUG]  [BUGGY]  mean  -=  p;  Math.sqrt(Math.abs(p));  mean  -=  p;  [FE]  MathRuntimeException$4  [FE]            FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p;  Math.sqrt(Math.abs(p));  mean  -=  p;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    -=    p;    Math.sqrt(Math.abs(p));  mean  -=  p;	  	compilable	  [FE]  MathRuntimeException$4  	15	1	add
73	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  mean);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  mean);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  mean);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this.epsilon,    DEFAULT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	3	None	replace
74	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this.epsilon,    DEFAULT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	3	None	replace
75	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  MAX_ITERATIONS);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  MAX_ITERATIONS);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this.epsilon,    DEFAULT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	3	None	replace
76	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                  MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this.epsilon,    DEFAULT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	3	None	replace
77	[BUG]  [BUGGY]  int  epsilon  =  Math.max(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  int  epsilon  =  Math.max(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	int  epsilon  =  Math.max(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);	      int    epsilon    =    Math.max(epsilon,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	19	None	replace
78	[BUG]  [BUGGY]  int  epsilon  =  Math.max(mean,  DEFAULT_MAX_ITERATIONS);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  int  epsilon  =  Math.max(mean,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	int  epsilon  =  Math.max(mean,  DEFAULT_MAX_ITERATIONS);	      int    epsilon    =    Math.max(epsilon,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	19	None	replace
79	[BUG]  [BUGGY]  int  epsilon  =  Math.max(deFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  int  epsilon  =  Math.max(deFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	int  epsilon  =  Math.max(deFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);	      int    epsilon    =    Math.max(epsilon,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	19	None	replace
80	[BUG]  [BUGGY]  int  epsilon  =  Math.max(defult_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                  MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  int  epsilon  =  Math.max(defult_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	int  epsilon  =  Math.max(defult_EPSILON,  DEFAULT_MAX_ITERATIONS);	      int    epsilon    =    Math.max(epsilon,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	19	None	replace
81	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  p  +  DEFAULT_EPSILON;  mean  =  p  +  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean    =    p    +    DEFAULT_EPSILON;    mean  =  p  +  DEFAULT_EPSILON;	  	compilable	  [FE]  MathRuntimeException$4  	9	1	add
82	[BUG]  [BUGGY]  mean  =  p  +  DEFAULT_EPSILON;  mean  =  p  +  DEFAULT_EPSILON;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  p  +  DEFAULT_EPSILON;  mean  =  p  +  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    =    p    +    DEFAULT_EPSILON;    mean  =  p  +  DEFAULT_EPSILON;	  	compilable	  [FE]  MathRuntimeException$4  	9	1	add
83	[BUG]  [BUGGY]  mean  =  p  +  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]      MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  p  +  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    =    p    +    DEFAULT_EPSILON;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	9	None	add
84	[BUG]  [BUGGY]  mean  =  p  +  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  p  +  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    =    p    +    DEFAULT_EPSILON;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	9	None	add
85	[BUG]  [BUGGY]  mean  =  p  +  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  p  +  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    =    p    +    DEFAULT_EPSILON;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	9	None	add
86	[BUG]  [BUGGY]  mean  =  p  +  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  p  +  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    =    p    +    DEFAULT_EPSILON;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	9	None	add
87	[BUG]  [BUGGY]  double  epsilon  =  FastMath.sqrt(p);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  double  epsilon  =  FastMath.sqrt(p);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	double  epsilon  =  FastMath.sqrt(p);	      int    epsilon    =    FastMath.sqrt(p);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	18	None	replace
88	[BUG]  [BUGGY]  int  epsilon  =  FastMath.sqrt(p,  DEFAULT_EPSILON);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  int  epsilon  =  FastMath.sqrt(p,  DEFAULT_EPSILON);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	int  epsilon  =  FastMath.sqrt(p,  DEFAULT_EPSILON);	      int    epsilon    =    FastMath.sqrt(p);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	18	None	replace
89	[BUG]  [BUGGY]  int  epsilon  =  FastMath.sqrt(p,  maxIterations);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  int  epsilon  =  FastMath.sqrt(p,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	int  epsilon  =  FastMath.sqrt(p,  maxIterations);	      int    epsilon    =    FastMath.sqrt(p);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	18	None	replace
90	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  epsilon,  maxIterations,  DEFAULT_MAX_ITERATIONS);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  epsilon,  maxIterations,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  epsilon,  maxIterations,  DEFAULT_MAX_ITERATIONS);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	12	None	replace
91	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  p,  maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  p,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  p,  maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	12	None	replace
92	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  epsilon,  maxIterations,  mean);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  epsilon,  maxIterations,  mean);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  epsilon,  maxIterations,  mean);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	12	None	replace
93	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	12	None	replace
94	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(p),  epsilon,  maxIterations,  DEFAULT_MAX_ITERATIONS);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(p),  epsilon,  maxIterations,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(p),  epsilon,  maxIterations,  DEFAULT_MAX_ITERATIONS);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p),    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	14	None	replace
95	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(p),  epsilon,  maxIterations,  mean);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(p),  epsilon,  maxIterations,  mean);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(p),  epsilon,  maxIterations,  mean);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p),    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	14	None	replace
96	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this,  DEFAULT_EPSILON,  maxIterations,  epsilon);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this,  DEFAULT_EPSILON,  maxIterations,  epsilon);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this,  DEFAULT_EPSILON,  maxIterations,  epsilon);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this,    DEFAULT_EPSILON,    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	2	None	replace
97	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this,  DEFAULT_EPSILON,  psilon,  maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this,  DEFAULT_EPSILON,  psilon,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this,  DEFAULT_EPSILON,  psilon,  maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this,    DEFAULT_EPSILON,    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	2	None	replace
98	[BUG]  [BUGGY]  int  epsilon  =  Math.max(DEFAULT_EPSILON,  maxIterations);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  int  epsilon  =  Math.max(DEFAULT_EPSILON,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	int  epsilon  =  Math.max(DEFAULT_EPSILON,  maxIterations);	      int    epsilon    =    Math.max(epsilon,    maxIterations);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	20	None	replace
99	[BUG]  [BUGGY]  int  epsilon  =  Math.min(maxIterations,  epsilon);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  int  epsilon  =  Math.min(maxIterations,  epsilon);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	int  epsilon  =  Math.min(maxIterations,  epsilon);	      int    epsilon    =    Math.max(epsilon,    maxIterations);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	20	None	replace
100	[BUG]  [BUGGY]  int  epsilon  =  Math.max(definition,  maxIterations);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                  MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  int  epsilon  =  Math.max(definition,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	int  epsilon  =  Math.max(definition,  maxIterations);	      int    epsilon    =    Math.max(epsilon,    maxIterations);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	20	None	replace
101	[BUG]  [BUGGY]  int  epsilon  =  Math.max(definance,  maxIterations);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  int  epsilon  =  Math.max(definance,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	int  epsilon  =  Math.max(definance,  maxIterations);	      int    epsilon    =    Math.max(epsilon,    maxIterations);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	20	None	replace
102	[BUG]  [BUGGY]  mean  =  DEFAULT_EPSILON?  DEFAULT_EPSILON  :  DEFAULT_MEAN;  [CE]  incompatible  types  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON?  DEFAULT_EPSILON  :  DEFAULT_MEAN;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  =  DEFAULT_EPSILON?  DEFAULT_EPSILON  :  DEFAULT_MEAN;	  mean    =    DEFAULT_EPSILON?    DEFAULT_EPSILON    :    p;    	non-compiled	[CE]  incompatible  types	8	None	replace
103	[BUG]  [BUGGY]  mean  -=  p;  int  mean  -=  p;  [CE]  ';'  expected  [FE]    FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p;  int  mean  -=  p;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    -=    p;    int  mean  -=  p;	  	non-compiled	[CE]  ';'  expected	15	None	add
104	[BUG]  [BUGGY]  mean  -=  p;  int  mean  =  Math.min(Math.abs(p),  epsilon);  [CE]  possible  loss  of  precision  [FE]      FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p;  int  mean  =  Math.min(Math.abs(p),  epsilon);  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    -=    p;    int  mean  =  Math.min(Math.abs(p),  epsilon);	  	non-compiled	[CE]  possible  loss  of  precision	15	None	add
105	[BUG]  [BUGGY]  mean  -=  p;  int  mean  =  Math.min(Math.abs(p)/  DEFAULT_EPSILON);  [CE]  no  suitable  method  found  for  min(double)  [FE]        FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p;  int  mean  =  Math.min(Math.abs(p)/  DEFAULT_EPSILON);  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    -=    p;    int  mean  =  Math.min(Math.abs(p)/  DEFAULT_EPSILON);	  	non-compiled	[CE]  no  suitable  method  found  for  min(double)	15	None	add
106	[BUG]  [BUGGY]  mean  =  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    =    DEFAULT_EPSILON;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	6	None	add
107	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  this.maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  this.maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  this.maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this.epsilon,    DEFAULT_EPSILON,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	4	None	replace
108	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  maxIterations,  DEFAULT_MAX_ITERATIONS);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  maxIterations,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  maxIterations,  DEFAULT_MAX_ITERATIONS);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this.epsilon,    DEFAULT_EPSILON,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	4	None	replace
109	[BUG]  [BUGGY]  int  mean  =  Math.max(deFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  cannot  find  symbol  deFAULT_EPSILON  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  int  mean  =  Math.max(deFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	int  mean  =  Math.max(deFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);	      int    epsilon    =    Math.max(epsilon,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  cannot  find  symbol  deFAULT_EPSILON	19	None	replace
110	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DEFAULT_EPSILON,  FastMath.sqrt(p),  epsilon,  maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DEFAULT_EPSILON,  FastMath.sqrt(p),  epsilon,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DEFAULT_EPSILON,  FastMath.sqrt(p),  epsilon,  maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p),    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	14	None	replace
111	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DeFAULT_EPSILON,  FastMath.sqrt(p),  epsilon,  maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DeFAULT_EPSILON,  FastMath.sqrt(p),  epsilon,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DeFAULT_EPSILON,  FastMath.sqrt(p),  epsilon,  maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p),    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	14	None	replace
112	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(0.0,  0,  epsilon,  maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(0.0,  0,  epsilon,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(0.0,  0,  epsilon,  maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(0.0,    0.0,    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	5	None	replace
113	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DeFAULT_EPSILON,  FastMath.sqrt(p),  DEFAULT_MAX_ITERATIONS);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DeFAULT_EPSILON,  FastMath.sqrt(p),  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DeFAULT_EPSILON,  FastMath.sqrt(p),  DEFAULT_MAX_ITERATIONS);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p),    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	11	None	replace
114	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(p)/  DEFAULT_MAX_ITERATIONS);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(p)/  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(p)/  DEFAULT_MAX_ITERATIONS);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p),    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	11	None	replace
115	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  p  +  2;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean  =  p  +  2;	  mean    =    p    +    DEFAULT_EPSILON;    	compilable	  [FE]  MathRuntimeException$4  	10	6	replace
116	[BUG]  [BUGGY]  mean  =  p  +  2;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  p  +  2;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  =  p  +  2;	  mean    =    p    +    DEFAULT_EPSILON;    	compilable	  [FE]  MathRuntimeException$4  	10	6	replace
117	[BUG]  [BUGGY]  mean  =  p  +  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  p  +  DEFAULT_EPSILON;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    =    p    +    DEFAULT_EPSILON;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	9	None	add
118	[BUG]  [BUGGY]  Integer  epsilon  =  Math.max(definance,  DEFAULT_MAX_ITERATIONS);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  Integer  epsilon  =  Math.max(definance,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	Integer  epsilon  =  Math.max(definance,  DEFAULT_MAX_ITERATIONS);	      Integer    epsilon    =    Math.max(epsilon,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	21	None	replace
119	[BUG]  [BUGGY]  mean  -=  psilon;  [CE]  cannot  find  symbol  psilon  [FE]    FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  psilon;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  -=  psilon;	  mean    -=    p;    	non-compiled	[CE]  cannot  find  symbol  psilon	16	None	replace
120	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this.epsilon,    DEFAULT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	3	None	replace
121	[BUG]  [BUGGY]  Integer  epsilon  =  FastMath.sqrt(p  +  1);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  Integer  epsilon  =  FastMath.sqrt(p  +  1);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	Integer  epsilon  =  FastMath.sqrt(p  +  1);	      Integer    epsilon    =    FastMath.sqrt(p);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	17	None	replace
122	[BUG]  [BUGGY]  PoissonDistributionImpl(p,  DEFAULT_EPSILON,  maxIterations);  [CE]  cannot  find  symbol  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl(p,  DEFAULT_EPSILON,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl(p,  DEFAULT_EPSILON,  maxIterations);	      PoissonDistributionImpl(p,    epsilon,    maxIterations);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
123	[BUG]  [BUGGY]  PoissonDistributionImpl(this.epsilon,  p,  maxIterations);  [CE]  cannot  find  symbol  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl(this.epsilon,  p,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl(this.epsilon,  p,  maxIterations);	      PoissonDistributionImpl(p,    epsilon,    maxIterations);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
124	[BUG]  [BUGGY]  mean  =  DEFAULT_EPSILON  ||  DEFAULT_MAX_ITERATIONS  >  0;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON  ||  DEFAULT_MAX_ITERATIONS  >  0;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  =  DEFAULT_EPSILON  ||  DEFAULT_MAX_ITERATIONS  >  0;	  mean    =    DEFAULT_EPSILON;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	7	None	replace
125	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(peer));  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(peer));  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(peer));	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p));    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	13	None	replace
126	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this,  DEFAULT_EPSILON,  epsilon,  maxIterations,  DEFAULT_MAX_ITERATIONS);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this,  DEFAULT_EPSILON,  epsilon,  maxIterations,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this,  DEFAULT_EPSILON,  epsilon,  maxIterations,  DEFAULT_MAX_ITERATIONS);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this,    DEFAULT_EPSILON,    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	2	None	replace
127	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON;  epsilon  =  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean    =    DEFAULT_EPSILON;    epsilon  =  DEFAULT_EPSILON;	  	compilable	  [FE]  MathRuntimeException$4  	6	1	add
128	[BUG]  [BUGGY]  mean  =  DEFAULT_EPSILON;  epsilon  =  DEFAULT_EPSILON;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON;  epsilon  =  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    =    DEFAULT_EPSILON;    epsilon  =  DEFAULT_EPSILON;	  	compilable	  [FE]  MathRuntimeException$4  	6	1	add
129	[BUG]  [BUGGY]  float  epsilon  =  FastMath.sqrt(p);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  float  epsilon  =  FastMath.sqrt(p);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	float  epsilon  =  FastMath.sqrt(p);	      int    epsilon    =    FastMath.sqrt(p);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	18	None	replace
130	[BUG]  [BUGGY]  mean  =  DEFAULT_EPSILON?  DEFAULT_EPSILON  :  DEFAULT_MASK;  [CE]  incompatible  types  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  DEFAULT_EPSILON?  DEFAULT_EPSILON  :  DEFAULT_MASK;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  =  DEFAULT_EPSILON?  DEFAULT_EPSILON  :  DEFAULT_MASK;	  mean    =    DEFAULT_EPSILON?    DEFAULT_EPSILON    :    p;    	non-compiled	[CE]  incompatible  types	8	None	replace
131	[BUG]  [BUGGY]  Integer  epsilon  =  FastMath.sqrt(peer);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  Integer  epsilon  =  FastMath.sqrt(peer);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	Integer  epsilon  =  FastMath.sqrt(peer);	      Integer    epsilon    =    FastMath.sqrt(p);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	17	None	replace
132	[BUG]  [BUGGY]  Integer  epsilon  =  FastMath.sqrt(m);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  Integer  epsilon  =  FastMath.sqrt(m);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	Integer  epsilon  =  FastMath.sqrt(m);	      Integer    epsilon    =    FastMath.sqrt(p);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	17	None	replace
133	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  p,  epsilon,  maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  p,  epsilon,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  p,  epsilon,  maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	12	None	replace
134	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  MAX_ITERATIONS);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  MAX_ITERATIONS);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this.epsilon,    DEFAULT_EPSILON,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	4	None	replace
135	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  p  -=  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	p  -=  DEFAULT_EPSILON;	  mean    -=    p;    	compilable	  [FE]  MathRuntimeException$4  	16	6	replace
136	[BUG]  [BUGGY]  p  -=  DEFAULT_EPSILON;  [FE]  MathRuntimeException$4  [FE]    FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  p  -=  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	p  -=  DEFAULT_EPSILON;	  mean    -=    p;    	compilable	  [FE]  MathRuntimeException$4  	16	6	replace
137	[BUG]  [BUGGY]  timeout  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  p  /  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean  =  p  /  DEFAULT_EPSILON;	  mean    =    p    +    DEFAULT_EPSILON;    	compilable	timeout	10	1	replace
138	[BUG]  [BUGGY]  mean  =  p  /  DEFAULT_EPSILON;  timeout  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  p  /  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean  =  p  /  DEFAULT_EPSILON;	  mean    =    p    +    DEFAULT_EPSILON;    	compilable	timeout	10	1	replace
139	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p;  Math.sqrt(Math.pow(10,  p));  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean    -=    p;    Math.sqrt(Math.pow(10,  p));	  	compilable	  [FE]  MathRuntimeException$4  	15	1	add
140	[BUG]  [BUGGY]  mean  -=  p;  Math.sqrt(Math.pow(10,  p));  [FE]  MathRuntimeException$4  [FE]    FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p;  Math.sqrt(Math.pow(10,  p));  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    -=    p;    Math.sqrt(Math.pow(10,  p));	  	compilable	  [FE]  MathRuntimeException$4  	15	1	add
141	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]      FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p;  p  -=  p;  mean  -=  p;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean    -=    p;    p  -=  p;  mean  -=  p;	  	compilable	  [FE]  MathRuntimeException$4  	15	12	add
142	[BUG]  [BUGGY]  mean  -=  p;  p  -=  p;  mean  -=  p;  [FE]  MathRuntimeException$4  [FE]      FunctionEvaluationException    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  -=  p;  p  -=  p;  mean  -=  p;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    -=    p;    p  -=  p;  mean  -=  p;	  	compilable	  [FE]  MathRuntimeException$4  	15	12	add
143	[BUG]  [BUGGY]  Integer  epsilon  =  Math.max(mean,  DEFAULT_MAX_ITERATIONS);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  Integer  epsilon  =  Math.max(mean,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	Integer  epsilon  =  Math.max(mean,  DEFAULT_MAX_ITERATIONS);	      Integer    epsilon    =    Math.max(epsilon,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	21	None	replace
144	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(0.0,  0.0,  epsilon,  DEFAULT_EPSILON,  maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(0.0,  0.0,  epsilon,  DEFAULT_EPSILON,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(0.0,  0.0,  epsilon,  DEFAULT_EPSILON,  maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(0.0,    0.0,    epsilon,    maxIterations);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	5	None	replace
145	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(mean));  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(mean));  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(mean));	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p));    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	13	None	replace
146	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DeFAULT_EPSILON,  FastMath.sqrt(deFAULT_MAX_ITERATIONS));  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DeFAULT_EPSILON,  FastMath.sqrt(deFAULT_MAX_ITERATIONS));  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(DeFAULT_EPSILON,  FastMath.sqrt(deFAULT_MAX_ITERATIONS));	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p));    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	13	None	replace
147	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(defult_MAX_ITERATIONS));  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(defult_MAX_ITERATIONS));  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(defult_MAX_ITERATIONS));	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p));    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	13	None	replace
148	[BUG]  [BUGGY]  double  epsilon  =  Math.max(epsilon,  DEFAULT_MAX_ITERATIONS);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  double  epsilon  =  Math.max(epsilon,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	double  epsilon  =  Math.max(epsilon,  DEFAULT_MAX_ITERATIONS);	      int    epsilon    =    Math.max(epsilon,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	19	None	replace
149	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  this.maxIterations);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  this.maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(this.epsilon,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  this.maxIterations);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(this.epsilon,    DEFAULT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	3	None	replace
150	[BUG]  [BUGGY]  mean  =  p  +  DEFAULT_EPSILON;  int  mean  =  p  +  DEFAULT_EPSILON;  [CE]  possible  loss  of  precision  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  p  +  DEFAULT_EPSILON;  int  mean  =  p  +  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    =    p    +    DEFAULT_EPSILON;    int  mean  =  p  +  DEFAULT_EPSILON;	  	non-compiled	[CE]  possible  loss  of  precision	9	None	add
151	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  p  +  DEFAULT_EPSILON;  p  =  p  +  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	mean    =    p    +    DEFAULT_EPSILON;    p  =  p  +  DEFAULT_EPSILON;	  	compilable	  [FE]  MathRuntimeException$4  	9	1	add
152	[BUG]  [BUGGY]  mean  =  p  +  DEFAULT_EPSILON;  p  =  p  +  DEFAULT_EPSILON;  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  mean  =  p  +  DEFAULT_EPSILON;  p  =  p  +  DEFAULT_EPSILON;  [BUGGY]    normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	mean    =    p    +    DEFAULT_EPSILON;    p  =  p  +  DEFAULT_EPSILON;	  	compilable	  [FE]  MathRuntimeException$4  	9	1	add
153	[BUG]  [BUGGY]  PoissonDistributionImpl(pe,  epsilon,  maxIterations,  DEFAULT_EPSILON);  [CE]  cannot  find  symbol  pe  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl(pe,  epsilon,  maxIterations,  DEFAULT_EPSILON);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl(pe,  epsilon,  maxIterations,  DEFAULT_EPSILON);	      PoissonDistributionImpl(p,    epsilon,    maxIterations);    	non-compiled	[CE]  cannot  find  symbol  pe	1	None	replace
154	[BUG]  [BUGGY]  double  epsilon  =  Math.max(epsilon,  maxIterations);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  double  epsilon  =  Math.max(epsilon,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	double  epsilon  =  Math.max(epsilon,  maxIterations);	      int    epsilon    =    Math.max(epsilon,    maxIterations);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	20	None	replace
155	[BUG]  [BUGGY]  int  epsilon  =  Math.max(defulT_EPSILON,  maxIterations);  [CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  int  epsilon  =  Math.max(defulT_EPSILON,  maxIterations);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	int  epsilon  =  Math.max(defulT_EPSILON,  maxIterations);	      int    epsilon    =    Math.max(epsilon,    maxIterations);    	non-compiled	[CE]  variable  epsilon  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	20	None	replace
156	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(p),  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(p),  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(p),  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p),    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	11	None	replace
157	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(peer),  DEFAULT_MAX_ITERATIONS);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(peer),  DEFAULT_MAX_ITERATIONS);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(peer),  DEFAULT_MAX_ITERATIONS);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p),    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	11	None	replace
158	[BUG]  [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(deFAULT_MAX_ITERATIONS),  DEFAULT_EPSILON);  [CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }    [BUGGY]  PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(deFAULT_MAX_ITERATIONS),  DEFAULT_EPSILON);  [BUGGY]    mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	PoissonDistributionImpl  p  =  new  PoissonDistributionImpl(deFAULT_EPSILON,  FastMath.sqrt(deFAULT_MAX_ITERATIONS),  DEFAULT_EPSILON);	      PoissonDistributionImpl    p    =    new    PoissonDistributionImpl(deFAULT_EPSILON,    FastMath.sqrt(p),    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  variable  p  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	11	None	replace
