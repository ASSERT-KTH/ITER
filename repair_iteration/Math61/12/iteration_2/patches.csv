bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  epsilon  =  epsilon;  This.epsilon  =  epsilon;  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  epsilon  =  epsilon;  This.epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	epsilon  =  epsilon;  This.epsilon  =  epsilon;	          this.epsilon    =    epsilon;    This.epsilon    =    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
2	[BUG]  [BUGGY]  safePosition(epsilon)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [CE]  ';'  expected  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(epsilon)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(epsilon)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  ';'  expected	72	None	replace
3	[BUG]  [BUGGY]  this.maxIterations  =  epsilon;  this.maxIterations  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  epsilon;  this.maxIterations  =  maxIterations;	          this.maxIterations    =    maxIterations;    this.maxIterations    =    minIterations;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
4	[BUG]  [BUGGY]  this.maxIterations  =  DEFAULT_EPSILON;  this.maxIterations  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  DEFAULT_EPSILON;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  DEFAULT_EPSILON;  this.maxIterations  =  maxIterations;	          this.maxIterations    =    maxIterations;    this.maxIterations    =    minIterations;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
5	[BUG]  [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  this.maxIterations  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  this.maxIterations  =  maxIterations;	          this.maxIterations    =    maxIterations;    this.maxIterations    =    minIterations;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
6	[BUG]  [BUGGY]  this.mean  =  p;  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.mean  =  p;  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.mean  =  p;	  this.mean    =    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
7	[BUG]  [BUGGY]  aughtException(Math.abs(epsilon))  <  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  aughtException(Math.abs(epsilon))  <  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	aughtException(Math.abs(epsilon))  <  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));	  aughtException(Math.abs(mean))    <    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
8	[BUG]  [BUGGY]  aughtException(Math.abs(epsilon))  <  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  aughtException(Math.abs(epsilon))  <  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	aughtException(Math.abs(epsilon))  <  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));	  aughtException(Math.abs(mean))    <    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
9	[BUG]  [BUGGY]  aughtException(Math.abs(normal))  <  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  aughtException(Math.abs(normal))  <  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	aughtException(Math.abs(normal))  <  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));	  aughtException(Math.abs(mean))    <    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
10	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  this.maxIterations  =  MAX_ITERATIONS;  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  this.maxIterations  =  MAX_ITERATIONS;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  DEFAULT_EPSILON;  this.maxIterations  =  MAX_ITERATIONS;	  this.epsilon    =    epsilon;    this.maxIterations    =    MAX_ITERATIONS;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
11	[BUG]  [BUGGY]  safeTree())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [CE]  ';'  expected  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safeTree())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safeTree())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }	  safeTree())    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  ';'  expected	43	None	replace
12	[BUG]  [BUGGY]  safeTree())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  new  Integer(0));  }  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safeTree())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  new  Integer(0));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safeTree())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  new  Integer(0));  }	  safeTree())    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  ';'  expected	43	None	replace
13	[BUG]  [BUGGY]  this.epsilon  =  epsilon  +  DEFAULT_EPSILON;  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  epsilon  +  DEFAULT_EPSILON;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  epsilon  +  DEFAULT_EPSILON;	  this.epsilon    =    DEFAULT_EPSILON;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
14	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	58	1	add
15	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	58	1	add
16	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	58	1	add
17	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	58	1	add
18	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  epsilon;  this.maxIterations  =  maxIterations;  [CE]  possible  loss  of  precision  [FE]        MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  epsilon;  this.maxIterations  =  maxIterations;	  	non-compiled	[CE]  possible  loss  of  precision	58	None	add
19	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]          MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	58	None	add
20	[BUG]  [BUGGY]  epsilon  =  epsilon;  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	epsilon  =  epsilon;	          this.epsilon    =    epsilon;    epsilon    =    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
21	[BUG]  [BUGGY]  This.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  This.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	This.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    This.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
22	[BUG]  [BUGGY]  readFully()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [CE]  ';'  expected  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  readFully()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	readFully()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }	  read()    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  ';'  expected	77	None	replace
23	[BUG]  [BUGGY]  int  read()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [CE]  ';'  expected  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  int  read()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	int  read()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }	  read()    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  ';'  expected	77	None	replace
24	[BUG]  [BUGGY]  read()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  read()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	read()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  read()    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  ';'  expected	77	None	replace
25	[BUG]  [BUGGY]  MutableFormats.assertEquals(mean,  DEFAULT_EPSILON,  epsilon,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(mean,  DEFAULT_EPSILON,  epsilon,  maxIterations);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(mean,  DEFAULT_EPSILON,  epsilon,  maxIterations);	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON,    epsilon,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
26	[BUG]  [BUGGY]  MutableFormats.assertEquals(mean,  DEFAULT_EPSILON,  p,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(mean,  DEFAULT_EPSILON,  p,  maxIterations);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(mean,  DEFAULT_EPSILON,  p,  maxIterations);	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON,    epsilon,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
27	[BUG]  [BUGGY]  MutableFormats.assertEquals(epsilon,  DEFAULT_EPSILON,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(epsilon,  DEFAULT_EPSILON,  maxIterations);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(epsilon,  DEFAULT_EPSILON,  maxIterations);	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON,    epsilon,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
28	[BUG]  [BUGGY]  MutableFormats.assertEquals(definable,  DEFAULT_EPSILON,  epsilon,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(definable,  DEFAULT_EPSILON,  epsilon,  maxIterations);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(definable,  DEFAULT_EPSILON,  epsilon,  maxIterations);	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON,    epsilon,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
29	[BUG]  [BUGGY]  MutableFormats.assertEquals(mean,  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(mean,  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(mean,  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
30	[BUG]  [BUGGY]  MutableFormats.assertEquals(deFAULT_EPSILON,  normal,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(deFAULT_EPSILON,  normal,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(deFAULT_EPSILON,  normal,  DEFAULT_MAX_ITERATIONS);	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
31	[BUG]  [BUGGY]  MutableFormats.assertEquals(definable,  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(definable,  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(definable,  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
32	[BUG]  [BUGGY]  MutableFormats.assertEquals(DEFAULT_EPSILON,  mean,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(DEFAULT_EPSILON,  mean,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(DEFAULT_EPSILON,  mean,  DEFAULT_MAX_ITERATIONS);	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
33	[BUG]  [BUGGY]  safePosition(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  ';'  expected	84	None	replace
34	[BUG]  [BUGGY]  safePosition(epsilon)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [CE]  ';'  expected  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(epsilon)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(epsilon)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  ';'  expected	84	None	replace
35	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  normal,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(mean,  normal,  maxIterations);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(mean,  normal,  maxIterations);	  this.maxIterations    =    Math.max(mean,    epsilon,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
36	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  DEFAULT_EPSILON,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(mean,  DEFAULT_EPSILON,  maxIterations);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(mean,  DEFAULT_EPSILON,  maxIterations);	  this.maxIterations    =    Math.max(mean,    epsilon,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
37	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  epsilon,  DEFAULT_EPSILON);  [CE]  illegal  start  of  expression  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(mean,  epsilon,  DEFAULT_EPSILON);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(mean,  epsilon,  DEFAULT_EPSILON);	  this.maxIterations    =    Math.max(mean,    epsilon,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
38	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  maxIterations,  epsilon);  [CE]  illegal  start  of  expression  [FE]                          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(mean,  maxIterations,  epsilon);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(mean,  maxIterations,  epsilon);	  this.maxIterations    =    Math.max(mean,    epsilon,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
39	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(normal,epsilon);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(normal,epsilon);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(normal,epsilon);	  this.maxIterations    =    Math.max(normal,mean);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
40	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
41	[BUG]  [BUGGY]  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
42	[BUG]  [BUGGY]  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
43	[BUG]  [BUGGY]  parent  =  normal.getParent();  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  =  normal.getParent();  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  =  normal.getParent();	  parent    =    parent.getParent();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
44	[BUG]  [BUGGY]  parent  =  p.getParent();  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  =  p.getParent();  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  =  p.getParent();	  parent    =    parent.getParent();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
45	[BUG]  [BUGGY]  safePosition(epsilon)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  }  [CE]  ';'  expected  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(epsilon)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(epsilon)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  }	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    }    	non-compiled	[CE]  ';'  expected	62	None	replace
46	[BUG]  [BUGGY]  safePosition(peer)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  }  [CE]  ';'  expected  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(peer)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(peer)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  }	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    }    	non-compiled	[CE]  ';'  expected	62	None	replace
47	[BUG]  [BUGGY]  peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN,  mean);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN,  mean);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN,  mean);	  peat    =    Math.max(mean,    DEFAULT_EPSILON_MEAN);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
48	[BUG]  [BUGGY]  peat  =  Math.min(mean,  DEFAULT_EPSILON_MEAN);  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.min(mean,  DEFAULT_EPSILON_MEAN);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.min(mean,  DEFAULT_EPSILON_MEAN);	  peat    =    Math.max(mean,    DEFAULT_EPSILON_MEAN);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
49	[BUG]  [BUGGY]  peat  =  Math.max(mean,  normal);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.max(mean,  normal);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.max(mean,  normal);	  peat    =    Math.max(mean,    DEFAULT_EPSILON_MEAN);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  peat  =  Math.max(peat,  DEFAULT_EPSILON_MEAN);  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.max(peat,  DEFAULT_EPSILON_MEAN);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.max(peat,  DEFAULT_EPSILON_MEAN);	  peat    =    Math.max(mean,    DEFAULT_EPSILON_MEAN);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
51	[BUG]  [BUGGY]  peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN)/  1;  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN)/  1;  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN)/  1;	  peat    =    Math.max(mean,    DEFAULT_EPSILON_MEAN)+    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
52	[BUG]  [BUGGY]  peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN)+  2;  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN)+  2;  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN)+  2;	  peat    =    Math.max(mean,    DEFAULT_EPSILON_MEAN)+    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
53	[BUG]  [BUGGY]  peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN)+  3;  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN)+  3;  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN)+  3;	  peat    =    Math.max(mean,    DEFAULT_EPSILON_MEAN)+    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
54	[BUG]  [BUGGY]  parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal);  [CE]  not  a  statement  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal);	  parent!=    null    &&    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  not  a  statement	34	None	replace
55	[BUG]  [BUGGY]  parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  normal);  [CE]  not  a  statement  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  normal);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  normal);	  parent!=    null    &&    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  not  a  statement	34	None	replace
56	[BUG]  [BUGGY]  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
57	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
58	[BUG]  [BUGGY]  if(epsilon  <  =  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  if(epsilon  <  =  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	if(epsilon  <  =  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }	          this.epsilon    =    epsilon;    this.epsilon    =    epsilon;    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
59	[BUG]  [BUGGY]  if(epsilon  <  =  DEFAULT_EPSILON  ||  epsilon  >  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  if(epsilon  <  =  DEFAULT_EPSILON  ||  epsilon  >  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	if(epsilon  <  =  DEFAULT_EPSILON  ||  epsilon  >  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }	          this.epsilon    =    epsilon;    this.epsilon    =    epsilon;    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
60	[BUG]  [BUGGY]  if(epsilon  <  =  DEFAULT_EPSILON  ||  epsilon  >  MAX_ITERATIONS)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  if(epsilon  <  =  DEFAULT_EPSILON  ||  epsilon  >  MAX_ITERATIONS)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	if(epsilon  <  =  DEFAULT_EPSILON  ||  epsilon  >  MAX_ITERATIONS)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }	          this.epsilon    =    epsilon;    this.epsilon    =    epsilon;    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
61	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(deFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(deFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(deFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  this.maxIterations    =    Math.max(DEFAULT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
62	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS  +  1);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS  +  1);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS  +  1);	  this.maxIterations    =    Math.max(DEFAULT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
63	[BUG]  [BUGGY]  this.maxIterations  =  Math.min(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.min(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.min(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  this.maxIterations    =    Math.max(DEFAULT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
64	[BUG]  [BUGGY]  peat  =  Math.max(mean,  DEFAULT_EPSILON);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.max(mean,  DEFAULT_EPSILON);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.max(mean,  DEFAULT_EPSILON);	  peat    =    Math.max(mean,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
65	[BUG]  [BUGGY]  peat  =  Math.min(mean,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.min(mean,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.min(mean,  DEFAULT_MAX_ITERATIONS);	  peat    =    Math.max(mean,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
66	[BUG]  [BUGGY]  peat  =  Math.max(peat,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.max(peat,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.max(peat,  DEFAULT_MAX_ITERATIONS);	  peat    =    Math.max(mean,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  DEFAULT_EPSILON,  normal);  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(mean,  DEFAULT_EPSILON,  normal);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(mean,  DEFAULT_EPSILON,  normal);	  this.maxIterations    =    Math.max(mean,    normal,    DEFAULT_EPSILON);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
68	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  normal,  DEFAULT_EPSILON,  mean);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(mean,  normal,  DEFAULT_EPSILON,  mean);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(mean,  normal,  DEFAULT_EPSILON,  mean);	  this.maxIterations    =    Math.max(mean,    normal,    DEFAULT_EPSILON);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
69	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  normal,  DEFAULT_EPSILON,  epsilon);  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(mean,  normal,  DEFAULT_EPSILON,  epsilon);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(mean,  normal,  DEFAULT_EPSILON,  epsilon);	  this.maxIterations    =    Math.max(mean,    normal,    DEFAULT_EPSILON);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
70	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  normal,  DEFAULT_EPSILON,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(mean,  normal,  DEFAULT_EPSILON,  maxIterations);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(mean,  normal,  DEFAULT_EPSILON,  maxIterations);	  this.maxIterations    =    Math.max(mean,    normal,    DEFAULT_EPSILON);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
71	[BUG]  [BUGGY]  parent  =  NormalDistribution.getParent();  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  =  NormalDistribution.getParent();  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  =  NormalDistribution.getParent();	  parent    =    normal;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
72	[BUG]  [BUGGY]  parent  =  NormalDistribution.newInstance();  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  =  NormalDistribution.newInstance();  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  =  NormalDistribution.newInstance();	  parent    =    normal;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
73	[BUG]  [BUGGY]  this.maxIterations  =  DEFAULT_EPSILON;  this.maxIters  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  DEFAULT_EPSILON;  this.maxIters  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  DEFAULT_EPSILON;  this.maxIters  =  maxIterations;	          this.maxIterations    =    maxIterations;    this.maxIters    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
74	[BUG]  [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  this.maxIters  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  this.maxIters  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  this.maxIters  =  maxIterations;	          this.maxIterations    =    maxIterations;    this.maxIters    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
75	[BUG]  [BUGGY]  readFallback();  [CE]  illegal  start  of  expression  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  readFallback();  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	readFallback();	  readFactory();    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
76	[BUG]  [BUGGY]  readFallThrough();  [CE]  illegal  start  of  expression  [FE]                          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  readFallThrough();  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	readFallThrough();	  readFactory();    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
77	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(epsilon,  epsilon  +  1);  [CE]  illegal  start  of  expression  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(epsilon,  epsilon  +  1);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(epsilon,  epsilon  +  1);	  this.maxIterations    =    Math.max(mean,    epsilon    +    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
78	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  maxIterations  +  1);  [CE]  illegal  start  of  expression  [FE]                          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(mean,  maxIterations  +  1);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(mean,  maxIterations  +  1);	  this.maxIterations    =    Math.max(mean,    epsilon    +    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
79	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  normal  +  1);  [CE]  illegal  start  of  expression  [FE]                            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(mean,  normal  +  1);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(mean,  normal  +  1);	  this.maxIterations    =    Math.max(mean,    epsilon    +    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
80	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	56	1	add
81	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	56	1	add
82	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  epsilon;  this.maxIterations  =  maxIterations;  [CE]  possible  loss  of  precision  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  epsilon;  this.maxIterations  =  maxIterations;	  	non-compiled	[CE]  possible  loss  of  precision	56	None	add
83	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]        MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	56	None	add
84	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]          MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	56	1	add
85	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [FE]  MathRuntimeException$4  [FE]          MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	56	1	add
86	[BUG]  [BUGGY]  this.maxIterations  =  epsilon;  This.maxIterations  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  epsilon;  This.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  epsilon;  This.maxIterations  =  maxIterations;	          this.maxIterations    =    maxIterations;    This.maxIterations    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
87	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations;  This.maxIterations  =  epsilon;  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  maxIterations;  This.maxIterations  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  maxIterations;  This.maxIterations  =  epsilon;	          this.maxIterations    =    maxIterations;    This.maxIterations    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
88	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	                this.epsilon        =        epsilon;        this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  this.epsilon  =  epsilon;	  	compilable	  [FE]  MathRuntimeException$4  	35	1	add
89	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  this.epsilon  =  epsilon;	  	compilable	  [FE]  MathRuntimeException$4  	35	1	add
90	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  epsilon  =  epsilon;  this.epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	                this.epsilon        =        epsilon;        this.epsilon    =    epsilon;    epsilon  =  epsilon;  this.epsilon  =  epsilon;	  	compilable	  [FE]  MathRuntimeException$4  	35	1	add
91	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  epsilon  =  epsilon;  this.epsilon  =  epsilon;  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  epsilon  =  epsilon;  this.epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.epsilon    =    epsilon;    epsilon  =  epsilon;  this.epsilon  =  epsilon;	  	compilable	  [FE]  MathRuntimeException$4  	35	1	add
92	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  This.epsilon  =  epsilon;  this.epsilon  =  epsilon;  [CE]  cannot  find  symbol  This  [FE]        MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  This.epsilon  =  epsilon;  this.epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.epsilon    =    epsilon;    This.epsilon  =  epsilon;  this.epsilon  =  epsilon;	  	non-compiled	[CE]  cannot  find  symbol  This	35	None	add
93	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]          MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.epsilon    =    epsilon;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	35	None	add
94	[BUG]  [BUGGY]  this.mean  =  DEFAULT_PESILON;  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.mean  =  DEFAULT_PESILON;  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.mean  =  DEFAULT_PESILON;	  this.mean    =    DEFAULT_EPSILON;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
95	[BUG]  [BUGGY]  safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [CE]  ';'  expected  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }	  safely())    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  ';'  expected	73	None	replace
96	[BUG]  [BUGGY]  safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  ';'  expected  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  safely())    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  ';'  expected	73	None	replace
97	[BUG]  [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  this.maxIterations  =  epsilon;  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  this.maxIterations  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  this.maxIterations  =  epsilon;	          this.maxIterations    =    maxIterations;    this.maxIterations    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
98	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  this.maxIterations  =  epsilon;  this.maxIterations  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  this.maxIterations  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  DEFAULT_EPSILON;  this.maxIterations  =  epsilon;  this.maxIterations  =  maxIterations;	          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
99	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(normal,  deFAULT_EPSILON);  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(normal,  deFAULT_EPSILON);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(normal,  deFAULT_EPSILON);	  this.maxIterations    =    Math.max(deFAULT_EPSILON,    normal);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
100	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(epsilon,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(epsilon,  maxIterations);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(epsilon,  maxIterations);	  this.maxIterations    =    Math.max(epsilon,    mean);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
101	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(epsilon,  DEFAULT_EPSILON);  [CE]  illegal  start  of  expression  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(epsilon,  DEFAULT_EPSILON);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(epsilon,  DEFAULT_EPSILON);	  this.maxIterations    =    Math.max(epsilon,    mean);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
102	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(DEFAULT_EPSILON,  epsilon  +  1);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(DEFAULT_EPSILON,  epsilon  +  1);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(DEFAULT_EPSILON,  epsilon  +  1);	  this.maxIterations    =    Math.max(DEFAULT_EPSILON,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
103	[BUG]  [BUGGY]  parent  ==  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  not  a  statement  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  ==  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  ==  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  parent!=    null    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    	non-compiled	[CE]  not  a  statement	19	None	replace
104	[BUG]  [BUGGY]  parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  not  a  statement  [FE]                          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  parent!=    null    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    	non-compiled	[CE]  not  a  statement	19	None	replace
105	[BUG]  [BUGGY]  parent  ==  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [CE]  not  a  statement  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  ==  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  ==  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }	  parent    ==    null    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
106	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
107	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
108	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
109	[BUG]  [BUGGY]  this.epsilon  =  epsilon  +  2;  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  epsilon  +  2;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  epsilon  +  2;	  this.epsilon    =    epsilon    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
110	[BUG]  [BUGGY]  this.epsilon  =  epsilon  +  3;  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  epsilon  +  3;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  epsilon  +  3;	  this.epsilon    =    epsilon    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
111	[BUG]  [BUGGY]  parent  ==  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [CE]  not  a  statement  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  ==  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  ==  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }	  parent!=    null    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  not  a  statement	51	None	replace
112	[BUG]  [BUGGY]  parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [CE]  not  a  statement  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }	  parent!=    null    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  not  a  statement	51	None	replace
113	[BUG]  [BUGGY]  parent  ==  null  ||  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [CE]  not  a  statement  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  ==  null  ||  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  ==  null  ||  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }	  parent!=    null    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  not  a  statement	51	None	replace
114	[BUG]  [BUGGY]  parent  ==  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  not  a  statement  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  ==  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  ==  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  parent!=    null    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  not  a  statement	53	None	replace
115	[BUG]  [BUGGY]  parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  not  a  statement  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  parent!=    null    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  not  a  statement	53	None	replace
116	[BUG]  [BUGGY]  MutableFormats.assertEquals(mean,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(mean,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(mean,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
117	[BUG]  [BUGGY]  MutableFormats.assertEquals(DEFAULT_EPSILON,  normal,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(DEFAULT_EPSILON,  normal,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(DEFAULT_EPSILON,  normal,  DEFAULT_MAX_ITERATIONS);	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
118	[BUG]  [BUGGY]  parent  ==  null  &&  mean  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  ==  null  &&  mean  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  ==  null  &&  mean  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }	  parent    ==    null    ||    mean    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
119	[BUG]  [BUGGY]  readFully();  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  readFully();  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	readFully();	  readMean();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
120	[BUG]  [BUGGY]  readFunction();  [CE]  illegal  start  of  expression  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  readFunction();  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	readFunction();	  readMean();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
121	[BUG]  [BUGGY]  MutableFormats.assertEquals(mean,  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS));  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(mean,  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS));  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(mean,  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS));	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS));    	non-compiled	[CE]  ';'  expected	94	None	replace
122	[BUG]  [BUGGY]  MutableFormats.assertEquals(mean,  normal,  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS));  [CE]  ';'  expected  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(mean,  normal,  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS));  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(mean,  normal,  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS));	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS));    	non-compiled	[CE]  ';'  expected	94	None	replace
123	[BUG]  [BUGGY]  MutableFormats.assertEquals(message,  normal,  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS));  [CE]  ';'  expected  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(message,  normal,  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS));  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(message,  normal,  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS));	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS));    	non-compiled	[CE]  ';'  expected	94	None	replace
124	[BUG]  [BUGGY]  MutableFormats.assertEquals(DEFAULT_EPSILON,  mean,  DEFAULT_MAX_ITERATIONS));  [CE]  ';'  expected  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(DEFAULT_EPSILON,  mean,  DEFAULT_MAX_ITERATIONS));  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(DEFAULT_EPSILON,  mean,  DEFAULT_MAX_ITERATIONS));	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS));    	non-compiled	[CE]  ';'  expected	94	None	replace
125	[BUG]  [BUGGY]  aughtException(Math.abs(normal))  <  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  aughtException(Math.abs(normal))  <  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	aughtException(Math.abs(normal))  <  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));	  aughtException(Math.abs(mean))    <    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(1));    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
126	[BUG]  [BUGGY]  aughtException(Math.abs(p))  <  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  aughtException(Math.abs(p))  <  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	aughtException(Math.abs(p))  <  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));	  aughtException(Math.abs(mean))    <    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(1));    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
127	[BUG]  [BUGGY]  peat  =  Math.pow(10,  Math.log(epsilon),  DEFAULT_EPSILON);  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.pow(10,  Math.log(epsilon),  DEFAULT_EPSILON);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.pow(10,  Math.log(epsilon),  DEFAULT_EPSILON);	  peat    =    Math.pow(10,    Math.log(epsilon),    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
128	[BUG]  [BUGGY]  peat  =  Math.pow(10,  Math.log(epsilon)/  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.pow(10,  Math.log(epsilon)/  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.pow(10,  Math.log(epsilon)/  DEFAULT_MAX_ITERATIONS);	  peat    =    Math.pow(10,    Math.log(epsilon),    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
129	[BUG]  [BUGGY]  peat  =  Math.pow(10,  Math.log(DEFAULT_EPSILON),  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.pow(10,  Math.log(DEFAULT_EPSILON),  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.pow(10,  Math.log(DEFAULT_EPSILON),  DEFAULT_MAX_ITERATIONS);	  peat    =    Math.pow(10,    Math.log(epsilon),    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
130	[BUG]  [BUGGY]  peat  =  Math.pow(10,  Math.rint(epsilon),  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.pow(10,  Math.rint(epsilon),  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.pow(10,  Math.rint(epsilon),  DEFAULT_MAX_ITERATIONS);	  peat    =    Math.pow(10,    Math.log(epsilon),    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
131	[BUG]  [BUGGY]  allowMean(Math.abs(epsilon))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [CE]  ';'  expected  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  allowMean(Math.abs(epsilon))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	allowMean(Math.abs(epsilon))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }	  allowMean(Math.abs(mean))    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  ';'  expected	102	None	replace
132	[BUG]  [BUGGY]  allowMean(Math.abs(epsilon))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [CE]  ';'  expected  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  allowMean(Math.abs(epsilon))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	allowMean(Math.abs(epsilon))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }	  allowMean(Math.abs(mean))    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  ';'  expected	102	None	replace
133	[BUG]  [BUGGY]  MutableFormats.assertEquals(mean,  Math.abs(epsilon))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  ';'  expected  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(mean,  Math.abs(epsilon))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(mean,  Math.abs(epsilon))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  MutableFormats.assertEquals(normal,    Math.abs(epsilon))    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  ';'  expected	108	None	replace
134	[BUG]  [BUGGY]  MutableFormats.assertEquals(message,  Math.abs(epsilon))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  ';'  expected  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(message,  Math.abs(epsilon))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(message,  Math.abs(epsilon))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  MutableFormats.assertEquals(normal,    Math.abs(epsilon))    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  ';'  expected	108	None	replace
135	[BUG]  [BUGGY]  MutableFormats.assertEquals(Math.abs(epsilon))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  ';'  expected  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(Math.abs(epsilon))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(Math.abs(epsilon))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  MutableFormats.assertEquals(normal,    Math.abs(epsilon))    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  ';'  expected	108	None	replace
136	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  DEFAULT_EPSILON,  epsilon);  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(mean,  DEFAULT_EPSILON,  epsilon);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(mean,  DEFAULT_EPSILON,  epsilon);	  this.maxIterations    =    Math.max(mean,    DEFAULT_EPSILON);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
137	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(mean,  DEFAULT_MAX_ITERATIONS);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(mean,  DEFAULT_MAX_ITERATIONS);	  this.maxIterations    =    Math.max(mean,    DEFAULT_EPSILON);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
138	[BUG]  [BUGGY]  this.maxIterations  =  Math.min(mean,  DEFAULT_EPSILON);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.min(mean,  DEFAULT_EPSILON);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.min(mean,  DEFAULT_EPSILON);	  this.maxIterations    =    Math.max(mean,    DEFAULT_EPSILON);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
139	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    epsilon  =  epsilon;  this.epsilon  =  epsilon;  epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	                this.epsilon        =        epsilon;        epsilon    =    epsilon;    this.epsilon  =  epsilon;  epsilon  =  epsilon;	  	compilable	  [FE]  MathRuntimeException$4  	37	1	add
140	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    epsilon  =  epsilon;  this.epsilon  =  epsilon;  epsilon  =  epsilon;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    epsilon  =  epsilon;  this.epsilon  =  epsilon;  epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        epsilon    =    epsilon;    this.epsilon  =  epsilon;  epsilon  =  epsilon;	  	compilable	  [FE]  MathRuntimeException$4  	37	1	add
141	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    epsilon  =  epsilon;  epsilon  =  epsilon;  epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	                this.epsilon        =        epsilon;        epsilon    =    epsilon;    epsilon  =  epsilon;  epsilon  =  epsilon;	  	compilable	  [FE]  MathRuntimeException$4  	37	1	add
142	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    epsilon  =  epsilon;  epsilon  =  epsilon;  epsilon  =  epsilon;  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    epsilon  =  epsilon;  epsilon  =  epsilon;  epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        epsilon    =    epsilon;    epsilon  =  epsilon;  epsilon  =  epsilon;	  	compilable	  [FE]  MathRuntimeException$4  	37	1	add
143	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    epsilon  =  epsilon;  This.epsilon  =  epsilon;  epsilon  =  epsilon;  [CE]  cannot  find  symbol  This  [FE]        MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    epsilon  =  epsilon;  This.epsilon  =  epsilon;  epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        epsilon    =    epsilon;    This.epsilon  =  epsilon;  epsilon  =  epsilon;	  	non-compiled	[CE]  cannot  find  symbol  This	37	None	add
144	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    epsilon  =  epsilon;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]          MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    epsilon  =  epsilon;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        epsilon    =    epsilon;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	37	None	add
145	[BUG]  [BUGGY]  int  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  int  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	int  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    int    epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
146	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  this.maxIterations  =  epsilon;  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  this.maxIterations  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  DEFAULT_EPSILON;  this.maxIterations  =  epsilon;	          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    int    epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
147	[BUG]  [BUGGY]  epsilon  =  DEFAULT_EPSILON;  this.maxIterations  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  epsilon  =  DEFAULT_EPSILON;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	epsilon  =  DEFAULT_EPSILON;  this.maxIterations  =  maxIterations;	          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    int    epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
148	[BUG]  [BUGGY]  safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  ';'  expected  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  safely())    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
149	[BUG]  [BUGGY]  safeToken())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  ';'  expected  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safeToken())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safeToken())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  safely())    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
150	[BUG]  [BUGGY]  peech  ||  DEFAULT_EPSILON)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  not  a  statement  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peech  ||  DEFAULT_EPSILON)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peech  ||  DEFAULT_EPSILON)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  peech    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  not  a  statement	33	None	replace
151	[BUG]  [BUGGY]  peech  ||  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  not  a  statement  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peech  ||  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peech  ||  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  peech    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  not  a  statement	33	None	replace
152	[BUG]  [BUGGY]  safePosition(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS  [CE]  ';'  expected  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX    	non-compiled	[CE]  ';'  expected	65	None	replace
153	[BUG]  [BUGGY]  safePosition(peer)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX  [CE]  ';'  expected  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(peer)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(peer)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX    	non-compiled	[CE]  ';'  expected	65	None	replace
154	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.maxIterations    =    maxIterations;    this.maxIterations  =  maxIterations;  this.maxIterations  =  maxIterations;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	                this.maxIterations        =        maxIterations;        this.maxIterations    =    maxIterations;    this.maxIterations  =  maxIterations;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	8	1	add
155	[BUG]  [BUGGY]          this.maxIterations    =    maxIterations;    this.maxIterations  =  maxIterations;  this.maxIterations  =  maxIterations;  this.maxIterations  =  maxIterations;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.maxIterations    =    maxIterations;    this.maxIterations  =  maxIterations;  this.maxIterations  =  maxIterations;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.maxIterations        =        maxIterations;        this.maxIterations    =    maxIterations;    this.maxIterations  =  maxIterations;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	8	1	add
156	[BUG]  [BUGGY]          this.maxIterations    =    maxIterations;    this.maxIterations  =  maxIterations;  this.maxIterations  =  epsilon;  this.maxIterations  =  maxIterations;  [CE]  possible  loss  of  precision  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.maxIterations    =    maxIterations;    this.maxIterations  =  maxIterations;  this.maxIterations  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.maxIterations        =        maxIterations;        this.maxIterations    =    maxIterations;    this.maxIterations  =  epsilon;  this.maxIterations  =  maxIterations;	  	non-compiled	[CE]  possible  loss  of  precision	8	None	add
157	[BUG]  [BUGGY]          this.maxIterations    =    maxIterations;    this.maxIterations  =  maxIterations;  this.maxIterations  =  minIterations;  this.maxIterations  =  maxIterations;  [CE]  cannot  find  symbol  minIterations  [FE]        MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.maxIterations    =    maxIterations;    this.maxIterations  =  maxIterations;  this.maxIterations  =  minIterations;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.maxIterations        =        maxIterations;        this.maxIterations    =    maxIterations;    this.maxIterations  =  minIterations;  this.maxIterations  =  maxIterations;	  	non-compiled	[CE]  cannot  find  symbol  minIterations	8	None	add
158	[BUG]  [BUGGY]          this.maxIterations    =    maxIterations;    this.maxIterations  =  maxIterations;  This.maxIterations  =  maxIterations;  this.maxIterations  =  maxIterations;  [CE]  cannot  find  symbol  This  [FE]          MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.maxIterations    =    maxIterations;    this.maxIterations  =  maxIterations;  This.maxIterations  =  maxIterations;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.maxIterations        =        maxIterations;        this.maxIterations    =    maxIterations;    This.maxIterations  =  maxIterations;  this.maxIterations  =  maxIterations;	  	non-compiled	[CE]  cannot  find  symbol  This	8	None	add
159	[BUG]  [BUGGY]  safePositionIfNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  ';'  expected  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePositionIfNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePositionIfNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  safePositionIfNull(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  ';'  expected	86	None	replace
160	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(Math.max(epsilon,  DEFAULT_EPSILON));  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(Math.max(epsilon,  DEFAULT_EPSILON));  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(Math.max(epsilon,  DEFAULT_EPSILON));	  this.maxIterations    =    Math.max(Math.max(DEFAULT_EPSILON,    p));    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
161	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(Math.max(mean,  DEFAULT_EPSILON));  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(Math.max(mean,  DEFAULT_EPSILON));  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(Math.max(mean,  DEFAULT_EPSILON));	  this.maxIterations    =    Math.max(Math.max(DEFAULT_EPSILON,    p));    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
162	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(Math.max(DEFAULT_EPSILON,  mean));  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(Math.max(DEFAULT_EPSILON,  mean));  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(Math.max(DEFAULT_EPSILON,  mean));	  this.maxIterations    =    Math.max(Math.max(DEFAULT_EPSILON,    p));    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
163	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(Math.max(deFAULT_EPSILON,  epsilon));  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(Math.max(deFAULT_EPSILON,  epsilon));  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(Math.max(deFAULT_EPSILON,  epsilon));	  this.maxIterations    =    Math.max(Math.max(DEFAULT_EPSILON,    p));    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
164	[BUG]  [BUGGY]  this.peech)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [CE]  not  a  statement  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.peech)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.peech)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }	  peech)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  not  a  statement	52	None	replace
165	[BUG]  [BUGGY]  int  epsilon  =  epsilon;  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  int  epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	int  epsilon  =  epsilon;	          this.epsilon    =    epsilon;    int    epsilon    =    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
166	[BUG]  [BUGGY]  this.epsilon  =  p;  int  epsilon  =  epsilon;  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  p;  int  epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  p;  int  epsilon  =  epsilon;	          this.epsilon    =    epsilon;    int    epsilon    =    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
167	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  int  epsilon  =  epsilon;  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  int  epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  DEFAULT_EPSILON;  int  epsilon  =  epsilon;	          this.epsilon    =    epsilon;    int    epsilon    =    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
168	[BUG]  [BUGGY]  parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  not  a  statement  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  parent!=    null    &&    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  not  a  statement	32	None	replace
169	[BUG]  [BUGGY]  parent  ==  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  not  a  statement  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  ==  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  ==  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  parent!=    null    &&    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  not  a  statement	32	None	replace
170	[BUG]  [BUGGY]  MutableFormats.notNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon);  }  [CE]  ';'  expected  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.notNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.notNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon);  }	  MutableFormats.notEmpty(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    epsilon);    }    	non-compiled	[CE]  ';'  expected	109	None	replace
171	[BUG]  [BUGGY]  MutableFormats.notEmpty(message)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon);  }  [CE]  ';'  expected  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.notEmpty(message)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.notEmpty(message)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon);  }	  MutableFormats.notEmpty(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    epsilon);    }    	non-compiled	[CE]  ';'  expected	109	None	replace
172	[BUG]  [BUGGY]  this.epsilon  =  epsilon;  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  epsilon;  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  epsilon;  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;	  this.epsilon    =    epsilon;    this.maxIterations    =    DEFAULT_EPSILON;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
173	[BUG]  [BUGGY]  safePosition(epsilon)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  }  [CE]  ';'  expected  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(epsilon)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(epsilon)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  }	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    }    	non-compiled	[CE]  ';'  expected	63	None	replace
174	[BUG]  [BUGGY]  safePosition(peer)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  }  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(peer)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(peer)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  }	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    }    	non-compiled	[CE]  ';'  expected	63	None	replace
175	[BUG]  [BUGGY]  this.mean  =  DEFAULT_EPSILON?  DEFAULT_EPSILON  :  mean;  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.mean  =  DEFAULT_EPSILON?  DEFAULT_EPSILON  :  mean;  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.mean  =  DEFAULT_EPSILON?  DEFAULT_EPSILON  :  mean;	  this.mean    =    mean;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
176	[BUG]  [BUGGY]  safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [CE]  ';'  expected  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }	  safely())    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(1));    }    	non-compiled	[CE]  ';'  expected	78	None	replace
177	[BUG]  [BUGGY]  safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }	  safely())    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(1));    }    	non-compiled	[CE]  ';'  expected	78	None	replace
178	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(normal,  DEFAULT_EPSILON,  epsilon,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(normal,  DEFAULT_EPSILON,  epsilon,  maxIterations);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(normal,  DEFAULT_EPSILON,  epsilon,  maxIterations);	  this.maxIterations    =    Math.max(normal,    DEFAULT_EPSILON,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
179	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(normal,  DEFAULT_EPSILON,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(normal,  DEFAULT_EPSILON,  maxIterations);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(normal,  DEFAULT_EPSILON,  maxIterations);	  this.maxIterations    =    Math.max(normal,    DEFAULT_EPSILON,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
180	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(deFAULT_EPSILON,  epsilon  +  1);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(deFAULT_EPSILON,  epsilon  +  1);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(deFAULT_EPSILON,  epsilon  +  1);	  this.maxIterations    =    Math.max(deFAULT_EPSILON,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
181	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(epsilon,  deFAULT_EPSILON);  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(epsilon,  deFAULT_EPSILON);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(epsilon,  deFAULT_EPSILON);	  this.maxIterations    =    Math.max(deFAULT_EPSILON,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
182	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(deFAULT_EPSILON,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(deFAULT_EPSILON,  maxIterations);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(deFAULT_EPSILON,  maxIterations);	  this.maxIterations    =    Math.max(deFAULT_EPSILON,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
183	[BUG]  [BUGGY]  peech)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  not  a  statement  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peech)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peech)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  peech)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  not  a  statement	50	None	replace
184	[BUG]  [BUGGY]  poke)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  not  a  statement  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  poke)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	poke)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  peech)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  not  a  statement	50	None	replace
185	[BUG]  [BUGGY]  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
186	[BUG]  [BUGGY]  while(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  while(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	while(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }	  While(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
187	[BUG]  [BUGGY]  while(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  while(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	while(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  While(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
188	[BUG]  [BUGGY]  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));	  try    {    [Delete]    catch(Throwable)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
189	[BUG]  [BUGGY]  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));	  try    {    [Delete]    catch(Throwable)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
190	[BUG]  [BUGGY]  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(2));  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(2));  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(2));	  try    {    [Delete]    catch(Throwable)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
191	[BUG]  [BUGGY]  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  new  Integer(0));  [CE]  illegal  start  of  expression  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  new  Integer(0));  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  new  Integer(0));	  try    {    [Delete]    catch(Throwable)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
192	[BUG]  [BUGGY]  MutableFormats.notNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.notNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.notNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  MutableFormats.notEmpty(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    }    	non-compiled	[CE]  ';'  expected	107	None	replace
193	[BUG]  [BUGGY]  MutableFormats.notEmpty(message)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  ';'  expected  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.notEmpty(message)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.notEmpty(message)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  MutableFormats.notEmpty(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    }    	non-compiled	[CE]  ';'  expected	107	None	replace
194	[BUG]  [BUGGY]  MutableFormats.notEmpty(null)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  ';'  expected  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.notEmpty(null)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.notEmpty(null)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  MutableFormats.notEmpty(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    }    	non-compiled	[CE]  ';'  expected	107	None	replace
195	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(epsilon,  normal);  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(epsilon,  normal);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(epsilon,  normal);	  this.maxIterations    =    Math.max(normal,    me);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
196	[BUG]  [BUGGY]  parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [CE]  not  a  statement  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent!=  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }	  parent!=    null    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  not  a  statement	17	None	replace
197	[BUG]  [BUGGY]  n  =  0;  this.epsilon  =  0;  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  n  =  0;  this.epsilon  =  0;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	n  =  0;  this.epsilon  =  0;	          this.epsilon    =    epsilon;    this.epsilon    =    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
198	[BUG]  [BUGGY]  this.epsilon  =  0;  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  0;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  0;	          this.epsilon    =    epsilon;    this.epsilon    =    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
199	[BUG]  [BUGGY]  safePositionIfNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  ';'  expected  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePositionIfNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePositionIfNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  safePositionIfNull(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  ';'  expected	74	None	replace
200	[BUG]  [BUGGY]  safePosition(p)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(p)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(p)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  ';'  expected	67	None	replace
201	[BUG]  [BUGGY]  MutableFormats.notNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  ';'  expected  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.notNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.notNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  MutableFormats.notEmpty(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  ';'  expected	106	None	replace
202	[BUG]  [BUGGY]  MutableFormats.notEmpty(message)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.notEmpty(message)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.notEmpty(message)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  MutableFormats.notEmpty(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  ';'  expected	106	None	replace
203	[BUG]  [BUGGY]  safePosition(epsilon)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(epsilon)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(epsilon)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  ';'  expected	64	None	replace
204	[BUG]  [BUGGY]  safePosition(peer)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  [CE]  ';'  expected  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(peer)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(peer)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  ';'  expected	64	None	replace
205	[BUG]  [BUGGY]  int  read()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  int  read()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	int  read()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }	  read()    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(1));    }    	non-compiled	[CE]  ';'  expected	79	None	replace
206	[BUG]  [BUGGY]  readFully()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [CE]  ';'  expected  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  readFully()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	readFully()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }	  read()    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(1));    }    	non-compiled	[CE]  ';'  expected	79	None	replace
207	[BUG]  [BUGGY]  peech  ||  DEFAULT_EPSILON)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  not  a  statement  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peech  ||  DEFAULT_EPSILON)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peech  ||  DEFAULT_EPSILON)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  peech    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  not  a  statement	31	None	replace
208	[BUG]  [BUGGY]  peech  ||  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  not  a  statement  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peech  ||  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peech  ||  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  peech    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  not  a  statement	31	None	replace
209	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(Math.max(normal,  DEFAULT_EPSILON,  epsilon);  [CE]  ')'  expected  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(Math.max(normal,  DEFAULT_EPSILON,  epsilon);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(Math.max(normal,  DEFAULT_EPSILON,  epsilon);	  this.maxIterations    =    Math.max(normal,    DEFAULT_EPSILON,    mean);    	non-compiled	[CE]  ')'  expected	45	None	replace
210	[BUG]  [BUGGY]  safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [CE]  ';'  expected  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }	  safely())    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  ';'  expected	85	None	replace
211	[BUG]  [BUGGY]  While(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  ';'  expected  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  While(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	While(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  While(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  ';'  expected	41	None	replace
212	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  mean);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(mean,  mean);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(mean,  mean);	  this.maxIterations    =    Math.max(mean,    p);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
213	[BUG]  [BUGGY]  this.maxIterations  =  Math.min(mean,  p);  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.min(mean,  p);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.min(mean,  p);	  this.maxIterations    =    Math.max(mean,    p);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
214	[BUG]  [BUGGY]  peat  =  Math.pow(10,  Math.floor(epsilon),  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.pow(10,  Math.floor(epsilon),  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.pow(10,  Math.floor(epsilon),  DEFAULT_MAX_ITERATIONS);	  peat    =    Math.pow(10,    Math.log(epsilon),    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
215	[BUG]  [BUGGY]  safePosition(maxIterations)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX  [CE]  ';'  expected  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(maxIterations)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(maxIterations)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX    	non-compiled	[CE]  ';'  expected	65	None	replace
216	[BUG]  [BUGGY]  safePosition())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  ';'  expected  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  safely())    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
217	[BUG]  [BUGGY]  MutableFormats.assertEquals(Math.abs(epsilon),  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(Math.abs(epsilon),  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(Math.abs(epsilon),  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
218	[BUG]  [BUGGY]  this.mean  =  DEFAULT_EPSILON  +  1;  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.mean  =  DEFAULT_EPSILON  +  1;  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.mean  =  DEFAULT_EPSILON  +  1;	  this.mean    =    DEFAULT_EPSILON;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
219	[BUG]  [BUGGY]  parent  ==  null  ||  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  not  a  statement  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  ==  null  ||  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  ==  null  ||  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  parent!=    null    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  not  a  statement	53	None	replace
220	[BUG]  [BUGGY]  parent  ==  null  ||  mean  <  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [CE]  not  a  statement  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  ==  null  ||  mean  <  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  ==  null  ||  mean  <  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }	  parent    ==    null    ||    mean    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  not  a  statement	18	None	replace
221	[BUG]  [BUGGY]  this.epsilon  =  epsilon;  this.maxIterations  =  epsilon;  this.maxIterations  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  epsilon;  this.maxIterations  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  epsilon;  this.maxIterations  =  epsilon;  this.maxIterations  =  maxIterations;	          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
222	[BUG]  [BUGGY]  safePosition(maxIterations)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(maxIterations)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(maxIterations)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  ';'  expected	64	None	replace
223	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(deFAULT_EPSILON,  mean);  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(deFAULT_EPSILON,  mean);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(deFAULT_EPSILON,  mean);	  this.maxIterations    =    Math.max(deFAULT_EPSILON,    normal);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
224	[BUG]  [BUGGY]  MutableFormats.assertEquals(Math.abs(epsilon),  DEFAULT_EPSILON,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(Math.abs(epsilon),  DEFAULT_EPSILON,  maxIterations);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(Math.abs(epsilon),  DEFAULT_EPSILON,  maxIterations);	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON,    epsilon,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
225	[BUG]  [BUGGY]  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPS  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPS  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPS	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
226	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
227	[BUG]  [BUGGY]  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
228	[BUG]  [BUGGY]  parent  =  NormalDistributionImpl.DEFAULT_EPSILON;  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  =  NormalDistributionImpl.DEFAULT_EPSILON;  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  =  NormalDistributionImpl.DEFAULT_EPSILON;	  parent    =    normal;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
229	[BUG]  [BUGGY]  parent  =  NormalDistributionImpl.createPartialDistribution(mean);  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  =  NormalDistributionImpl.createPartialDistribution(mean);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  =  NormalDistributionImpl.createPartialDistribution(mean);	  parent    =    normal;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
230	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
231	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NO  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NO  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NO	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
232	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  DEFAULT_EPSILON;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
233	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(maxIterations,  DEFAULT_EPSILON);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(maxIterations,  DEFAULT_EPSILON);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(maxIterations,  DEFAULT_EPSILON);	  this.maxIterations    =    Math.max(deFAULT_EPSILON,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
234	[BUG]  [BUGGY]  allowMean(Math.abs(normal))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [CE]  ';'  expected  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  allowMean(Math.abs(normal))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	allowMean(Math.abs(normal))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }	  allowMean(Math.abs(mean))    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  ';'  expected	102	None	replace
235	[BUG]  [BUGGY]  allowMean(Math.abs(normal))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [CE]  ';'  expected  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  allowMean(Math.abs(normal))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	allowMean(Math.abs(normal))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }	  allowMean(Math.abs(mean))    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  ';'  expected	102	None	replace
236	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  this.epsilon  =  epsilon;  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  this.epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  DEFAULT_EPSILON;  this.epsilon  =  epsilon;	          this.epsilon    =    epsilon;    this.epsilon    =    epsilon;    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
237	[BUG]  [BUGGY]  if(deFAULT_EPSILON  <  =  0)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  if(deFAULT_EPSILON  <  =  0)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	if(deFAULT_EPSILON  <  =  0)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }	          this.epsilon    =    epsilon;    this.epsilon    =    epsilon;    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
238	[BUG]  [BUGGY]  this.mean  =  DEFAULT_EPSILON;  this.epsilon  =  epsilon;  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.mean  =  DEFAULT_EPSILON;  this.epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.mean  =  DEFAULT_EPSILON;  this.epsilon  =  epsilon;	          this.epsilon    =    epsilon;    this.epsilon    =    epsilon;    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
239	[BUG]  [BUGGY]  safePosition())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [CE]  ';'  expected  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }	  safely())    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  ';'  expected	73	None	replace
240	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(Math.max(mean,  p));  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(Math.max(mean,  p));  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(Math.max(mean,  p));	  this.maxIterations    =    Math.max(Math.max(DEFAULT_EPSILON,    p));    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
241	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(Math.max(DEFAULT_EPSILON,  normal));  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(Math.max(DEFAULT_EPSILON,  normal));  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(Math.max(DEFAULT_EPSILON,  normal));	  this.maxIterations    =    Math.max(Math.max(DEFAULT_EPSILON,    p));    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
242	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations;  this.maxIterations  =  DEFAULT_EPSILON;  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  maxIterations;  this.maxIterations  =  DEFAULT_EPSILON;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  maxIterations;  this.maxIterations  =  DEFAULT_EPSILON;	          this.maxIterations    =    maxIterations;    this.maxIterations    =    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
243	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  DEFAULT_EPSILON;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
244	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  this.maxIterations  =  epsilon;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  this.maxIterations  =  epsilon;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  DEFAULT_EPSILON;  this.maxIterations  =  epsilon;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
245	[BUG]  [BUGGY]  MutableFormats.notEmpty(normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.notEmpty(normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.notEmpty(normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  MutableFormats.notEmpty(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    }    	non-compiled	[CE]  ';'  expected	107	None	replace
246	[BUG]  [BUGGY]  parent!=  null  &&  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  not  a  statement  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent!=  null  &&  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent!=  null  &&  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  parent!=    null    &&    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  not  a  statement	32	None	replace
247	[BUG]  [BUGGY]  this.maxIterations  =  MAX_EPSILON;  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  MAX_EPSILON;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  MAX_EPSILON;	  this.maxIterations    =    MAX_ITERATIONS;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
248	[BUG]  [BUGGY]  MutableFormats.assertEquals(deFAULT_EPSILON,  normal,  DEFAULT_MAX_ITERATIONS));  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(deFAULT_EPSILON,  normal,  DEFAULT_MAX_ITERATIONS));  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(deFAULT_EPSILON,  normal,  DEFAULT_MAX_ITERATIONS));	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS));    	non-compiled	[CE]  ';'  expected	94	None	replace
249	[BUG]  [BUGGY]  MutableFormats.assertEquals(DEFAULT_EPSILON_MEAN,  mean,  DEFAULT_MAX_ITERATIONS));  [CE]  ';'  expected  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(DEFAULT_EPSILON_MEAN,  mean,  DEFAULT_MAX_ITERATIONS));  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(DEFAULT_EPSILON_MEAN,  mean,  DEFAULT_MAX_ITERATIONS));	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS));    	non-compiled	[CE]  ';'  expected	94	None	replace
250	[BUG]  [BUGGY]  this.epsilon  =  epsilon;  int  epsilon  =  DEFAULT_EPSILON;  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  epsilon;  int  epsilon  =  DEFAULT_EPSILON;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  epsilon;  int  epsilon  =  DEFAULT_EPSILON;	          this.epsilon    =    epsilon;    int    epsilon    =    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
251	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.epsilon    =    epsilon;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	35	None	add
252	[BUG]  [BUGGY]  peat  =  Math.max(peat,  DEFAULT_EPSILON);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.max(peat,  DEFAULT_EPSILON);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.max(peat,  DEFAULT_EPSILON);	  peat    =    Math.max(mean,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
253	[BUG]  [BUGGY]  peat  =  Math.max(mean,  MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.max(mean,  MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.max(mean,  MAX_ITERATIONS);	  peat    =    Math.max(mean,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
254	[BUG]  [BUGGY]  parent!=  null  &&  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  not  a  statement  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent!=  null  &&  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent!=  null  &&  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  parent!=    null    &&    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  not  a  statement	34	None	replace
255	[BUG]  [BUGGY]  parent  ==  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  not  a  statement  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  ==  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  ==  null  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  parent!=    null    &&    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  not  a  statement	34	None	replace
256	[BUG]  [BUGGY]  this.epsilon  =  epsilon  +  1L;  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  epsilon  +  1L;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  epsilon  +  1L;	  this.epsilon    =    epsilon    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
257	[BUG]  [BUGGY]  safePosition())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [CE]  ';'  expected  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }	  safely())    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  ';'  expected	85	None	replace
258	[BUG]  [BUGGY]  reset();  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  reset();  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	reset();	  readMean();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
259	[BUG]  [BUGGY]  this.maxIterations  =  DEFAULT_EPSILON_MEAN;  this.maxIterations  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  DEFAULT_EPSILON_MEAN;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  DEFAULT_EPSILON_MEAN;  this.maxIterations  =  maxIterations;	          this.maxIterations    =    maxIterations;    this.maxIterations    =    minIterations;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
260	[BUG]  [BUGGY]  parent  ==  null  ||  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [CE]  not  a  statement  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  ==  null  ||  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  ==  null  ||  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }	  parent    ==    null    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
261	[BUG]  [BUGGY]  parent  ==  null  ||  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  not  a  statement  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  ==  null  ||  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  ==  null  ||  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  parent!=    null    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    	non-compiled	[CE]  not  a  statement	19	None	replace
262	[BUG]  [BUGGY]  this.epsilon  =  epsilon;  this.maxIterations  =  DEFAULT_EPSILON;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  epsilon;  this.maxIterations  =  DEFAULT_EPSILON;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  epsilon;  this.maxIterations  =  DEFAULT_EPSILON;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    This.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
263	[BUG]  [BUGGY]  this.epsilon  =  epsilon;  this.maxIterations  =  epsilon;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  epsilon;  this.maxIterations  =  epsilon;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  epsilon;  this.maxIterations  =  epsilon;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    This.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
264	[BUG]  [BUGGY]  MutableMean.abs(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [CE]  ';'  expected  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableMean.abs(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableMean.abs(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }	  allowMean(Math.abs(mean))    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(1));    }    	non-compiled	[CE]  ';'  expected	103	None	replace
265	[BUG]  [BUGGY]  enableMean(Math.abs(normal))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [CE]  ';'  expected  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  enableMean(Math.abs(normal))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	enableMean(Math.abs(normal))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }	  allowMean(Math.abs(mean))    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(1));    }    	non-compiled	[CE]  ';'  expected	103	None	replace
266	[BUG]  [BUGGY]  safePosition())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  ';'  expected  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  safely())    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  ';'  expected	66	None	replace
267	[BUG]  [BUGGY]  this.mean  =  epsilon;  this.maxIterations  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.mean  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.mean  =  epsilon;  this.maxIterations  =  maxIterations;	  this.epsilon    =    DEFAULT_EPSILON;    this.maxIterations    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
268	[BUG]  [BUGGY]  peech  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  not  a  statement  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peech  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peech  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  peech    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  not  a  statement	31	None	replace
269	[BUG]  [BUGGY]  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  else  {  throw  new  MathRuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  else  {  throw  new  MathRuntimeException( " ");  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  else  {  throw  new  MathRuntimeException( " ");  }	          this.epsilon    =    epsilon;    this.epsilon    =    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
270	[BUG]  [BUGGY]  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.epsilon    =    epsilon;    this.epsilon    =    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
271	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	58	1	add
272	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	58	1	add
273	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.minIterations  =  epsilon;  this.maxIterations  =  maxIterations;  [CE]  cannot  find  symbol  minIterations  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.minIterations  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.minIterations  =  epsilon;  this.maxIterations  =  maxIterations;	  	non-compiled	[CE]  cannot  find  symbol  minIterations	58	None	add
274	[BUG]  [BUGGY]  this.maxIterations  =  epsilon;  this.maxIters  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  epsilon;  this.maxIters  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  epsilon;  this.maxIters  =  maxIterations;	          this.maxIterations    =    maxIterations;    this.maxIters    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
275	[BUG]  [BUGGY]  this.maxIterations  =  DEFAULT_EPSILON_MEAN;  this.maxIters  =  maxIterations;  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  DEFAULT_EPSILON_MEAN;  this.maxIters  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  DEFAULT_EPSILON_MEAN;  this.maxIters  =  maxIterations;	          this.maxIterations    =    maxIterations;    this.maxIters    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
276	[BUG]  [BUGGY]  safePositionIfNull(message)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [CE]  ';'  expected  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePositionIfNull(message)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePositionIfNull(message)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }	  safePositionIfNull(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  ';'  expected	86	None	replace
277	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  epsilon  *  1);  [CE]  illegal  start  of  expression  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(mean,  epsilon  *  1);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(mean,  epsilon  *  1);	  this.maxIterations    =    Math.max(mean,    epsilon    +    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
278	[BUG]  [BUGGY]  this.maxIterations  =  Math.min(mean,  normal);  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.min(mean,  normal);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.min(mean,  normal);	  this.maxIterations    =    Math.max(normal,    me);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
279	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  epsilon  =  epsilon;  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  DEFAULT_EPSILON;  epsilon  =  epsilon;	          this.epsilon    =    epsilon;    epsilon    =    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
280	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  epsilon,  DEFAULT_EPSILON_MEAN);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(mean,  epsilon,  DEFAULT_EPSILON_MEAN);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(mean,  epsilon,  DEFAULT_EPSILON_MEAN);	  this.maxIterations    =    Math.max(mean,    epsilon,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
281	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(maxIterations,  epsilon,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(maxIterations,  epsilon,  maxIterations);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(maxIterations,  epsilon,  maxIterations);	  this.maxIterations    =    Math.max(mean,    epsilon,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
282	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(normal,  DEFAULT_EPSILON,  p);  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(normal,  DEFAULT_EPSILON,  p);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(normal,  DEFAULT_EPSILON,  p);	  this.maxIterations    =    Math.max(normal,    DEFAULT_EPSILON,    mean);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
283	[BUG]  [BUGGY]  safePosition(maxIterations)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  }  [CE]  ';'  expected  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(maxIterations)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(maxIterations)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  }	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    }    	non-compiled	[CE]  ';'  expected	62	None	replace
284	[BUG]  [BUGGY]  safePosition(peer)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [CE]  ';'  expected  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(peer)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(peer)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  ';'  expected	72	None	replace
285	[BUG]  [BUGGY]  peech  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  not  a  statement  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peech  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peech  &&  mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  peech    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  not  a  statement	33	None	replace
286	[BUG]  [BUGGY]  peech  ||  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  not  a  statement  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peech  ||  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peech  ||  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  peech    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  not  a  statement	33	None	replace
287	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  DEFAULT_EPSILON  -  mean);  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(mean,  DEFAULT_EPSILON  -  mean);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(mean,  DEFAULT_EPSILON  -  mean);	  this.maxIterations    =    Math.max(mean,    DEFAULT_EPSILON);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
288	[BUG]  [BUGGY]  this.maxIterations  =  Math.min(mean,  epsilon);  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.min(mean,  epsilon);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.min(mean,  epsilon);	  this.maxIterations    =    Math.max(epsilon,    mean);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
289	[BUG]  [BUGGY]  peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN,  maxIterations);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN,  maxIterations);	  peat    =    Math.max(mean,    DEFAULT_EPSILON_MEAN);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
290	[BUG]  [BUGGY]  peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN,  MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN,  MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN,  MAX_ITERATIONS);	  peat    =    Math.max(mean,    DEFAULT_EPSILON_MEAN);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
291	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	56	1	add
292	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	56	1	add
293	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;	  	compilable	  [FE]  MathRuntimeException$4  	56	1	add
294	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;	  	compilable	  [FE]  MathRuntimeException$4  	56	1	add
295	[BUG]  [BUGGY]  peat  =  Math.min(mean,  DEFAULT_EPSILON_MEAN)+  1;  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.min(mean,  DEFAULT_EPSILON_MEAN)+  1;  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.min(mean,  DEFAULT_EPSILON_MEAN)+  1;	  peat    =    Math.max(mean,    DEFAULT_EPSILON_MEAN)+    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
296	[BUG]  [BUGGY]  peat  =  Math.max(mean,  normal)+  1;  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.max(mean,  normal)+  1;  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.max(mean,  normal)+  1;	  peat    =    Math.max(mean,    DEFAULT_EPSILON_MEAN)+    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
297	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(mean,  maxIterations);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(mean,  maxIterations);	  this.maxIterations    =    Math.max(mean,    p);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
298	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    epsilon  =  epsilon;  this.epsilon  =  epsilon;  epsilon  =  epsileon;  [CE]  cannot  find  symbol  epsileon  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    epsilon  =  epsilon;  this.epsilon  =  epsilon;  epsilon  =  epsileon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        epsilon    =    epsilon;    this.epsilon  =  epsilon;  epsilon  =  epsileon;	  	non-compiled	[CE]  cannot  find  symbol  epsileon	37	None	add
299	[BUG]  [BUGGY]  this.mean  =  mean;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.mean  =  mean;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.mean  =  mean;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
300	[BUG]  [BUGGY]  this.mean  =  mean;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.mean  =  mean;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.mean  =  mean;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
301	[BUG]  [BUGGY]  MutableFormats.notEmpty(normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon);  }  [CE]  ';'  expected  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.notEmpty(normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.notEmpty(normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon);  }	  MutableFormats.notEmpty(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    epsilon);    }    	non-compiled	[CE]  ';'  expected	109	None	replace
302	[BUG]  [BUGGY]  MutableFormats.notEmpty(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  epsilon);  }  [CE]  ';'  expected  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.notEmpty(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  epsilon);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.notEmpty(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  epsilon);  }	  MutableFormats.notEmpty(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    epsilon);    }    	non-compiled	[CE]  ';'  expected	109	None	replace
303	[BUG]  [BUGGY]          this.maxIterations    =    maxIterations;    this.maxIterations  =  maxIterations;  this.maxIters  =  maxIterations;  this.maxIterations  =  maxIterations;  [CE]  cannot  find  symbol  maxIters  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.maxIterations    =    maxIterations;    this.maxIterations  =  maxIterations;  this.maxIters  =  maxIterations;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.maxIterations        =        maxIterations;        this.maxIterations    =    maxIterations;    this.maxIters  =  maxIterations;  this.maxIterations  =  maxIterations;	  	non-compiled	[CE]  cannot  find  symbol  maxIters	8	None	add
304	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(normal,  DEFAULT_EPSILON,  epsilon  +  1);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(normal,  DEFAULT_EPSILON,  epsilon  +  1);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(normal,  DEFAULT_EPSILON,  epsilon  +  1);	  this.maxIterations    =    Math.max(normal,    DEFAULT_EPSILON,    epsilon);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
305	[BUG]  [BUGGY]  poke)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [CE]  not  a  statement  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  poke)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	poke)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }	  peech)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  not  a  statement	52	None	replace
306	[BUG]  [BUGGY]  try  {  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  try  {  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	try  {	  try    {    [Delete]    catch(Throwable)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
307	[BUG]  [BUGGY]  try  ==  [Delete]  catch(Throwable  t)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [CE]  '{'  expected  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  try  ==  [Delete]  catch(Throwable  t)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	try  ==  [Delete]  catch(Throwable  t)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }	  try    {    [Delete]    catch(Throwable)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  '{'  expected	44	None	replace
308	[BUG]  [BUGGY]  try  ==  [Delete]  catch(Throwable  t)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [CE]  '{'  expected  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  try  ==  [Delete]  catch(Throwable  t)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	try  ==  [Delete]  catch(Throwable  t)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }	  try    {    [Delete]    catch(Throwable)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  '{'  expected	44	None	replace
309	[BUG]  [BUGGY]  try  ==  [Delete]  catch(Throwable  t)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  [CE]  '{'  expected  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  try  ==  [Delete]  catch(Throwable  t)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	try  ==  [Delete]  catch(Throwable  t)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));	  try    {    [Delete]    catch(Throwable)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  '{'  expected	44	None	replace
310	[BUG]  [BUGGY]  While(normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [CE]  ';'  expected  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  While(normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	While(normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }	  While(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  ';'  expected	42	None	replace
311	[BUG]  [BUGGY]  MutableFormats.notEmpty(normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  ';'  expected  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.notEmpty(normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.notEmpty(normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  MutableFormats.notEmpty(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  ';'  expected	106	None	replace
312	[BUG]  [BUGGY]  parent  ==  null  ||  mean  >  MAX_ITERATIONS)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [CE]  not  a  statement  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  ==  null  ||  mean  >  MAX_ITERATIONS)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  ==  null  ||  mean  >  MAX_ITERATIONS)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }	  parent    ==    null    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
313	[BUG]  [BUGGY]  parent  ==  null  ||  mean  <  =  Math.abs(normal))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  ==  null  ||  mean  <  =  Math.abs(normal))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  ==  null  ||  mean  <  =  Math.abs(normal))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }	  parent    ==    null    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
314	[BUG]  [BUGGY]  parent!=  null  &&  mean  <  =  DEFAULT_EPSILON)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent!=  null  &&  mean  <  =  DEFAULT_EPSILON)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent!=  null  &&  mean  <  =  DEFAULT_EPSILON)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  parent!=    null    &&    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
315	[BUG]  [BUGGY]  parent!=  null  &&  mean  ==  DEFAULT_EPSILON)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  not  a  statement  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent!=  null  &&  mean  ==  DEFAULT_EPSILON)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent!=  null  &&  mean  ==  DEFAULT_EPSILON)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  parent!=    null    &&    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  not  a  statement	34	None	replace
316	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	56	1	add
317	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	56	1	add
318	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;	  	compilable	  [FE]  MathRuntimeException$4  	56	1	add
319	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;	  	compilable	  [FE]  MathRuntimeException$4  	56	1	add
320	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]        MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.mean  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.mean  =  epsilon;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	56	6	add
321	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.mean  =  epsilon;  this.maxIterations  =  maxIterations;  [FE]  MathRuntimeException$4  [FE]        MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.mean  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.mean  =  epsilon;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	56	6	add
322	[BUG]  [BUGGY]  peat  =  Math.max(normal,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.max(normal,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.max(normal,  DEFAULT_MAX_ITERATIONS);	  peat    =    Math.max(mean,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
323	[BUG]  [BUGGY]  safePositionIfNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  epsilon);  }  [CE]  ';'  expected  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePositionIfNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  epsilon);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePositionIfNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  epsilon);  }	  safePositionIfNull(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  ';'  expected	86	None	replace
324	[BUG]  [BUGGY]  safePosition(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal);  }  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal);  }	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  ';'  expected	84	None	replace
325	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	58	1	add
326	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	58	1	add
327	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;	  	compilable	  [FE]  MathRuntimeException$4  	58	1	add
328	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;	  	compilable	  [FE]  MathRuntimeException$4  	58	1	add
329	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  minIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [CE]  cannot  find  symbol  minIterations  [FE]        MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  this.epsilon  =  epsilon;  this.maxIterations  =  minIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.maxIterations        =        maxIterations;        epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    this.epsilon  =  epsilon;  this.maxIterations  =  minIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;	  	non-compiled	[CE]  cannot  find  symbol  minIterations	58	None	add
330	[BUG]  [BUGGY]  safePosition(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  mean);  }  [CE]  ';'  expected  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  mean);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  mean);  }	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  ';'  expected	72	None	replace
331	[BUG]  [BUGGY]  safePosition(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon);  }  [CE]  ';'  expected  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon);  }	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  ';'  expected	72	None	replace
332	[BUG]  [BUGGY]  safePosition(maxIterations)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  }  [CE]  ';'  expected  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(maxIterations)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(maxIterations)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  }	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    }    	non-compiled	[CE]  ';'  expected	63	None	replace
333	[BUG]  [BUGGY]  MutableFormats.notEmpty(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal);  }  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.notEmpty(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.notEmpty(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal);  }	  MutableFormats.notEmpty(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    }    	non-compiled	[CE]  ';'  expected	107	None	replace
334	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(normal,  p);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(normal,  p);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(normal,  p);	  this.maxIterations    =    Math.max(mean,    p);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
335	[BUG]  [BUGGY]  parent  =  NormalDistribution.DEFAULT_EPSILON;  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  =  NormalDistribution.DEFAULT_EPSILON;  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  =  NormalDistribution.DEFAULT_EPSILON;	  parent    =    normal;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
336	[BUG]  [BUGGY]  parent  =  NormalDistributionImpl.createInstance(Math.abs(epsilon));  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  =  NormalDistributionImpl.createInstance(Math.abs(epsilon));  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  =  NormalDistributionImpl.createInstance(Math.abs(epsilon));	  parent    =    normal;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
337	[BUG]  [BUGGY]  this.epsilon  =  epsilon  +  DEFAULT_MAX_ITERATIONS;  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  epsilon  +  DEFAULT_MAX_ITERATIONS;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  epsilon  +  DEFAULT_MAX_ITERATIONS;	  this.epsilon    =    DEFAULT_EPSILON;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
338	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(normal,  epsilon,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(normal,  epsilon,  maxIterations);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(normal,  epsilon,  maxIterations);	  this.maxIterations    =    Math.max(mean,    epsilon,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
339	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(DEFAULT_EPSILON,  epsilon,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(DEFAULT_EPSILON,  epsilon,  maxIterations);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(DEFAULT_EPSILON,  epsilon,  maxIterations);	  this.maxIterations    =    Math.max(mean,    epsilon,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
340	[BUG]  [BUGGY]  if(epsilon  <  =  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  else  {  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  if(epsilon  <  =  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  else  {  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	if(epsilon  <  =  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  else  {  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }	          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
341	[BUG]  [BUGGY]  if(mean)  {  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  if(mean)  {  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	if(mean)  {  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }	          this.epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    epsilon    =    epsilon;    this.maxIterations    =    maxIterations;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
342	[BUG]  [BUGGY]  readLine()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  readLine()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	readLine()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }	  read()    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(1));    }    	non-compiled	[CE]  ';'  expected	79	None	replace
343	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(normal,  epsilon  +  1);  [CE]  illegal  start  of  expression  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(normal,  epsilon  +  1);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(normal,  epsilon  +  1);	  this.maxIterations    =    Math.max(mean,    epsilon    +    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
344	[BUG]  [BUGGY]  MutableFormats.assertEquals(Math.abs(mean),  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS));  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(Math.abs(mean),  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS));  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(Math.abs(mean),  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS));	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS));    	non-compiled	[CE]  ';'  expected	94	None	replace
345	[BUG]  [BUGGY]  MutableFormats.assertEquals(Math.abs(normal),  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS));  [CE]  ';'  expected  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(Math.abs(normal),  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS));  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(Math.abs(normal),  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS));	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS));    	non-compiled	[CE]  ';'  expected	94	None	replace
346	[BUG]  [BUGGY]  safePosition(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  ';'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  safePosition(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  ';'  expected	64	None	replace
347	[BUG]  [BUGGY]  peat  =  Math.pow(10,  Math.log(mean),  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.pow(10,  Math.log(mean),  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.pow(10,  Math.log(mean),  DEFAULT_MAX_ITERATIONS);	  peat    =    Math.pow(10,    Math.log(epsilon),    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
348	[BUG]  [BUGGY]  safely())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  mean);  }  [CE]  ';'  expected  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safely())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  mean);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safely())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  mean);  }	  safely())    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  ';'  expected	73	None	replace
349	[BUG]  [BUGGY]  safeToInt(mean))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  ';'  expected  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safeToInt(mean))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safeToInt(mean))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  safely())    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    }    	non-compiled	[CE]  ';'  expected	69	None	replace
350	[BUG]  [BUGGY]  While(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  new  Integer(0));  }  [CE]  ';'  expected  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  While(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  new  Integer(0));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	While(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  new  Integer(0));  }	  While(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  ';'  expected	42	None	replace
351	[BUG]  [BUGGY]  allowMean(Math.abs(mean)>  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [CE]  ';'  expected  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  allowMean(Math.abs(mean)>  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	allowMean(Math.abs(mean)>  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }	  allowMean(Math.abs(mean))    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(1));    }    	non-compiled	[CE]  ';'  expected	103	None	replace
352	[BUG]  [BUGGY]  MutableFormats.assertEquals(mean,  normal,  epsilon,  maxIterations);  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(mean,  normal,  epsilon,  maxIterations);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(mean,  normal,  epsilon,  maxIterations);	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON,    epsilon,    maxIterations);    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
353	[BUG]  [BUGGY]  safePositionIfNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon);  }  [CE]  ';'  expected  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePositionIfNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePositionIfNull(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon);  }	  safePositionIfNull(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  ';'  expected	74	None	replace
354	[BUG]  [BUGGY]  if(epsilon  <  =  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  else  {  throw  new  MathRuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  if(epsilon  <  =  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  else  {  throw  new  MathRuntimeException( " ");  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	if(epsilon  <  =  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  else  {  throw  new  MathRuntimeException( " ");  }	          this.epsilon    =    epsilon;    this.epsilon    =    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
355	[BUG]  [BUGGY]  if(epsilon  <  =  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  if(epsilon  <  =  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	if(epsilon  <  =  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  else  {  throw  new  IllegalArgumentException( " ");  }	          this.epsilon    =    epsilon;    this.epsilon    =    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
356	[BUG]  [BUGGY]  try  ==  }  catch(Throwable  t)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [CE]  '{'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  try  ==  }  catch(Throwable  t)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	try  ==  }  catch(Throwable  t)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }	  try    {    [Delete]    catch(Throwable)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  '{'  expected	44	None	replace
357	[BUG]  [BUGGY]  try  ==  }  catch(Throwable  t)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [CE]  '{'  expected  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  try  ==  }  catch(Throwable  t)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	try  ==  }  catch(Throwable  t)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }	  try    {    [Delete]    catch(Throwable)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  '{'  expected	44	None	replace
358	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(Math.max(mean,  normal));  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(Math.max(mean,  normal));  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(Math.max(mean,  normal));	  this.maxIterations    =    Math.max(normal,    me);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
359	[BUG]  [BUGGY]  this.maxIterations  =  DEFAULT_EPSILON;  this.maxIterations  =  epsilon;  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  DEFAULT_EPSILON;  this.maxIterations  =  epsilon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  DEFAULT_EPSILON;  this.maxIterations  =  epsilon;	          this.maxIterations    =    maxIterations;    this.maxIterations    =    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
360	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS  -  1);  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS  -  1);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS  -  1);	  this.maxIterations    =    Math.max(DEFAULT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
361	[BUG]  [BUGGY]  peech  ||  DEFAULT_MAX_ITERATIONS)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  not  a  statement  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peech  ||  DEFAULT_MAX_ITERATIONS)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peech  ||  DEFAULT_MAX_ITERATIONS)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  peech    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  not  a  statement	31	None	replace
362	[BUG]  [BUGGY]  peech  ||  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  not  a  statement  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peech  ||  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peech  ||  normal)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  peech    ||    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  not  a  statement	31	None	replace
363	[BUG]  [BUGGY]  safePosition())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [CE]  ';'  expected  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(1));  }	  safely())    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(1));    }    	non-compiled	[CE]  ';'  expected	78	None	replace
364	[BUG]  [BUGGY]  safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal);  }  [CE]  ';'  expected  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safe())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal);  }	  safely())    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  ';'  expected	85	None	replace
365	[BUG]  [BUGGY]  MutableFormats.assertEquals(mean,  normal,  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(mean,  normal,  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(mean,  normal,  DEFAULT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
366	[BUG]  [BUGGY]  if(epsilon  <  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  if(epsilon  <  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	if(epsilon  <  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }	          this.epsilon    =    epsilon;    this.epsilon    =    epsilon;    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
367	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  this.epsilon  =  epsilon;  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	this.epsilon  =  DEFAULT_EPSILON;  this.epsilon  =  epsilon;  }	          this.epsilon    =    epsilon;    this.epsilon    =    epsilon;    }    	compilable	  [FE]  MathRuntimeException$4  	91	1	replace
368	[BUG]  [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  this.epsilon  =  epsilon;  }  [FE]  MathRuntimeException$4  [FE]          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  DEFAULT_EPSILON;  this.epsilon  =  epsilon;  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  DEFAULT_EPSILON;  this.epsilon  =  epsilon;  }	          this.epsilon    =    epsilon;    this.epsilon    =    epsilon;    }    	compilable	  [FE]  MathRuntimeException$4  	91	1	replace
369	[BUG]  [BUGGY]  parent!=  null  &&  mean  ==  DEFAULT_EPSILON)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  not  a  statement  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent!=  null  &&  mean  ==  DEFAULT_EPSILON)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent!=  null  &&  mean  ==  DEFAULT_EPSILON)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  parent!=    null    &&    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  not  a  statement	32	None	replace
370	[BUG]  [BUGGY]  parent!=  null  &&  mean  <  =  DEFAULT_EPSILON)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent!=  null  &&  mean  <  =  DEFAULT_EPSILON)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent!=  null  &&  mean  <  =  DEFAULT_EPSILON)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  parent!=    null    &&    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
371	[BUG]  [BUGGY]  parent!=  null  &&  mean  <  =  Math.abs(normal))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  illegal  start  of  expression  [FE]                      MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent!=  null  &&  mean  <  =  Math.abs(normal))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent!=  null  &&  mean  <  =  Math.abs(normal))  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  parent!=    null    &&    mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
372	[BUG]  [BUGGY]  this.mean  =  mean;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.mean  =  mean;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.mean  =  mean;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
373	[BUG]  [BUGGY]  readLine()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [CE]  ';'  expected  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  readLine()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	readLine()  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }	  read()    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  ';'  expected	77	None	replace
374	[BUG]  [BUGGY]  parent  =  parent.cloneTree();  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  parent  =  parent.cloneTree();  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	parent  =  parent.cloneTree();	  parent    =    parent.getParent();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
375	[BUG]  [BUGGY]  safePosition(peer)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  ';'  expected  [FE]                        MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition(peer)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition(peer)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  safePosition(peer)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  ';'  expected	87	None	replace
376	[BUG]  [BUGGY]  peat  =  Math.min(mean,  normal);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.min(mean,  normal);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.min(mean,  normal);	  peat    =    Math.max(mean,    DEFAULT_EPSILON_MEAN);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
377	[BUG]  [BUGGY]  peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN,  normal);  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN,  normal);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	peat  =  Math.max(mean,  DEFAULT_EPSILON_MEAN,  normal);	  peat    =    Math.max(mean,    DEFAULT_EPSILON_MEAN);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
378	[BUG]  [BUGGY]  if(mean  <  =  0)  {  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  if(mean  <  =  0)  {  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	if(mean  <  =  0)  {  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
379	[BUG]  [BUGGY]  if(mean  <  =  0)  {  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(Lo  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  if(mean  <  =  0)  {  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(Lo  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	if(mean  <  =  0)  {  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(Lo	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
380	[BUG]  [BUGGY]  if(mean  <  =  0)  {  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  if(mean  <  =  0)  {  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	if(mean  <  =  0)  {  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
381	[BUG]  [BUGGY]  if(mean  <  =  0)  {  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats  [CE]  illegal  start  of  expression  [FE]                    MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  if(mean  <  =  0)  {  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	if(mean  <  =  0)  {  this.epsilon  =  epsilon;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
382	[BUG]  [BUGGY]  safePosition())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [CE]  ';'  expected  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  safePosition())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	safePosition())  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  new  Integer(0));  }	  safely())    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    new    Integer(0));    }    	non-compiled	[CE]  ';'  expected	76	None	replace
383	[BUG]  [BUGGY]  While(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal);  }  [CE]  ';'  expected  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  While(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal);  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	While(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal);  }	  While(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  ';'  expected	41	None	replace
384	[BUG]  [BUGGY]  While(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  normal);  }  [CE]  ';'  expected  [FE]              MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  While(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  normal);  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	While(mean)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  normal);  }	  While(mean)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  ';'  expected	41	None	replace
385	[BUG]  [BUGGY]  MutableFormats.assertEquals(mean,  normal,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(mean,  normal,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(mean,  normal,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
386	[BUG]  [BUGGY]  MutableFormats.assertEquals(Math.abs(normal),  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  MutableFormats.assertEquals(Math.abs(normal),  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	MutableFormats.assertEquals(Math.abs(normal),  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  MutableFormats.assertEquals(normal,    DEFAULT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
387	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  normal,  DEFAULT_EPSILON,  MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(mean,  normal,  DEFAULT_EPSILON,  MAX_ITERATIONS);  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(mean,  normal,  DEFAULT_EPSILON,  MAX_ITERATIONS);	  this.maxIterations    =    Math.max(mean,    normal,    DEFAULT_EPSILON);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
388	[BUG]  [BUGGY]  if(epsilon  <  =  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  epsilon  =  epsilon;  }  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  if(epsilon  <  =  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  epsilon  =  epsilon;  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	if(epsilon  <  =  DEFAULT_EPSILON)  {  this.epsilon  =  epsilon;  epsilon  =  epsilon;  }	          this.epsilon    =    epsilon;    epsilon    =    epsilon;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
389	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(Math.max(Math.max(mean,  p));  [CE]  ')'  expected  [FE]                MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(Math.max(Math.max(mean,  p));  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(Math.max(Math.max(mean,  p));	  this.maxIterations    =    Math.max(Math.max(DEFAULT_EPSILON,    p));    	non-compiled	[CE]  ')'  expected	101	None	replace
390	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(Math.max(Math.max(DEFAULT_EPSILON,  epsilon));  [CE]  ')'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.maxIterations  =  Math.max(Math.max(Math.max(DEFAULT_EPSILON,  epsilon));  [BUGGY]        [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.maxIterations  =  Math.max(Math.max(Math.max(DEFAULT_EPSILON,  epsilon));	  this.maxIterations    =    Math.max(Math.max(DEFAULT_EPSILON,    p));    	non-compiled	[CE]  ')'  expected	101	None	replace
391	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  this.epsilon  =  epsileon;  [CE]  cannot  find  symbol  epsileon  [FE]    MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  this.epsilon  =  epsileon;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  this.epsilon  =  epsileon;	  	non-compiled	[CE]  cannot  find  symbol  epsileon	35	None	add
392	[BUG]  [BUGGY]          this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  [CE]  class,  interface,  or  enum  expected  [FE]      MathRuntimeException$4    [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]          this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	                this.epsilon        =        epsilon;        this.epsilon    =    epsilon;    this.epsilon  =  epsilon;  this.epsilon  =  epsilon;  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	add
393	[BUG]  [BUGGY]  this.epsilon  =  epsilon  *  1;  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.epsilon  =  epsilon  *  1;  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.epsilon  =  epsilon  *  1;	  this.epsilon    =    epsilon    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
394	[BUG]  [BUGGY]  this.mean  =  mean;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;      [BUGGY]  this.mean  =  mean;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [BUGGY]      }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	this.mean  =  mean;  if(epsilon  <  =  0)  {  this.epsilon  =  epsilon;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }	          this.epsilon    =    epsilon;    if(epsilon    <    =    0)    {    this.epsilon    =    epsilon;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
