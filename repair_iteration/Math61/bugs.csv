bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p); [FE] MathRuntimeException$4 [CONTEXT] public PoissonDistributionImpl(double p, double epsilon, int maxIterations) { if (p <= 0) { [BUGGY] throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p); [BUGGY] } mean = p; normal = new NormalDistributionImpl(p, FastMath.sqrt(p)); this.epsilon = epsilon; this.maxIterations = maxIterations; } [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double,double,int)  double p double epsilon int maxIterations [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	1.0	94	94	1	replace	
2	[BUG] [BUGGY] [FE] MathRuntimeException$4 [CONTEXT] public PoissonDistributionImpl(double p, double epsilon, int maxIterations) { if (p <= 0) { [BUGGY] [BUGGY] throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p); } mean = p; normal = new NormalDistributionImpl(p, FastMath.sqrt(p)); this.epsilon = epsilon; this.maxIterations = maxIterations; } [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double,double,int)  double p double epsilon int maxIterations [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	1.0	94	94	1	add	
3	[BUG] [BUGGY] this(p, DEFAULT_EPSILON, DEFAULT_MAX_ITERATIONS); [FE] MathRuntimeException$4 [CONTEXT] public PoissonDistributionImpl(double p) { [BUGGY] this(p, DEFAULT_EPSILON, DEFAULT_MAX_ITERATIONS); [BUGGY] } [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double)  double p [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	80	80	1	replace	
4	[BUG] [BUGGY] [FE] MathRuntimeException$4 [CONTEXT] public PoissonDistributionImpl(double p) { [BUGGY] [BUGGY] this(p, DEFAULT_EPSILON, DEFAULT_MAX_ITERATIONS); } [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double)  double p [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	80	80	1	add	
5	[BUG] [BUGGY] } [FE] MathRuntimeException$4 [CONTEXT] public PoissonDistributionImpl(double p) { this(p, DEFAULT_EPSILON, DEFAULT_MAX_ITERATIONS); [BUGGY] } [BUGGY]  [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double)  double p [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	81	81	1	replace	
6	[BUG] [BUGGY] [FE] MathRuntimeException$4 [CONTEXT] public PoissonDistributionImpl(double p) { this(p, DEFAULT_EPSILON, DEFAULT_MAX_ITERATIONS); [BUGGY] [BUGGY] } [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double)  double p [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	81	81	1	add	
7	[BUG] [BUGGY] public PoissonDistributionImpl(double p, double epsilon, int maxIterations) { [FE] MathRuntimeException$4 [CONTEXT] [BUGGY] public PoissonDistributionImpl(double p, double epsilon, int maxIterations) { [BUGGY] if (p <= 0) { throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p); } mean = p; normal = new NormalDistributionImpl(p, FastMath.sqrt(p)); this.epsilon = epsilon; this.maxIterations = maxIterations; } [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double,double,int)  double p double epsilon int maxIterations [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	
8	[BUG] [BUGGY] [FE] MathRuntimeException$4 [CONTEXT] [BUGGY] [BUGGY] public PoissonDistributionImpl(double p, double epsilon, int maxIterations) { if (p <= 0) { throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p); } mean = p; normal = new NormalDistributionImpl(p, FastMath.sqrt(p)); this.epsilon = epsilon; this.maxIterations = maxIterations; } [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double,double,int)  double p double epsilon int maxIterations [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	add	
9	[BUG] [BUGGY] private int maxIterations = DEFAULT_MAX_ITERATIONS; [FE] MathRuntimeException$4 [CONTEXT] [BUGGY] private int maxIterations = DEFAULT_MAX_ITERATIONS; [BUGGY]  [CLASS] PoissonDistributionImpl  [VARIABLES] 	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	65	65	1	replace	
10	[BUG] [BUGGY] [FE] MathRuntimeException$4 [CONTEXT] [BUGGY] [BUGGY] private int maxIterations = DEFAULT_MAX_ITERATIONS; [CLASS] PoissonDistributionImpl  [VARIABLES] 	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	65	65	1	add	
11	[BUG] [BUGGY] private double epsilon = DEFAULT_EPSILON; [FE] MathRuntimeException$4 [CONTEXT] [BUGGY] private double epsilon = DEFAULT_EPSILON; [BUGGY]  [CLASS] PoissonDistributionImpl  [VARIABLES] 	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	70	70	1	replace	
12	[BUG] [BUGGY] [FE] MathRuntimeException$4 [CONTEXT] [BUGGY] [BUGGY] private double epsilon = DEFAULT_EPSILON; [CLASS] PoissonDistributionImpl  [VARIABLES] 	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	70	70	1	add	
13	[BUG] [BUGGY] if (p <= 0) { [FE] MathRuntimeException$4 [CONTEXT] public PoissonDistributionImpl(double p, double epsilon, int maxIterations) { [BUGGY] if (p <= 0) { [BUGGY] throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p); } mean = p; normal = new NormalDistributionImpl(p, FastMath.sqrt(p)); this.epsilon = epsilon; this.maxIterations = maxIterations; } [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double,double,int)  double p double epsilon int maxIterations [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	93	93	1	replace	
14	[BUG] [BUGGY] [FE] MathRuntimeException$4 [CONTEXT] public PoissonDistributionImpl(double p, double epsilon, int maxIterations) { [BUGGY] [BUGGY] if (p <= 0) { throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p); } mean = p; normal = new NormalDistributionImpl(p, FastMath.sqrt(p)); this.epsilon = epsilon; this.maxIterations = maxIterations; } [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double,double,int)  double p double epsilon int maxIterations [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	93	93	1	add	
15	[BUG] [BUGGY] mean = p; [FE] MathRuntimeException$4 [CONTEXT] public PoissonDistributionImpl(double p, double epsilon, int maxIterations) { if (p <= 0) { throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p); } [BUGGY] mean = p; [BUGGY] normal = new NormalDistributionImpl(p, FastMath.sqrt(p)); this.epsilon = epsilon; this.maxIterations = maxIterations; } [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double,double,int)  double p double epsilon int maxIterations [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	replace	
16	[BUG] [BUGGY] [FE] MathRuntimeException$4 [CONTEXT] public PoissonDistributionImpl(double p, double epsilon, int maxIterations) { if (p <= 0) { throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p); } [BUGGY] [BUGGY] mean = p; normal = new NormalDistributionImpl(p, FastMath.sqrt(p)); this.epsilon = epsilon; this.maxIterations = maxIterations; } [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double,double,int)  double p double epsilon int maxIterations [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	96	96	1	add	
17	[BUG] [BUGGY] normal = new NormalDistributionImpl(p, FastMath.sqrt(p)); [FE] MathRuntimeException$4 [CONTEXT] public PoissonDistributionImpl(double p, double epsilon, int maxIterations) { if (p <= 0) { throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p); } mean = p; [BUGGY] normal = new NormalDistributionImpl(p, FastMath.sqrt(p)); [BUGGY] this.epsilon = epsilon; this.maxIterations = maxIterations; } [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double,double,int)  double p double epsilon int maxIterations [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	97	97	1	replace	
18	[BUG] [BUGGY] [FE] MathRuntimeException$4 [CONTEXT] public PoissonDistributionImpl(double p, double epsilon, int maxIterations) { if (p <= 0) { throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p); } mean = p; [BUGGY] [BUGGY] normal = new NormalDistributionImpl(p, FastMath.sqrt(p)); this.epsilon = epsilon; this.maxIterations = maxIterations; } [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double,double,int)  double p double epsilon int maxIterations [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	97	97	1	add	
19	[BUG] [BUGGY] this.epsilon = epsilon; [FE] MathRuntimeException$4 [CONTEXT] public PoissonDistributionImpl(double p, double epsilon, int maxIterations) { if (p <= 0) { throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p); } mean = p; normal = new NormalDistributionImpl(p, FastMath.sqrt(p)); [BUGGY] this.epsilon = epsilon; [BUGGY] this.maxIterations = maxIterations; } [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double,double,int)  double p double epsilon int maxIterations [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	98	98	1	replace	
20	[BUG] [BUGGY] [FE] MathRuntimeException$4 [CONTEXT] public PoissonDistributionImpl(double p, double epsilon, int maxIterations) { if (p <= 0) { throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p); } mean = p; normal = new NormalDistributionImpl(p, FastMath.sqrt(p)); [BUGGY] [BUGGY] this.epsilon = epsilon; this.maxIterations = maxIterations; } [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double,double,int)  double p double epsilon int maxIterations [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	98	98	1	add	
21	[BUG] [BUGGY] this.maxIterations = maxIterations; [FE] MathRuntimeException$4 [CONTEXT] public PoissonDistributionImpl(double p, double epsilon, int maxIterations) { if (p <= 0) { throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p); } mean = p; normal = new NormalDistributionImpl(p, FastMath.sqrt(p)); this.epsilon = epsilon; [BUGGY] this.maxIterations = maxIterations; [BUGGY] } [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double,double,int)  double p double epsilon int maxIterations [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	
22	[BUG] [BUGGY] [FE] MathRuntimeException$4 [CONTEXT] public PoissonDistributionImpl(double p, double epsilon, int maxIterations) { if (p <= 0) { throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p); } mean = p; normal = new NormalDistributionImpl(p, FastMath.sqrt(p)); this.epsilon = epsilon; [BUGGY] [BUGGY] this.maxIterations = maxIterations; } [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double,double,int)  double p double epsilon int maxIterations [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	add	
23	[BUG] [BUGGY] } [FE] MathRuntimeException$4 [CONTEXT] public PoissonDistributionImpl(double p, double epsilon, int maxIterations) { if (p <= 0) { throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p); } mean = p; normal = new NormalDistributionImpl(p, FastMath.sqrt(p)); this.epsilon = epsilon; this.maxIterations = maxIterations; [BUGGY] } [BUGGY]  [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double,double,int)  double p double epsilon int maxIterations [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	replace	
24	[BUG] [BUGGY] [FE] MathRuntimeException$4 [CONTEXT] public PoissonDistributionImpl(double p, double epsilon, int maxIterations) { if (p <= 0) { throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN, p); } mean = p; normal = new NormalDistributionImpl(p, FastMath.sqrt(p)); this.epsilon = epsilon; this.maxIterations = maxIterations; [BUGGY] [BUGGY] } [CLASS] PoissonDistributionImpl [METHOD] <init> [RETURN_TYPE] PoissonDistributionImpl(double,double,int)  double p double epsilon int maxIterations [VARIABLES] boolean NormalDistribution normal double DEFAULT_EPSILON epsilon mean p int DEFAULT_MAX_ITERATIONS maxIterations long serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	100	100	1	add	
