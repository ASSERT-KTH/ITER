bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	add	this.maxIterations    =    DEFAULT_MAX_ITERATIONS;    this.maxIterations  =  DEFAULT_MAX_ITERATIONS;	  	compilable	  [FE]  MathRuntimeException$4  	7	1	add
2	[BUG]  [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations    =    DEFAULT_MAX_ITERATIONS;    this.maxIterations  =  DEFAULT_MAX_ITERATIONS;	  	compilable	  [FE]  MathRuntimeException$4  	7	1	add
3	[BUG]  [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  This.maxIterations  =  DEFAULT_MAX_ITERATIONS;  [CE]  cannot  find  symbol  This  [FE]      MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  This.maxIterations  =  DEFAULT_MAX_ITERATIONS;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations    =    DEFAULT_MAX_ITERATIONS;    This.maxIterations  =  DEFAULT_MAX_ITERATIONS;	  	non-compiled	[CE]  cannot  find  symbol  This	7	None	add
4	[BUG]  [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  int  maxIterations  =  DEFAULT_MAX_ITERATIONS;  [CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  int  maxIterations  =  DEFAULT_MAX_ITERATIONS;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations    =    DEFAULT_MAX_ITERATIONS;    int  maxIterations  =  DEFAULT_MAX_ITERATIONS;	  	non-compiled	[CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	7	None	add
5	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  epsilon  =  DEFAULT_MAX_ITERATIONS;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	add	this.maxIterations    =    DEFAULT_MAX_ITERATIONS;    epsilon  =  DEFAULT_MAX_ITERATIONS;	  	compilable	  [FE]  MathRuntimeException$4  	7	1	add
6	[BUG]  [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  epsilon  =  DEFAULT_MAX_ITERATIONS;  [FE]  MathRuntimeException$4  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  epsilon  =  DEFAULT_MAX_ITERATIONS;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations    =    DEFAULT_MAX_ITERATIONS;    epsilon  =  DEFAULT_MAX_ITERATIONS;	  	compilable	  [FE]  MathRuntimeException$4  	7	1	add
7	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  /  1;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	add	this.maxIterations  =  maxIterations  /  1;	  this.maxIterations    =    maxIterations    +    1;    	compilable	  [FE]  MathRuntimeException$4  	14	1	replace
8	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations  /  1;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  /  1;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  maxIterations  /  1;	  this.maxIterations    =    maxIterations    +    1;    	compilable	  [FE]  MathRuntimeException$4  	14	1	replace
9	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  -  1;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	add	this.maxIterations  =  maxIterations  -  1;	  this.maxIterations    =    maxIterations    +    1;    	compilable	  [FE]  MathRuntimeException$4  	14	1	replace
10	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations  -  1;  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  -  1;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  maxIterations  -  1;	  this.maxIterations    =    maxIterations    +    1;    	compilable	  [FE]  MathRuntimeException$4  	14	1	replace
11	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  *  1;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	add	this.maxIterations  =  maxIterations  *  1;	  this.maxIterations    =    maxIterations    +    1;    	compilable	  [FE]  MathRuntimeException$4  	14	1	replace
12	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations  *  1;  [FE]  MathRuntimeException$4  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  *  1;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  maxIterations  *  1;	  this.maxIterations    =    maxIterations    +    1;    	compilable	  [FE]  MathRuntimeException$4  	14	1	replace
13	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  +  1;  this.maxIterations  =  maxIterations  +  1;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	add	this.maxIterations    =    maxIterations    +    1;    this.maxIterations  =  maxIterations  +  1;	  	compilable	  [FE]  MathRuntimeException$4  	13	1	add
14	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations  +  1;  this.maxIterations  =  maxIterations  +  1;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  +  1;  this.maxIterations  =  maxIterations  +  1;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations    =    maxIterations    +    1;    this.maxIterations  =  maxIterations  +  1;	  	compilable	  [FE]  MathRuntimeException$4  	13	1	add
15	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations  +  1;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  this.maxIterations  =  maxIterations  +  1;  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]      MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  +  1;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  this.maxIterations  =  maxIterations  +  1;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations    =    maxIterations    +    1;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  this.maxIterations  =  maxIterations  +  1;	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	13	None	add
16	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations  +  1;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  this.maxIterations  =  maxIterations  +  1;  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  +  1;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  this.maxIterations  =  maxIterations  +  1;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations    =    maxIterations    +    1;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  this.maxIterations  =  maxIterations  +  1;	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	13	None	add
17	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations  +  1;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  this.maxIterations  =  maxIterations  +  1;  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  +  1;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  this.maxIterations  =  maxIterations  +  1;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations    =    maxIterations    +    1;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  this.maxIterations  =  maxIterations  +  1;	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	13	None	add
18	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations  +  1;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  this.maxIterations  =  maxIterations  +  1;  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  +  1;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  this.maxIterations  =  maxIterations  +  1;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations    =    maxIterations    +    1;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  this.maxIterations  =  maxIterations  +  1;	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	13	None	add
19	[BUG]  [BUGGY]  this.maxIterations  =  epsilon  -  maxIterations;  [CE]  possible  loss  of  precision  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  epsilon  -  maxIterations;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  epsilon  -  maxIterations;	  this.maxIterations    =    maxIterations    -    mean;    	non-compiled	[CE]  possible  loss  of  precision	15	None	replace
20	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations  /  mean;  [CE]  possible  loss  of  precision  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  /  mean;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  maxIterations  /  mean;	  this.maxIterations    =    maxIterations    -    mean;    	non-compiled	[CE]  possible  loss  of  precision	15	None	replace
21	[BUG]  [BUGGY]  this.maxIterations  =  DEFAULT_EPSILON  -  mean;  [CE]  possible  loss  of  precision  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  DEFAULT_EPSILON  -  mean;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  DEFAULT_EPSILON  -  mean;	  this.maxIterations    =    maxIterations    -    mean;    	non-compiled	[CE]  possible  loss  of  precision	15	None	replace
22	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(maxIterations,  epsilon);  [CE]  possible  loss  of  precision  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  Math.max(maxIterations,  epsilon);  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  Math.max(maxIterations,  epsilon);	      this.maxIterations    =    Math.max(epsilon,    maxIterations);    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
23	[BUG]  [BUGGY]  this.maxIterations  =  Math.min(epsilon,  maxIterations);  [CE]  possible  loss  of  precision  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  Math.min(epsilon,  maxIterations);  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  Math.min(epsilon,  maxIterations);	      this.maxIterations    =    Math.max(epsilon,    maxIterations);    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
24	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  epsilon,  maxIterations);  [CE]  no  suitable  method  found  for  max(double,double,int)  [FE]                  MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  Math.max(mean,  epsilon,  maxIterations);  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  Math.max(mean,  epsilon,  maxIterations);	      this.maxIterations    =    Math.max(epsilon,    maxIterations);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,int)	5	None	replace
25	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(normal,  DEFAULT_EPSILON);  [CE]  no  suitable  method  found  for  max(NormalDistribution,double)  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  Math.max(normal,  DEFAULT_EPSILON);  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  Math.max(normal,  DEFAULT_EPSILON);	      this.maxIterations    =    Math.max(DEFAULT_EPSILON,    normal);    	non-compiled	[CE]  no  suitable  method  found  for  max(NormalDistribution,double)	16	None	replace
26	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  possible  loss  of  precision  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  Math.max(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  Math.max(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);	      this.maxIterations    =    Math.max(DEFAULT_EPSILON,    normal);    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
27	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(DEFAULT_EPSILON,  mean);  [CE]  possible  loss  of  precision  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  Math.max(DEFAULT_EPSILON,  mean);  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  Math.max(DEFAULT_EPSILON,  mean);	      this.maxIterations    =    Math.max(DEFAULT_EPSILON,    normal);    	non-compiled	[CE]  possible  loss  of  precision	16	None	replace
28	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(DEFAULT_EPSILON,  mean,  maxIterations);  [CE]  no  suitable  method  found  for  max(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  Math.max(DEFAULT_EPSILON,  mean,  maxIterations);  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  Math.max(DEFAULT_EPSILON,  mean,  maxIterations);	      this.maxIterations    =    Math.max(DEFAULT_EPSILON,    normal);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,int)	16	None	replace
29	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.mean  =  mean;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	add	this.mean  =  mean;	      this.mean    =    normal;    	compilable	  [FE]  MathRuntimeException$4  	11	1	replace
30	[BUG]  [BUGGY]  this.mean  =  mean;  [FE]  MathRuntimeException$4  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.mean  =  mean;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.mean  =  mean;	      this.mean    =    normal;    	compilable	  [FE]  MathRuntimeException$4  	11	1	replace
31	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.mean  =  DEFAULT_EPSILON;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	add	this.mean  =  DEFAULT_EPSILON;	      this.mean    =    normal;    	compilable	  [FE]  MathRuntimeException$4  	11	6	replace
32	[BUG]  [BUGGY]  this.mean  =  DEFAULT_EPSILON;  [FE]  MathRuntimeException$4  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.mean  =  DEFAULT_EPSILON;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.mean  =  DEFAULT_EPSILON;	      this.mean    =    normal;    	compilable	  [FE]  MathRuntimeException$4  	11	6	replace
33	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.mean  =  epsilon;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	add	this.mean  =  epsilon;	      this.mean    =    normal;    	compilable	  [FE]  MathRuntimeException$4  	11	6	replace
34	[BUG]  [BUGGY]  this.mean  =  epsilon;  [FE]  MathRuntimeException$4  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.mean  =  epsilon;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.mean  =  epsilon;	      this.mean    =    normal;    	compilable	  [FE]  MathRuntimeException$4  	11	6	replace
35	[BUG]  [BUGGY]  this.maxIterations  =  MAX_ITERATIONS;  [CE]  cannot  find  symbol  MAX_ITERATIONS  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  MAX_ITERATIONS;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  MAX_ITERATIONS;	  this.maxIterations    =    DEFAULT_EPSILON_MEAN;    	non-compiled	[CE]  cannot  find  symbol  MAX_ITERATIONS	9	None	replace
36	[BUG]  [BUGGY]  [FE]  FunctionEvaluationException  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  0;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	add	this.maxIterations  =  0;	  this.maxIterations    =    DEFAULT_MAX_ITERATIONS;    	compilable	  [FE]  FunctionEvaluationException  	8	8	replace
37	[BUG]  [BUGGY]  this.maxIterations  =  0;  [FE]  FunctionEvaluationException  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  0;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  0;	  this.maxIterations    =    DEFAULT_MAX_ITERATIONS;    	compilable	  [FE]  FunctionEvaluationException  	8	8	replace
38	[BUG]  [BUGGY]  int  maxIterations  =  epsilon.getMaxIterations();  [CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  int  maxIterations  =  epsilon.getMaxIterations();  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	int  maxIterations  =  epsilon.getMaxIterations();	      int    maxIterations    =    normal.getMaxIterations();    	non-compiled	[CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	10	None	replace
39	[BUG]  [BUGGY]  int  maxIterations  =  normal.getMaxIterations()  +  1;  [CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  int  maxIterations  =  normal.getMaxIterations()  +  1;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	int  maxIterations  =  normal.getMaxIterations()  +  1;	      int    maxIterations    =    normal.getMaxIterations();    	non-compiled	[CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	10	None	replace
40	[BUG]  [BUGGY]  int  maxIterations  =  normal.getMaxIterations()  -  1;  [CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  int  maxIterations  =  normal.getMaxIterations()  -  1;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	int  maxIterations  =  normal.getMaxIterations()  -  1;	      int    maxIterations    =    normal.getMaxIterations();    	non-compiled	[CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	10	None	replace
41	[BUG]  [BUGGY]  this.maxIterations  =  DEFAULT_EPSILON  -  maxIterations;  [CE]  possible  loss  of  precision  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  DEFAULT_EPSILON  -  maxIterations;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  DEFAULT_EPSILON  -  maxIterations;	  this.maxIterations    =    maxIterations    -    DEFAULT_EPSILON;    	non-compiled	[CE]  possible  loss  of  precision	17	None	replace
42	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations  /  DEFAULT_EPSILON;  [CE]  possible  loss  of  precision  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  /  DEFAULT_EPSILON;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  maxIterations  /  DEFAULT_EPSILON;	  this.maxIterations    =    maxIterations    -    DEFAULT_EPSILON;    	non-compiled	[CE]  possible  loss  of  precision	17	None	replace
43	[BUG]  [BUGGY]  this.maxIterations  =  epsilon  -  DEFAULT_EPSILON;  [CE]  possible  loss  of  precision  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  epsilon  -  DEFAULT_EPSILON;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  epsilon  -  DEFAULT_EPSILON;	  this.maxIterations    =    maxIterations    -    DEFAULT_EPSILON;    	non-compiled	[CE]  possible  loss  of  precision	17	None	replace
44	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]      this.maxIterations  =  maxIterations;  this.maxIterations  =  maxIterations;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	add	        this.maxIterations    =    maxIterations;    this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	3	1	add
45	[BUG]  [BUGGY]      this.maxIterations  =  maxIterations;  this.maxIterations  =  maxIterations;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]      this.maxIterations  =  maxIterations;  this.maxIterations  =  maxIterations;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	        this.maxIterations    =    maxIterations;    this.maxIterations  =  maxIterations;	  	compilable	  [FE]  MathRuntimeException$4  	3	1	add
46	[BUG]  [BUGGY]      this.maxIterations  =  maxIterations;  this.maxIterations  =  minIterations;  [CE]  cannot  find  symbol  minIterations  [FE]      MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]      this.maxIterations  =  maxIterations;  this.maxIterations  =  minIterations;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	        this.maxIterations    =    maxIterations;    this.maxIterations  =  minIterations;	  	non-compiled	[CE]  cannot  find  symbol  minIterations	3	None	add
47	[BUG]  [BUGGY]      this.maxIterations  =  maxIterations;  This.maxIterations  =  maxIterations;  [CE]  cannot  find  symbol  This  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]      this.maxIterations  =  maxIterations;  This.maxIterations  =  maxIterations;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	        this.maxIterations    =    maxIterations;    This.maxIterations  =  maxIterations;	  	non-compiled	[CE]  cannot  find  symbol  This	3	None	add
48	[BUG]  [BUGGY]      this.maxIterations  =  maxIterations;  it.maxIterations  =  maxIterations;  [CE]  cannot  find  symbol  it  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]      this.maxIterations  =  maxIterations;  it.maxIterations  =  maxIterations;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	        this.maxIterations    =    maxIterations;    it.maxIterations  =  maxIterations;	  	non-compiled	[CE]  cannot  find  symbol  it	3	None	add
49	[BUG]  [BUGGY]  int  maxIterations  =  epsilon.maxIterations;  [CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  int  maxIterations  =  epsilon.maxIterations;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	int  maxIterations  =  epsilon.maxIterations;	      int    maxIterations    =    normal.maxIterations;    	non-compiled	[CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	12	None	replace
50	[BUG]  [BUGGY]  int  maxIterations  =  DEFAULT_EPSILON.maxIterations;  [CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  int  maxIterations  =  DEFAULT_EPSILON.maxIterations;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	int  maxIterations  =  DEFAULT_EPSILON.maxIterations;	      int    maxIterations    =    normal.maxIterations;    	non-compiled	[CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	12	None	replace
51	[BUG]  [BUGGY]  int  maxIterations  =  normal.maxIterations  -  DEFAULT_EPSILON;  [CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  int  maxIterations  =  normal.maxIterations  -  DEFAULT_EPSILON;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	int  maxIterations  =  normal.maxIterations  -  DEFAULT_EPSILON;	      int    maxIterations    =    normal.maxIterations;    	non-compiled	[CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	12	None	replace
52	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(deFAULT_EPSILON  /  epsilon);  [CE]  cannot  find  symbol  deFAULT_EPSILON  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  Math.max(deFAULT_EPSILON  /  epsilon);  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  Math.max(deFAULT_EPSILON  /  epsilon);	      this.maxIterations    =    Math.max(epsilon    /    DEFAULT_EPSILON);    	non-compiled	[CE]  cannot  find  symbol  deFAULT_EPSILON	6	None	replace
53	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(deFAULT_EPSILON  /  DEFAULT_EPSILON);  [CE]  cannot  find  symbol  deFAULT_EPSILON  [FE]                  MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  Math.max(deFAULT_EPSILON  /  DEFAULT_EPSILON);  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  Math.max(deFAULT_EPSILON  /  DEFAULT_EPSILON);	      this.maxIterations    =    Math.max(epsilon    /    DEFAULT_EPSILON);    	non-compiled	[CE]  cannot  find  symbol  deFAULT_EPSILON	6	None	replace
54	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(epsilon  /  DEFAULT_EPSILON,  maxIterations);  [CE]  possible  loss  of  precision  [FE]                    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  Math.max(epsilon  /  DEFAULT_EPSILON,  maxIterations);  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  Math.max(epsilon  /  DEFAULT_EPSILON,  maxIterations);	      this.maxIterations    =    Math.max(epsilon    /    DEFAULT_EPSILON);    	non-compiled	[CE]  possible  loss  of  precision	6	None	replace
55	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(epsilon  /  DEFAULT_EPSILON,  mean);  [CE]  possible  loss  of  precision  [FE]                      MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  Math.max(epsilon  /  DEFAULT_EPSILON,  mean);  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  Math.max(epsilon  /  DEFAULT_EPSILON,  mean);	      this.maxIterations    =    Math.max(epsilon    /    DEFAULT_EPSILON);    	non-compiled	[CE]  possible  loss  of  precision	6	None	replace
56	[BUG]  [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  this.maxIterations  =  DEFAULT_MIN_ITERATIONS;  [CE]  cannot  find  symbol  DEFAULT_MIN_ITERATIONS  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  this.maxIterations  =  DEFAULT_MIN_ITERATIONS;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations    =    DEFAULT_MAX_ITERATIONS;    this.maxIterations  =  DEFAULT_MIN_ITERATIONS;	  	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MIN_ITERATIONS	7	None	add
57	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  +  2;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	add	this.maxIterations  =  maxIterations  +  2;	  this.maxIterations    =    maxIterations    +    1;    	compilable	  [FE]  MathRuntimeException$4  	14	1	replace
58	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations  +  2;  [FE]  MathRuntimeException$4  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  +  2;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  maxIterations  +  2;	  this.maxIterations    =    maxIterations    +    1;    	compilable	  [FE]  MathRuntimeException$4  	14	1	replace
59	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations  -  mean  +  1;  [CE]  possible  loss  of  precision  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  -  mean  +  1;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  maxIterations  -  mean  +  1;	  this.maxIterations    =    maxIterations    -    mean;    	non-compiled	[CE]  possible  loss  of  precision	15	None	replace
60	[BUG]  [BUGGY]      this.maxIterations  =  maxIterations;  this.maxIters  =  maxIterations;  [CE]  cannot  find  symbol  maxIters  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]      this.maxIterations  =  maxIterations;  this.maxIters  =  maxIterations;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	        this.maxIterations    =    maxIterations;    this.maxIters  =  maxIterations;	  	non-compiled	[CE]  cannot  find  symbol  maxIters	3	None	add
61	[BUG]  [BUGGY]      this.maxIterations  =  maxIterations;  this.maxIterations  =  maxIters;  [CE]  cannot  find  symbol  maxIters  [FE]      MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]      this.maxIterations  =  maxIterations;  this.maxIterations  =  maxIters;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	        this.maxIterations    =    maxIterations;    this.maxIterations  =  maxIters;	  	non-compiled	[CE]  cannot  find  symbol  maxIters	3	None	add
62	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(DEFAULT_EPSILON  /  epsilon);  [CE]  no  suitable  method  found  for  max(double)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  Math.max(DEFAULT_EPSILON  /  epsilon);  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  Math.max(DEFAULT_EPSILON  /  epsilon);	      this.maxIterations    =    Math.max(epsilon    /    DEFAULT_EPSILON);    	non-compiled	[CE]  no  suitable  method  found  for  max(double)	6	None	replace
63	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean  /  DEFAULT_EPSILON);  [CE]  no  suitable  method  found  for  max(double)  [FE]                  MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  Math.max(mean  /  DEFAULT_EPSILON);  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  Math.max(mean  /  DEFAULT_EPSILON);	      this.maxIterations    =    Math.max(epsilon    /    DEFAULT_EPSILON);    	non-compiled	[CE]  no  suitable  method  found  for  max(double)	6	None	replace
64	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations  +  1;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  maxIterations);  this.maxIterations  =  maxIterations  +  1;  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  +  1;  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  maxIterations);  this.maxIterations  =  maxIterations  +  1;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations    =    maxIterations    +    1;    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  maxIterations);  this.maxIterations  =  maxIterations  +  1;	  	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	13	None	add
65	[BUG]  [BUGGY]  int  maxIterations  =  normal.getMaxIterations()  -  DEFAULT_EPSILON;  [CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  int  maxIterations  =  normal.getMaxIterations()  -  DEFAULT_EPSILON;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	int  maxIterations  =  normal.getMaxIterations()  -  DEFAULT_EPSILON;	      int    maxIterations    =    normal.getMaxIterations();    	non-compiled	[CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	10	None	replace
66	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(mean,  DEFAULT_EPSILON,  normal);  [CE]  no  suitable  method  found  for  max(double,double,NormalDistribution)  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  Math.max(mean,  DEFAULT_EPSILON,  normal);  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  Math.max(mean,  DEFAULT_EPSILON,  normal);	      this.maxIterations    =    Math.max(DEFAULT_EPSILON,    normal);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,NormalDistribution)	16	None	replace
67	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(deFAULT_EPSILON,  mean);  [CE]  cannot  find  symbol  deFAULT_EPSILON  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  Math.max(deFAULT_EPSILON,  mean);  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  Math.max(deFAULT_EPSILON,  mean);	      this.maxIterations    =    Math.max(DEFAULT_EPSILON,    normal);    	non-compiled	[CE]  cannot  find  symbol  deFAULT_EPSILON	16	None	replace
68	[BUG]  [BUGGY]  int  maxIterations  =  mean.maxIterations;  [CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  int  maxIterations  =  mean.maxIterations;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	int  maxIterations  =  mean.maxIterations;	      int    maxIterations    =    normal.maxIterations;    	non-compiled	[CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	12	None	replace
69	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations  -  DEFAULT_EPSILON_MEAN;  [CE]  cannot  find  symbol  DEFAULT_EPSILON_MEAN  [FE]          MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  -  DEFAULT_EPSILON_MEAN;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  maxIterations  -  DEFAULT_EPSILON_MEAN;	  this.maxIterations    =    DEFAULT_EPSILON_MEAN;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_EPSILON_MEAN	9	None	replace
70	[BUG]  [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  this.maxIters  =  DEFAULT_MAX_ITERATIONS;  [CE]  cannot  find  symbol  maxIters  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  DEFAULT_MAX_ITERATIONS;  this.maxIters  =  DEFAULT_MAX_ITERATIONS;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations    =    DEFAULT_MAX_ITERATIONS;    this.maxIters  =  DEFAULT_MAX_ITERATIONS;	  	non-compiled	[CE]  cannot  find  symbol  maxIters	7	None	add
71	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(DEFAULT_EPSILON,  maxIterations);  [CE]  possible  loss  of  precision  [FE]              MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  Math.max(DEFAULT_EPSILON,  maxIterations);  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  Math.max(DEFAULT_EPSILON,  maxIterations);	      this.maxIterations    =    Math.max(epsilon,    maxIterations);    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
72	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(epsilon,  DEFAULT_EPSILON);  [CE]  possible  loss  of  precision  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  Math.max(epsilon,  DEFAULT_EPSILON);  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  Math.max(epsilon,  DEFAULT_EPSILON);	      this.maxIterations    =    Math.max(epsilon,    maxIterations);    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
73	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations  +  1;  This.maxIterations  =  maxIterations  +  1;  [CE]  cannot  find  symbol  This  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  +  1;  This.maxIterations  =  maxIterations  +  1;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations    =    maxIterations    +    1;    This.maxIterations  =  maxIterations  +  1;	  	non-compiled	[CE]  cannot  find  symbol  This	13	None	add
74	[BUG]  [BUGGY]  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  +  1;  this.maxIterations  =  maxIterations  +  2;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	add	this.maxIterations    =    maxIterations    +    1;    this.maxIterations  =  maxIterations  +  2;	  	compilable	  [FE]  MathRuntimeException$4  	13	1	add
75	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations  +  1;  this.maxIterations  =  maxIterations  +  2;  [FE]  MathRuntimeException$4  [FE]      MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  +  1;  this.maxIterations  =  maxIterations  +  2;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations    =    maxIterations    +    1;    this.maxIterations  =  maxIterations  +  2;	  	compilable	  [FE]  MathRuntimeException$4  	13	1	add
76	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations  +  1;  int  maxIterations  =  this.maxIterations  +  1;  [CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  +  1;  int  maxIterations  =  this.maxIterations  +  1;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations    =    maxIterations    +    1;    int  maxIterations  =  this.maxIterations  +  1;	  	non-compiled	[CE]  variable  maxIterations  is  already  defined  in  constructor  PoissonDistributionImpl(double,double,int)	13	None	add
77	[BUG]  [BUGGY]      this.maxIterations  =  maxIterations;  this.maxIterations  =  epsilon;  [CE]  possible  loss  of  precision  [FE]    MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]      this.maxIterations  =  maxIterations;  this.maxIterations  =  epsilon;  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	        this.maxIterations    =    maxIterations;    this.maxIterations  =  epsilon;	  	non-compiled	[CE]  possible  loss  of  precision	3	None	add
78	[BUG]  [BUGGY]  this.maxIterations  =  Math.max(maxIterations  /  DEFAULT_EPSILON);  [CE]  no  suitable  method  found  for  max(double)  [FE]                MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  Math.max(maxIterations  /  DEFAULT_EPSILON);  [BUGGY]    this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  Math.max(maxIterations  /  DEFAULT_EPSILON);	      this.maxIterations    =    Math.max(epsilon    /    DEFAULT_EPSILON);    	non-compiled	[CE]  no  suitable  method  found  for  max(double)	6	None	replace
79	[BUG]  [BUGGY]  [FE]  FunctionEvaluationException  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  -  DEFAULT_MAX_ITERATIONS;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	add	this.maxIterations  =  maxIterations  -  DEFAULT_MAX_ITERATIONS;	  this.maxIterations    =    maxIterations    -    DEFAULT_EPSILON;    	compilable	  [FE]  FunctionEvaluationException  	17	8	replace
80	[BUG]  [BUGGY]  this.maxIterations  =  maxIterations  -  DEFAULT_MAX_ITERATIONS;  [FE]  FunctionEvaluationException  [FE]        MathRuntimeException$4    [CONTEXT]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;    [BUGGY]  this.maxIterations  =  maxIterations  -  DEFAULT_MAX_ITERATIONS;  [BUGGY]    }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	99	99	1	replace	this.maxIterations  =  maxIterations  -  DEFAULT_MAX_ITERATIONS;	  this.maxIterations    =    maxIterations    -    DEFAULT_EPSILON;    	compilable	  [FE]  FunctionEvaluationException  	17	8	replace
