bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_EPSILON,  maxIterations)  {  [CE]  <identifier>  expected  [FE]        MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_EPSILON,  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_EPSILON,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
2	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	6	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	add	public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	6	7	replace
4	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {  [FE]  AssertionFailedError  [FE]            MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	6	7	replace
5	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  defsilon,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  int  defsilon,  int  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  defsilon,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	6	None	replace
6	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
7	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
8	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
9	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
10	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
11	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  mean);  [CE]  <identifier>  expected  [FE]        MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  mean);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  mean);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    p);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
12	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p  +  1);  [CE]  <identifier>  expected  [FE]          MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p  +  1);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p  +  1);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    p);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
13	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  epsilon);  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  epsilon);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  epsilon);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    p);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
14	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  mean);  [CE]  <identifier>  expected  [FE]        MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  mean);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  mean);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
15	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p  +  1);  [CE]  <identifier>  expected  [FE]          MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p  +  1);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p  +  1);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
16	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]    MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	8	None	replace
17	[BUG]  [BUGGY]  this(DEFAULT_EPSILON,  p,  DEFAULT_EPSILON);  [CE]  illegal  start  of  type  [FE]      MathRuntimeException$4    [CONTEXT]      [BUGGY]  this(DEFAULT_EPSILON,  p,  DEFAULT_EPSILON);  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(DEFAULT_EPSILON,  p,  DEFAULT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
18	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon);  [CE]  <identifier>  expected  [FE]          MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
19	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  mean);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  mean);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  mean);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
20	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  epsilon);  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  epsilon);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  epsilon);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
21	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  p);  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  p);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  p);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
22	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  mean);  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  mean);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  mean);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
23	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  mean);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  mean);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  mean);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
24	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  DEFAULT_MAX_ITERATIONS);  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  DEFAULT_MAX_ITERATIONS);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
25	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_EPSILON)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
26	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  maxIterations,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  maxIterations,  DEFAULT_EPSILON)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  maxIterations,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
27	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  MAX_ITERATIONS)  {  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  MAX_ITERATIONS)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  MAX_ITERATIONS)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
28	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]    MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	13	None	replace
29	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  mean,  maxIterations)  {  [CE]  <identifier>  expected  [FE]        MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  mean,  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  mean,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
30	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean,  DEFAULT_EPSILON,  maxIterations)  {  [CE]  <identifier>  expected  [FE]          MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean,  DEFAULT_EPSILON,  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean,  DEFAULT_EPSILON,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
31	[BUG]  [BUGGY]  this(null,  epsilon,  DEFAULT_EPSILON,  maxIterations);  [CE]  illegal  start  of  type  [FE]            MathRuntimeException$4    [CONTEXT]      [BUGGY]  this(null,  epsilon,  DEFAULT_EPSILON,  maxIterations);  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(null,  epsilon,  DEFAULT_EPSILON,  maxIterations);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
32	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  int  maxIterations)  {  [CE]  <identifier>  expected  [FE]        MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  int  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
33	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  mean)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  mean)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  mean)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	11	None	replace
34	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  mean)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  mean)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  int  epsilon,  int  mean)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	11	None	replace
35	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  int  epsilon,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	11	None	replace
36	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]          MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_EPSILON);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_EPSILON);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
37	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  epsilon);  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  epsilon);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  epsilon);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
38	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  null);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  null);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  null);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
39	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
40	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
41	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
42	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
43	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
44	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  mean,  maxIterations)  {  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  mean,  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  mean,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
45	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  mean,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  mean,  int  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  epsilon,  double  p,  int  mean,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	9	None	replace
46	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  maxIterations)  {  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
47	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  mean);  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  mean);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  mean);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
48	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  epsilon);  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  epsilon);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  epsilon);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
49	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  p);  [CE]  <identifier>  expected  [FE]                    MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  p);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  p);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
50	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  maxIterations);  [CE]  <identifier>  expected  [FE]        MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  maxIterations);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  maxIterations);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    p);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
51	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  epsilon);  [CE]  <identifier>  expected  [FE]        MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  epsilon);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  epsilon);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
52	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  maxIterations)  {  [CE]  <identifier>  expected  [FE]    MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
53	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  epsilon);  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  epsilon);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  epsilon);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
54	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  maxIterations);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  maxIterations);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  maxIterations);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
55	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  maxIterations);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  maxIterations);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  maxIterations);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
56	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]        MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean,  DEFAULT_EPSILON)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
57	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  MAX_ITERATIONS)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  MAX_ITERATIONS)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
58	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
59	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  p,  int  epsilon,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]        MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  p,  int  epsilon,  int  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  mean,  double  p,  int  epsilon,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	6	None	replace
60	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  maxIterations,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  maxIterations,  DEFAULT_EPSILON)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  maxIterations,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
61	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  <identifier>  expected  [FE]          MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
62	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  normal);  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  normal);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  normal);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
63	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
64	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
65	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
66	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  normal);  [CE]  <identifier>  expected  [FE]          MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  normal);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  normal);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
67	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  maxIterations);  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  maxIterations);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  maxIterations);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
68	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  mean)  {  [CE]  <identifier>  expected  [FE]        MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  mean)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  mean)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
69	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  float  maxIterations)  {  [CE]  <identifier>  expected  [FE]          MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  float  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  float  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
70	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  char  maxIterations)  {  [CE]  <identifier>  expected  [FE]        MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  char  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  char  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
71	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  MAX_ITERATIONS)  {  [CE]  <identifier>  expected  [FE]    MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  MAX_ITERATIONS)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  MAX_ITERATIONS)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
72	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  DEFAULT_EPSILON,  maxIterations)  {  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  DEFAULT_EPSILON,  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  DEFAULT_EPSILON,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
73	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  normal,  int  maxIterations)  {  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  normal,  int  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  normal,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
74	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  DEFAULT_MAX_ITERATIONS);  [CE]  <identifier>  expected  [FE]        MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  DEFAULT_MAX_ITERATIONS);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
75	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]    MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
76	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_MAX_ITERATIONS)  {  [CE]  <identifier>  expected  [FE]      MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_MAX_ITERATIONS)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_MAX_ITERATIONS)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
77	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
78	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  mean);  [CE]  <identifier>  expected  [FE]          MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  mean);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  mean);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
79	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
80	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  normal,  maxIterations)  {  [CE]  <identifier>  expected  [FE]        MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  normal,  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  normal,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
81	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  maxIterations)  {  [CE]  <identifier>  expected  [FE]          MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  maxIterations)  {  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
82	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  expression  [FE]    MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
83	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  illegal  start  of  expression  [FE]      MathRuntimeException$4    [CONTEXT]      [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]    if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
84	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  mean);  [CE]  <identifier>  expected  [FE]          MathRuntimeException$4    [CONTEXT]      [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  mean);  [BUGGY]    public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  mean);	      MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
