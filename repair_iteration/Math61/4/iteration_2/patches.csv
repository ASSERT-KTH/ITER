bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p  +  2);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p  +  2);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p  +  2);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
2	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p  +  3);  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p  +  3);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p  +  3);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
3	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  DEFAULT_EPSILON,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  DEFAULT_EPSILON,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  epsilon,  double  p,  int  DEFAULT_EPSILON,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    mean,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	45	None	replace
4	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  DEFAULT_EPSILON,  int  maxIterations)  {  [CE]  <identifier>  expected  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  DEFAULT_EPSILON,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  epsilon,  double  p,  DEFAULT_EPSILON,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    mean,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
5	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  int  p,  int  mean,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                      MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  int  p,  int  mean,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  epsilon,  int  p,  int  mean,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    mean,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	45	None	replace
6	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	41	None	replace
7	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	41	None	replace
8	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	41	None	replace
9	[BUG]  [BUGGY]  Public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  cannot  find  symbol  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  Public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	Public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
10	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_EPSILON);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	8	None	replace
11	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_  [CE]  ')'  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_EPSILON);    	non-compiled	[CE]  ')'  expected	8	None	replace
12	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_EPSILON);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	8	None	replace
13	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_EPSILON);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	8	None	replace
14	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  DEFAULT_EPSILON,  maxIterations)  {  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  DEFAULT_EPSILON,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  int  epsilon,  DEFAULT_EPSILON,  maxIterations)  {	  public    PoissonDistributionImpl(int    p,    int    epsilon,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
15	[BUG]  [BUGGY]  public  PoissonDistributionImpl(long  p,  int  epsilon,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(long  p,  int  epsilon,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(long  p,  int  epsilon,  int  maxIterations)  {	  public    PoissonDistributionImpl(int    p,    int    epsilon,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	35	None	replace
16	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  epsilon,  maxIterations);  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  epsilon,  maxIterations);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  epsilon,  maxIterations);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    epsilon);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
17	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  MAX_ITERATIONS,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  MAX_ITERATIONS,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  MAX_ITERATIONS,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    MAX_ITERATIONS)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
18	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  MAX_ITERATIONS,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]                      MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  MAX_ITERATIONS,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  MAX_ITERATIONS,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    MAX_ITERATIONS)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
19	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_EPSILON,  MAX_ITERATIONS)  {  [CE]  <identifier>  expected  [FE]                        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_EPSILON,  MAX_ITERATIONS)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_EPSILON,  MAX_ITERATIONS)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    MAX_ITERATIONS)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
20	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	7	None	replace
21	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	7	None	replace
22	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	7	None	replace
23	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  DEFAULT_EPSILON,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  DEFAULT_EPSILON,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  DEFAULT_EPSILON,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	7	None	replace
24	[BUG]  [BUGGY]  this(null,  DEFAULT_EPSILON,  epsilon,  maxIterations);  [CE]  illegal  start  of  type  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(null,  DEFAULT_EPSILON,  epsilon,  maxIterations);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(null,  DEFAULT_EPSILON,  epsilon,  maxIterations);	  this(null,    epsilon,    DEFAULT_EPSILON,    maxIterations);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
25	[BUG]  [BUGGY]  this(null,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  maxIterations);  [CE]  illegal  start  of  type  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(null,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  maxIterations);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(null,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  maxIterations);	  this(null,    epsilon,    DEFAULT_EPSILON,    maxIterations);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
26	[BUG]  [BUGGY]  this(null,  DEFAULT_EPSILON,  p,  maxIterations);  [CE]  illegal  start  of  type  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(null,  DEFAULT_EPSILON,  p,  maxIterations);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(null,  DEFAULT_EPSILON,  p,  maxIterations);	  this(null,    epsilon,    DEFAULT_EPSILON,    maxIterations);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
27	[BUG]  [BUGGY]  this(null,  0,  DEFAULT_EPSILON,  maxIterations);  [CE]  illegal  start  of  type  [FE]                      MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(null,  0,  DEFAULT_EPSILON,  maxIterations);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(null,  0,  DEFAULT_EPSILON,  maxIterations);	  this(null,    epsilon,    DEFAULT_EPSILON,    maxIterations);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
28	[BUG]  [BUGGY]  this(null,  null,  DEFAULT_EPSILON,  maxIterations);  [CE]  illegal  start  of  type  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(null,  null,  DEFAULT_EPSILON,  maxIterations);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(null,  null,  DEFAULT_EPSILON,  maxIterations);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    DEFAULT_EPSILON,    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
29	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  mean,  maxIterations)  {  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  mean,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  mean,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    DEFAULT_EPSILON,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	81	None	replace
30	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	40	None	replace
31	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	40	None	replace
32	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	40	None	replace
33	[BUG]  [BUGGY]  Public  PoissonDistributionImpl(double  p,  int  epsilon,  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  Public  PoissonDistributionImpl(double  p,  int  epsilon,  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	Public  PoissonDistributionImpl(double  p,  int  epsilon,  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
34	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON,  mean);  [CE]  <identifier>  expected  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON,  mean);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON,  mean);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS,    DEFAULT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
35	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON));  [CE]  <identifier>  expected  [FE]                      MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON));  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON));	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS,    DEFAULT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
36	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON,  epsilon);  [CE]  <identifier>  expected  [FE]                        MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON,  epsilon);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON,  epsilon);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS,    DEFAULT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
37	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  epsilon);  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  epsilon);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  epsilon);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    mean);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
38	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal);  [CE]  <identifier>  expected  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    mean);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
39	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    MAX_ITERATIONS)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	28	None	replace
40	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  MAX_ITERATIONS,  int  epsilon)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  MAX_ITERATIONS,  int  epsilon)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  MAX_ITERATIONS,  int  epsilon)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    MAX_ITERATIONS)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	28	None	replace
41	[BUG]  [BUGGY]  this(DEFAULT_EPSILON,  p,  epsilon,  maxIterations);  [CE]  illegal  start  of  type  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(DEFAULT_EPSILON,  p,  epsilon,  maxIterations);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(DEFAULT_EPSILON,  p,  epsilon,  maxIterations);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    mean,    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
42	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	10	None	replace
43	[BUG]  [BUGGY]  Public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  cannot  find  symbol  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  Public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	Public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
44	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	10	None	replace
45	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [CE]  ')'  expected  [FE]                      MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  ')'  expected	10	None	replace
46	[BUG]  [BUGGY]  MathRuntimeException$4  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException$4  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException$4  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException$1    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
47	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException$1    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	42	None	replace
48	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException$1    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	42	None	replace
49	[BUG]  [BUGGY]  this.mean  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  illegal  start  of  type  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  this.mean  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this.mean  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException$1    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
50	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  DEFAULT_MAX_ITERATIONS,  mean);  [CE]  <identifier>  expected  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  DEFAULT_MAX_ITERATIONS,  mean);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  DEFAULT_MAX_ITERATIONS,  mean);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
51	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  DEFAULT_MAX_ITERATIONS,  maxIterations);  [CE]  <identifier>  expected  [FE]                      MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  DEFAULT_MAX_ITERATIONS,  maxIterations);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  DEFAULT_MAX_ITERATIONS,  maxIterations);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
52	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  epsilon,  maxIterations);  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  epsilon,  maxIterations);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  epsilon,  maxIterations);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    p,    epsilon);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
53	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  DEFAULT_EPSILON);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  DEFAULT_EPSILON);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    p,    epsilon);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
54	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  mean,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  mean,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  mean,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
55	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	56	None	replace
56	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  double  mean,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  double  mean,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  double  mean,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	add	public  PoissonDistributionImpl(double  epsilon,  double  p,  int  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	4	7	replace
58	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  DEFAULT_EPSILON)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  epsilon,  double  p,  int  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	4	7	replace
59	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  int  p,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  int  p,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  epsilon,  int  p,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	4	None	replace
60	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  epsilon,  int  p,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  epsilon,  int  p,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  epsilon,  int  p,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	4	None	replace
61	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  mean,  DEFAULT_EPSILON,  maxIterations)  {  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  mean,  DEFAULT_EPSILON,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  mean,  DEFAULT_EPSILON,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    mean,    DEFAULT_EPSILON,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
62	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException$0    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	65	None	replace
63	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException$0    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	65	None	replace
64	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException$0    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	65	None	replace
65	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  DEFAULT_MEMBER_ITERATIONS);  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  DEFAULT_MEMBER_ITERATIONS);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  DEFAULT_MEMBER_ITERATIONS);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p,    mean);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
66	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  mean,  p);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  mean,  p);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  mean,  p);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p,    mean);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
67	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
68	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
69	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
70	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p  +  2);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p  +  2);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p  +  2);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    p    +    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
71	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p  +  1,  epsilon);  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p  +  1,  epsilon);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p  +  1,  epsilon);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    p    +    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
72	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  DEFAULT_MAX_ITERATIONS,  mean);  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  DEFAULT_MAX_ITERATIONS,  mean);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  DEFAULT_MAX_ITERATIONS,  mean);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
73	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  DEFAULT_MAX_ITERATIONS,  maxIterations);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  DEFAULT_MAX_ITERATIONS,  maxIterations);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  DEFAULT_MAX_ITERATIONS,  maxIterations);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
74	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  maxIterations);  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  maxIterations);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  maxIterations);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
75	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_EPSILON,  mean);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_EPSILON,  mean);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_EPSILON,  mean);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    DEFAULT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
76	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_EPSILON,  p);  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_EPSILON,  p);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_EPSILON,  p);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    DEFAULT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
77	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  epsilon,  maxIterations);  [CE]  <identifier>  expected  [FE]                      MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  epsilon,  maxIterations);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  epsilon,  maxIterations);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS,    epsilon);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
78	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  mean,  maxIterations,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  mean,  maxIterations,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  mean,  maxIterations,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    mean,    maxIterations,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
79	[BUG]  [BUGGY]  this(null,  null,  mean,  maxIterations,  DEFAULT_EPSILON);  [CE]  illegal  start  of  type  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(null,  null,  mean,  maxIterations,  DEFAULT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(null,  null,  mean,  maxIterations,  DEFAULT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    mean,    maxIterations,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
80	[BUG]  [BUGGY]  this(null,  null,  mean,  maxIterations,  DEFAULT_EPSILON)  {  [CE]  illegal  start  of  type  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(null,  null,  mean,  maxIterations,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(null,  null,  mean,  maxIterations,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    mean,    maxIterations,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
81	[BUG]  [BUGGY]  this(null,  epsilon,  mean,  maxIterations,  DEFAULT_EPSILON)  {  [CE]  illegal  start  of  type  [FE]                      MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(null,  epsilon,  mean,  maxIterations,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(null,  epsilon,  mean,  maxIterations,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    mean,    maxIterations,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
82	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  normal,  int  maxIterations)  {  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  normal,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  normal,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    normal,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
83	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  normal,  DEFAULT_EPSILON,  maxIterations)  {  [CE]  <identifier>  expected  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  normal,  DEFAULT_EPSILON,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  normal,  DEFAULT_EPSILON,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    normal,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
84	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  normal,  maxIterations)  {  [CE]  <identifier>  expected  [FE]                      MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  normal,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  normal,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    normal,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
85	[BUG]  [BUGGY]  public  PoissonDistributionImpl(long  p,  long  epsilon,  int  mean)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(long  p,  long  epsilon,  int  mean)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(long  p,  long  epsilon,  int  mean)  {	  public    PoissonDistributionImpl(int    p,    int    epsilon,    int    mean)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	34	None	replace
86	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  int  mean,  int  epsilon)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  p,  int  mean,  int  epsilon)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  int  mean,  int  epsilon)  {	  public    PoissonDistributionImpl(int    p,    int    epsilon,    int    mean)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	34	None	replace
87	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  epsilon,  maxIterations);  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  epsilon,  maxIterations);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  epsilon,  maxIterations);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p,    maxIterations);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
88	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  epsilon,  maxIterations);  [CE]  <identifier>  expected  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  epsilon,  maxIterations);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  epsilon,  maxIterations);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p,    maxIterations);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
89	[BUG]  [BUGGY]  this(null,  epsilon,  DEFAULT_EPSILON,  maxIterations)  {  [CE]  illegal  start  of  type  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(null,  epsilon,  DEFAULT_EPSILON,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(null,  epsilon,  DEFAULT_EPSILON,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    mean,    float    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
90	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  normal);  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  normal);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  normal);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS,    mean);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
91	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  mean,  maxIterations);  [CE]  <identifier>  expected  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  mean,  maxIterations);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  mean,  maxIterations);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS,    mean);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
92	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  int  maxIterations)  {  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    mean,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
93	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal,  mean);  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal,  mean);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  normal,  mean);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p,    mean);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
94	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  DEFAULT_MEAN);  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  DEFAULT_MEAN);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  DEFAULT_MEAN);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p,    mean);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
95	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  maxIterations,  double  epsilon)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  maxIterations,  double  epsilon)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  maxIterations,  double  epsilon)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	52	None	replace
96	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  maxIterations)  {  [CE]  constructor  PoissonDistributionImpl(double,int)  is  already  defined  in  class  PoissonDistributionImpl  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    maxIterations)    {    	non-compiled	[CE]  constructor  PoissonDistributionImpl(double,int)  is  already  defined  in  class  PoissonDistributionImpl	52	None	replace
97	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    maxIterations,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
98	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_EPSILON,  mean)  {  [CE]  <identifier>  expected  [FE]                      MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_EPSILON,  mean)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_EPSILON,  mean)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    maxIterations,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
99	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_SECONDS,  maxIterations)  {  [CE]  <identifier>  expected  [FE]                        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_SECONDS,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_SECONDS,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    maxIterations,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
100	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  mean,  DEFAULT_EPSILON,  maxIterations)  {  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  mean,  DEFAULT_EPSILON,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  mean,  DEFAULT_EPSILON,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    mean,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
101	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON,  maxIterations)  {  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    mean,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
102	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  p,  mean);  [CE]  <identifier>  expected  [FE]                      MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  p,  mean);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  p,  mean);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS,    p);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
103	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  epsilon,  maxIterations);  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  epsilon,  maxIterations);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  epsilon,  maxIterations);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p,    epsilon);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
104	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA  [CE]  ')'  expected  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  ')'  expected	82	None	replace
105	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA  [CE]  ')'  expected  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  ')'  expected	82	None	replace
106	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	82	None	replace
107	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA  [CE]  ')'  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  ')'  expected	82	None	replace
108	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  defsilon,  DEFAULT_EPSILON,  maxIterations)  {  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  defsilon,  DEFAULT_EPSILON,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  defsilon,  DEFAULT_EPSILON,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    int    defsilon,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
109	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  defsilon,  mean,  int  maxIterations)  {  [CE]  <identifier>  expected  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  defsilon,  mean,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  defsilon,  mean,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    int    defsilon,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
110	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  DEFAULT_EPSILON,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                      MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  DEFAULT_EPSILON,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  DEFAULT_EPSILON,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    int    defsilon,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	5	None	replace
111	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  defsilon,  double  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  defsilon,  double  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  defsilon,  double  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    int    defsilon,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	5	None	replace
112	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  normal);  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  normal);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  normal);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    p,    mean);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
113	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  mean,  DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  mean,  DEFAULT_EPSILON);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  mean,  DEFAULT_EPSILON);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    p,    mean);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
114	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException$0    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	58	None	replace
115	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException$0    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	58	None	replace
116	[BUG]  [BUGGY]  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException$0    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
117	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  epsilon,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  epsilon,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  epsilon,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
118	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  normal,  maxIterations)  {  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  normal,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  int  epsilon,  normal,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    normal,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
119	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  normal,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  normal,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  normal,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    normal,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
120	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_EPSILON,  mean,  maxIterations)  {  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_EPSILON,  mean,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_EPSILON,  mean,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    DEFAULT_EPSILON,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
121	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  this);  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  this);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  this);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    null);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
122	[BUG]  [BUGGY]  this(null,  null,  mean,  DEFAULT_EPSILON,  maxIterations);  [CE]  illegal  start  of  type  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(null,  null,  mean,  DEFAULT_EPSILON,  maxIterations);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(null,  null,  mean,  DEFAULT_EPSILON,  maxIterations);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    DEFAULT_EPSILON,    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
123	[BUG]  [BUGGY]  this(null,  epsilon,  mean,  DEFAULT_EPSILON,  maxIterations);  [CE]  illegal  start  of  type  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(null,  epsilon,  mean,  DEFAULT_EPSILON,  maxIterations);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(null,  epsilon,  mean,  DEFAULT_EPSILON,  maxIterations);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    DEFAULT_EPSILON,    maxIterations)    {    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
124	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  epsilon)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  epsilon)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  epsilon)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    mean)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	33	None	replace
125	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  mean,  int  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  mean,  int  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  mean,  int  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    mean)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
126	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  int  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  int  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  int  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    mean)    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
127	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  normal);  [CE]  <identifier>  expected  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  normal);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  normal);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS,    mean);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
128	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  mean,  maxIterations);  [CE]  <identifier>  expected  [FE]                      MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  mean,  maxIterations);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  mean,  maxIterations);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS,    mean);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
129	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	9	None	replace
130	[BUG]  [BUGGY]  Public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  cannot  find  symbol  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  Public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	Public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
131	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	9	None	replace
132	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  DEFAULT_EPSILON,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  DEFAULT_EPSILON,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  DEFAULT_EPSILON,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	9	None	replace
133	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  epsilon,  maxIterations);  [CE]  <identifier>  expected  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  epsilon,  maxIterations);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MAX_ITERATIONS,  epsilon,  maxIterations);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS,    epsilon);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
134	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MA  [CE]  ')'  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MA  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MA	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  ')'  expected	43	None	replace
135	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MA  [CE]  ')'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MA  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MA	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  ')'  expected	43	None	replace
136	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MA  [CE]  ')'  expected  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MA  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MA	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  ')'  expected	43	None	replace
137	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon,  maxIterations);  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon,  maxIterations);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  epsilon,  maxIterations);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS,    maxIterations);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
138	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	39	None	replace
139	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	39	None	replace
140	[BUG]  [BUGGY]  Public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  cannot  find  symbol  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  Public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	Public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
141	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  p,  mean);  [CE]  <identifier>  expected  [FE]                        MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  p,  mean);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  p,  mean);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS,    p);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
142	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	6	None	replace
143	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	6	None	replace
144	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	6	None	replace
145	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  DEFAULT_EPSILON,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  DEFAULT_EPSILON,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  DEFAULT_EPSILON,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	6	None	replace
146	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  mean)  {  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  mean)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  mean)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    mean)    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
147	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  epsilon,  int  DEFAULT_EPSILON)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  epsilon,  int  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  epsilon,  int  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    DEFAULT_EPSILON)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	16	None	replace
148	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
149	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
150	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
151	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
152	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
153	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
154	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
155	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
156	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA  [CE]  ')'  expected  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  ')'  expected	79	None	replace
157	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	79	None	replace
158	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
159	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
160	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
161	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  MAX_ITERATIONS)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  illegal  start  of  expression  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  MAX_ITERATIONS)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  MAX_ITERATIONS)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
162	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    int    mean,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	2	None	replace
163	[BUG]  [BUGGY]  Public  PoissonDistributionImpl(double  p,  int  mean,  int  maxIterations)  {  [CE]  cannot  find  symbol  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  Public  PoissonDistributionImpl(double  p,  int  mean,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	Public  PoissonDistributionImpl(double  p,  int  mean,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    int    mean,    int    maxIterations)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
164	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_MAX_ITERATIONS)  {  [CE]  <identifier>  expected  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_MAX_ITERATIONS)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_MAX_ITERATIONS)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    DEFAULT_MAX_ITERATIONS)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
165	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  epsilon,  double  p,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  epsilon,  double  p,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  mean,  double  epsilon,  double  p,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    mean,    double    p,    int    epsilon,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	59	None	replace
166	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  mean,  int  p,  int  epsilon,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  mean,  int  p,  int  epsilon,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  mean,  int  p,  int  epsilon,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    mean,    double    p,    int    epsilon,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	59	None	replace
167	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  p,  int  epsilon,  DEFAULT_EPSILON,  maxIterations)  {  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  p,  int  epsilon,  DEFAULT_EPSILON,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  mean,  double  p,  int  epsilon,  DEFAULT_EPSILON,  maxIterations)  {	  public    PoissonDistributionImpl(double    mean,    double    p,    int    epsilon,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
168	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  meth,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  meth,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  epsilon,  double  p,  int  meth,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    mean,    double    p,    int    epsilon,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	59	None	replace
169	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  mean)  {  [CE]  <identifier>  expected  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  mean)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  mean)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
170	[BUG]  [BUGGY]  this.mean  =  new  PoissonDistributionImpl(p,  epsilon,  DEFAULT_EPSILON);  [CE]  illegal  start  of  type  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  this.mean  =  new  PoissonDistributionImpl(p,  epsilon,  DEFAULT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this.mean  =  new  PoissonDistributionImpl(p,  epsilon,  DEFAULT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
171	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	83	None	replace
172	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	83	None	replace
173	[BUG]  [BUGGY]  Public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  cannot  find  symbol  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  Public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	Public  PoissonDistributionImpl(double  p,  int  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
174	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
175	[BUG]  [BUGGY]  this(p,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  type  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(p,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(p,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  this(DEFAULT_EPSILON,    p,    DEFAULT_EPSILON);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
176	[BUG]  [BUGGY]  this(p,  DEFAULT_EPSILON);  [CE]  illegal  start  of  type  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(p,  DEFAULT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(p,  DEFAULT_EPSILON);	  this(DEFAULT_EPSILON,    p,    DEFAULT_EPSILON);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
177	[BUG]  [BUGGY]  this(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON);  [CE]  illegal  start  of  type  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON);	  this(DEFAULT_EPSILON,    p,    DEFAULT_EPSILON);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
178	[BUG]  [BUGGY]  this(null,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  type  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(null,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(null,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  this(DEFAULT_EPSILON,    p,    DEFAULT_EPSILON);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
179	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  normal);  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  normal);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p,  normal);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p,    mean);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
180	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  if(p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  if(p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  if(p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
181	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
182	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	39	None	replace
183	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  mean,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	39	None	replace
184	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  defsilon,  epsilon,  maxIterations)  {  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  defsilon,  epsilon,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  defsilon,  epsilon,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    int    defsilon,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
185	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  mean,  int  p,  int  epsilon,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  mean,  int  p,  int  epsilon,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  mean,  int  p,  int  epsilon,  int  maxIterations)  {	  public    PoissonDistributionImpl(int    p,    int    epsilon,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	35	None	replace
186	[BUG]  [BUGGY]  public  PoissonDistributionImpl(long  p,  long  epsilon,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(long  p,  long  epsilon,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(long  p,  long  epsilon,  int  maxIterations)  {	  public    PoissonDistributionImpl(int    p,    int    epsilon,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	35	None	replace
187	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  maxIterations,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  maxIterations,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  maxIterations,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    int    mean,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
188	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  maxIterations,  boolean  normal)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  maxIterations,  boolean  normal)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  maxIterations,  boolean  normal)  {	  public    PoissonDistributionImpl(double    p,    int    mean,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	2	None	replace
189	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  epsilon  +  1);  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  epsilon  +  1);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p,  epsilon  +  1);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    p,    epsilon);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
190	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	40	None	replace
191	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  mean,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	40	None	replace
192	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  p,  DEFAULT_EPSILON,  epsilon,  maxIterations)  {  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  p,  DEFAULT_EPSILON,  epsilon,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  mean,  double  p,  DEFAULT_EPSILON,  epsilon,  maxIterations)  {	  public    PoissonDistributionImpl(double    mean,    double    p,    int    epsilon,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
193	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  p,  int  epsilon,  maxIterations)  {  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  p,  int  epsilon,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  mean,  double  p,  int  epsilon,  maxIterations)  {	  public    PoissonDistributionImpl(double    mean,    double    p,    int    epsilon,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
194	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  p,  normal,  epsilon,  maxIterations)  {  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  p,  normal,  epsilon,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  mean,  double  p,  normal,  epsilon,  maxIterations)  {	  public    PoissonDistributionImpl(double    mean,    double    p,    int    epsilon,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
195	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  normal,  maxIterations,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  normal,  maxIterations,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  normal,  maxIterations,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    mean,    maxIterations,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
196	[BUG]  [BUGGY]  public  PoissonDistributionImpl(long  p,  long  epsilon,  int  mean,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(long  p,  long  epsilon,  int  mean,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(long  p,  long  epsilon,  int  mean,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
197	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  mean,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  int  mean,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  int  epsilon,  int  mean,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
198	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  maxIterations);  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  maxIterations);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  maxIterations);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    epsilon);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
199	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON,  p);  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON,  p);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON,  p);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    epsilon);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
200	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA  [CE]  ')'  expected  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  ')'  expected	82	None	replace
201	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA  [CE]  ')'  expected  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  ')'  expected	82	None	replace
202	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  cannot  find  symbol  MathRuntimeException$1  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException$1    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  cannot  find  symbol  MathRuntimeException$1	42	None	replace
203	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException$4  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  cannot  find  symbol  MathRuntimeException$4  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException$4  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException$4  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException$1    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  cannot  find  symbol  MathRuntimeException$4	42	None	replace
204	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  mean,  double  p,  int  epsilon,  int  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    DEFAULT_EPSILON)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	16	None	replace
205	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  maxIterations,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  maxIterations,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  maxIterations,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    maxIterations,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
206	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  double  epsilon,  maxIterations)  {  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  double  epsilon,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  double  epsilon,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    mean,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
207	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON,  maxIterations);  [CE]  <identifier>  expected  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON,  maxIterations);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS,  DEFAULT_EPSILON,  maxIterations);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS,    DEFAULT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
208	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  normal,  maxIterations)  {  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  normal,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  normal,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    mean,    DEFAULT_EPSILON,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
209	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  mean,  double  epsilon,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	6	None	replace
210	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	6	None	replace
211	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	83	None	replace
212	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	83	None	replace
213	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  int  epsilon,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
214	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
215	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA  [CE]  ')'  expected  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MA	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  ')'  expected	79	None	replace
216	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	79	None	replace
217	[BUG]  [BUGGY]  this(null,  DEFAULT_EPSILON,  DEFAULT_EPSILON,  maxIterations);  [CE]  illegal  start  of  type  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(null,  DEFAULT_EPSILON,  DEFAULT_EPSILON,  maxIterations);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(null,  DEFAULT_EPSILON,  DEFAULT_EPSILON,  maxIterations);	  this(null,    epsilon,    DEFAULT_EPSILON,    maxIterations);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
218	[BUG]  [BUGGY]  this(null,  DEFAULT_EPSILON,  0,  maxIterations);  [CE]  illegal  start  of  type  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(null,  DEFAULT_EPSILON,  0,  maxIterations);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(null,  DEFAULT_EPSILON,  0,  maxIterations);	  this(null,    epsilon,    DEFAULT_EPSILON,    maxIterations);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
219	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  maxIterations,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  maxIterations,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  maxIterations,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
220	[BUG]  [BUGGY]  public  PoissonDistributionImpl(long  p,  long  epsilon,  int  mean,  DEFAULT_EPSILON,  maxIterations)  {  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(long  p,  long  epsilon,  int  mean,  DEFAULT_EPSILON,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(long  p,  long  epsilon,  int  mean,  DEFAULT_EPSILON,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    DEFAULT_EPSILON,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
221	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  if(p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  if(p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  if(p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
222	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  maxIterations)  {  if(p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  illegal  start  of  expression  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  maxIterations)  {  if(p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  maxIterations)  {  if(p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
223	[BUG]  [BUGGY]  this(DEFAULT_EPSILON,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  type  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(DEFAULT_EPSILON,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(DEFAULT_EPSILON,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  this(DEFAULT_EPSILON,    p,    DEFAULT_EPSILON);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
224	[BUG]  [BUGGY]  this(p,  DEFAULT_EPSILON,  DEFAULT_EPSILON);  [CE]  illegal  start  of  type  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(p,  DEFAULT_EPSILON,  DEFAULT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(p,  DEFAULT_EPSILON,  DEFAULT_EPSILON);	  this(DEFAULT_EPSILON,    p,    DEFAULT_EPSILON);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
225	[BUG]  [BUGGY]  this(deFAULT_EPSILON,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  type  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(deFAULT_EPSILON,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(deFAULT_EPSILON,  DEFAULT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  this(DEFAULT_EPSILON,    p,    DEFAULT_EPSILON);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
226	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_EPSILON);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	8	None	replace
227	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_EPSILON);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	8	None	replace
228	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_EPSILON);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	8	None	replace
229	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p  +  3);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p  +  3);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p  +  3);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    p    +    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
230	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  normal)  {  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  normal)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  normal)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    mean)    {    	non-compiled	[CE]  <identifier>  expected	68	None	replace
231	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  normal,  int  maxIterations)  {  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  normal,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  epsilon,  double  p,  normal,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    mean,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
232	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  DEFAULT_EPSILON,  mean,  maxIterations)  {  [CE]  <identifier>  expected  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  DEFAULT_EPSILON,  mean,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  epsilon,  double  p,  DEFAULT_EPSILON,  mean,  maxIterations)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    mean,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
233	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  long  epsilon,  int  mean)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  long  epsilon,  int  mean)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  long  epsilon,  int  mean)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    mean)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	33	None	replace
234	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  DEFAULT_EPSILON,  maxIterations)  {  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  DEFAULT_EPSILON,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  DEFAULT_EPSILON,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    DEFAULT_EPSILON,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	81	None	replace
235	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  normal);  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  normal);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p,  normal);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p,    mean);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
236	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	9	None	replace
237	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	9	None	replace
238	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	7	None	replace
239	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	7	None	replace
240	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException$1  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException$0    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	65	None	replace
241	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  cannot  find  symbol  MathRuntimeException$0  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException$0    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  cannot  find  symbol  MathRuntimeException$0	65	None	replace
242	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  constructor  PoissonDistributionImpl(double,int)  is  already  defined  in  class  PoissonDistributionImpl  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException$0    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  constructor  PoissonDistributionImpl(double,int)  is  already  defined  in  class  PoissonDistributionImpl	65	None	replace
243	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_EPSILON_MEAN)  {  [CE]  <identifier>  expected  [FE]                      MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_EPSILON_MEAN)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  epsilon,  DEFAULT_EPSILON_MEAN)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    MAX_ITERATIONS)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
244	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	41	None	replace
245	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	10	None	replace
246	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	10	None	replace
247	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MA  [CE]  ')'  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MA  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MA	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  ')'  expected	43	None	replace
248	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MA  [CE]  ')'  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MA  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  mean,  double  epsilon,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  DEFAULT_MA	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  ')'  expected	43	None	replace
249	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  normal,  float  maxIterations)  {  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  normal,  float  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  normal,  float  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    mean,    float    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
250	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  mean  =  p;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  mean  =  p;  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  mean  =  p;	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
251	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  mean  =  p;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  maxIterations)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  mean  =  p;  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  mean  =  p;	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
252	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p  +  1,  maxIterations);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p  +  1,  maxIterations);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p  +  1,  maxIterations);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
253	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  p,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	add	public  PoissonDistributionImpl(double  mean,  double  p,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	4	7	replace
254	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  p,  int  maxIterations)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  p,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  mean,  double  p,  int  maxIterations)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	4	7	replace
255	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  MAX_ITERATIONS)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	add	public  PoissonDistributionImpl(double  epsilon,  double  p,  int  MAX_ITERATIONS)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	4	7	replace
256	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  MAX_ITERATIONS)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  MAX_ITERATIONS)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  epsilon,  double  p,  int  MAX_ITERATIONS)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	4	7	replace
257	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  meanIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	add	public  PoissonDistributionImpl(double  epsilon,  double  p,  int  meanIterations)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	4	7	replace
258	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  meanIterations)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  meanIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  epsilon,  double  p,  int  meanIterations)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	4	7	replace
259	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean)  {  if(p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean)  {  if(p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean)  {  if(p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
260	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  maxIterations)  {  if(p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  int  mean,  int  maxIterations)  {  if(p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  int  mean,  int  maxIterations)  {  if(p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
261	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_EPSILON,  maxIterations);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_EPSILON,  maxIterations);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_EPSILON,  maxIterations);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    DEFAULT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
262	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_EPSILON);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_EPSILON);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	8	None	replace
263	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  boolean  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  boolean  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  boolean  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	7	None	replace
264	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_MAX_ITERATIONS);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_MAX_ITERATIONS);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_MAX_ITERATIONS);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    DEFAULT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
265	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_MASK);  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_MASK);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_MASK);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    DEFAULT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
266	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_EPSILON,  epsilon);  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_EPSILON,  epsilon);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  DEFAULT_EPSILON,  epsilon);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    DEFAULT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
267	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  maxIterations,  mean)  {  [CE]  <identifier>  expected  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  maxIterations,  mean)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  maxIterations,  mean)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    mean,    maxIterations,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
268	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  mean,  DEFAULT_MAX_ITERATIONS)  {  [CE]  <identifier>  expected  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  mean,  DEFAULT_MAX_ITERATIONS)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  mean,  DEFAULT_MAX_ITERATIONS)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    DEFAULT_MAX_ITERATIONS)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
269	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean,  DEFAULT_MAX_ITERATIONS,  maxIterations)  {  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean,  DEFAULT_MAX_ITERATIONS,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean,  DEFAULT_MAX_ITERATIONS,  maxIterations)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    DEFAULT_EPSILON,    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
270	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  epsilon,  p,  maxIterations)  {  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  mean,  double  epsilon,  p,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  mean,  double  epsilon,  p,  maxIterations)  {	  public    PoissonDistributionImpl(double    mean,    double    p,    int    epsilon,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
271	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MAX_ITERATIONS);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	79	None	replace
272	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  MAX_ITERATIONS)  {  [CE]  <identifier>  expected  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  MAX_ITERATIONS)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  MAX_ITERATIONS)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
273	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  epsilon)  {  [CE]  <identifier>  expected  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  epsilon)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  epsilon)  {	  public    PoissonDistributionImpl(double    p,    int    epsilon,    int    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
274	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MIN_ITERATIONS,  DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MIN_ITERATIONS,  DEFAULT_EPSILON);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  DEFAULT_MIN_ITERATIONS,  DEFAULT_EPSILON);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    DEFAULT_MAX_ITERATIONS,    DEFAULT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
275	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  cannot  find  symbol  MathRuntimeException$0  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException$0    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  cannot  find  symbol  MathRuntimeException$0	65	None	replace
276	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [CE]  cannot  find  symbol  MathRuntimeException$0  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException$0  =  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException$0    =    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    	non-compiled	[CE]  cannot  find  symbol  MathRuntimeException$0	65	None	replace
277	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  DEFAULT_EPSILON,  maxIterations)  {  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  DEFAULT_EPSILON,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  epsilon,  double  p,  DEFAULT_EPSILON,  maxIterations)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    mean,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
278	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  mean,  maxIterations)  {  [CE]  <identifier>  expected  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  mean,  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  epsilon,  double  p,  mean,  maxIterations)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    mean,    int    maxIterations)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
279	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [CE]  cannot  find  symbol  NOT_EPSILON_MEAN  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON_MEAN	10	None	replace
280	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p  +  1,  DEFAULT_MAX_ITERATIONS);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p  +  1,  DEFAULT_MAX_ITERATIONS);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p  +  1,  DEFAULT_MAX_ITERATIONS);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
281	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  mean,  DEFAULT_MAX_ITERATIONS);  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  mean,  DEFAULT_MAX_ITERATIONS);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  mean,  DEFAULT_MAX_ITERATIONS);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    mean);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
282	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  int  mean)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
283	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  defIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	add	public  PoissonDistributionImpl(double  epsilon,  double  p,  int  defIterations)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	4	7	replace
284	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  defIterations)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  epsilon,  double  p,  int  defIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  epsilon,  double  p,  int  defIterations)  {	  public    PoissonDistributionImpl(double    epsilon,    double    p,    int    maxIterations)    {    	compilable	  [FE]  AssertionFailedError  	4	7	replace
285	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [CE]  illegal  start  of  expression  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  }	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
286	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [CE]  illegal  start  of  expression  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  if  (p  <  =  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p);  }	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    if    (p    <    =    0)    {    throw    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
287	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p  +  1,  mean);  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p  +  1,  mean);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p  +  1,  mean);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    p,    mean);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
288	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p  +  1,  mean);  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p  +  1,  mean);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,  p  +  1,  mean);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON_MEAN,    p,    mean);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
289	[BUG]  [BUGGY]  this(DEFAULT_EPSILON,  p,  DEFAULT_MAX_ITERATIONS);  [CE]  illegal  start  of  type  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  this(DEFAULT_EPSILON,  p,  DEFAULT_MAX_ITERATIONS);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	this(DEFAULT_EPSILON,  p,  DEFAULT_MAX_ITERATIONS);	  this(DEFAULT_EPSILON,    p,    DEFAULT_EPSILON);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
290	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  int  mean)  {  [CE]  <identifier>  expected  [FE]            MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  int  mean)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  DEFAULT_EPSILON,  int  mean)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
291	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  mean,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    mean,    DEFAULT_EPSILON)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
292	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  mean,  int  MAX_ITERATIONS)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    MAX_ITERATIONS)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	40	None	replace
293	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  double  epsilon,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  p,  double  epsilon,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  double  epsilon,  int  maxIterations)  {	  public    PoissonDistributionImpl(int    p,    int    epsilon,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	35	None	replace
294	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  int  mean,  int  maxIterations)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                    MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  p,  int  mean,  int  maxIterations)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  int  mean,  int  maxIterations)  {	  public    PoissonDistributionImpl(int    p,    int    epsilon,    int    maxIterations)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	35	None	replace
295	[BUG]  [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p  +  1,  DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]              MathRuntimeException$4      [CONTEXT]        [BUGGY]  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p  +  1,  DEFAULT_EPSILON);  [BUGGY]      public  PoissonDistributionImpl(double  p,  double  epsilon,  int  maxIterations)  {  if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,  p  +  1,  DEFAULT_EPSILON);	  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_IMPLEMENTED_POISSON_MEAN,    p    +    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
296	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  double  epsilon,  int  mean)  {  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]                MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  p,  double  epsilon,  int  mean)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  double  epsilon,  int  mean)  {	  public    PoissonDistributionImpl(int    p,    int    epsilon,    int    mean)    {    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	34	None	replace
297	[BUG]  [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  mean,  DEFAULT_EPSILON)  {  [CE]  <identifier>  expected  [FE]                  MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(int  p,  int  epsilon,  mean,  DEFAULT_EPSILON)  {  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(int  p,  int  epsilon,  mean,  DEFAULT_EPSILON)  {	  public    PoissonDistributionImpl(int    p,    int    epsilon,    int    mean)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
298	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  cannot  find  symbol  NOT_EPSILON  [FE]        MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  mean,  int  DEFAULT_EPSILON)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  cannot  find  symbol  NOT_EPSILON	6	None	replace
299	[BUG]  [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  boolean  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)  [FE]          MathRuntimeException$4      [CONTEXT]        [BUGGY]  public  PoissonDistributionImpl(double  p,  double  epsilon,  boolean  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);  [BUGGY]      if  (p  <=  0)  {  throw  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_POSITIVE_POISSON_MEAN,  p);  }  mean  =  p;  normal  =  new  NormalDistributionImpl(p,  FastMath.sqrt(p));  this.epsilon  =  epsilon;  this.maxIterations  =  maxIterations;  }  [CLASS]  PoissonDistributionImpl  [METHOD]  <init>  [RETURN_TYPE]  PoissonDistributionImpl(double,double,int)  double  p  double  epsilon  int  maxIterations  [VARIABLES]  boolean  NormalDistribution  normal  double  DEFAULT_EPSILON  epsilon  mean  p  int  DEFAULT_MAX_ITERATIONS  maxIterations  long  serialVersionUID  	projects/Math61/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java	0.2886751345948129	92	92	1	replace	public  PoissonDistributionImpl(double  p,  double  epsilon,  boolean  mean)  {  MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,  p);	  public    PoissonDistributionImpl(double    p,    double    epsilon,    int    DEFAULT_EPSILON)    {    MathRuntimeException.createIllegalArgumentException(LocalizedFormats.NOT_EPSILON,    p);    	non-compiled	[CE]  no  suitable  constructor  found  for  PoissonDistributionImpl(double,double,int)	6	None	replace
