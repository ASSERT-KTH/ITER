name,outcome,runtime,stacktrace
com.google.javascript.jscomp.FunctionToBlockMutatorTest#testMutate8,FAIL,1199652454,junit.framework.AssertionFailedError: Expected: var a$$inline_0=x++;a$$inline_0+a$$inline_0 Result: var a$$inline_1=x++;a$$inline_1+a$$inline_1 Node tree inequality: Tree1: BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ] INC 1 [incrdecr: 1] [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] ADD 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ]   Tree2: BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME a$$inline_1 1 [source_file:  [testcode] ] INC 1 [incrdecr: 1] [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] ADD 1 [source_file:  [testcode] ] NAME a$$inline_1 1 [source_file:  [testcode] ] NAME a$$inline_1 1 [source_file:  [testcode] ]   Subtree1: NAME a$$inline_0 1 [source_file:  [testcode] ] INC 1 [incrdecr: 1] [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ]   Subtree2: NAME a$$inline_1 1 [source_file:  [testcode] ] INC 1 [incrdecr: 1] [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240) at com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455) at com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249) at com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189) at com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutate8(FunctionToBlockMutatorTest.java:121) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FunctionToBlockMutatorTest#testMutateInitializeUninitializedVars1,FAIL,1089614608,junit.framework.AssertionFailedError: Expected: var b$$inline_1=void 0;1 Result: var b$$inline_3=void 0;1 Node tree inequality: Tree1: BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME b$$inline_1 1 [source_file:  [testcode] ] VOID 1 [source_file:  [testcode] ] NUMBER 0.0 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] NUMBER 1.0 1 [source_file:  [testcode] ]   Tree2: BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME b$$inline_3 1 [source_file:  [testcode] ] VOID 1 [source_file:  [testcode] ] NUMBER 0.0 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] NUMBER 1.0 1 [source_file:  [testcode] ]   Subtree1: NAME b$$inline_1 1 [source_file:  [testcode] ] VOID 1 [source_file:  [testcode] ] NUMBER 0.0 1 [source_file:  [testcode] ]   Subtree2: NAME b$$inline_3 1 [source_file:  [testcode] ] VOID 1 [source_file:  [testcode] ] NUMBER 0.0 1 [source_file:  [testcode] ]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240) at com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455) at com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249) at com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateInitializeUninitializedVars1(FunctionToBlockMutatorTest.java:129) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FunctionToBlockMutatorTest#testMutateInitializeUninitializedVars2,FAIL,889420494,junit.framework.AssertionFailedError: Expected: JSCompiler_inline_label_foo_2:for(var b$$inline_1 in c){1;break JSCompiler_inline_label_foo_2} Result: JSCompiler_inline_label_foo_4:for(var b$$inline_3 in c){1;break JSCompiler_inline_label_foo_4} Node tree inequality: Tree1: BLOCK 1 [source_file:  [testcode] ] LABEL 1 [source_file:  [testcode] ] LABEL_NAME JSCompiler_inline_label_foo_2 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] FOR 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME b$$inline_1 1 [source_file:  [testcode] ] NAME c 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] NUMBER 1.0 1 [source_file:  [testcode] ] BREAK 1 [source_file:  [testcode] ] LABEL_NAME JSCompiler_inline_label_foo_2 1 [source_file:  [testcode] ]   Tree2: BLOCK 1 [source_file:  [testcode] ] LABEL 1 [source_file:  [testcode] ] LABEL_NAME JSCompiler_inline_label_foo_4 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] FOR 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME b$$inline_3 1 [source_file:  [testcode] ] NAME c 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] NUMBER 1.0 1 [source_file:  [testcode] ] BREAK 1 [source_file:  [testcode] ] LABEL_NAME JSCompiler_inline_label_foo_4 1 [source_file:  [testcode] ]   Subtree1: LABEL_NAME JSCompiler_inline_label_foo_2 1 [source_file:  [testcode] ]   Subtree2: LABEL_NAME JSCompiler_inline_label_foo_4 1 [source_file:  [testcode] ]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240) at com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455) at com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249) at com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189) at com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateInitializeUninitializedVars2(FunctionToBlockMutatorTest.java:136) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FunctionToBlockMutatorTest#testMutateFunctionDefinition,FAIL,988279668,junit.framework.AssertionFailedError: Expected: var g$$inline_1=function(){} Result: var g$$inline_3=function(){} Node tree inequality: Tree1: BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME g$$inline_1 1 [source_file:  [testcode] ] FUNCTION  1 [source_file:  [testcode] ] NAME  1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ]   Tree2: BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME g$$inline_3 1 [source_file:  [testcode] ] FUNCTION  1 [source_file:  [testcode] ] NAME  1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ]   Subtree1: NAME g$$inline_1 1 [source_file:  [testcode] ] FUNCTION  1 [source_file:  [testcode] ] NAME  1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ]   Subtree2: NAME g$$inline_3 1 [source_file:  [testcode] ] FUNCTION  1 [source_file:  [testcode] ] NAME  1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240) at com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455) at com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249) at com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189) at com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateFunctionDefinition(FunctionToBlockMutatorTest.java:167) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FunctionToBlockMutatorTest#testMutateNoReturnWithoutResultAssignment,PASS,693677168,
com.google.javascript.jscomp.FunctionToBlockMutatorTest#testMutateNoReturnWithResultAssignment,PASS,649576854,
com.google.javascript.jscomp.FunctionToBlockMutatorTest#testMutateNoValueReturnWithoutResultAssignment,PASS,666049790,
com.google.javascript.jscomp.FunctionToBlockMutatorTest#testMutateNoValueReturnWithResultAssignment,PASS,1006027106,
com.google.javascript.jscomp.FunctionToBlockMutatorTest#testMutateValueReturnWithoutResultAssignment,PASS,861093413,
com.google.javascript.jscomp.FunctionToBlockMutatorTest#testMutateValueReturnWithResultAssignment,PASS,1451719886,
com.google.javascript.jscomp.FunctionToBlockMutatorTest#testMutateWithMultipleReturns,PASS,619341726,
com.google.javascript.jscomp.FunctionToBlockMutatorTest#testMutateWithParameters1,PASS,274005104,
com.google.javascript.jscomp.FunctionToBlockMutatorTest#testMutateWithParameters2,PASS,636505496,
com.google.javascript.jscomp.FunctionToBlockMutatorTest#testMutateWithParameters3,FAIL,447029654,junit.framework.AssertionFailedError: Expected: var a$$inline_0=x++;a$$inline_0 Result: var a$$inline_1=x++;a$$inline_1 Node tree inequality: Tree1: BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ] INC 1 [incrdecr: 1] [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ]   Tree2: BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME a$$inline_1 1 [source_file:  [testcode] ] INC 1 [incrdecr: 1] [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] NAME a$$inline_1 1 [source_file:  [testcode] ]   Subtree1: NAME a$$inline_0 1 [source_file:  [testcode] ] INC 1 [incrdecr: 1] [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ]   Subtree2: NAME a$$inline_1 1 [source_file:  [testcode] ] INC 1 [incrdecr: 1] [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240) at com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455) at com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249) at com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:189) at com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateWithParameters3(FunctionToBlockMutatorTest.java:112) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FunctionToBlockMutatorTest#testMutateCallInLoopVars1,FAIL,336972425,junit.framework.AssertionFailedError: Expected: var B$$inline_1=bar();1 Result: var B$$inline_3=bar();1 Node tree inequality: Tree1: BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME B$$inline_1 1 [source_file:  [testcode] ] CALL 1 [free_call: 1] [source_file:  [testcode] ] NAME bar 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] NUMBER 1.0 1 [source_file:  [testcode] ]   Tree2: BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME B$$inline_3 1 [source_file:  [testcode] ] CALL 1 [free_call: 1] [source_file:  [testcode] ] NAME bar 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] NUMBER 1.0 1 [source_file:  [testcode] ]   Subtree1: NAME B$$inline_1 1 [source_file:  [testcode] ] CALL 1 [free_call: 1] [source_file:  [testcode] ] NAME bar 1 [source_file:  [testcode] ]   Subtree2: NAME B$$inline_3 1 [source_file:  [testcode] ] CALL 1 [free_call: 1] [source_file:  [testcode] ] NAME bar 1 [source_file:  [testcode] ]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.FunctionToBlockMutatorTest$1.call(FunctionToBlockMutatorTest.java:240) at com.google.javascript.jscomp.FunctionToBlockMutatorTest$TestCallback.visit(FunctionToBlockMutatorTest.java:279) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455) at com.google.javascript.jscomp.FunctionToBlockMutatorTest.helperMutate(FunctionToBlockMutatorTest.java:249) at com.google.javascript.jscomp.FunctionToBlockMutatorTest.testMutateCallInLoopVars1(FunctionToBlockMutatorTest.java:151) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest#testArguments,PASS,753894796,
com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest#testMakeLocalNamesUniqueWithContext1,PASS,606876663,
com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest#testMakeLocalNamesUniqueWithContext2,PASS,955842298,
com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest#testMakeLocalNamesUniqueWithContext3,PASS,338354918,
com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest#testMakeLocalNamesUniqueWithContext4,PASS,827099764,
com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest#testMakeLocalNamesUniqueWithContext5,FAIL,704804625,junit.framework.AssertionFailedError: Expected: var fn=function f(){var f$$1;f$$1=1} Result: var fn=function f$$1(){var f$$1;f$$1=1} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME fn 1 [source_file: expected0] FUNCTION f 1 [source_file: expected0] NAME f 1 [source_file: expected0] LP 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME f$$1 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME f$$1 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME fn 1 [source_file: testcode] FUNCTION f$$1 1 [source_file: testcode] NAME f$$1 1 [source_file: testcode] LP 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME f$$1 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME f$$1 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode]   Subtree1: NAME f 1 [source_file: expected0]   Subtree2: NAME f$$1 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest.testMakeLocalNamesUniqueWithContext5(MakeDeclaredNamesUniqueTest.java:222) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest#testMakeLocalNamesUniqueWithoutContext,PASS,534601340,
com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest#testOnlyInversion,PASS,520726930,
com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest#testOnlyInversion2,PASS,361991299,
com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest#testOnlyInversion3,PASS,674148650,
com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest#testOnlyInversion4,PASS,629557181,
com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest#testConstRemovingRename1,PASS,596041162,
com.google.javascript.jscomp.MakeDeclaredNamesUniqueTest#testConstRemovingRename2,PASS,1122666524,
com.google.javascript.jscomp.InlineFunctionsTest#testAnonymous1,FAIL,955834262,junit.framework.AssertionFailedError: Expected: var a$$inline_0=10;var b$$inline_1=a$$inline_0;a$$inline_0++;alert(b$$inline_1) Result: var a$$inline_2=10;var b$$inline_3=a$$inline_2;a$$inline_2++;alert(b$$inline_3) Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] NUMBER 10.0 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME b$$inline_1 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] INC 1 [incrdecr: 1] [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME alert 1 [source_file: expected0] NAME b$$inline_1 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a$$inline_2 1 [source_file: testcode] NUMBER 10.0 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME b$$inline_3 1 [source_file: testcode] NAME a$$inline_2 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] INC 1 [incrdecr: 1] [source_file: testcode] NAME a$$inline_2 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME alert 1 [source_file: testcode] NAME b$$inline_3 1 [source_file: testcode]   Subtree1: NAME a$$inline_0 1 [source_file: expected0] NUMBER 10.0 1 [source_file: expected0]   Subtree2: NAME a$$inline_2 1 [source_file: testcode] NUMBER 10.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testAnonymous1(InlineFunctionsTest.java:2169) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testAnonymous2,PASS,835371399,
com.google.javascript.jscomp.InlineFunctionsTest#testAnonymous3,FAIL,589716272,junit.framework.AssertionFailedError: Expected: var a$$inline_0=10;(function(){arguments})() Result: var a$$inline_1=10;(function(){arguments})() Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] NUMBER 10.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] FUNCTION  1 [parenthesized: true] [source_file: expected0] NAME  1 [source_file: expected0] LP 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] NAME arguments 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] NUMBER 10.0 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] FUNCTION  1 [parenthesized: true] [source_file: testcode] NAME  1 [source_file: testcode] LP 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] NAME arguments 1 [source_file: testcode]   Subtree1: NAME a$$inline_0 1 [source_file: expected0] NUMBER 10.0 1 [source_file: expected0]   Subtree2: NAME a$$inline_1 1 [source_file: testcode] NUMBER 10.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testAnonymous3(InlineFunctionsTest.java:2191) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions3,PASS,440883236,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions4,PASS,466705285,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions5,PASS,386706756,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions6,PASS,528481603,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions7,PASS,456223740,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions8,PASS,426093973,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions9,FAIL,1046088482,junit.framework.AssertionFailedError: Expected: var y;var x$$inline_0=i;y=x$$inline_0++ Result: var y;var x$$inline_1=i;y=x$$inline_1++ Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME y 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] NAME i 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME y 1 [source_file: expected0] INC 1 [incrdecr: 1] [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME y 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] NAME i 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME y 1 [source_file: testcode] INC 1 [incrdecr: 1] [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode]   Subtree1: NAME x$$inline_0 1 [source_file: expected0] NAME i 1 [source_file: expected0]   Subtree2: NAME x$$inline_1 1 [source_file: testcode] NAME i 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions9(InlineFunctionsTest.java:176) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions10,FAIL,596648475,junit.framework.AssertionFailedError: Expected: var y;var x$$inline_0=i;y=x$$inline_0++;var x$$inline_2=i;y=x$$inline_2++ Result: var y;var x$$inline_1=i;y=x$$inline_1++;var x$$inline_4=i;y=x$$inline_4++ Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME y 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] NAME i 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME y 1 [source_file: expected0] INC 1 [incrdecr: 1] [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x$$inline_2 1 [source_file: expected0] NAME i 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME y 1 [source_file: expected0] INC 1 [incrdecr: 1] [source_file: expected0] NAME x$$inline_2 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME y 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] NAME i 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME y 1 [source_file: testcode] INC 1 [incrdecr: 1] [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x$$inline_4 1 [source_file: testcode] NAME i 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME y 1 [source_file: testcode] INC 1 [incrdecr: 1] [source_file: testcode] NAME x$$inline_4 1 [source_file: testcode]   Subtree1: NAME x$$inline_0 1 [source_file: expected0] NAME i 1 [source_file: expected0]   Subtree2: NAME x$$inline_1 1 [source_file: testcode] NAME i 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions10(InlineFunctionsTest.java:183) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions11,PASS,590283396,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions12,PASS,742895412,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions13,FAIL,405380097,junit.framework.AssertionFailedError: Expected: var y;var x$$inline_0=i++;y=x$$inline_0 Result: var y;var x$$inline_1=i++;y=x$$inline_1 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME y 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] INC 1 [incrdecr: 1] [source_file: expected0] NAME i 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME y 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME y 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] INC 1 [incrdecr: 1] [source_file: testcode] NAME i 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME y 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode]   Subtree1: NAME x$$inline_0 1 [source_file: expected0] INC 1 [incrdecr: 1] [source_file: expected0] NAME i 1 [source_file: expected0]   Subtree2: NAME x$$inline_1 1 [source_file: testcode] INC 1 [incrdecr: 1] [source_file: testcode] NAME i 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions13(InlineFunctionsTest.java:210) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions14,PASS,561582652,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions15a,PASS,588786013,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions15b,FAIL,395944362,junit.framework.AssertionFailedError: Expected: var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_2;JSCompiler_inline_result$$1=function(a$$inline_3){return a$$inline_3+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1 Result: var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_3;JSCompiler_inline_result$$1=function(a$$inline_4){return a$$inline_4+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME JSCompiler_temp_const$$0 1 [source_file: expected0] NAME c 1 [source_file: expected0] BLOCK 2 [source_file: expected0] VAR 3 [source_file: expected0] NAME JSCompiler_inline_result$$1 3 [source_file: expected0] VAR 4 [source_file: expected0] NAME x$$inline_2 4 [source_file: expected0] EXPR_RESULT 5 [source_file: expected0] ASSIGN 5 [source_file: expected0] NAME JSCompiler_inline_result$$1 5 [source_file: expected0] FUNCTION  5 [source_file: expected0] NAME  5 [source_file: expected0] LP 5 [source_file: expected0] NAME a$$inline_3 5 [source_file: expected0] BLOCK 5 [source_file: expected0] RETURN 5 [source_file: expected0] ADD 5 [source_file: expected0] NAME a$$inline_3 5 [source_file: expected0] NUMBER 1.0 5 [source_file: expected0] VAR 6 [source_file: expected0] NAME d 6 [source_file: expected0] ADD 6 [source_file: expected0] NAME JSCompiler_temp_const$$0 6 [source_file: expected0] NAME JSCompiler_inline_result$$1 6 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_temp_const$$0 1 [source_file: testcode] NAME c 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_inline_result$$1 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x$$inline_3 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_inline_result$$1 1 [source_file: testcode] FUNCTION  1 [source_file: testcode] NAME  1 [source_file: testcode] LP 1 [source_file: testcode] NAME a$$inline_4 1 [source_file: testcode] BLOCK 1 [source_file: testcode] RETURN 1 [source_file: testcode] ADD 1 [source_file: testcode] NAME a$$inline_4 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME d 1 [source_file: testcode] ADD 1 [source_file: testcode] NAME JSCompiler_temp_const$$0 1 [source_file: testcode] NAME JSCompiler_inline_result$$1 1 [source_file: testcode]   Subtree1: NAME x$$inline_2 4 [source_file: expected0]   Subtree2: NAME x$$inline_3 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions15b(InlineFunctionsTest.java:246) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions15c,PASS,480738460,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions15d,FAIL,572628501,junit.framework.AssertionFailedError: Expected: function _x(){var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_2;JSCompiler_inline_result$$1=function(a$$inline_3){return a$$inline_3+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1} Result: function _x(){var JSCompiler_temp_const$$0=c;var JSCompiler_inline_result$$1;var x$$inline_3;JSCompiler_inline_result$$1=function(a$$inline_4){return a$$inline_4+1};var d=JSCompiler_temp_const$$0+JSCompiler_inline_result$$1} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] FUNCTION _x 1 [source_file: expected0] NAME _x 1 [source_file: expected0] LP 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 2 [source_file: expected0] NAME JSCompiler_temp_const$$0 2 [source_file: expected0] NAME c 2 [source_file: expected0] BLOCK 3 [source_file: expected0] VAR 4 [source_file: expected0] NAME JSCompiler_inline_result$$1 4 [source_file: expected0] VAR 5 [source_file: expected0] NAME x$$inline_2 5 [source_file: expected0] EXPR_RESULT 6 [source_file: expected0] ASSIGN 6 [source_file: expected0] NAME JSCompiler_inline_result$$1 6 [source_file: expected0] FUNCTION  6 [source_file: expected0] NAME  6 [source_file: expected0] LP 6 [source_file: expected0] NAME a$$inline_3 6 [source_file: expected0] BLOCK 6 [source_file: expected0] RETURN 6 [source_file: expected0] ADD 6 [source_file: expected0] NAME a$$inline_3 6 [source_file: expected0] NUMBER 1.0 6 [source_file: expected0] VAR 8 [source_file: expected0] NAME d 8 [source_file: expected0] ADD 8 [source_file: expected0] NAME JSCompiler_temp_const$$0 8 [source_file: expected0] NAME JSCompiler_inline_result$$1 8 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] FUNCTION _x 1 [source_file: testcode] NAME _x 1 [source_file: testcode] LP 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_temp_const$$0 1 [source_file: testcode] NAME c 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_inline_result$$1 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x$$inline_3 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_inline_result$$1 1 [source_file: testcode] FUNCTION  1 [source_file: testcode] NAME  1 [source_file: testcode] LP 1 [source_file: testcode] NAME a$$inline_4 1 [source_file: testcode] BLOCK 1 [source_file: testcode] RETURN 1 [source_file: testcode] ADD 1 [source_file: testcode] NAME a$$inline_4 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME d 1 [source_file: testcode] ADD 1 [source_file: testcode] NAME JSCompiler_temp_const$$0 1 [source_file: testcode] NAME JSCompiler_inline_result$$1 1 [source_file: testcode]   Subtree1: NAME x$$inline_2 5 [source_file: expected0]   Subtree2: NAME x$$inline_3 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions15d(InlineFunctionsTest.java:296) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions16a,FAIL,770037253,junit.framework.AssertionFailedError: Expected: var d;var b$$inline_0=e;d=window.bar(function(){c(b$$inline_0)}) Result: var d;var b$$inline_1=e;d=window.bar(function(){c(b$$inline_1)}) Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME d 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME b$$inline_0 1 [source_file: expected0] NAME e 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME d 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME window 1 [source_file: expected0] STRING bar 1 [source_file: expected0] FUNCTION  1 [source_file: expected0] NAME  1 [source_file: expected0] LP 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME c 1 [source_file: expected0] NAME b$$inline_0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME d 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME b$$inline_1 1 [source_file: testcode] NAME e 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME d 1 [source_file: testcode] CALL 1 [source_file: testcode] GETPROP 1 [source_file: testcode] NAME window 1 [source_file: testcode] STRING bar 1 [source_file: testcode] FUNCTION  1 [source_file: testcode] NAME  1 [source_file: testcode] LP 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME c 1 [source_file: testcode] NAME b$$inline_1 1 [source_file: testcode]   Subtree1: NAME b$$inline_0 1 [source_file: expected0] NAME e 1 [source_file: expected0]   Subtree2: NAME b$$inline_1 1 [source_file: testcode] NAME e 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions16a(InlineFunctionsTest.java:320) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions16b,PASS,540397651,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions17,PASS,426043771,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions18,PASS,1241718935,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions19,PASS,500966952,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions20,PASS,355668446,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions21,PASS,358062309,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions22,FAIL,405440056,junit.framework.AssertionFailedError: Expected: var d;JSCompiler_inline_label_plex_1:{if(1+2){d=0;break JSCompiler_inline_label_plex_1}else{d=1;break JSCompiler_inline_label_plex_1}d=void 0} Result: var d;JSCompiler_inline_label_plex_2:{if(1+2){d=0;break JSCompiler_inline_label_plex_2}else{d=1;break JSCompiler_inline_label_plex_2}d=void 0} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME d 1 [source_file: expected0] BLOCK 1 [source_file: expected0] LABEL 1 [source_file: expected0] LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0] BLOCK 1 [source_file: expected0] IF 1 [source_file: expected0] ADD 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME d 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0] BREAK 1 [source_file: expected0] LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME d 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] BREAK 1 [source_file: expected0] LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME d 1 [source_file: expected0] VOID 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME d 1 [source_file: testcode] BLOCK 1 [source_file: testcode] LABEL 1 [source_file: testcode] LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode] BLOCK 1 [source_file: testcode] IF 1 [source_file: testcode] ADD 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME d 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode] BREAK 1 [source_file: testcode] LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME d 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] BREAK 1 [source_file: testcode] LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME d 1 [source_file: testcode] VOID 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode]   Subtree1: LABEL_NAME JSCompiler_inline_label_plex_1 1 [source_file: expected0]   Subtree2: LABEL_NAME JSCompiler_inline_label_plex_2 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions22(InlineFunctionsTest.java:375) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions23,FAIL,468600677,junit.framework.AssertionFailedError: Expected: var d;JSCompiler_inline_label_complex_1:{if(1+2){d=0;break JSCompiler_inline_label_complex_1}else{d=1;break JSCompiler_inline_label_complex_1}d=void 0} Result: var d;JSCompiler_inline_label_complex_2:{if(1+2){d=0;break JSCompiler_inline_label_complex_2}else{d=1;break JSCompiler_inline_label_complex_2}d=void 0} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME d 1 [source_file: expected0] BLOCK 1 [source_file: expected0] LABEL 1 [source_file: expected0] LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0] BLOCK 1 [source_file: expected0] IF 1 [source_file: expected0] ADD 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME d 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0] BREAK 1 [source_file: expected0] LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME d 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] BREAK 1 [source_file: expected0] LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME d 1 [source_file: expected0] VOID 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME d 1 [source_file: testcode] BLOCK 1 [source_file: testcode] LABEL 1 [source_file: testcode] LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode] BLOCK 1 [source_file: testcode] IF 1 [source_file: testcode] ADD 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME d 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode] BREAK 1 [source_file: testcode] LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME d 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] BREAK 1 [source_file: testcode] LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME d 1 [source_file: testcode] VOID 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode]   Subtree1: LABEL_NAME JSCompiler_inline_label_complex_1 1 [source_file: expected0]   Subtree2: LABEL_NAME JSCompiler_inline_label_complex_2 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testInlineFunctions23(InlineFunctionsTest.java:389) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions24,PASS,357273203,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions25,PASS,468579901,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions26,PASS,404664763,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions27,PASS,635306259,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions28,PASS,519610066,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions29,PASS,786594268,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions30,PASS,572846199,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions31,PASS,611550824,
com.google.javascript.jscomp.InlineFunctionsTest#testMixedModeInlining1,PASS,932562409,
com.google.javascript.jscomp.InlineFunctionsTest#testMixedModeInlining2,PASS,543045206,
com.google.javascript.jscomp.InlineFunctionsTest#testMixedModeInlining3,PASS,798300895,
com.google.javascript.jscomp.InlineFunctionsTest#testMixedModeInlining4,PASS,633833204,
com.google.javascript.jscomp.InlineFunctionsTest#testMixedModeInliningCosting1,PASS,455655160,
com.google.javascript.jscomp.InlineFunctionsTest#testMixedModeInliningCosting2,PASS,488184028,
com.google.javascript.jscomp.InlineFunctionsTest#testMixedModeInliningCosting3,FAIL,632935504,junit.framework.AssertionFailedError: Expected: 1+2+1+2+4+5+6+7+8+9+1+2+3+10;var JSCompiler_inline_anon_param_2=x();2+3+2+3+4+5+6+7+8+9+1+2+3+10 Result: 1+2+1+2+4+5+6+7+8+9+1+2+3+10;var JSCompiler_inline_anon_param_4=x();2+3+2+3+4+5+6+7+8+9+1+2+3+10 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] EXPR_RESULT 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] NUMBER 4.0 1 [source_file: expected0] NUMBER 5.0 1 [source_file: expected0] NUMBER 6.0 1 [source_file: expected0] NUMBER 7.0 1 [source_file: expected0] NUMBER 8.0 1 [source_file: expected0] NUMBER 9.0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] NUMBER 3.0 1 [source_file: expected0] NUMBER 10.0 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME JSCompiler_inline_anon_param_2 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME x 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] NUMBER 3.0 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] NUMBER 3.0 1 [source_file: expected0] NUMBER 4.0 1 [source_file: expected0] NUMBER 5.0 1 [source_file: expected0] NUMBER 6.0 1 [source_file: expected0] NUMBER 7.0 1 [source_file: expected0] NUMBER 8.0 1 [source_file: expected0] NUMBER 9.0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] NUMBER 3.0 1 [source_file: expected0] NUMBER 10.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] EXPR_RESULT 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] NUMBER 4.0 1 [source_file: testcode] NUMBER 5.0 1 [source_file: testcode] NUMBER 6.0 1 [source_file: testcode] NUMBER 7.0 1 [source_file: testcode] NUMBER 8.0 1 [source_file: testcode] NUMBER 9.0 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] NUMBER 3.0 1 [source_file: testcode] NUMBER 10.0 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_inline_anon_param_4 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME x 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] NUMBER 3.0 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] NUMBER 3.0 1 [source_file: testcode] NUMBER 4.0 1 [source_file: testcode] NUMBER 5.0 1 [source_file: testcode] NUMBER 6.0 1 [source_file: testcode] NUMBER 7.0 1 [source_file: testcode] NUMBER 8.0 1 [source_file: testcode] NUMBER 9.0 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] NUMBER 3.0 1 [source_file: testcode] NUMBER 10.0 1 [source_file: testcode]   Subtree1: NAME JSCompiler_inline_anon_param_2 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME x 1 [source_file: expected0]   Subtree2: NAME JSCompiler_inline_anon_param_4 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME x 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testMixedModeInliningCosting3(InlineFunctionsTest.java:529) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testMixedModeInliningCosting4,PASS,476775499,
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineIfParametersModified1,FAIL,427193941,junit.framework.AssertionFailedError: Expected: var x$$inline_0=undefined;x$$inline_0=1 Result: var x$$inline_1=undefined;x$$inline_1=1 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] NAME undefined 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] NAME undefined 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode]   Subtree1: NAME x$$inline_0 1 [source_file: expected0] NAME undefined 1 [source_file: expected0]   Subtree2: NAME x$$inline_1 1 [source_file: testcode] NAME undefined 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified1(InlineFunctionsTest.java:549) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineIfParametersModified2,FAIL,527051959,junit.framework.AssertionFailedError: Expected: var x$$inline_0=2;x$$inline_0=1 Result: var x$$inline_1=2;x$$inline_1=1 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME x$$inline_1 1 [parenthesized: true] [source_file: testcode] NUMBER 1.0 1 [source_file: testcode]   Subtree1: NAME x$$inline_0 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0]   Subtree2: NAME x$$inline_1 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified2(InlineFunctionsTest.java:555) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineIfParametersModified3,FAIL,531351113,junit.framework.AssertionFailedError: Expected: var x$$inline_0=2;x$$inline_0*=2 Result: var x$$inline_1=2;x$$inline_1*=2 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN_MUL 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN_MUL 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode]   Subtree1: NAME x$$inline_0 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0]   Subtree2: NAME x$$inline_1 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified3(InlineFunctionsTest.java:562) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineIfParametersModified4,FAIL,418795565,junit.framework.AssertionFailedError: Expected: var x$$inline_0=2;x$$inline_0?x$$inline_0=2:0 Result: var x$$inline_1=2;x$$inline_1?x$$inline_1=2:0 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] HOOK 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] ASSIGN 1 [parenthesized: true] [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] HOOK 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] ASSIGN 1 [parenthesized: true] [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode]   Subtree1: NAME x$$inline_0 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0]   Subtree2: NAME x$$inline_1 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified4(InlineFunctionsTest.java:569) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineIfParametersModified5,FAIL,573654523,junit.framework.AssertionFailedError: Expected: var y$$inline_1=undefined;2?y$$inline_1=2:0 Result: var y$$inline_3=undefined;2?y$$inline_3=2:0 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME y$$inline_1 1 [source_file: expected0] NAME undefined 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] HOOK 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] ASSIGN 1 [parenthesized: true] [source_file: expected0] NAME y$$inline_1 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME y$$inline_3 1 [source_file: testcode] NAME undefined 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] HOOK 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] ASSIGN 1 [parenthesized: true] [source_file: testcode] NAME y$$inline_3 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode]   Subtree1: NAME y$$inline_1 1 [source_file: expected0] NAME undefined 1 [source_file: expected0]   Subtree2: NAME y$$inline_3 1 [source_file: testcode] NAME undefined 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified5(InlineFunctionsTest.java:577) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineIfParametersModified6,FAIL,478386331,junit.framework.AssertionFailedError: Expected: var y$$inline_1=void 0;2?y$$inline_1=2:0 Result: var y$$inline_3=void 0;2?y$$inline_3=2:0 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME y$$inline_1 1 [source_file: expected0] VOID 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] HOOK 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] ASSIGN 1 [parenthesized: true] [source_file: expected0] NAME y$$inline_1 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME y$$inline_3 1 [source_file: testcode] VOID 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] HOOK 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] ASSIGN 1 [parenthesized: true] [source_file: testcode] NAME y$$inline_3 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode]   Subtree1: NAME y$$inline_1 1 [source_file: expected0] VOID 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0]   Subtree2: NAME y$$inline_3 1 [source_file: testcode] VOID 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified6(InlineFunctionsTest.java:583) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineIfParametersModified7,FAIL,954304137,junit.framework.AssertionFailedError: Expected: var a$$inline_0=1;++a$$inline_0<++a$$inline_0 Result: var a$$inline_1=1;++a$$inline_1<++a$$inline_1 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] LT 1 [source_file: expected0] INC 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] INC 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] LT 1 [source_file: testcode] INC 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] INC 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode]   Subtree1: NAME a$$inline_0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0]   Subtree2: NAME a$$inline_1 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testNoInlineIfParametersModified7(InlineFunctionsTest.java:590) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineIfParametersModified8,PASS,656552283,
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineIfParametersModified9,PASS,896830049,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineNeverPartialSubtitution1,PASS,428313974,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineNeverPartialSubtitution2,PASS,782507377,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineNeverMutateConstants,FAIL,752877999,junit.framework.AssertionFailedError: Expected: var x$$inline_0=undefined;x$$inline_0=1 Result: var x$$inline_1=undefined;x$$inline_1=1 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] NAME undefined 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] NAME undefined 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode]   Subtree1: NAME x$$inline_0 1 [source_file: expected0] NAME undefined 1 [source_file: expected0]   Subtree2: NAME x$$inline_1 1 [source_file: testcode] NAME undefined 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testInlineNeverMutateConstants(InlineFunctionsTest.java:617) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testInlineNeverOverrideNewValues,FAIL,726530992,junit.framework.AssertionFailedError: Expected: var a$$inline_0=1;++a$$inline_0<++a$$inline_0 Result: var a$$inline_1=1;++a$$inline_1<++a$$inline_1 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] LT 1 [source_file: expected0] INC 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] INC 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] LT 1 [source_file: testcode] INC 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] INC 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode]   Subtree1: NAME a$$inline_0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0]   Subtree2: NAME a$$inline_1 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testInlineNeverOverrideNewValues(InlineFunctionsTest.java:623) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testInlineMutableArgsReferencedOnce,PASS,732383760,
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineMutableArgs1,PASS,518262322,
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineMutableArgs2,PASS,417023144,
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineMutableArgs3,PASS,352426783,
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineMutableArgs4,PASS,405599831,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineBlockMutableArgs1,FAIL,353085526,junit.framework.AssertionFailedError: Expected: var x$$inline_0=[];x$$inline_0+x$$inline_0 Result: var x$$inline_1=[];x$$inline_1+x$$inline_1 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] ARRAYLIT 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ADD 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] ARRAYLIT 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ADD 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode]   Subtree1: NAME x$$inline_0 1 [source_file: expected0] ARRAYLIT 1 [source_file: expected0]   Subtree2: NAME x$$inline_1 1 [source_file: testcode] ARRAYLIT 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs1(InlineFunctionsTest.java:653) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testInlineBlockMutableArgs2,FAIL,442356429,junit.framework.AssertionFailedError: Expected: var x$$inline_0=new Date;x$$inline_0+x$$inline_0 Result: var x$$inline_1=new Date;x$$inline_1+x$$inline_1 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] NEW 1 [source_file: expected0] NAME Date 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ADD 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] NEW 1 [source_file: testcode] NAME Date 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ADD 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode]   Subtree1: NAME x$$inline_0 1 [source_file: expected0] NEW 1 [source_file: expected0] NAME Date 1 [source_file: expected0]   Subtree2: NAME x$$inline_1 1 [source_file: testcode] NEW 1 [source_file: testcode] NAME Date 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs2(InlineFunctionsTest.java:659) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testInlineBlockMutableArgs3,FAIL,945848085,junit.framework.AssertionFailedError: Expected: var x$$inline_0=true&&new Date;x$$inline_0+x$$inline_0 Result: var x$$inline_1=true&&new Date;x$$inline_1+x$$inline_1 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] AND 1 [source_file: expected0] TRUE 1 [source_file: expected0] NEW 1 [source_file: expected0] NAME Date 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ADD 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] AND 1 [source_file: testcode] TRUE 1 [source_file: testcode] NEW 1 [source_file: testcode] NAME Date 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ADD 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode]   Subtree1: NAME x$$inline_0 1 [source_file: expected0] AND 1 [source_file: expected0] TRUE 1 [source_file: expected0] NEW 1 [source_file: expected0] NAME Date 1 [source_file: expected0]   Subtree2: NAME x$$inline_1 1 [source_file: testcode] AND 1 [source_file: testcode] TRUE 1 [source_file: testcode] NEW 1 [source_file: testcode] NAME Date 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs3(InlineFunctionsTest.java:665) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testInlineBlockMutableArgs4,FAIL,435612899,junit.framework.AssertionFailedError: Expected: var x$$inline_0={};x$$inline_0+x$$inline_0 Result: var x$$inline_1={};x$$inline_1+x$$inline_1 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ADD 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0] NAME x$$inline_0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] OBJECTLIT 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ADD 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode] NAME x$$inline_1 1 [source_file: testcode]   Subtree1: NAME x$$inline_0 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0]   Subtree2: NAME x$$inline_1 1 [source_file: testcode] OBJECTLIT 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testInlineBlockMutableArgs4(InlineFunctionsTest.java:671) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testShadowVariables1,FAIL,441904966,junit.framework.AssertionFailedError: Expected: var a=0;var a$$inline_0=3+4 Result: var a=0;var a$$inline_1=3+4 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME a 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] ADD 1 [source_file: expected0] NUMBER 3.0 1 [source_file: expected0] NUMBER 4.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME a 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] ADD 1 [source_file: testcode] NUMBER 3.0 1 [source_file: testcode] NUMBER 4.0 1 [source_file: testcode]   Subtree1: NAME a$$inline_0 1 [source_file: expected0] ADD 1 [source_file: expected0] NUMBER 3.0 1 [source_file: expected0] NUMBER 4.0 1 [source_file: expected0]   Subtree2: NAME a$$inline_1 1 [source_file: testcode] ADD 1 [source_file: testcode] NUMBER 3.0 1 [source_file: testcode] NUMBER 4.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables1(InlineFunctionsTest.java:682) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testShadowVariables2,PASS,548654373,
com.google.javascript.jscomp.InlineFunctionsTest#testShadowVariables3,FAIL,759186765,junit.framework.AssertionFailedError: Expected: var a=0;function _bar(){var a$$inline_0=2;a=3+a$$inline_0} Result: var a=0;function _bar(){var a$$inline_1=2;a=3+a$$inline_1} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME a 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0] FUNCTION _bar 1 [source_file: expected0] NAME _bar 1 [source_file: expected0] LP 1 [source_file: expected0] BLOCK 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME a 1 [source_file: expected0] ADD 1 [source_file: expected0] NUMBER 3.0 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME a 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode] FUNCTION _bar 1 [source_file: testcode] NAME _bar 1 [source_file: testcode] LP 1 [source_file: testcode] BLOCK 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME a 1 [source_file: testcode] ADD 1 [source_file: testcode] NUMBER 3.0 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode]   Subtree1: NAME a$$inline_0 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0]   Subtree2: NAME a$$inline_1 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables3(InlineFunctionsTest.java:706) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testShadowVariables4,PASS,820305077,
com.google.javascript.jscomp.InlineFunctionsTest#testShadowVariables5,PASS,476799756,
com.google.javascript.jscomp.InlineFunctionsTest#testShadowVariables6,FAIL,537368889,junit.framework.AssertionFailedError: Expected: var a=0;function _bar(a$$2){var a$$inline_0=4;a$$2=3+a$$inline_0} Result: var a=0;function _bar(a$$2){var a$$inline_1=4;a$$2=3+a$$inline_1} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME a 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0] FUNCTION _bar 1 [source_file: expected0] NAME _bar 1 [source_file: expected0] LP 1 [source_file: expected0] NAME a$$2 1 [source_file: expected0] BLOCK 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] NUMBER 4.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME a$$2 1 [source_file: expected0] ADD 1 [source_file: expected0] NUMBER 3.0 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME a 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode] FUNCTION _bar 1 [source_file: testcode] NAME _bar 1 [source_file: testcode] LP 1 [source_file: testcode] NAME a$$2 1 [source_file: testcode] BLOCK 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] NUMBER 4.0 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME a$$2 1 [source_file: testcode] ADD 1 [source_file: testcode] NUMBER 3.0 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode]   Subtree1: NAME a$$inline_0 1 [source_file: expected0] NUMBER 4.0 1 [source_file: expected0]   Subtree2: NAME a$$inline_1 1 [source_file: testcode] NUMBER 4.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables6(InlineFunctionsTest.java:737) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testShadowVariables7,FAIL,645937398,junit.framework.AssertionFailedError: Expected: var a=3;var a$$inline_0=5;a Result: var a=3;var a$$inline_1=5;a Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME a 1 [source_file: expected0] NUMBER 3.0 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] NUMBER 5.0 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] NAME a 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME a 1 [source_file: testcode] NUMBER 3.0 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] NUMBER 5.0 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] NAME a 1 [source_file: testcode]   Subtree1: NAME a$$inline_0 1 [source_file: expected0] NUMBER 5.0 1 [source_file: expected0]   Subtree2: NAME a$$inline_1 1 [source_file: testcode] NUMBER 5.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables7(InlineFunctionsTest.java:748) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testShadowVariables8,PASS,383986831,
com.google.javascript.jscomp.InlineFunctionsTest#testShadowVariables9,PASS,495705552,
com.google.javascript.jscomp.InlineFunctionsTest#testShadowVariables10,PASS,412344189,
com.google.javascript.jscomp.InlineFunctionsTest#testShadowVariables11,PASS,510406872,
com.google.javascript.jscomp.InlineFunctionsTest#testShadowVariables12,PASS,478049171,
com.google.javascript.jscomp.InlineFunctionsTest#testShadowVariables13,PASS,714313345,
com.google.javascript.jscomp.InlineFunctionsTest#testShadowVariables14,PASS,429297174,
com.google.javascript.jscomp.InlineFunctionsTest#testShadowVariables15,PASS,580259919,
com.google.javascript.jscomp.InlineFunctionsTest#testShadowVariables16,FAIL,720650684,junit.framework.AssertionFailedError: Expected: var a=3;var a$$inline_0=5;a Result: var a=3;var a$$inline_1=5;a Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME a 1 [source_file: expected0] NUMBER 3.0 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] NUMBER 5.0 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] NAME a 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME a 1 [source_file: testcode] NUMBER 3.0 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] NUMBER 5.0 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] NAME a 1 [source_file: testcode]   Subtree1: NAME a$$inline_0 1 [source_file: expected0] NUMBER 5.0 1 [source_file: expected0]   Subtree2: NAME a$$inline_1 1 [source_file: testcode] NUMBER 5.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables16(InlineFunctionsTest.java:845) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testShadowVariables17,PASS,662475026,
com.google.javascript.jscomp.InlineFunctionsTest#testShadowVariables18,FAIL,441852817,junit.framework.AssertionFailedError: Expected: var a=0;function _goo(){var a$$2=2;var x;var a$$inline_0=3;x=a+a} Result: var a=0;function _goo(){var a$$2=2;var x;var a$$inline_1=3;x=a+a} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME a 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0] FUNCTION _goo 1 [source_file: expected0] NAME _goo 1 [source_file: expected0] LP 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$2 1 [source_file: expected0] NUMBER 2.0 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME x 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] NUMBER 3.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME x 1 [source_file: expected0] ADD 1 [source_file: expected0] NAME a 1 [source_file: expected0] NAME a 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME a 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode] FUNCTION _goo 1 [source_file: testcode] NAME _goo 1 [source_file: testcode] LP 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a$$2 1 [source_file: testcode] NUMBER 2.0 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME x 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] NUMBER 3.0 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME x 1 [source_file: testcode] ADD 1 [source_file: testcode] NAME a 1 [source_file: testcode] NAME a 1 [source_file: testcode]   Subtree1: NAME a$$inline_0 1 [source_file: expected0] NUMBER 3.0 1 [source_file: expected0]   Subtree2: NAME a$$inline_1 1 [source_file: testcode] NUMBER 3.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testShadowVariables18(InlineFunctionsTest.java:874) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInlining1,PASS,628778934,
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInlining2,PASS,734223108,
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInlining3,PASS,769535579,
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInlining4,PASS,827623309,
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInlining5,PASS,777036900,
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInlining6,PASS,452036400,
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInlining7,PASS,799841297,
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInlining8,PASS,582352167,
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInlining9,FAIL,1067164142,junit.framework.AssertionFailedError: Expected: var a;var a$$inline_0=1+1+1;a=1+a$$inline_0+a$$inline_0 Result: var a;var a$$inline_1=1+1+1;a=1+a$$inline_1+a$$inline_1 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME a 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME a 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME a 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME a 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode]   Subtree1: NAME a$$inline_0 1 [source_file: expected0] ADD 1 [source_file: expected0] ADD 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0]   Subtree2: NAME a$$inline_1 1 [source_file: testcode] ADD 1 [source_file: testcode] ADD 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testCostBasedInlining9(InlineFunctionsTest.java:977) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInlining10,PASS,700956262,
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInlining11,FAIL,553151886,junit.framework.AssertionFailedError: Expected: var a;var a$$inline_0=1+1;a=a$$inline_0+a$$inline_0 Result: var a;var a$$inline_1=1+1;a=a$$inline_1+a$$inline_1 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME a 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] ADD 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME a 1 [source_file: expected0] ADD 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME a 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] ADD 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME a 1 [source_file: testcode] ADD 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode]   Subtree1: NAME a$$inline_0 1 [source_file: expected0] ADD 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0]   Subtree2: NAME a$$inline_1 1 [source_file: testcode] ADD 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testCostBasedInlining11(InlineFunctionsTest.java:996) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInlining12,PASS,580693908,
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInliningComplex1,PASS,423766237,
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInliningComplex2,PASS,492242103,
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInliningComplex3,PASS,551359147,
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInliningComplex4,PASS,594916852,
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInliningComplex5,PASS,580776708,
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInliningComplex6,PASS,847212185,
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInliningComplex7,PASS,610645040,
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInliningComplex8,PASS,495553636,
com.google.javascript.jscomp.InlineFunctionsTest#testCostBasedInliningComplex9,PASS,413682069,
com.google.javascript.jscomp.InlineFunctionsTest#testDoubleInlining1,PASS,520828780,
com.google.javascript.jscomp.InlineFunctionsTest#testDoubleInlining2,PASS,1096938898,
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineOfNonGlobalFunction1,PASS,755090964,
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineOfNonGlobalFunction2,PASS,726878694,
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineOfNonGlobalFunction3,PASS,693514101,
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineOfNonGlobalFunction4,PASS,513691077,
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineMaskedFunction,PASS,665684312,
com.google.javascript.jscomp.InlineFunctionsTest#testNoInlineNonFunction,PASS,689167710,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctionWithArgsMismatch1,PASS,453004501,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctionWithArgsMismatch2,PASS,691713662,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctionWithArgsMismatch3,PASS,493141080,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctionWithArgsMismatch4,PASS,409824730,
com.google.javascript.jscomp.InlineFunctionsTest#testArgumentsWithSideEffectsNeverInlined1,PASS,574613275,
com.google.javascript.jscomp.InlineFunctionsTest#testArgumentsWithSideEffectsNeverInlined2,PASS,775648761,
com.google.javascript.jscomp.InlineFunctionsTest#testOneSideEffectCallDoesNotRuinOthers,PASS,742780853,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineNoResultNoParamCall1,PASS,1079791388,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineNoResultNoParamCall2,PASS,547798448,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineNoResultNoParamCall3,FAIL,468268549,junit.framework.AssertionFailedError: Expected: function _foo(){a();b();var z$$inline_0=1+1} Result: function _foo(){a();b();var z$$inline_1=1+1} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] FUNCTION _foo 1 [source_file: expected0] NAME _foo 1 [source_file: expected0] LP 1 [source_file: expected0] BLOCK 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME a 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME b 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME z$$inline_0 1 [source_file: expected0] ADD 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] FUNCTION _foo 1 [source_file: testcode] NAME _foo 1 [source_file: testcode] LP 1 [source_file: testcode] BLOCK 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME a 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME b 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME z$$inline_1 1 [source_file: testcode] ADD 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode]   Subtree1: NAME z$$inline_0 1 [source_file: expected0] ADD 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0]   Subtree2: NAME z$$inline_1 1 [source_file: testcode] ADD 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testComplexInlineNoResultNoParamCall3(InlineFunctionsTest.java:1212) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineNoResultWithParamCall1,PASS,453069294,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineNoResultWithParamCall2,PASS,451282012,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineNoResultWithParamCall3,PASS,597889101,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInline1,PASS,370832807,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInline2,PASS,909655583,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInline3,PASS,580425246,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInline4,PASS,458054959,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInline5,PASS,403624167,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInline6,PASS,606906080,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInline7,FAIL,531811530,junit.framework.AssertionFailedError: Expected: var b=1;JSCompiler_inline_label_f_2:{if(1){z=b();break JSCompiler_inline_label_f_2}else{z=true;break JSCompiler_inline_label_f_2}z=void 0} Result: var b=1;JSCompiler_inline_label_f_4:{if(1){z=b();break JSCompiler_inline_label_f_4}else{z=true;break JSCompiler_inline_label_f_4}z=void 0} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME b 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] BLOCK 1 [source_file: expected0] LABEL 1 [source_file: expected0] LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0] BLOCK 1 [source_file: expected0] IF 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME z 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME b 1 [source_file: expected0] BREAK 1 [source_file: expected0] LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME z 1 [source_file: expected0] TRUE 1 [source_file: expected0] BREAK 1 [source_file: expected0] LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME z 1 [source_file: expected0] VOID 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME b 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] BLOCK 1 [source_file: testcode] LABEL 1 [source_file: testcode] LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode] BLOCK 1 [source_file: testcode] IF 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME z 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME b 1 [source_file: testcode] BREAK 1 [source_file: testcode] LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME z 1 [source_file: testcode] TRUE 1 [source_file: testcode] BREAK 1 [source_file: testcode] LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME z 1 [source_file: testcode] VOID 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode]   Subtree1: LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]   Subtree2: LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testComplexInline7(InlineFunctionsTest.java:1269) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInline8,PASS,579090863,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineVars1,PASS,851687305,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineVars2,PASS,361541849,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineVars3,PASS,437034150,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineVars4,PASS,894211074,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineVars5,PASS,672439925,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineVars6,PASS,560224945,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineVars7,FAIL,470172557,junit.framework.AssertionFailedError: Expected: var b=1;var z;JSCompiler_inline_label_f_2:{if(1){z=b();break JSCompiler_inline_label_f_2}else{z=true;break JSCompiler_inline_label_f_2}z=void 0} Result: var b=1;var z;JSCompiler_inline_label_f_4:{if(1){z=b();break JSCompiler_inline_label_f_4}else{z=true;break JSCompiler_inline_label_f_4}z=void 0} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME b 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME z 1 [source_file: expected0] BLOCK 1 [source_file: expected0] LABEL 1 [source_file: expected0] LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0] BLOCK 1 [source_file: expected0] IF 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME z 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME b 1 [source_file: expected0] BREAK 1 [source_file: expected0] LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME z 1 [source_file: expected0] TRUE 1 [source_file: expected0] BREAK 1 [source_file: expected0] LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME z 1 [source_file: expected0] VOID 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME b 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME z 1 [source_file: testcode] BLOCK 1 [source_file: testcode] LABEL 1 [source_file: testcode] LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode] BLOCK 1 [source_file: testcode] IF 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME z 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME b 1 [source_file: testcode] BREAK 1 [source_file: testcode] LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME z 1 [source_file: testcode] TRUE 1 [source_file: testcode] BREAK 1 [source_file: testcode] LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME z 1 [source_file: testcode] VOID 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode]   Subtree1: LABEL_NAME JSCompiler_inline_label_f_2 1 [source_file: expected0]   Subtree2: LABEL_NAME JSCompiler_inline_label_f_4 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testComplexInlineVars7(InlineFunctionsTest.java:1319) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineVars8,PASS,633517643,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineVars9,PASS,501337831,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineVars10,PASS,538617664,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineVars11,PASS,669287758,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineVars12,PASS,541716998,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineInExpresssions1,PASS,595167493,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineInExpresssions2,PASS,570828895,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineInExpresssions3,PASS,503292653,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineInExpresssions4,PASS,984490932,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexInlineInExpresssions5,PASS,566960099,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexNoInline1,PASS,763082084,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexNoInline2,PASS,438558342,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexSample,FAIL,713977237,junit.framework.AssertionFailedError: Expected: var styleSheet$$inline_2=null;if(goog$userAgent$IE)styleSheet$$inline_2=0;else var head$$inline_3=0;var element$$inline_4=styleSheet$$inline_2;var stylesString$$inline_5=a;if(goog$userAgent$IE)element$$inline_4.cssText=stylesString$$inline_5;else{var propToSet$$inline_6="innerText";element$$inline_4[propToSet$$inline_6]=stylesString$$inline_5}styleSheet$$inline_2 Result: var styleSheet$$inline_9=null;if(goog$userAgent$IE)styleSheet$$inline_9=0;else var head$$inline_10=0;var element$$inline_11=styleSheet$$inline_9;var stylesString$$inline_12=a;if(goog$userAgent$IE)element$$inline_11.cssText=stylesString$$inline_12;else{var propToSet$$inline_13="innerText";element$$inline_11[propToSet$$inline_13]=stylesString$$inline_12}styleSheet$$inline_9 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME styleSheet$$inline_2 1 [source_file: expected0] NULL 1 [source_file: expected0] IF 1 [source_file: expected0] NAME goog$userAgent$IE 1 [is_constant_name: 1] [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME styleSheet$$inline_2 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME head$$inline_3 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME element$$inline_4 1 [source_file: expected0] NAME styleSheet$$inline_2 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME stylesString$$inline_5 1 [source_file: expected0] NAME a 1 [source_file: expected0] IF 1 [source_file: expected0] NAME goog$userAgent$IE 1 [is_constant_name: 1] [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME element$$inline_4 1 [source_file: expected0] STRING cssText 1 [source_file: expected0] NAME stylesString$$inline_5 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME propToSet$$inline_6 1 [source_file: expected0] STRING innerText 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] GETELEM 1 [source_file: expected0] NAME element$$inline_4 1 [source_file: expected0] NAME propToSet$$inline_6 1 [source_file: expected0] NAME stylesString$$inline_5 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] NAME styleSheet$$inline_2 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 2 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME styleSheet$$inline_9 1 [source_file: testcode] NULL 1 [source_file: testcode] IF 1 [source_file: testcode] NAME goog$userAgent$IE 1 [is_constant_name: 1] [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME styleSheet$$inline_9 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME head$$inline_10 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode] BLOCK 2 [source_file: testcode] VAR 1 [source_file: testcode] NAME element$$inline_11 1 [source_file: testcode] NAME styleSheet$$inline_9 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME stylesString$$inline_12 1 [source_file: testcode] NAME a 2 [source_file: testcode] IF 2 [source_file: testcode] NAME goog$userAgent$IE 2 [is_constant_name: 1] [source_file: testcode] BLOCK 2 [source_file: testcode] EXPR_RESULT 2 [source_file: testcode] ASSIGN 2 [source_file: testcode] GETPROP 2 [source_file: testcode] NAME element$$inline_11 2 [source_file: testcode] STRING cssText 2 [source_file: testcode] NAME stylesString$$inline_12 2 [source_file: testcode] BLOCK 2 [source_file: testcode] VAR 2 [source_file: testcode] NAME propToSet$$inline_13 2 [source_file: testcode] STRING innerText 2 [source_file: testcode] EXPR_RESULT 2 [source_file: testcode] ASSIGN 2 [source_file: testcode] GETELEM 2 [source_file: testcode] NAME element$$inline_11 2 [source_file: testcode] NAME propToSet$$inline_13 2 [source_file: testcode] NAME stylesString$$inline_12 2 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] NAME styleSheet$$inline_9 1 [source_file: testcode]   Subtree1: NAME styleSheet$$inline_2 1 [source_file: expected0] NULL 1 [source_file: expected0]   Subtree2: NAME styleSheet$$inline_9 1 [source_file: testcode] NULL 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testComplexSample(InlineFunctionsTest.java:1418) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testComplexSampleNoInline,PASS,564141801,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexNoVarSub,PASS,402584428,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexFunctionWithFunctionDefinition1,PASS,494833205,
com.google.javascript.jscomp.InlineFunctionsTest#testComplexFunctionWithFunctionDefinition2,FAIL,492943608,junit.framework.AssertionFailedError: Expected: var a$$inline_0=void 0;call(function(){return a$$inline_0}) Result: var a$$inline_1=void 0;call(function(){return a$$inline_1}) Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] VOID 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME call 1 [source_file: expected0] FUNCTION  1 [source_file: expected0] NAME  1 [source_file: expected0] LP 1 [source_file: expected0] BLOCK 1 [source_file: expected0] RETURN 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] VOID 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME call 1 [source_file: testcode] FUNCTION  1 [source_file: testcode] NAME  1 [source_file: testcode] LP 1 [source_file: testcode] BLOCK 1 [source_file: testcode] RETURN 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode]   Subtree1: NAME a$$inline_0 1 [source_file: expected0] VOID 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0]   Subtree2: NAME a$$inline_1 1 [source_file: testcode] VOID 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testComplexFunctionWithFunctionDefinition2(InlineFunctionsTest.java:1511) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testComplexFunctionWithFunctionDefinition2a,FAIL,504017493,junit.framework.AssertionFailedError: Expected: var a$$inline_0=void 0;call(function(){return a$$inline_0}) Result: var a$$inline_1=void 0;call(function(){return a$$inline_1}) Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] VOID 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME call 1 [source_file: expected0] FUNCTION  1 [source_file: expected0] NAME  1 [source_file: expected0] LP 1 [source_file: expected0] BLOCK 1 [source_file: expected0] RETURN 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] VOID 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME call 1 [source_file: testcode] FUNCTION  1 [source_file: testcode] NAME  1 [source_file: testcode] LP 1 [source_file: testcode] BLOCK 1 [source_file: testcode] RETURN 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode]   Subtree1: NAME a$$inline_0 1 [source_file: expected0] VOID 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0]   Subtree2: NAME a$$inline_1 1 [source_file: testcode] VOID 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testComplexFunctionWithFunctionDefinition2a(InlineFunctionsTest.java:1525) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testComplexFunctionWithFunctionDefinition3,FAIL,482802709,junit.framework.AssertionFailedError: Expected: var a$$inline_0;call(function(){return a$$inline_0}) Result: var a$$inline_1;call(function(){return a$$inline_1}) Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME call 1 [source_file: expected0] FUNCTION  1 [source_file: expected0] NAME  1 [source_file: expected0] LP 1 [source_file: expected0] BLOCK 1 [source_file: expected0] RETURN 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME call 1 [source_file: testcode] FUNCTION  1 [source_file: testcode] NAME  1 [source_file: testcode] LP 1 [source_file: testcode] BLOCK 1 [source_file: testcode] RETURN 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode]   Subtree1: NAME a$$inline_0 1 [source_file: expected0]   Subtree2: NAME a$$inline_1 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testComplexFunctionWithFunctionDefinition3(InlineFunctionsTest.java:1538) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testDecomposePlusEquals,PASS,571701830,
com.google.javascript.jscomp.InlineFunctionsTest#testDecomposeFunctionExpressionInCall,FAIL,831341754,junit.framework.AssertionFailedError: Expected: var JSCompiler_inline_result$$0;var ret$$inline_1={};ret$$inline_1[ONE]="a";ret$$inline_1[TWO]="b";JSCompiler_inline_result$$0=ret$$inline_1;descriptions_=JSCompiler_inline_result$$0 Result: var JSCompiler_inline_result$$0;var ret$$inline_2={};ret$$inline_2[ONE]="a";ret$$inline_2[TWO]="b";JSCompiler_inline_result$$0=ret$$inline_2;descriptions_=JSCompiler_inline_result$$0 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME JSCompiler_inline_result$$0 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME ret$$inline_1 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0] EXPR_RESULT 2 [source_file: expected0] ASSIGN 2 [source_file: expected0] GETELEM 2 [source_file: expected0] NAME ret$$inline_1 2 [source_file: expected0] NAME ONE 2 [is_constant_name: 1] [source_file: expected0] STRING a 2 [source_file: expected0] EXPR_RESULT 3 [source_file: expected0] ASSIGN 3 [source_file: expected0] GETELEM 3 [source_file: expected0] NAME ret$$inline_1 3 [source_file: expected0] NAME TWO 3 [is_constant_name: 1] [source_file: expected0] STRING b 3 [source_file: expected0] EXPR_RESULT 4 [source_file: expected0] ASSIGN 4 [source_file: expected0] NAME JSCompiler_inline_result$$0 4 [source_file: expected0] NAME ret$$inline_1 4 [source_file: expected0] BLOCK 5 [source_file: expected0] EXPR_RESULT 5 [source_file: expected0] ASSIGN 5 [source_file: expected0] NAME descriptions_ 5 [source_file: expected0] NAME JSCompiler_inline_result$$0 5 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 2 [source_file: testcode] VAR 7 [source_file: testcode] NAME JSCompiler_inline_result$$0 7 [source_file: testcode] VAR 3 [source_file: testcode] NAME ret$$inline_2 3 [source_file: testcode] OBJECTLIT 3 [source_file: testcode] EXPR_RESULT 4 [source_file: testcode] ASSIGN 4 [source_file: testcode] GETELEM 4 [source_file: testcode] NAME ret$$inline_2 4 [source_file: testcode] NAME ONE 4 [is_constant_name: 1] [source_file: testcode] STRING a 4 [source_file: testcode] EXPR_RESULT 5 [source_file: testcode] ASSIGN 5 [source_file: testcode] GETELEM 5 [source_file: testcode] NAME ret$$inline_2 5 [source_file: testcode] NAME TWO 5 [is_constant_name: 1] [source_file: testcode] STRING b 5 [source_file: testcode] EXPR_RESULT 6 [source_file: testcode] ASSIGN 6 [source_file: testcode] NAME JSCompiler_inline_result$$0 6 [source_file: testcode] NAME ret$$inline_2 6 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME descriptions_ 1 [source_file: testcode] NAME JSCompiler_inline_result$$0 7 [source_file: testcode]   Subtree1: NAME ret$$inline_1 1 [source_file: expected0] OBJECTLIT 1 [source_file: expected0]   Subtree2: NAME ret$$inline_2 3 [source_file: testcode] OBJECTLIT 3 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testDecomposeFunctionExpressionInCall(InlineFunctionsTest.java:1553) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testInlineConstructor1,PASS,334957672,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineConstructor2,PASS,514286407,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineConstructor3,PASS,1203664545,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineConstructor4,PASS,385303927,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionInlining1,PASS,423254842,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionInlining2,PASS,426438925,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionInlining3,PASS,414010136,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionInlining4,PASS,376169844,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionCallInlining1,PASS,525136500,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionCallInlining2,PASS,1028086437,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionCallInlining3,PASS,707937022,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionCallInlining4,PASS,599909697,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionCallInlining5,PASS,344650632,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionCallInlining6,PASS,498583441,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionCallInlining7,PASS,392432797,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionCallInlining8,PASS,373408400,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionCallInlining9,PASS,628080148,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionCallInlining10,PASS,599560470,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionCallInlining11a,PASS,1169122601,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionCallInlining11b,FAIL,522163031,junit.framework.AssertionFailedError: Expected: var JSCompiler_inline_result$$0;var a$$inline_1;JSCompiler_inline_result$$0=function(){foo()};JSCompiler_inline_result$$0() Result: var JSCompiler_inline_result$$0;var a$$inline_2;JSCompiler_inline_result$$0=function(){foo()};JSCompiler_inline_result$$0() Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME JSCompiler_inline_result$$0 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$inline_1 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME JSCompiler_inline_result$$0 1 [source_file: expected0] FUNCTION  1 [source_file: expected0] NAME  1 [source_file: expected0] LP 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME foo 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME JSCompiler_inline_result$$0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME JSCompiler_inline_result$$0 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a$$inline_2 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME JSCompiler_inline_result$$0 1 [source_file: testcode] FUNCTION  1 [source_file: testcode] NAME  1 [source_file: testcode] LP 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME foo 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME JSCompiler_inline_result$$0 1 [source_file: testcode]   Subtree1: NAME a$$inline_1 1 [source_file: expected0]   Subtree2: NAME a$$inline_2 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testFunctionExpressionCallInlining11b(InlineFunctionsTest.java:1682) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionCallInlining11c,PASS,508007492,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionCallInlining11d,PASS,562191012,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionCallInlining11e,PASS,333975227,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionCallInlining12,PASS,340424602,
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionOmega,FAIL,598419428,junit.framework.AssertionFailedError: Expected: var f$$inline_0=function(f$$1){f$$1(f$$1)};f$$inline_0(f$$inline_0) Result: var f$$inline_1=function(f$$1){f$$1(f$$1)};f$$inline_1(f$$inline_1) Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME f$$inline_0 1 [source_file: expected0] FUNCTION  1 [source_file: expected0] NAME  1 [source_file: expected0] LP 1 [source_file: expected0] NAME f$$1 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME f$$1 1 [source_file: expected0] NAME f$$1 1 [source_file: expected0] BLOCK 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME f$$inline_0 1 [source_file: expected0] NAME f$$inline_0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME f$$inline_1 1 [source_file: testcode] FUNCTION  1 [source_file: testcode] NAME  1 [source_file: testcode] LP 1 [source_file: testcode] NAME f$$1 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME f$$1 1 [source_file: testcode] NAME f$$1 1 [source_file: testcode] BLOCK 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME f$$inline_1 1 [source_file: testcode] NAME f$$inline_1 1 [source_file: testcode]   Subtree1: NAME f$$inline_0 1 [source_file: expected0] FUNCTION  1 [source_file: expected0] NAME  1 [source_file: expected0] LP 1 [source_file: expected0] NAME f$$1 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] CALL 1 [free_call: 1] [source_file: expected0] NAME f$$1 1 [source_file: expected0] NAME f$$1 1 [source_file: expected0]   Subtree2: NAME f$$inline_1 1 [source_file: testcode] FUNCTION  1 [source_file: testcode] NAME  1 [source_file: testcode] LP 1 [source_file: testcode] NAME f$$1 1 [source_file: testcode] BLOCK 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] CALL 1 [free_call: 1] [source_file: testcode] NAME f$$1 1 [source_file: testcode] NAME f$$1 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testFunctionExpressionOmega(InlineFunctionsTest.java:1758) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testLocalFunctionInlining1,PASS,461028464,
com.google.javascript.jscomp.InlineFunctionsTest#testLocalFunctionInlining2,PASS,511992504,
com.google.javascript.jscomp.InlineFunctionsTest#testLocalFunctionInlining3,PASS,668992746,
com.google.javascript.jscomp.InlineFunctionsTest#testLocalFunctionInlining4,PASS,447282234,
com.google.javascript.jscomp.InlineFunctionsTest#testLocalFunctionInlining5,PASS,506118291,
com.google.javascript.jscomp.InlineFunctionsTest#testLocalFunctionInlining6,PASS,562378634,
com.google.javascript.jscomp.InlineFunctionsTest#testLocalFunctionInliningOnly1,PASS,531118531,
com.google.javascript.jscomp.InlineFunctionsTest#testLocalFunctionInliningOnly2,PASS,593258753,
com.google.javascript.jscomp.InlineFunctionsTest#testLocalFunctionInliningOnly3,PASS,506657272,
com.google.javascript.jscomp.InlineFunctionsTest#testLocalFunctionInliningOnly4,PASS,1196639693,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineWithThis1,PASS,462429406,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineWithThis2,PASS,510798136,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineWithThis3,PASS,674810633,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineWithThis4,PASS,682450373,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineWithThis5,PASS,490264397,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineWithThis6,PASS,613570143,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineWithThis7,FAIL,570165759,junit.framework.AssertionFailedError: Expected: var a$$inline_0=void 0;a$$inline_0=1;void 0 Result: var a$$inline_1=void 0;a$$inline_1=1;void 0 Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] VOID 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME a$$inline_0 1 [source_file: expected0] NUMBER 1.0 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] VOID 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] VOID 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] ASSIGN 1 [source_file: testcode] NAME a$$inline_1 1 [source_file: testcode] NUMBER 1.0 1 [source_file: testcode] EXPR_RESULT 1 [source_file: testcode] VOID 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode]   Subtree1: NAME a$$inline_0 1 [source_file: expected0] VOID 1 [source_file: expected0] NUMBER 0.0 1 [source_file: expected0]   Subtree2: NAME a$$inline_1 1 [source_file: testcode] VOID 1 [source_file: testcode] NUMBER 0.0 1 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testInlineWithThis7(InlineFunctionsTest.java:1895) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testFunctionExpressionYCombinator,FAIL,522583680,junit.framework.AssertionFailedError: Expected: var factorial;var M$$inline_4=function(f$$2){return function(n){if(n===0)return 1;else return n*f$$2(n-1)}};var f$$inline_0=function(f$$inline_7){return M$$inline_4(function(arg$$inline_8){return f$$inline_7(f$$inline_7)(arg$$inline_8)})};factorial=M$$inline_4(function(arg$$inline_1){return f$$inline_0(f$$inline_0)(arg$$inline_1)});factorial(5) Result: var factorial;var M$$inline_6=function(f$$2){return function(n){if(n===0)return 1;else return n*f$$2(n-1)}};var f$$inline_1=function(f$$inline_9){return M$$inline_6(function(arg$$inline_10){return f$$inline_9(f$$inline_9)(arg$$inline_10)})};factorial=M$$inline_6(function(arg$$inline_2){return f$$inline_1(f$$inline_1)(arg$$inline_2)});factorial(5) Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] VAR 1 [source_file: expected0] NAME factorial 1 [source_file: expected0] BLOCK 2 [source_file: expected0] VAR 3 [source_file: expected0] NAME M$$inline_4 3 [source_file: expected0] FUNCTION  3 [source_file: expected0] NAME  3 [source_file: expected0] LP 3 [source_file: expected0] NAME f$$2 3 [source_file: expected0] BLOCK 3 [source_file: expected0] RETURN 4 [source_file: expected0] FUNCTION  4 [source_file: expected0] NAME  4 [source_file: expected0] LP 4 [source_file: expected0] NAME n 4 [source_file: expected0] BLOCK 4 [source_file: expected0] IF 4 [source_file: expected0] SHEQ 4 [source_file: expected0] NAME n 4 [source_file: expected0] NUMBER 0.0 4 [source_file: expected0] BLOCK 4 [source_file: expected0] RETURN 4 [source_file: expected0] NUMBER 1.0 4 [source_file: expected0] BLOCK 4 [source_file: expected0] RETURN 4 [source_file: expected0] MUL 4 [source_file: expected0] NAME n 4 [source_file: expected0] CALL 4 [free_call: 1] [source_file: expected0] NAME f$$2 4 [source_file: expected0] SUB 4 [source_file: expected0] NAME n 4 [source_file: expected0] NUMBER 1.0 4 [source_file: expected0] BLOCK 6 [source_file: expected0] VAR 7 [source_file: expected0] NAME f$$inline_0 7 [source_file: expected0] FUNCTION  7 [source_file: expected0] NAME  7 [source_file: expected0] LP 7 [source_file: expected0] NAME f$$inline_7 7 [source_file: expected0] BLOCK 7 [source_file: expected0] RETURN 8 [source_file: expected0] CALL 8 [free_call: 1] [source_file: expected0] NAME M$$inline_4 8 [source_file: expected0] FUNCTION  9 [source_file: expected0] NAME  9 [source_file: expected0] LP 9 [source_file: expected0] NAME arg$$inline_8 9 [source_file: expected0] BLOCK 9 [source_file: expected0] RETURN 10 [source_file: expected0] CALL 10 [free_call: 1] [source_file: expected0] CALL 10 [free_call: 1] [source_file: expected0] NAME f$$inline_7 10 [source_file: expected0] NAME f$$inline_7 10 [source_file: expected0] NAME arg$$inline_8 10 [source_file: expected0] EXPR_RESULT 13 [source_file: expected0] ASSIGN 13 [source_file: expected0] NAME factorial 13 [source_file: expected0] CALL 13 [free_call: 1] [source_file: expected0] NAME M$$inline_4 13 [source_file: expected0] FUNCTION  14 [source_file: expected0] NAME  14 [source_file: expected0] LP 14 [source_file: expected0] NAME arg$$inline_1 14 [source_file: expected0] BLOCK 14 [source_file: expected0] RETURN 15 [source_file: expected0] CALL 15 [free_call: 1] [source_file: expected0] CALL 15 [free_call: 1] [source_file: expected0] NAME f$$inline_0 15 [source_file: expected0] NAME f$$inline_0 15 [source_file: expected0] NAME arg$$inline_1 15 [source_file: expected0] EXPR_RESULT 18 [source_file: expected0] CALL 18 [free_call: 1] [source_file: expected0] NAME factorial 18 [source_file: expected0] NUMBER 5.0 18 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] VAR 1 [source_file: testcode] NAME factorial 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 13 [source_file: testcode] NAME M$$inline_6 13 [source_file: testcode] FUNCTION  13 [source_file: testcode] NAME  13 [source_file: testcode] LP 13 [source_file: testcode] NAME f$$2 13 [source_file: testcode] BLOCK 13 [source_file: testcode] RETURN 14 [source_file: testcode] FUNCTION  14 [source_file: testcode] NAME  14 [source_file: testcode] LP 14 [source_file: testcode] NAME n 14 [source_file: testcode] BLOCK 14 [source_file: testcode] IF 15 [source_file: testcode] SHEQ 15 [source_file: testcode] NAME n 15 [source_file: testcode] NUMBER 0.0 15 [source_file: testcode] BLOCK 16 [source_file: testcode] RETURN 16 [source_file: testcode] NUMBER 1.0 16 [source_file: testcode] BLOCK 18 [source_file: testcode] RETURN 18 [source_file: testcode] MUL 18 [source_file: testcode] NAME n 18 [source_file: testcode] CALL 18 [free_call: 1] [source_file: testcode] NAME f$$2 18 [source_file: testcode] SUB 18 [source_file: testcode] NAME n 18 [source_file: testcode] NUMBER 1.0 18 [source_file: testcode] BLOCK 2 [source_file: testcode] VAR 7 [source_file: testcode] NAME f$$inline_1 7 [source_file: testcode] FUNCTION  7 [source_file: testcode] NAME  7 [source_file: testcode] LP 7 [source_file: testcode] NAME f$$inline_9 7 [source_file: testcode] BLOCK 7 [source_file: testcode] RETURN 8 [source_file: testcode] CALL 8 [free_call: 1] [source_file: testcode] NAME M$$inline_6 8 [source_file: testcode] FUNCTION  8 [source_file: testcode] NAME  8 [source_file: testcode] LP 8 [source_file: testcode] NAME arg$$inline_10 8 [source_file: testcode] BLOCK 8 [source_file: testcode] RETURN 9 [source_file: testcode] CALL 9 [free_call: 1] [source_file: testcode] CALL 9 [parenthesized: true] [free_call: 1] [source_file: testcode] NAME f$$inline_9 9 [source_file: testcode] NAME f$$inline_9 9 [source_file: testcode] NAME arg$$inline_10 9 [source_file: testcode] EXPR_RESULT 3 [source_file: testcode] ASSIGN 3 [source_file: testcode] NAME factorial 3 [source_file: testcode] CALL 3 [free_call: 1] [source_file: testcode] NAME M$$inline_6 3 [source_file: testcode] FUNCTION  3 [source_file: testcode] NAME  3 [source_file: testcode] LP 3 [source_file: testcode] NAME arg$$inline_2 3 [source_file: testcode] BLOCK 3 [source_file: testcode] RETURN 4 [source_file: testcode] CALL 4 [free_call: 1] [source_file: testcode] CALL 4 [parenthesized: true] [free_call: 1] [source_file: testcode] NAME f$$inline_1 4 [source_file: testcode] NAME f$$inline_1 4 [source_file: testcode] NAME arg$$inline_2 4 [source_file: testcode] EXPR_RESULT 22 [source_file: testcode] CALL 22 [free_call: 1] [source_file: testcode] NAME factorial 22 [source_file: testcode] NUMBER 5.0 22 [source_file: testcode]   Subtree1: NAME M$$inline_4 3 [source_file: expected0] FUNCTION  3 [source_file: expected0] NAME  3 [source_file: expected0] LP 3 [source_file: expected0] NAME f$$2 3 [source_file: expected0] BLOCK 3 [source_file: expected0] RETURN 4 [source_file: expected0] FUNCTION  4 [source_file: expected0] NAME  4 [source_file: expected0] LP 4 [source_file: expected0] NAME n 4 [source_file: expected0] BLOCK 4 [source_file: expected0] IF 4 [source_file: expected0] SHEQ 4 [source_file: expected0] NAME n 4 [source_file: expected0] NUMBER 0.0 4 [source_file: expected0] BLOCK 4 [source_file: expected0] RETURN 4 [source_file: expected0] NUMBER 1.0 4 [source_file: expected0] BLOCK 4 [source_file: expected0] RETURN 4 [source_file: expected0] MUL 4 [source_file: expected0] NAME n 4 [source_file: expected0] CALL 4 [free_call: 1] [source_file: expected0] NAME f$$2 4 [source_file: expected0] SUB 4 [source_file: expected0] NAME n 4 [source_file: expected0] NUMBER 1.0 4 [source_file: expected0]   Subtree2: NAME M$$inline_6 13 [source_file: testcode] FUNCTION  13 [source_file: testcode] NAME  13 [source_file: testcode] LP 13 [source_file: testcode] NAME f$$2 13 [source_file: testcode] BLOCK 13 [source_file: testcode] RETURN 14 [source_file: testcode] FUNCTION  14 [source_file: testcode] NAME  14 [source_file: testcode] LP 14 [source_file: testcode] NAME n 14 [source_file: testcode] BLOCK 14 [source_file: testcode] IF 15 [source_file: testcode] SHEQ 15 [source_file: testcode] NAME n 15 [source_file: testcode] NUMBER 0.0 15 [source_file: testcode] BLOCK 16 [source_file: testcode] RETURN 16 [source_file: testcode] NUMBER 1.0 16 [source_file: testcode] BLOCK 18 [source_file: testcode] RETURN 18 [source_file: testcode] MUL 18 [source_file: testcode] NAME n 18 [source_file: testcode] CALL 18 [free_call: 1] [source_file: testcode] NAME f$$2 18 [source_file: testcode] SUB 18 [source_file: testcode] NAME n 18 [source_file: testcode] NUMBER 1.0 18 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testFunctionExpressionYCombinator(InlineFunctionsTest.java:1929) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testRenamePropertyFunction,PASS,423494355,
com.google.javascript.jscomp.InlineFunctionsTest#testReplacePropertyFunction,PASS,469108719,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineWithClosureContainingThis,PASS,615541098,
com.google.javascript.jscomp.InlineFunctionsTest#testIssue5159924a,PASS,748093468,
com.google.javascript.jscomp.InlineFunctionsTest#testIssue5159924b,PASS,448588755,
com.google.javascript.jscomp.InlineFunctionsTest#testLoopWithFunctionWithFunction,FAIL,626028686,junit.framework.AssertionFailedError: Expected: function _testLocalVariableInLoop_(){var result=0;var arr$$inline_0=[1,2,3,4,5];var i$$inline_1=0;var l$$inline_2=arr$$inline_0.length;for(;i$$inline_1<l$$inline_2;i$$inline_1++){var j$$inline_3=arr$$inline_0[i$$inline_1];(function(){var k$$inline_4=j$$inline_3;setTimeout(function(){result+=k$$inline_4},5*i$$inline_1)})()}} Result: function _testLocalVariableInLoop_(){var result=0;var arr$$inline_4=[1,2,3,4,5];var i$$inline_5=0;var l$$inline_6=arr$$inline_4.length;for(;i$$inline_5<l$$inline_6;i$$inline_5++){var j$$inline_7=arr$$inline_4[i$$inline_5];(function(){var k$$inline_8=j$$inline_7;setTimeout(function(){result+=k$$inline_8},5*i$$inline_5)})()}} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] FUNCTION _testLocalVariableInLoop_ 1 [source_file: expected0] NAME _testLocalVariableInLoop_ 1 [source_file: expected0] LP 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 2 [source_file: expected0] NAME result 2 [source_file: expected0] NUMBER 0.0 2 [source_file: expected0] BLOCK 3 [source_file: expected0] VAR 3 [source_file: expected0] NAME arr$$inline_0 3 [source_file: expected0] ARRAYLIT 3 [source_file: expected0] NUMBER 1.0 3 [source_file: expected0] NUMBER 2.0 3 [source_file: expected0] NUMBER 3.0 3 [source_file: expected0] NUMBER 4.0 3 [source_file: expected0] NUMBER 5.0 3 [source_file: expected0] VAR 4 [source_file: expected0] NAME i$$inline_1 4 [source_file: expected0] NUMBER 0.0 4 [source_file: expected0] VAR 5 [source_file: expected0] NAME l$$inline_2 5 [source_file: expected0] GETPROP 5 [source_file: expected0] NAME arr$$inline_0 5 [source_file: expected0] STRING length 5 [source_file: expected0] FOR 6 [source_file: expected0] EMPTY 6 [source_file: expected0] LT 6 [source_file: expected0] NAME i$$inline_1 6 [source_file: expected0] NAME l$$inline_2 6 [source_file: expected0] INC 6 [incrdecr: 1] [source_file: expected0] NAME i$$inline_1 6 [source_file: expected0] BLOCK 6 [source_file: expected0] VAR 7 [source_file: expected0] NAME j$$inline_3 7 [source_file: expected0] GETELEM 7 [source_file: expected0] NAME arr$$inline_0 7 [source_file: expected0] NAME i$$inline_1 7 [source_file: expected0] EXPR_RESULT 8 [source_file: expected0] CALL 11 [free_call: 1] [source_file: expected0] FUNCTION  8 [parenthesized: true] [source_file: expected0] NAME  8 [source_file: expected0] LP 8 [source_file: expected0] BLOCK 8 [source_file: expected0] VAR 9 [source_file: expected0] NAME k$$inline_4 9 [source_file: expected0] NAME j$$inline_3 9 [source_file: expected0] EXPR_RESULT 10 [source_file: expected0] CALL 10 [free_call: 1] [source_file: expected0] NAME setTimeout 10 [source_file: expected0] FUNCTION  10 [source_file: expected0] NAME  10 [source_file: expected0] LP 10 [source_file: expected0] BLOCK 10 [source_file: expected0] EXPR_RESULT 10 [source_file: expected0] ASSIGN_ADD 10 [source_file: expected0] NAME result 10 [source_file: expected0] NAME k$$inline_4 10 [source_file: expected0] MUL 10 [source_file: expected0] NUMBER 5.0 10 [source_file: expected0] NAME i$$inline_1 10 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] FUNCTION _testLocalVariableInLoop_ 1 [source_file: testcode] NAME _testLocalVariableInLoop_ 1 [source_file: testcode] LP 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 2 [source_file: testcode] NAME result 2 [source_file: testcode] NUMBER 0.0 2 [source_file: testcode] BLOCK 3 [source_file: testcode] VAR 4 [source_file: testcode] NAME arr$$inline_4 4 [source_file: testcode] ARRAYLIT 4 [source_file: testcode] NUMBER 1.0 4 [source_file: testcode] NUMBER 2.0 4 [source_file: testcode] NUMBER 3.0 4 [source_file: testcode] NUMBER 4.0 4 [source_file: testcode] NUMBER 5.0 4 [source_file: testcode] VAR 3 NAME i$$inline_5 5 [source_file: testcode] NUMBER 0.0 5 [source_file: testcode] VAR 5 [source_file: testcode] NAME l$$inline_6 5 [source_file: testcode] GETPROP 5 [source_file: testcode] NAME arr$$inline_4 5 [source_file: testcode] STRING length 5 [source_file: testcode] FOR 5 [source_file: testcode] EMPTY 5 [source_file: testcode] LT 5 [source_file: testcode] NAME i$$inline_5 5 [source_file: testcode] NAME l$$inline_6 5 [source_file: testcode] INC 5 [incrdecr: 1] [source_file: testcode] NAME i$$inline_5 5 [source_file: testcode] BLOCK 5 [source_file: testcode] VAR 6 [source_file: testcode] NAME j$$inline_7 6 [source_file: testcode] GETELEM 6 [source_file: testcode] NAME arr$$inline_4 6 [source_file: testcode] NAME i$$inline_5 6 [source_file: testcode] EXPR_RESULT 7 [source_file: testcode] CALL 10 [free_call: 1] [source_file: testcode] FUNCTION  7 [parenthesized: true] [source_file: testcode] NAME  7 [source_file: testcode] LP 7 [source_file: testcode] BLOCK 7 [source_file: testcode] VAR 8 [source_file: testcode] NAME k$$inline_8 8 [source_file: testcode] NAME j$$inline_7 8 [source_file: testcode] EXPR_RESULT 9 [source_file: testcode] CALL 9 [free_call: 1] [source_file: testcode] NAME setTimeout 9 [source_file: testcode] FUNCTION  9 [source_file: testcode] NAME  9 [source_file: testcode] LP 9 [source_file: testcode] BLOCK 9 [source_file: testcode] EXPR_RESULT 9 [source_file: testcode] ASSIGN_ADD 9 [source_file: testcode] NAME result 9 [source_file: testcode] NAME k$$inline_8 9 [source_file: testcode] MUL 9 [source_file: testcode] NUMBER 5.0 9 [source_file: testcode] NAME i$$inline_5 9 [source_file: testcode]   Subtree1: NAME arr$$inline_0 3 [source_file: expected0] ARRAYLIT 3 [source_file: expected0] NUMBER 1.0 3 [source_file: expected0] NUMBER 2.0 3 [source_file: expected0] NUMBER 3.0 3 [source_file: expected0] NUMBER 4.0 3 [source_file: expected0] NUMBER 5.0 3 [source_file: expected0]   Subtree2: NAME arr$$inline_4 4 [source_file: testcode] ARRAYLIT 4 [source_file: testcode] NUMBER 1.0 4 [source_file: testcode] NUMBER 2.0 4 [source_file: testcode] NUMBER 3.0 4 [source_file: testcode] NUMBER 4.0 4 [source_file: testcode] NUMBER 5.0 4 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testLoopWithFunctionWithFunction(InlineFunctionsTest.java:2201) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testMethodWithFunctionWithFunction,FAIL,548642858,junit.framework.AssertionFailedError: Expected: function _testLocalVariable_(){var result=0;var j$$inline_2=[i];var j$$inline_0=j$$inline_2;setTimeout(function(){result+=j$$inline_0},5*i);j$$inline_2=null} Result: function _testLocalVariable_(){var result=0;var j$$inline_4=[i];var j$$inline_1=j$$inline_4;setTimeout(function(){result+=j$$inline_1},5*i);j$$inline_4=null} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] FUNCTION _testLocalVariable_ 1 [source_file: expected0] NAME _testLocalVariable_ 1 [source_file: expected0] LP 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 2 [source_file: expected0] NAME result 2 [source_file: expected0] NUMBER 0.0 2 [source_file: expected0] BLOCK 3 [source_file: expected0] VAR 4 [source_file: expected0] NAME j$$inline_2 4 [source_file: expected0] ARRAYLIT 4 [source_file: expected0] NAME i 4 [source_file: expected0] BLOCK 5 [source_file: expected0] VAR 6 [source_file: expected0] NAME j$$inline_0 6 [source_file: expected0] NAME j$$inline_2 6 [source_file: expected0] EXPR_RESULT 7 [source_file: expected0] CALL 7 [free_call: 1] [source_file: expected0] NAME setTimeout 7 [source_file: expected0] FUNCTION  7 [source_file: expected0] NAME  7 [source_file: expected0] LP 7 [source_file: expected0] BLOCK 7 [source_file: expected0] EXPR_RESULT 7 [source_file: expected0] ASSIGN_ADD 7 [source_file: expected0] NAME result 7 [source_file: expected0] NAME j$$inline_0 7 [source_file: expected0] MUL 7 [source_file: expected0] NUMBER 5.0 7 [source_file: expected0] NAME i 7 [source_file: expected0] EXPR_RESULT 9 [source_file: expected0] ASSIGN 9 [source_file: expected0] NAME j$$inline_2 9 [source_file: expected0] NULL 9 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] FUNCTION _testLocalVariable_ 1 [source_file: testcode] NAME _testLocalVariable_ 1 [source_file: testcode] LP 1 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 2 [source_file: testcode] NAME result 2 [source_file: testcode] NUMBER 0.0 2 [source_file: testcode] BLOCK 3 [source_file: testcode] VAR 4 [source_file: testcode] NAME j$$inline_4 4 [source_file: testcode] ARRAYLIT 4 [source_file: testcode] NAME i 4 [source_file: testcode] BLOCK 5 [source_file: testcode] VAR 7 [source_file: testcode] NAME j$$inline_1 7 [source_file: testcode] NAME j$$inline_4 7 [source_file: testcode] EXPR_RESULT 6 [source_file: testcode] CALL 6 [free_call: 1] [source_file: testcode] NAME setTimeout 6 [source_file: testcode] FUNCTION  6 [source_file: testcode] NAME  6 [source_file: testcode] LP 6 [source_file: testcode] BLOCK 6 [source_file: testcode] EXPR_RESULT 6 [source_file: testcode] ASSIGN_ADD 6 [source_file: testcode] NAME result 6 [source_file: testcode] NAME j$$inline_1 6 [source_file: testcode] MUL 6 [source_file: testcode] NUMBER 5.0 6 [source_file: testcode] NAME i 6 [source_file: testcode] EXPR_RESULT 8 [source_file: testcode] ASSIGN 8 [source_file: testcode] NAME j$$inline_4 8 [source_file: testcode] NULL 8 [source_file: testcode]   Subtree1: NAME j$$inline_2 4 [source_file: expected0] ARRAYLIT 4 [source_file: expected0] NAME i 4 [source_file: expected0]   Subtree2: NAME j$$inline_4 4 [source_file: testcode] ARRAYLIT 4 [source_file: testcode] NAME i 4 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testMethodWithFunctionWithFunction(InlineFunctionsTest.java:2236) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testCrossModuleInlining1,PASS,613977744,
com.google.javascript.jscomp.InlineFunctionsTest#testCrossModuleInlining2,PASS,738806383,
com.google.javascript.jscomp.InlineFunctionsTest#testCrossModuleInlining3,PASS,832961036,
com.google.javascript.jscomp.InlineFunctionsTest#testIssue423,FAIL,668680934,junit.framework.AssertionFailedError: Expected: var $$$inline_0=jQuery;$$$inline_0.fn.multicheck=function(options$$inline_4){options$$inline_4.checkboxes=$$$inline_0(this).siblings(":checkbox");$$$inline_0(this).data("checkboxes")} Result: var $$$inline_3=jQuery;$$$inline_3.fn.multicheck=function(options$$inline_7){options$$inline_7.checkboxes=$$$inline_3(this).siblings(":checkbox");$$$inline_3(this).data("checkboxes")} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME $$$inline_0 1 [source_file: expected0] NAME jQuery 1 [source_file: expected0] EXPR_RESULT 2 [source_file: expected0] ASSIGN 2 [source_file: expected0] GETPROP 2 [source_file: expected0] GETPROP 2 [source_file: expected0] NAME $$$inline_0 2 [source_file: expected0] STRING fn 2 [source_file: expected0] STRING multicheck 2 [source_file: expected0] FUNCTION  2 [source_file: expected0] NAME  2 [source_file: expected0] LP 2 [source_file: expected0] NAME options$$inline_4 2 [source_file: expected0] BLOCK 2 [source_file: expected0] BLOCK 3 [source_file: expected0] EXPR_RESULT 3 [source_file: expected0] ASSIGN 3 [source_file: expected0] GETPROP 3 [source_file: expected0] NAME options$$inline_4 3 [source_file: expected0] STRING checkboxes 3 [source_file: expected0] CALL 3 [source_file: expected0] GETPROP 3 [source_file: expected0] CALL 3 [free_call: 1] [source_file: expected0] NAME $$$inline_0 3 [source_file: expected0] THIS 3 [source_file: expected0] STRING siblings 3 [source_file: expected0] STRING :checkbox 3 [source_file: expected0] BLOCK 4 [source_file: expected0] EXPR_RESULT 4 [source_file: expected0] CALL 4 [source_file: expected0] GETPROP 4 [source_file: expected0] CALL 4 [free_call: 1] [source_file: expected0] NAME $$$inline_0 4 [source_file: expected0] THIS 4 [source_file: expected0] STRING data 4 [source_file: expected0] STRING checkboxes 4 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] BLOCK 1 [source_file: testcode] VAR 14 [source_file: testcode] NAME $$$inline_3 14 [source_file: testcode] NAME jQuery 14 [source_file: testcode] EXPR_RESULT 2 [source_file: testcode] ASSIGN 2 [source_file: testcode] GETPROP 2 [source_file: testcode] GETPROP 2 [source_file: testcode] NAME $$$inline_3 2 [source_file: testcode] STRING fn 2 [source_file: testcode] STRING multicheck 2 [source_file: testcode] FUNCTION  2 [source_file: testcode] NAME  2 [source_file: testcode] LP 2 [source_file: testcode] NAME options$$inline_7 2 [source_file: testcode] BLOCK 2 [source_file: testcode] BLOCK 6 [source_file: testcode] EXPR_RESULT 7 [source_file: testcode] ASSIGN 7 [source_file: testcode] GETPROP 7 [source_file: testcode] NAME options$$inline_7 3 [source_file: testcode] STRING checkboxes 7 [source_file: testcode] CALL 7 [source_file: testcode] GETPROP 7 [source_file: testcode] CALL 7 [free_call: 1] [source_file: testcode] NAME $$$inline_3 7 [source_file: testcode] THIS 7 [source_file: testcode] STRING siblings 7 [source_file: testcode] STRING :checkbox 7 [source_file: testcode] BLOCK 11 [source_file: testcode] EXPR_RESULT 12 [source_file: testcode] CALL 12 [source_file: testcode] GETPROP 12 [source_file: testcode] CALL 12 [free_call: 1] [source_file: testcode] NAME $$$inline_3 12 [source_file: testcode] THIS 12 [source_file: testcode] STRING data 12 [source_file: testcode] STRING checkboxes 12 [source_file: testcode]   Subtree1: NAME $$$inline_0 1 [source_file: expected0] NAME jQuery 1 [source_file: expected0]   Subtree2: NAME $$$inline_3 14 [source_file: testcode] NAME jQuery 14 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testIssue423(InlineFunctionsTest.java:2142) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testInlineObject,PASS,501764265,
com.google.javascript.jscomp.InlineFunctionsTest#testBug4944818,FAIL,506559744,junit.framework.AssertionFailedError: Expected: HangoutStarter.prototype.launchHangout=function(){var self$$2=a.b;var JSCompiler_temp_const$$0=goog.Uri;var JSCompiler_inline_result$$1;var self$$inline_2=self$$2;if(!self$$inline_2.domServices_)self$$inline_2.domServices_=goog$component$DomServices.get(self$$inline_2.appContext_);JSCompiler_inline_result$$1=self$$inline_2.domServices_;var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.getDomHelper().getWindow().location.href)} Result: HangoutStarter.prototype.launchHangout=function(){var self$$2=a.b;var JSCompiler_temp_const$$0=goog.Uri;var JSCompiler_inline_result$$1;var self$$inline_3=self$$2;if(!self$$inline_3.domServices_)self$$inline_3.domServices_=goog$component$DomServices.get(self$$inline_3.appContext_);JSCompiler_inline_result$$1=self$$inline_3.domServices_;var myUrl=new JSCompiler_temp_const$$0(JSCompiler_inline_result$$1.getDomHelper().getWindow().location.href)} Node tree inequality: Tree1: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: expected0] [input_id: InputId: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] GETPROP 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME HangoutStarter 1 [source_file: expected0] STRING prototype 1 [source_file: expected0] STRING launchHangout 1 [source_file: expected0] FUNCTION  1 [source_file: expected0] NAME  1 [source_file: expected0] LP 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME self$$2 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME a 1 [source_file: expected0] STRING b 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME JSCompiler_temp_const$$0 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog 1 [source_file: expected0] STRING Uri 1 [source_file: expected0] BLOCK 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME JSCompiler_inline_result$$1 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME self$$inline_2 1 [source_file: expected0] NAME self$$2 1 [source_file: expected0] IF 1 [source_file: expected0] NOT 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME self$$inline_2 1 [source_file: expected0] STRING domServices_ 1 [source_file: expected0] BLOCK 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME self$$inline_2 1 [source_file: expected0] STRING domServices_ 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME goog$component$DomServices 1 [source_file: expected0] STRING get 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME self$$inline_2 1 [source_file: expected0] STRING appContext_ 1 [source_file: expected0] EXPR_RESULT 1 [source_file: expected0] ASSIGN 1 [source_file: expected0] NAME JSCompiler_inline_result$$1 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME self$$inline_2 1 [source_file: expected0] STRING domServices_ 1 [source_file: expected0] VAR 1 [source_file: expected0] NAME myUrl 1 [source_file: expected0] NEW 1 [source_file: expected0] NAME JSCompiler_temp_const$$0 1 [source_file: expected0] GETPROP 1 [source_file: expected0] GETPROP 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] CALL 1 [source_file: expected0] GETPROP 1 [source_file: expected0] NAME JSCompiler_inline_result$$1 1 [source_file: expected0] STRING getDomHelper 1 [source_file: expected0] STRING getWindow 1 [source_file: expected0] STRING location 1 [source_file: expected0] STRING href 1 [source_file: expected0]   Tree2: BLOCK [synthetic: 1] SCRIPT 1 [synthetic: 1] [source_file: testcode] [input_id: InputId: testcode] EXPR_RESULT 13 [source_file: testcode] ASSIGN 13 [source_file: testcode] GETPROP 13 [source_file: testcode] GETPROP 13 [source_file: testcode] NAME HangoutStarter 13 [source_file: testcode] STRING prototype 13 [source_file: testcode] STRING launchHangout 13 [source_file: testcode] FUNCTION  13 [source_file: testcode] NAME  13 [source_file: testcode] LP 13 [source_file: testcode] BLOCK 13 [source_file: testcode] VAR 14 [source_file: testcode] NAME self$$2 14 [source_file: testcode] GETPROP 14 [source_file: testcode] NAME a 14 [source_file: testcode] STRING b 14 [source_file: testcode] VAR 15 [source_file: testcode] NAME JSCompiler_temp_const$$0 15 [source_file: testcode] GETPROP 15 [source_file: testcode] NAME goog 15 [source_file: testcode] STRING Uri 15 [source_file: testcode] BLOCK 1 [source_file: testcode] VAR 10 [source_file: testcode] NAME JSCompiler_inline_result$$1 10 [source_file: testcode] VAR 15 [source_file: testcode] NAME self$$inline_3 15 [source_file: testcode] NAME self$$2 15 [source_file: testcode] IF 2 [source_file: testcode] NOT 2 [source_file: testcode] GETPROP 2 [source_file: testcode] NAME self$$inline_3 2 [source_file: testcode] STRING domServices_ 2 [source_file: testcode] BLOCK 2 [source_file: testcode] EXPR_RESULT 3 [source_file: testcode] ASSIGN 3 [source_file: testcode] GETPROP 3 [source_file: testcode] NAME self$$inline_3 3 [source_file: testcode] STRING domServices_ 3 [source_file: testcode] CALL 3 [source_file: testcode] GETPROP 3 [source_file: testcode] NAME goog$component$DomServices 3 [source_file: testcode] STRING get 3 [source_file: testcode] GETPROP 3 [source_file: testcode] NAME self$$inline_3 3 [source_file: testcode] STRING appContext_ 3 [source_file: testcode] EXPR_RESULT 6 [source_file: testcode] ASSIGN 6 [source_file: testcode] NAME JSCompiler_inline_result$$1 6 [source_file: testcode] GETPROP 6 [source_file: testcode] NAME self$$inline_3 6 [source_file: testcode] STRING domServices_ 6 [source_file: testcode] VAR 15 [source_file: testcode] NAME myUrl 15 [source_file: testcode] NEW 15 [source_file: testcode] NAME JSCompiler_temp_const$$0 15 [source_file: testcode] GETPROP 15 [source_file: testcode] GETPROP 15 [source_file: testcode] CALL 10 [source_file: testcode] GETPROP 10 [source_file: testcode] CALL 10 [source_file: testcode] GETPROP 10 [source_file: testcode] NAME JSCompiler_inline_result$$1 10 [source_file: testcode] STRING getDomHelper 10 [source_file: testcode] STRING getWindow 10 [source_file: testcode] STRING location 15 [source_file: testcode] STRING href 15 [source_file: testcode]   Subtree1: NAME self$$inline_2 1 [source_file: expected0] NAME self$$2 1 [source_file: expected0]   Subtree2: NAME self$$inline_3 15 [source_file: testcode] NAME self$$2 15 [source_file: testcode]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:862) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:423) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:348) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:317) at com.google.javascript.jscomp.CompilerTestCase.test(CompilerTestCase.java:305) at com.google.javascript.jscomp.InlineFunctionsTest.testBug4944818(InlineFunctionsTest.java:2077) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.InlineFunctionsTest#testInlineCall,PASS,435367927,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineEmptyFunction1,PASS,525945039,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineEmptyFunction2,PASS,569693270,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineEmptyFunction3,PASS,417546047,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineEmptyFunction4,PASS,488365451,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineEmptyFunction5,PASS,639721488,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions1,PASS,601555577,
com.google.javascript.jscomp.InlineFunctionsTest#testInlineFunctions2,PASS,554470472,
com.google.javascript.jscomp.FunctionInjectorTest#testInline1,PASS,749697169,
com.google.javascript.jscomp.FunctionInjectorTest#testInline2,PASS,559196717,
com.google.javascript.jscomp.FunctionInjectorTest#testInline3,PASS,546484412,
com.google.javascript.jscomp.FunctionInjectorTest#testInline4,PASS,669077071,
com.google.javascript.jscomp.FunctionInjectorTest#testInline5,PASS,554611409,
com.google.javascript.jscomp.FunctionInjectorTest#testInline6,PASS,353938517,
com.google.javascript.jscomp.FunctionInjectorTest#testInline7,PASS,481480137,
com.google.javascript.jscomp.FunctionInjectorTest#testInline8,PASS,325803011,
com.google.javascript.jscomp.FunctionInjectorTest#testInline9,PASS,461766421,
com.google.javascript.jscomp.FunctionInjectorTest#testInline10,PASS,365111140,
com.google.javascript.jscomp.FunctionInjectorTest#testInline11,PASS,394903988,
com.google.javascript.jscomp.FunctionInjectorTest#testInline12,PASS,537217611,
com.google.javascript.jscomp.FunctionInjectorTest#testInline13,FAIL,700137418,junit.framework.AssertionFailedError: Expected: function foo(a){return a}function x(){var a$$inline_0=x++;a$$inline_0} Result: function foo(a){return a}function x(){var a$$inline_1=x++;a$$inline_1} Node tree inequality: Tree1: SCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ] FUNCTION foo 1 [source_file:  [testcode] ] NAME foo 1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] RETURN 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] EMPTY 1 [source_file:  [testcode] ] FUNCTION x 1 [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ] INC 1 [incrdecr: 1] [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ]   Tree2: SCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code] FUNCTION foo 1 [source_file: code] NAME foo 1 [source_file: code] LP 1 [source_file: code] NAME a 1 [source_file: code] BLOCK 1 [source_file: code] RETURN 1 [source_file: code] NAME a 1 [source_file: code] EMPTY 1 [source_file: code] FUNCTION x 1 [source_file: code] NAME x 1 [source_file: code] LP 1 [source_file: code] BLOCK 1 [source_file: code] BLOCK 1 [source_file: code] VAR 1 [source_file: code] NAME a$$inline_1 1 [source_file: code] INC 1 [incrdecr: 1] [source_file: code] NAME x 1 [source_file: code] EXPR_RESULT 1 [source_file: code] NAME a$$inline_1 1 [source_file: code]   Subtree1: NAME a$$inline_0 1 [source_file:  [testcode] ] INC 1 [incrdecr: 1] [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ]   Subtree2: NAME a$$inline_1 1 [source_file: code] INC 1 [incrdecr: 1] [source_file: code] NAME x 1 [source_file: code]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479) at com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393) at com.google.javascript.jscomp.FunctionInjectorTest.testInline13(FunctionInjectorTest.java:866) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FunctionInjectorTest#testInline14,FAIL,366122747,junit.framework.AssertionFailedError: Expected: function foo(a){return a+a}var a$$inline_0=x++;a$$inline_0+a$$inline_0 Result: function foo(a){return a+a}var a$$inline_1=x++;a$$inline_1+a$$inline_1 Node tree inequality: Tree1: SCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ] FUNCTION foo 1 [source_file:  [testcode] ] NAME foo 1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] RETURN 1 [source_file:  [testcode] ] ADD 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] EMPTY 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ] INC 1 [incrdecr: 1] [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] ADD 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ]   Tree2: SCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code] FUNCTION foo 1 [source_file: code] NAME foo 1 [source_file: code] LP 1 [source_file: code] NAME a 1 [source_file: code] BLOCK 1 [source_file: code] RETURN 1 [source_file: code] ADD 1 [source_file: code] NAME a 1 [source_file: code] NAME a 1 [source_file: code] EMPTY 1 [source_file: code] BLOCK 1 [source_file: code] VAR 1 [source_file: code] NAME a$$inline_1 1 [source_file: code] INC 1 [incrdecr: 1] [source_file: code] NAME x 1 [source_file: code] EXPR_RESULT 1 [source_file: code] ADD 1 [source_file: code] NAME a$$inline_1 1 [source_file: code] NAME a$$inline_1 1 [source_file: code]   Subtree1: NAME a$$inline_0 1 [source_file:  [testcode] ] INC 1 [incrdecr: 1] [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ]   Subtree2: NAME a$$inline_1 1 [source_file: code] INC 1 [incrdecr: 1] [source_file: code] NAME x 1 [source_file: code]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479) at com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393) at com.google.javascript.jscomp.FunctionInjectorTest.testInline14(FunctionInjectorTest.java:877) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FunctionInjectorTest#testInline15,FAIL,306658613,junit.framework.AssertionFailedError: Expected: function foo(a){return a+a}var a$$inline_0=new Date;a$$inline_0+a$$inline_0 Result: function foo(a){return a+a}var a$$inline_1=new Date;a$$inline_1+a$$inline_1 Node tree inequality: Tree1: SCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ] FUNCTION foo 1 [source_file:  [testcode] ] NAME foo 1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] RETURN 1 [source_file:  [testcode] ] ADD 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] EMPTY 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ] NEW 1 [source_file:  [testcode] ] NAME Date 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] ADD 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ]   Tree2: SCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code] FUNCTION foo 1 [source_file: code] NAME foo 1 [source_file: code] LP 1 [source_file: code] NAME a 1 [source_file: code] BLOCK 1 [source_file: code] RETURN 1 [source_file: code] ADD 1 [source_file: code] NAME a 1 [source_file: code] NAME a 1 [source_file: code] EMPTY 1 [source_file: code] BLOCK 1 [source_file: code] VAR 1 [source_file: code] NAME a$$inline_1 1 [source_file: code] NEW 1 [source_file: code] NAME Date 1 [source_file: code] EXPR_RESULT 1 [source_file: code] ADD 1 [source_file: code] NAME a$$inline_1 1 [source_file: code] NAME a$$inline_1 1 [source_file: code]   Subtree1: NAME a$$inline_0 1 [source_file:  [testcode] ] NEW 1 [source_file:  [testcode] ] NAME Date 1 [source_file:  [testcode] ]   Subtree2: NAME a$$inline_1 1 [source_file: code] NEW 1 [source_file: code] NAME Date 1 [source_file: code]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479) at com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393) at com.google.javascript.jscomp.FunctionInjectorTest.testInline15(FunctionInjectorTest.java:888) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FunctionInjectorTest#testInline16,FAIL,646678405,junit.framework.AssertionFailedError: Expected: function foo(a){return a+a}var a$$inline_0=function(){};a$$inline_0+a$$inline_0 Result: function foo(a){return a+a}var a$$inline_1=function(){};a$$inline_1+a$$inline_1 Node tree inequality: Tree1: SCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ] FUNCTION foo 1 [source_file:  [testcode] ] NAME foo 1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] RETURN 1 [source_file:  [testcode] ] ADD 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] EMPTY 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ] FUNCTION  1 [source_file:  [testcode] ] NAME  1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] ADD 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ]   Tree2: SCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code] FUNCTION foo 1 [source_file: code] NAME foo 1 [source_file: code] LP 1 [source_file: code] NAME a 1 [source_file: code] BLOCK 1 [source_file: code] RETURN 1 [source_file: code] ADD 1 [source_file: code] NAME a 1 [source_file: code] NAME a 1 [source_file: code] EMPTY 1 [source_file: code] BLOCK 1 [source_file: code] VAR 1 [source_file: code] NAME a$$inline_1 1 [source_file: code] FUNCTION  1 [source_file: code] NAME  1 [source_file: code] LP 1 [source_file: code] BLOCK 1 [source_file: code] EXPR_RESULT 1 [source_file: code] ADD 1 [source_file: code] NAME a$$inline_1 1 [source_file: code] NAME a$$inline_1 1 [source_file: code]   Subtree1: NAME a$$inline_0 1 [source_file:  [testcode] ] FUNCTION  1 [source_file:  [testcode] ] NAME  1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ]   Subtree2: NAME a$$inline_1 1 [source_file: code] FUNCTION  1 [source_file: code] NAME  1 [source_file: code] LP 1 [source_file: code] BLOCK 1 [source_file: code]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479) at com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393) at com.google.javascript.jscomp.FunctionInjectorTest.testInline16(FunctionInjectorTest.java:899) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FunctionInjectorTest#testInline17,FAIL,579540842,junit.framework.AssertionFailedError: Expected: function foo(a){return true}var a$$inline_0=goo();true Result: function foo(a){return true}var a$$inline_1=goo();true Node tree inequality: Tree1: SCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ] FUNCTION foo 1 [source_file:  [testcode] ] NAME foo 1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] RETURN 1 [source_file:  [testcode] ] TRUE 1 [source_file:  [testcode] ] EMPTY 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ] CALL 1 [free_call: 1] [source_file:  [testcode] ] NAME goo 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] TRUE 1 [source_file:  [testcode] ]   Tree2: SCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code] FUNCTION foo 1 [source_file: code] NAME foo 1 [source_file: code] LP 1 [source_file: code] NAME a 1 [source_file: code] BLOCK 1 [source_file: code] RETURN 1 [source_file: code] TRUE 1 [source_file: code] EMPTY 1 [source_file: code] BLOCK 1 [source_file: code] VAR 1 [source_file: code] NAME a$$inline_1 1 [source_file: code] CALL 1 [free_call: 1] [source_file: code] NAME goo 1 [source_file: code] EXPR_RESULT 1 [source_file: code] TRUE 1 [source_file: code]   Subtree1: NAME a$$inline_0 1 [source_file:  [testcode] ] CALL 1 [free_call: 1] [source_file:  [testcode] ] NAME goo 1 [source_file:  [testcode] ]   Subtree2: NAME a$$inline_1 1 [source_file: code] CALL 1 [free_call: 1] [source_file: code] NAME goo 1 [source_file: code]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479) at com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393) at com.google.javascript.jscomp.FunctionInjectorTest.testInline17(FunctionInjectorTest.java:910) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FunctionInjectorTest#testInline18,FAIL,708823933,junit.framework.AssertionFailedError: Expected: function foo(a){var b;return a}function x(){var a$$inline_0=goo();var b$$inline_1;a$$inline_0} Result: function foo(a){var b;return a}function x(){var a$$inline_2=goo();var b$$inline_3;a$$inline_2} Node tree inequality: Tree1: SCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ] FUNCTION foo 1 [source_file:  [testcode] ] NAME foo 1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME b 1 [source_file:  [testcode] ] RETURN 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] EMPTY 1 [source_file:  [testcode] ] FUNCTION x 1 [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ] CALL 1 [free_call: 1] [source_file:  [testcode] ] NAME goo 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME b$$inline_1 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ]   Tree2: SCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code] FUNCTION foo 1 [source_file: code] NAME foo 1 [source_file: code] LP 1 [source_file: code] NAME a 1 [source_file: code] BLOCK 1 [source_file: code] VAR 1 [source_file: code] NAME b 1 [source_file: code] RETURN 1 [source_file: code] NAME a 1 [source_file: code] EMPTY 1 [source_file: code] FUNCTION x 1 [source_file: code] NAME x 1 [source_file: code] LP 1 [source_file: code] BLOCK 1 [source_file: code] BLOCK 1 [source_file: code] VAR 1 [source_file: code] NAME a$$inline_2 1 [source_file: code] CALL 1 [free_call: 1] [source_file: code] NAME goo 1 [source_file: code] VAR 1 [source_file: code] NAME b$$inline_3 1 [source_file: code] EXPR_RESULT 1 [source_file: code] NAME a$$inline_2 1 [source_file: code]   Subtree1: NAME a$$inline_0 1 [source_file:  [testcode] ] CALL 1 [free_call: 1] [source_file:  [testcode] ] NAME goo 1 [source_file:  [testcode] ]   Subtree2: NAME a$$inline_2 1 [source_file: code] CALL 1 [free_call: 1] [source_file: code] NAME goo 1 [source_file: code]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479) at com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393) at com.google.javascript.jscomp.FunctionInjectorTest.testInline18(FunctionInjectorTest.java:919) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FunctionInjectorTest#testInline19,FAIL,532231168,junit.framework.AssertionFailedError: Expected: var x=1;var y=2;function foo(a,b){x=b;y=a}function bar(){var a$$inline_0=x;x=y;y=a$$inline_0} Result: var x=1;var y=2;function foo(a,b){x=b;y=a}function bar(){var a$$inline_2=x;x=y;y=a$$inline_2} Node tree inequality: Tree1: SCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ] NUMBER 1.0 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME y 1 [source_file:  [testcode] ] NUMBER 2.0 1 [source_file:  [testcode] ] FUNCTION foo 1 [source_file:  [testcode] ] NAME foo 1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] NAME b 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] ASSIGN 1 [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ] NAME b 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] ASSIGN 1 [source_file:  [testcode] ] NAME y 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] EMPTY 1 [source_file:  [testcode] ] FUNCTION bar 1 [source_file:  [testcode] ] NAME bar 1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] ASSIGN 1 [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ] NAME y 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] ASSIGN 1 [source_file:  [testcode] ] NAME y 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ]   Tree2: SCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code] VAR 1 [source_file: code] NAME x 1 [source_file: code] NUMBER 1.0 1 [source_file: code] VAR 1 [source_file: code] NAME y 1 [source_file: code] NUMBER 2.0 1 [source_file: code] FUNCTION foo 1 [source_file: code] NAME foo 1 [source_file: code] LP 1 [source_file: code] NAME a 1 [source_file: code] NAME b 1 [source_file: code] BLOCK 1 [source_file: code] EXPR_RESULT 1 [source_file: code] ASSIGN 1 [source_file: code] NAME x 1 [source_file: code] NAME b 1 [source_file: code] EXPR_RESULT 1 [source_file: code] ASSIGN 1 [source_file: code] NAME y 1 [source_file: code] NAME a 1 [source_file: code] EMPTY 1 [source_file: code] FUNCTION bar 1 [source_file: code] NAME bar 1 [source_file: code] LP 1 [source_file: code] BLOCK 1 [source_file: code] BLOCK 1 [source_file: code] VAR 1 [source_file: code] NAME a$$inline_2 1 [source_file: code] NAME x 1 [source_file: code] EXPR_RESULT 1 [source_file: code] ASSIGN 1 [source_file: code] NAME x 1 [source_file: code] NAME y 1 [source_file: code] EXPR_RESULT 1 [source_file: code] ASSIGN 1 [source_file: code] NAME y 1 [source_file: code] NAME a$$inline_2 1 [source_file: code]   Subtree1: NAME a$$inline_0 1 [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ]   Subtree2: NAME a$$inline_2 1 [source_file: code] NAME x 1 [source_file: code]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479) at com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393) at com.google.javascript.jscomp.FunctionInjectorTest.testInline19(FunctionInjectorTest.java:930) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FunctionInjectorTest#testInline19b,FAIL,906851657,junit.framework.AssertionFailedError: Expected: var x=1;var y=2;function foo(a,b){y=a;x=b}function bar(){var b$$inline_1=y;y=x;x=b$$inline_1} Result: var x=1;var y=2;function foo(a,b){y=a;x=b}function bar(){var b$$inline_3=y;y=x;x=b$$inline_3} Node tree inequality: Tree1: SCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ] NUMBER 1.0 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME y 1 [source_file:  [testcode] ] NUMBER 2.0 1 [source_file:  [testcode] ] FUNCTION foo 1 [source_file:  [testcode] ] NAME foo 1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] NAME b 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] ASSIGN 1 [source_file:  [testcode] ] NAME y 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] ASSIGN 1 [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ] NAME b 1 [source_file:  [testcode] ] EMPTY 1 [source_file:  [testcode] ] FUNCTION bar 1 [source_file:  [testcode] ] NAME bar 1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME b$$inline_1 1 [source_file:  [testcode] ] NAME y 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] ASSIGN 1 [source_file:  [testcode] ] NAME y 1 [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] ASSIGN 1 [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ] NAME b$$inline_1 1 [source_file:  [testcode] ]   Tree2: SCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code] VAR 1 [source_file: code] NAME x 1 [source_file: code] NUMBER 1.0 1 [source_file: code] VAR 1 [source_file: code] NAME y 1 [source_file: code] NUMBER 2.0 1 [source_file: code] FUNCTION foo 1 [source_file: code] NAME foo 1 [source_file: code] LP 1 [source_file: code] NAME a 1 [source_file: code] NAME b 1 [source_file: code] BLOCK 1 [source_file: code] EXPR_RESULT 1 [source_file: code] ASSIGN 1 [source_file: code] NAME y 1 [source_file: code] NAME a 1 [source_file: code] EXPR_RESULT 1 [source_file: code] ASSIGN 1 [source_file: code] NAME x 1 [source_file: code] NAME b 1 [source_file: code] EMPTY 1 [source_file: code] FUNCTION bar 1 [source_file: code] NAME bar 1 [source_file: code] LP 1 [source_file: code] BLOCK 1 [source_file: code] BLOCK 1 [source_file: code] VAR 1 [source_file: code] NAME b$$inline_3 1 [source_file: code] NAME y 1 [source_file: code] EXPR_RESULT 1 [source_file: code] ASSIGN 1 [source_file: code] NAME y 1 [source_file: code] NAME x 1 [source_file: code] EXPR_RESULT 1 [source_file: code] ASSIGN 1 [source_file: code] NAME x 1 [source_file: code] NAME b$$inline_3 1 [source_file: code]   Subtree1: NAME b$$inline_1 1 [source_file:  [testcode] ] NAME y 1 [source_file:  [testcode] ]   Subtree2: NAME b$$inline_3 1 [source_file: code] NAME y 1 [source_file: code]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479) at com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:536) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:483) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393) at com.google.javascript.jscomp.FunctionInjectorTest.testInline19b(FunctionInjectorTest.java:945) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FunctionInjectorTest#testInlineIntoLoop,FAIL,482611008,junit.framework.AssertionFailedError: Expected: function foo(a){var b;return a}for(;1;){var b$$inline_1=void 0;1} Result: function foo(a){var b;return a}for(;1;){var b$$inline_3=void 0;1} Node tree inequality: Tree1: SCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ] FUNCTION foo 1 [source_file:  [testcode] ] NAME foo 1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME b 1 [source_file:  [testcode] ] RETURN 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] EMPTY 1 [source_file:  [testcode] ] FOR 1 [source_file:  [testcode] ] EMPTY 1 [source_file:  [testcode] ] NUMBER 1.0 1 [source_file:  [testcode] ] EMPTY 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME b$$inline_1 1 [source_file:  [testcode] ] VOID 1 [source_file:  [testcode] ] NUMBER 0.0 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] NUMBER 1.0 1 [source_file:  [testcode] ]   Tree2: SCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code] FUNCTION foo 1 [source_file: code] NAME foo 1 [source_file: code] LP 1 [source_file: code] NAME a 1 [source_file: code] BLOCK 1 [source_file: code] VAR 1 [source_file: code] NAME b 1 [source_file: code] RETURN 1 [source_file: code] NAME a 1 [source_file: code] EMPTY 1 [source_file: code] FOR 1 [source_file: code] EMPTY 1 [source_file: code] NUMBER 1.0 1 [source_file: code] EMPTY 1 [source_file: code] BLOCK 1 [source_file: code] BLOCK 1 [source_file: code] VAR 1 [source_file: code] NAME b$$inline_3 1 [source_file: code] VOID 1 [source_file: code] NUMBER 0.0 1 [source_file: code] EXPR_RESULT 1 [source_file: code] NUMBER 1.0 1 [source_file: code]   Subtree1: NAME b$$inline_1 1 [source_file:  [testcode] ] VOID 1 [source_file:  [testcode] ] NUMBER 0.0 1 [source_file:  [testcode] ]   Subtree2: NAME b$$inline_3 1 [source_file: code] VOID 1 [source_file: code] NUMBER 0.0 1 [source_file: code]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479) at com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393) at com.google.javascript.jscomp.FunctionInjectorTest.testInlineIntoLoop(FunctionInjectorTest.java:960) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FunctionInjectorTest#testInlineFunctionWithInnerFunction1,PASS,478491798,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineFunctionWithInnerFunction2,PASS,934665446,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineFunctionWithInnerFunction3,PASS,1036626595,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineFunctionWithInnerFunction4,PASS,635066563,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineFunctionWithInnerFunction5,FAIL,426678962,junit.framework.AssertionFailedError: Expected: function foo(){function x(){var a;return true}return x}var x$$inline_0=function(){var a$$inline_1;return true};x$$inline_0 Result: function foo(){function x(){var a;return true}return x}var x$$inline_1=function(){var a$$inline_2;return true};x$$inline_1 Node tree inequality: Tree1: SCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ] FUNCTION foo 1 [source_file:  [testcode] ] NAME foo 1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] FUNCTION x 1 [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] RETURN 1 [source_file:  [testcode] ] TRUE 1 [source_file:  [testcode] ] RETURN 1 [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ] EMPTY 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME x$$inline_0 1 [source_file:  [testcode] ] FUNCTION  1 [source_file:  [testcode] ] NAME  1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME a$$inline_1 1 [source_file:  [testcode] ] RETURN 1 [source_file:  [testcode] ] TRUE 1 [source_file:  [testcode] ] EXPR_RESULT 1 [source_file:  [testcode] ] NAME x$$inline_0 1 [source_file:  [testcode] ]   Tree2: SCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code] FUNCTION foo 1 [source_file: code] NAME foo 1 [source_file: code] LP 1 [source_file: code] BLOCK 1 [source_file: code] FUNCTION x 1 [source_file: code] NAME x 1 [source_file: code] LP 1 [source_file: code] BLOCK 1 [source_file: code] VAR 1 [source_file: code] NAME a 1 [source_file: code] RETURN 1 [source_file: code] TRUE 1 [source_file: code] RETURN 1 [source_file: code] NAME x 1 [source_file: code] EMPTY 1 [source_file: code] BLOCK 1 [source_file: code] VAR 1 [source_file: code] NAME x$$inline_1 1 [source_file: code] FUNCTION  1 [source_file: code] NAME  1 [source_file: code] LP 1 [source_file: code] BLOCK 1 [source_file: code] VAR 1 [source_file: code] NAME a$$inline_2 1 [source_file: code] RETURN 1 [source_file: code] TRUE 1 [source_file: code] EXPR_RESULT 1 [source_file: code] NAME x$$inline_1 1 [source_file: code]   Subtree1: NAME x$$inline_0 1 [source_file:  [testcode] ] FUNCTION  1 [source_file:  [testcode] ] NAME  1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME a$$inline_1 1 [source_file:  [testcode] ] RETURN 1 [source_file:  [testcode] ] TRUE 1 [source_file:  [testcode] ]   Subtree2: NAME x$$inline_1 1 [source_file: code] FUNCTION  1 [source_file: code] NAME  1 [source_file: code] LP 1 [source_file: code] BLOCK 1 [source_file: code] VAR 1 [source_file: code] NAME a$$inline_2 1 [source_file: code] RETURN 1 [source_file: code] TRUE 1 [source_file: code]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479) at com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393) at com.google.javascript.jscomp.FunctionInjectorTest.testInlineFunctionWithInnerFunction5(FunctionInjectorTest.java:1025) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
com.google.javascript.jscomp.FunctionInjectorTest#testInlineReferenceInExpression1,PASS,289103769,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineReferenceInExpression2,PASS,431087651,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineReferenceInExpression3,PASS,319772693,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineReferenceInExpression4,PASS,523015931,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineReferenceInExpression5,PASS,434261654,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineReferenceInExpression6,PASS,732387672,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineReferenceInExpression7,PASS,489396238,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineReferenceInExpression8,PASS,401103778,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineReferenceInExpression9,PASS,485572536,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineReferenceInExpression11,PASS,524915097,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineReferenceInExpression12,PASS,361386624,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineReferenceInExpression13,PASS,571185216,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineReferenceInExpression14,PASS,744297917,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineReferenceInExpression15,PASS,695504918,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineReferenceInExpression16,PASS,980683987,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineReferenceInExpression17,PASS,1235246454,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineWithinCalls1,PASS,457304297,
com.google.javascript.jscomp.FunctionInjectorTest#testInlineAssignmentToConstant,PASS,523478591,
com.google.javascript.jscomp.FunctionInjectorTest#testBug1897706,FAIL,621361841,junit.framework.AssertionFailedError: Expected: function foo(a){}var a$$inline_0=x() Result: function foo(a){}var a$$inline_1=x() Node tree inequality: Tree1: SCRIPT 1 [synthetic: 1] [source_file:  [testcode] ] [input_id: InputId:  [testcode] ] FUNCTION foo 1 [source_file:  [testcode] ] NAME foo 1 [source_file:  [testcode] ] LP 1 [source_file:  [testcode] ] NAME a 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] EMPTY 1 [source_file:  [testcode] ] BLOCK 1 [source_file:  [testcode] ] VAR 1 [source_file:  [testcode] ] NAME a$$inline_0 1 [source_file:  [testcode] ] CALL 1 [free_call: 1] [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ]   Tree2: SCRIPT 1 [synthetic: 1] [source_file: code] [input_id: InputId: code] FUNCTION foo 1 [source_file: code] NAME foo 1 [source_file: code] LP 1 [source_file: code] NAME a 1 [source_file: code] BLOCK 1 [source_file: code] EMPTY 1 [source_file: code] BLOCK 1 [source_file: code] VAR 1 [source_file: code] NAME a$$inline_1 1 [source_file: code] CALL 1 [free_call: 1] [source_file: code] NAME x 1 [source_file: code]   Subtree1: NAME a$$inline_0 1 [source_file:  [testcode] ] CALL 1 [free_call: 1] [source_file:  [testcode] ] NAME x 1 [source_file:  [testcode] ]   Subtree2: NAME a$$inline_1 1 [source_file: code] CALL 1 [free_call: 1] [source_file: code] NAME x 1 [source_file: code]  at junit.framework.Assert.fail(Assert.java:47) at junit.framework.Assert.assertTrue(Assert.java:20) at junit.framework.Assert.assertNull(Assert.java:233) at com.google.javascript.jscomp.FunctionInjectorTest$2.call(FunctionInjectorTest.java:1479) at com.google.javascript.jscomp.FunctionInjectorTest$TestCallback.visit(FunctionInjectorTest.java:1524) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:498) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:491) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:277) at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:455) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1488) at com.google.javascript.jscomp.FunctionInjectorTest.helperInlineReferenceToFunction(FunctionInjectorTest.java:1393) at com.google.javascript.jscomp.FunctionInjectorTest.testBug1897706(FunctionInjectorTest.java:1315) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at junit.framework.TestCase.runTest(TestCase.java:168) at junit.framework.TestCase.runBare(TestCase.java:134) at junit.framework.TestResult$1.protect(TestResult.java:110) at junit.framework.TestResult.runProtected(TestResult.java:128) at junit.framework.TestResult.run(TestResult.java:113) at junit.framework.TestCase.run(TestCase.java:124) at junit.framework.TestSuite.runTest(TestSuite.java:243) at junit.framework.TestSuite.run(TestSuite.java:238) at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) at org.junit.runner.JUnitCore.run(JUnitCore.java:157) at org.junit.runner.JUnitCore.run(JUnitCore.java:136) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:67) at com.gzoltar.internal.core.test.junit.JUnitTestTask.call(JUnitTestTask.java:27) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.lang.Thread.run(Thread.java:750)
