bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	10	None	add
2	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  parent  =  parent.getFirstChild();  renamer.addDeclaredName(parent.getString());  [CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  parent  =  parent.getFirstChild();  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  parent  =  parent.getFirstChild();  renamer.addDeclaredName(parent.getString());	  timeout    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	10	None	add
3	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  parent  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  parent  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  parent  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());	  timeout    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	10	None	add
4	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	10	None	add
5	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(parent.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(parent.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	10	None	add
6	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  parent  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  parent  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  parent  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	10	None	add
7	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(newName.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(newName.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(newName.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	10	None	add
8	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  parent  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  [CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  parent  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  parent  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());	  timeout    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	10	None	add
9	[BUG]  [BUGGY]  NameNode  nameNode  =  parent.getFirstChild();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  NameNode  nameNode  =  parent.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	NameNode  nameNode  =  parent.getFirstChild();	          NameNode    nameNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
10	[BUG]  [BUGGY]  NameNode  nameNode  =  n.getLastChild();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  NameNode  nameNode  =  n.getLastChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	NameNode  nameNode  =  n.getLastChild();	          NameNode    nameNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
11	[BUG]  [BUGGY]  NameNode  nameNode  =  n,  parent.getFirstChild();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  NameNode  nameNode  =  n,  parent.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	NameNode  nameNode  =  n,  parent.getFirstChild();	          NameNode    nameNode    =    n.getFirstChild();    	non-compiled	[CE]  ';'  expected	44	None	replace
12	[BUG]  [BUGGY]  NameNode  nameNode  =  node.getFirstChild();  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  NameNode  nameNode  =  node.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	NameNode  nameNode  =  node.getFirstChild();	          NameNode    nameNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
13	[BUG]  [BUGGY]  NameNode  nameNode  =  null.getFirstChild();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  NameNode  nameNode  =  null.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	NameNode  nameNode  =  null.getFirstChild();	          NameNode    nameNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
14	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  nameNode  =  parent.getFirstChild();  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  nameNode  =  parent.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    Node  nameNode  =  parent.getFirstChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	15	None	add
15	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  parent  =  parent.getFirstChild();  [CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  parent  =  parent.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    Node  parent  =  parent.getFirstChild();	  timeout    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	15	None	add
16	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  nameNode  =  n.getFirstChild();  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  nameNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    Node  nameNode  =  n.getFirstChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	15	None	add
17	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  nameNode  =  parent.getLastChild();  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  nameNode  =  parent.getLastChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    Node  nameNode  =  parent.getLastChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	15	None	add
18	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  parent  =  n.getFirstChild();  [CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  parent  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    Node  parent  =  n.getFirstChild();	  timeout    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	15	None	add
19	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  renamer  =  parent.getFirstChild();  [CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  renamer  =  parent.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    Node  renamer  =  parent.getFirstChild();	  timeout    	non-compiled	[CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	15	None	add
20	[BUG]  [BUGGY]  timeout  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  childNode  =  parent.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Node    nameNode    =    parent.getFirstChild();    Node  childNode  =  parent.getFirstChild();	  timeout    	compilable	timeout	15	1	add
21	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  childNode  =  parent.getFirstChild();  timeout  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  childNode  =  parent.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    Node  childNode  =  parent.getFirstChild();	  timeout    	compilable	timeout	15	1	add
22	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getNext();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	Node  nameNode  =  n.getNext();	          Node    nameNode    =    n.getFirstChild();    timeout    	compilable	timeout	9	1	replace
23	[BUG]  [BUGGY]  Node  nameNode  =  n.getNext();  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getNext();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  n.getNext();	          Node    nameNode    =    n.getFirstChild();    timeout    	compilable	timeout	9	1	replace
24	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  parent.getLastChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	Node  nameNode  =  parent.getLastChild();	          Node    nameNode    =    n.getFirstChild();    timeout    	compilable	timeout	9	1	replace
25	[BUG]  [BUGGY]  Node  nameNode  =  parent.getLastChild();  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  parent.getLastChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  parent.getLastChild();	          Node    nameNode    =    n.getFirstChild();    timeout    	compilable	timeout	9	1	replace
26	[BUG]  [BUGGY]  Node  nameNode  =  node.getFirstChild();  [CE]  cannot  find  symbol  node  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  node.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  node.getFirstChild();	          Node    nameNode    =    n.getFirstChild();    timeout    	non-compiled	[CE]  cannot  find  symbol  node	9	None	replace
27	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }	  timeout    	compilable	timeout	57	1	add
28	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }	  timeout    	compilable	timeout	57	1	add
29	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    if(NodeUtil.isDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	57	None	add
30	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  If(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  If(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    If(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }	  timeout    	non-compiled	[CE]  ';'  expected	57	None	add
31	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }	  timeout    	compilable	timeout	57	1	add
32	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }	  timeout    	compilable	timeout	57	1	add
33	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isConstructorDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isConstructorDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    if(NodeUtil.isConstructorDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	57	None	add
34	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isExprDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isExprDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    if(NodeUtil.isExprDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	57	None	add
35	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isNameDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isNameDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    if(NodeUtil.isNameDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	57	None	add
36	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString(),  parent);  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString(),  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString(),  parent);	  renamer.addDeclaredName(nameNode.getString(),    parent);    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	23	None	replace
37	[BUG]  [BUGGY]  Renamer  renamer.addDeclaredName(n.getString(),  parent);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer.addDeclaredName(n.getString(),  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer.addDeclaredName(n.getString(),  parent);	  renamer.addDeclaredName(nameNode.getString(),    parent);    	non-compiled	[CE]  ';'  expected	23	None	replace
38	[BUG]  [BUGGY]  Node  parent  =  n.getFirstChild();  [CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  parent  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  parent  =  n.getFirstChild();	  renamer.addDeclaredName(parent.getString());    Node    parent    =    n.getFirstChild();    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	7	None	replace
39	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getString());  Node  parent  =  n.getFirstChild();  [CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getString());  Node  parent  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getString());  Node  parent  =  n.getFirstChild();	  renamer.addDeclaredName(parent.getString());    Node    parent    =    n.getFirstChild();    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	7	None	replace
40	[BUG]  [BUGGY]  parent.addDeclaredName(n.getString());  Node  parent  =  n.getFirstChild();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  parent.addDeclaredName(n.getString());  Node  parent  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	parent.addDeclaredName(n.getString());  Node  parent  =  n.getFirstChild();	  renamer.addDeclaredName(parent.getString());    Node    parent    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
41	[BUG]  [BUGGY]  n.addDeclaredName(parent.getString());  Node  parent  =  n.getFirstChild();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  n.addDeclaredName(parent.getString());  Node  parent  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	n.addDeclaredName(parent.getString());  Node  parent  =  n.getFirstChild();	  renamer.addDeclaredName(parent.getString());    Node    parent    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
42	[BUG]  [BUGGY]  renamer.addVarDeclaration(n,  parent.getString(),  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(n,  parent.getString(),  nameNode);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(n,  parent.getString(),  nameNode);	  renamer.addVarDeclaration(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol  nameNode	18	None	replace
43	[BUG]  [BUGGY]  renamer.addVarDeclaration(n,  nameNode.getString());  [CE]  cannot  find  symbol  nameNode  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(n,  nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(n,  nameNode.getString());	  renamer.addVarDeclaration(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol  nameNode	18	None	replace
44	[BUG]  [BUGGY]  renamer.addVarDeclaration(n,  n.getString());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(n,  n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(n,  n.getString());	  renamer.addVarDeclaration(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
45	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getString(),  n,  parent,  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getString(),  n,  parent,  nameNode);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getString(),  n,  parent,  nameNode);	  renamer.addDeclaredName(n.getString(),    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  nameNode	21	None	replace
46	[BUG]  [BUGGY]  renamer.addDeclaredName(nameNode.getString(),  n,  parent);  [CE]  cannot  find  symbol  nameNode  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(nameNode.getString(),  n,  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(nameNode.getString(),  n,  parent);	  renamer.addDeclaredName(n.getString(),    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  nameNode	21	None	replace
47	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getString(),  n,  parent,  rootRenamer);  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getString(),  n,  parent,  rootRenamer);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getString(),  n,  parent,  rootRenamer);	  renamer.addDeclaredName(n.getString(),    n,    parent);    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	21	None	replace
48	[BUG]  [BUGGY]  Renamer  renamer.addDeclaredVarName(n.getString());  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer.addDeclaredVarName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer.addDeclaredVarName(n.getString());	  renamer.addDeclaredVarName(nameNode.getString());    	non-compiled	[CE]  ';'  expected	30	None	replace
49	[BUG]  [BUGGY]  Renamer  renamer.addDeclaredName(n.getFirstChild());  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer.addDeclaredName(n.getFirstChild());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer.addDeclaredName(n.getFirstChild());	  renamer.addDeclaredName(nameNode.getFirstChild());    	non-compiled	[CE]  ';'  expected	40	None	replace
50	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getString(),  nameNode,  parent,  n);  [CE]  cannot  find  symbol  nameNode  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getString(),  nameNode,  parent,  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getString(),  nameNode,  parent,  n);	  renamer.addDeclaredName(n.getString(),    parent,    n);    	non-compiled	[CE]  cannot  find  symbol  nameNode	64	None	replace
51	[BUG]  [BUGGY]  renamer.addDeclaredName(nameNode.getString(),  parent,  n);  [CE]  cannot  find  symbol  nameNode  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(nameNode.getString(),  parent,  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(nameNode.getString(),  parent,  n);	  renamer.addDeclaredName(n.getString(),    parent,    n);    	non-compiled	[CE]  cannot  find  symbol  nameNode	64	None	replace
52	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n)||  NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	if(NodeUtil.isVarDeclaration(n)||  NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	5	1	replace
53	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n)||  NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n)||  NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n)||  NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	5	1	replace
54	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	5	1	replace
55	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	5	1	replace
56	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString()  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString()  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString()	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());    timeout    	non-compiled	[CE]  ')'  expected	5	None	replace
57	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n)||  NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	if(NodeUtil.isVarDeclaration(n)||  NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	5	1	replace
58	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n)||  NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n)||  NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n)||  NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	5	1	replace
59	[BUG]  [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  n.getLastChild();  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  n.getLastChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getLastChild();    Node  nameNode  =  n.getLastChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	12	None	add
60	[BUG]  [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  n  =  n.getLastChild();  [CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  n  =  n.getLastChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getLastChild();    Node  n  =  n.getLastChild();	  timeout    	non-compiled	[CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	12	None	add
61	[BUG]  [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  renamer  =  n.getLastChild();  [CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  renamer  =  n.getLastChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getLastChild();    Node  renamer  =  n.getLastChild();	  timeout    	non-compiled	[CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	12	None	add
62	[BUG]  [BUGGY]          Node  nameNode  =  n.getLastChild();  NameNode  nameNode  =  n.getLastChild();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getLastChild();  NameNode  nameNode  =  n.getLastChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getLastChild();    NameNode  nameNode  =  n.getLastChild();	  timeout    	non-compiled	[CE]  cannot  find  symbol	12	None	add
63	[BUG]  [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  parent.getLastChild();  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  parent.getLastChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getLastChild();    Node  nameNode  =  parent.getLastChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	12	None	add
64	[BUG]  [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  parent  =  n.getLastChild();  [CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  parent  =  n.getLastChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getLastChild();    Node  parent  =  n.getLastChild();	  timeout    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	12	None	add
65	[BUG]  [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  n.getFirstChild();  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getLastChild();    Node  nameNode  =  n.getFirstChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	12	None	add
66	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getFirstChild(),  n,  parent);  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getFirstChild(),  n,  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getFirstChild(),  n,  parent);	  renamer.addDeclaredName(n.getFirstChild(),    parent);    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	36	None	replace
67	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getFirstChild(),  n);  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getFirstChild(),  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getFirstChild(),  n);	  renamer.addDeclaredName(n.getFirstChild(),    parent);    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	36	None	replace
68	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getFirstChild(),  parent,  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getFirstChild(),  parent,  nameNode);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getFirstChild(),  parent,  nameNode);	  renamer.addDeclaredName(n.getFirstChild(),    parent);    	non-compiled	[CE]  cannot  find  symbol  nameNode	36	None	replace
69	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getFirstChild(),  nameNode,  parent);  [CE]  cannot  find  symbol  nameNode  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getFirstChild(),  nameNode,  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getFirstChild(),  nameNode,  parent);	  renamer.addDeclaredName(n.getFirstChild(),    parent);    	non-compiled	[CE]  cannot  find  symbol  nameNode	36	None	replace
70	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getFirstChild(),  parent,  n);  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getFirstChild(),  parent,  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getFirstChild(),  parent,  n);	  renamer.addDeclaredName(n.getFirstChild(),    parent);    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	36	None	replace
71	[BUG]  [BUGGY]  n.addDeclaredName(parent.getString());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  n.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	n.addDeclaredName(parent.getString());	  renamer.addDeclaredName(parent.getString());    namer.addDeclaredName(parent.getString());    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
72	[BUG]  [BUGGY]  Renamer  renamer.addDeclaredName(parent.getString());  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer.addDeclaredName(parent.getString());	  Renamer    renamer.addDeclaredName(n.getString());    	non-compiled	[CE]  ';'  expected	35	None	replace
73	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(n.getString());    Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	51	None	add
74	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  Node  parent  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  Node  parent  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(n.getString());    Node  parent  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	51	None	add
75	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  Node  parentNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(n.getString());    Node  parentNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	51	1	add
76	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  Node  parentNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  Node  parentNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(n.getString());    Node  parentNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	51	1	add
77	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  Node  nameNode  =  parent.getLastChild();  renamer.addDeclaredName(n.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  Node  nameNode  =  parent.getLastChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(n.getString());    Node  nameNode  =  parent.getLastChild();  renamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	51	None	add
78	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(n.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	51	None	add
79	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  Node  parent  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());  [CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  Node  parent  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(n.getString());    Node  parent  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	51	None	add
80	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  Node  nameNode  =  parent.getFirstChild();  RENamer.addDeclaredName(n.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  Node  nameNode  =  parent.getFirstChild();  RENamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(n.getString());    Node  nameNode  =  parent.getFirstChild();  RENamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	51	None	add
81	[BUG]  [BUGGY]  timeout  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  Node  parentNameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(n.getString());    Node  parentNameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	51	1	add
82	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  Node  parentNameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  timeout  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  Node  parentNameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(n.getString());    Node  parentNameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	51	1	add
83	[BUG]  [BUGGY]  parent.addDeclaredName(n.getString());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  parent.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	parent.addDeclaredName(n.getString());	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    else    {    Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.get    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
84	[BUG]  [BUGGY]  Node  n  =  parent.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  n  =  parent.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  n  =  parent.getFirstChild();	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    else    {    Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.get    	non-compiled	[CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	59	None	replace
85	[BUG]  [BUGGY]  parent.addDeclaredName(nameNode.getString());  [CE]  cannot  find  symbol  nameNode  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  parent.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	parent.addDeclaredName(nameNode.getString());	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    else    {    Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.get    	non-compiled	[CE]  cannot  find  symbol  nameNode	59	None	replace
86	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getLocalName());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getLocalName());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getLocalName());	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getLocalName());    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
87	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(parent.getLocalName());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(parent.getLocalName());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(parent.getLocalName());	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getLocalName());    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
88	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(n.getLocalName());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(n.getLocalName());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(n.getLocalName());	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getLocalName());    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
89	[BUG]  [BUGGY]  renamer.addDeclaredName(nameNode.getString());  renamer.addDeclaredName(parent.getLocalName());  [CE]  cannot  find  symbol  nameNode  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(nameNode.getString());  renamer.addDeclaredName(parent.getLocalName());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(nameNode.getString());  renamer.addDeclaredName(parent.getLocalName());	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getLocalName());    	non-compiled	[CE]  cannot  find  symbol  nameNode	61	None	replace
90	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  renamer.addDeclaredName(n.getFirstChild().getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(n.getFirstChild().getString());    renamer.addDeclaredName(n.getFirstChild().getString());	  timeout    	compilable	timeout	62	1	add
91	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  renamer.addDeclaredName(n.getFirstChild().getString());  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  renamer.addDeclaredName(n.getFirstChild().getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getFirstChild().getString());    renamer.addDeclaredName(n.getFirstChild().getString());	  timeout    	compilable	timeout	62	1	add
92	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  Renamer  renamer.addDeclaredName(n.getFirstChild().getString());  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  Renamer  renamer.addDeclaredName(n.getFirstChild().getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getFirstChild().getString());    Renamer  renamer.addDeclaredName(n.getFirstChild().getString());	  timeout    	non-compiled	[CE]  ';'  expected	62	None	add
93	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  renamer.addDeclaredName(n.getLastChild().getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(n.getFirstChild().getString());    renamer.addDeclaredName(n.getLastChild().getString());	  timeout    	compilable	timeout	62	1	add
94	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  renamer.addDeclaredName(n.getLastChild().getString());  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  renamer.addDeclaredName(n.getLastChild().getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getFirstChild().getString());    renamer.addDeclaredName(n.getLastChild().getString());	  timeout    	compilable	timeout	62	1	add
95	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  RENamer.addDeclaredName(n.getFirstChild().getString());  [CE]  cannot  find  symbol  RENamer  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  RENamer.addDeclaredName(n.getFirstChild().getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getFirstChild().getString());    RENamer.addDeclaredName(n.getFirstChild().getString());	  timeout    	non-compiled	[CE]  cannot  find  symbol  RENamer	62	None	add
96	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  Renamer.addDeclaredName(n.getFirstChild().getString());  [CE]  non-static  method  addDeclaredName(String)  cannot  be  referenced  from  a  static  context  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  Renamer.addDeclaredName(n.getFirstChild().getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getFirstChild().getString());    Renamer.addDeclaredName(n.getFirstChild().getString());	  timeout    	non-compiled	[CE]  non-static  method  addDeclaredName(String)  cannot  be  referenced  from  a  static  context	62	None	add
97	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  renamer.addDeclaredName(parent.getFirstChild().getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(n.getFirstChild().getString());    renamer.addDeclaredName(parent.getFirstChild().getString());	  timeout    	compilable	timeout	62	1	add
98	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  renamer.addDeclaredName(parent.getFirstChild().getString());  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  renamer.addDeclaredName(parent.getFirstChild().getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getFirstChild().getString());    renamer.addDeclaredName(parent.getFirstChild().getString());	  timeout    	compilable	timeout	62	1	add
99	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  renamer.addDeclaredName(n.getFirstChild().getLocalName());  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  renamer.addDeclaredName(n.getFirstChild().getLocalName());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getFirstChild().getString());    renamer.addDeclaredName(n.getFirstChild().getLocalName());	  timeout    	non-compiled	[CE]  cannot  find  symbol	62	None	add
100	[BUG]  [BUGGY]  renamer.addDeclaredVarName(parent.getString(),  n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredVarName(parent.getString(),  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(parent.getString(),  n);	  renamer.addDeclaredVarName(parent.getString());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
101	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());	          Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    timeout    	compilable	timeout	49	1	replace
102	[BUG]  [BUGGY]  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());	          Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    timeout    	compilable	timeout	49	1	replace
103	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());	          Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    timeout    	compilable	timeout	49	1	replace
104	[BUG]  [BUGGY]  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());	          Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    timeout    	compilable	timeout	49	1	replace
105	[BUG]  [BUGGY]  renamer.addVarDeclaration(nameNode.getString(),  n);  [CE]  cannot  find  symbol  nameNode  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(nameNode.getString(),  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(nameNode.getString(),  n);	  renamer.addVarDeclaration(n.getString(),    nameNode);    	non-compiled	[CE]  cannot  find  symbol  nameNode	20	None	replace
106	[BUG]  [BUGGY]  renamer.addDeclaredName(getName());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(getName());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(getName());	          renamer.addDeclaredName(getString());    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
107	[BUG]  [BUGGY]  nameNode  =  parent.getFirstChild();  [CE]  cannot  find  symbol  nameNode  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  nameNode  =  parent.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	nameNode  =  parent.getFirstChild();	          nameNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  nameNode	46	None	replace
108	[BUG]  [BUGGY]  nameNode  =  n.getLastChild();  [CE]  cannot  find  symbol  nameNode  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  nameNode  =  n.getLastChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	nameNode  =  n.getLastChild();	          nameNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  nameNode	46	None	replace
109	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString(),  n,  parent);  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString(),  n,  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString(),  n,  parent);	  renamer.addDeclaredName(n.getString(),    nameNode,    parent);    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	22	None	replace
110	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getString(),  parent,  parent);  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getString(),  parent,  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getString(),  parent,  parent);	  renamer.addDeclaredName(n.getString(),    nameNode,    parent);    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	22	None	replace
111	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getFirstChild(),  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getFirstChild(),  nameNode);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getFirstChild(),  nameNode);	  renamer.addDeclaredName(n.getFirstChild(),    nameNode);    	non-compiled	[CE]  cannot  find  symbol  nameNode	41	None	replace
112	[BUG]  [BUGGY]  renamer.addDeclaredVarName(nameNode.getString(),  n);  [CE]  cannot  find  symbol  nameNode  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredVarName(nameNode.getString(),  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(nameNode.getString(),  n);	  renamer.addDeclaredVarName(n.getString(),    nameNode);    	non-compiled	[CE]  cannot  find  symbol  nameNode	29	None	replace
113	[BUG]  [BUGGY]  Node  nameNode  =  node.getLastChild();  [CE]  cannot  find  symbol  node  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  node.getLastChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  node.getLastChild();	          Node    nameNode    =    n.getLastChild();    timeout    	non-compiled	[CE]  cannot  find  symbol  node	13	None	replace
114	[BUG]  [BUGGY]  Node  nameNode  =  parent.getFirstChild();  parent.addDeclaredName(nameNode.getString());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  parent.getFirstChild();  parent.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  parent.getFirstChild();  parent.addDeclaredName(nameNode.getString());	          Node    nameNode    =    n.getFirstChild();    parent.addDeclaredName(nameNode.getString());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
115	[BUG]  [BUGGY]  Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(nameNode,  n.getString());  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(nameNode,  n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(nameNode,  n.getString());	          Node    nameNode    =    n.getFirstChild();    parent.addDeclaredName(nameNode.getString());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
116	[BUG]  [BUGGY]  Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(nameNode,  renamer.getString());  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(nameNode,  renamer.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(nameNode,  renamer.getString());	          Node    nameNode    =    n.getFirstChild();    parent.addDeclaredName(nameNode.getString());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
117	[BUG]  [BUGGY]  Node  nameNode  =  parent.getFirstChild();  parent.addDeclaredName(n.getString());  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  parent.getFirstChild();  parent.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  parent.getFirstChild();  parent.addDeclaredName(n.getString());	          Node    nameNode    =    n.getFirstChild();    parent.addDeclaredName(nameNode.getString());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
118	[BUG]  [BUGGY]  Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(parent.getString());  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(parent.getString());	          Node    nameNode    =    n.getFirstChild();    parent.addDeclaredName(nameNode.getString());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
119	[BUG]  [BUGGY]  Node  n  =  parent.getLastChild();  renamer.addDeclaredName(n.getString());  [CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  n  =  parent.getLastChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  n  =  parent.getLastChild();  renamer.addDeclaredName(n.getString());	          Node    n    =    parent.getFirstChild();    renamer.addDeclaredName(n.getString());    	non-compiled	[CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	50	None	replace
120	[BUG]  [BUGGY]  Node  n  =  nameNode.getFirstChild();  renamer.addDeclaredName(n.getString());  [CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  n  =  nameNode.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  n  =  nameNode.getFirstChild();  renamer.addDeclaredName(n.getString());	          Node    n    =    parent.getFirstChild();    renamer.addDeclaredName(n.getString());    	non-compiled	[CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	50	None	replace
121	[BUG]  [BUGGY]  Node  n  =  parent.getFirstChild();  renamer.addDeclaredName(parent.getString());  [CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  n  =  parent.getFirstChild();  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  n  =  parent.getFirstChild();  renamer.addDeclaredName(parent.getString());	          Node    n    =    parent.getFirstChild();    renamer.addDeclaredName(n.getString());    	non-compiled	[CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	50	None	replace
122	[BUG]  [BUGGY]  Node  n  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString(),  n);  [CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  n  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString(),  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  n  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString(),  n);	          Node    n    =    parent.getFirstChild();    renamer.addDeclaredName(n.getString());    	non-compiled	[CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	50	None	replace
123	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString()  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString()  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString()	  renamer.addDeclaredName(parent.getString());    Renamer    renamer.addDeclaredName(parent.getString());    	non-compiled	[CE]  ')'  expected	3	None	replace
124	[BUG]  [BUGGY]  renamer.addDeclaredName(n,  parent.getFirstChild());  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n,  parent.getFirstChild());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n,  parent.getFirstChild());	  renamer.addDeclaredName(parent.getFirstChild());    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	37	None	replace
125	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getString());  Node  nameNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(n.getString());  Node  nameNode  =  n.getFirstChild();	  renamer.addDeclaredName(parent.getString());    Node    nameNode    =    n.getFirstChild();    timeout    	compilable	timeout	43	1	replace
126	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getString());  Node  nameNode  =  n.getFirstChild();  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getString());  Node  nameNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getString());  Node  nameNode  =  n.getFirstChild();	  renamer.addDeclaredName(parent.getString());    Node    nameNode    =    n.getFirstChild();    timeout    	compilable	timeout	43	1	replace
127	[BUG]  [BUGGY]  n.addDeclaredName(parent.getString());  Node  nameNode  =  n.getFirstChild();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  n.addDeclaredName(parent.getString());  Node  nameNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	n.addDeclaredName(parent.getString());  Node  nameNode  =  n.getFirstChild();	  renamer.addDeclaredName(parent.getString());    Node    nameNode    =    n.getFirstChild();    timeout    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
128	[BUG]  [BUGGY]  n.addDeclaredName(n.getString());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  n.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	n.addDeclaredName(n.getString());	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());    timeout    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
129	[BUG]  [BUGGY]  parent.addDeclaredName(parent.getString());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  parent.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	parent.addDeclaredName(parent.getString());	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    timeout    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
130	[BUG]  [BUGGY]  Renamer  renamer  =  parent.getVarDeclaration();  [CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer  =  parent.getVarDeclaration();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer  =  parent.getVarDeclaration();	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    timeout    	non-compiled	[CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	56	None	replace
131	[BUG]  [BUGGY]  ernel.addDeclaredName(parent.getString());  [CE]  cannot  find  symbol  ernel  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  ernel.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	ernel.addDeclaredName(parent.getString());	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    timeout    	non-compiled	[CE]  cannot  find  symbol  ernel	56	None	replace
132	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  timeout    	compilable	timeout	55	1	add
133	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  timeout    	compilable	timeout	55	1	add
134	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  if(NodeUtil.isDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  if(NodeUtil.isDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    if(NodeUtil.isDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	55	None	add
135	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  If(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  If(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    If(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  timeout    	non-compiled	[CE]  ';'  expected	55	None	add
136	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  timeout    	compilable	timeout	55	1	add
137	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  timeout    	compilable	timeout	55	1	add
138	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  if(NodeUtil.isExprDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  if(NodeUtil.isExprDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    if(NodeUtil.isExprDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	55	None	add
139	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  if(NodeUtil.isNameDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  if(NodeUtil.isNameDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    if(NodeUtil.isNameDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	55	None	add
140	[BUG]  [BUGGY]  renamer.addDeclaredVarName(n,  parent.getString(),  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredVarName(n,  parent.getString(),  nameNode);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(n,  parent.getString(),  nameNode);	  renamer.addDeclaredVarName(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol  nameNode	28	None	replace
141	[BUG]  [BUGGY]  renamer.addDeclaredVarName(n,  nameNode.getString());  [CE]  cannot  find  symbol  nameNode  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredVarName(n,  nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(n,  nameNode.getString());	  renamer.addDeclaredVarName(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol  nameNode	28	None	replace
142	[BUG]  [BUGGY]  renamer.addDeclaredVarName(n,  n.getString());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredVarName(n,  n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(n,  n.getString());	  renamer.addDeclaredVarName(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
143	[BUG]  [BUGGY]  renamer.addDeclaredVarName(parent,  n.getString());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredVarName(parent,  n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(parent,  n.getString());	  renamer.addDeclaredVarName(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
144	[BUG]  [BUGGY]  renamer.addDeclaredVarName(n,  parent.getString(),  n);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredVarName(n,  parent.getString(),  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(n,  parent.getString(),  n);	  renamer.addDeclaredVarName(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
145	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(n.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	4	1	add
146	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(n.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	4	1	add
147	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(n.getString());    if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }	  timeout    	compilable	timeout	4	1	add
148	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(n.getString());    if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }	  timeout    	compilable	timeout	4	1	add
149	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  if(NodeUtil.isVarDeclaration(parent))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(n.getString());    if(NodeUtil.isVarDeclaration(parent))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }	  timeout    	compilable	timeout	4	1	add
150	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  if(NodeUtil.isVarDeclaration(parent))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  if(NodeUtil.isVarDeclaration(parent))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(n.getString());    if(NodeUtil.isVarDeclaration(parent))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }	  timeout    	compilable	timeout	4	1	add
151	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  Renamer  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  Renamer  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(n.getString());    Renamer  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  ';'  expected	4	None	add
152	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  n.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  n.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(n.getString());    n.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  cannot  find  symbol	4	None	add
153	[BUG]  [BUGGY]  timeout  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(n.getString());    if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	4	1	add
154	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(n.getString());    if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	timeout	4	1	add
155	[BUG]  [BUGGY]  renamer.addVarDeclaration(n.getString(),  parent,  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(n.getString(),  parent,  nameNode);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(n.getString(),  parent,  nameNode);	  renamer.addVarDeclaration(n.getString(),    parent);    	non-compiled	[CE]  cannot  find  symbol  nameNode	19	None	replace
156	[BUG]  [BUGGY]  renamer.addVarDeclaration(n.getString(),  n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(n.getString(),  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(n.getString(),  n);	  renamer.addVarDeclaration(n.getString(),    parent);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
157	[BUG]  [BUGGY]  renamer.addVarDeclaration(n,  nameNode.getString(),  parent);  [CE]  cannot  find  symbol  nameNode  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(n,  nameNode.getString(),  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(n,  nameNode.getString(),  parent);	  renamer.addVarDeclaration(n.getString(),    parent);    	non-compiled	[CE]  cannot  find  symbol  nameNode	19	None	replace
158	[BUG]  [BUGGY]  renamer.addVarDeclaration(n,  n.getString(),  parent);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(n,  n.getString(),  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(n,  n.getString(),  parent);	  renamer.addVarDeclaration(n.getString(),    parent);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
159	[BUG]  [BUGGY]  renamer.addVarDeclaration(n.getString(),  nameNode,  parent);  [CE]  cannot  find  symbol  nameNode  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(n.getString(),  nameNode,  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(n.getString(),  nameNode,  parent);	  renamer.addVarDeclaration(n.getString(),    parent);    	non-compiled	[CE]  cannot  find  symbol  nameNode	19	None	replace
160	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());	  timeout    	compilable	timeout	1	1	add
161	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());	  timeout    	compilable	timeout	1	1	add
162	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(parent.getString());	  timeout    	compilable	timeout	1	1	add
163	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(parent.getString());  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(parent.getString());	  timeout    	compilable	timeout	1	1	add
164	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  Renamer  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  Renamer  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(parent.getString());    Renamer  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
165	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	1	1	add
166	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(n.getString());  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	1	1	add
167	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  n.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  n.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(parent.getString());    n.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
168	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  nameNode  =  n.getFirstChild();  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  nameNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    Node  nameNode  =  n.getFirstChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	8	None	add
169	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  nameNode  =  n.getLastChild();  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  nameNode  =  n.getLastChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    Node  nameNode  =  n.getLastChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	8	None	add
170	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  n  =  n.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  n  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    Node  n  =  n.getFirstChild();	  timeout    	non-compiled	[CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	8	None	add
171	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  renamer  =  n.getFirstChild();  [CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  renamer  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    Node  renamer  =  n.getFirstChild();	  timeout    	non-compiled	[CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	8	None	add
172	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  nameNode  =  parent.getFirstChild();  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  nameNode  =  parent.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    Node  nameNode  =  parent.getFirstChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	8	None	add
173	[BUG]  [BUGGY]  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  childNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Node    nameNode    =    n.getFirstChild();    Node  childNode  =  n.getFirstChild();	  timeout    	compilable	timeout	8	1	add
174	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  childNode  =  n.getFirstChild();  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  childNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    Node  childNode  =  n.getFirstChild();	  timeout    	compilable	timeout	8	1	add
175	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  parent  =  n.getFirstChild();  [CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  parent  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    Node  parent  =  n.getFirstChild();	  timeout    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	8	None	add
176	[BUG]  [BUGGY]  renamer.addDeclaredVarName(n.getString(),  parent,  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredVarName(n.getString(),  parent,  nameNode);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(n.getString(),  parent,  nameNode);	  renamer.addDeclaredVarName(n.getString(),    parent);    	non-compiled	[CE]  cannot  find  symbol  nameNode	26	None	replace
177	[BUG]  [BUGGY]  renamer.addDeclaredVarName(n.getString(),  n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredVarName(n.getString(),  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(n.getString(),  n);	  renamer.addDeclaredVarName(n.getString(),    parent);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
178	[BUG]  [BUGGY]  renamer.addDeclaredVarName(nameNode.getString(),  parent);  [CE]  cannot  find  symbol  nameNode  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredVarName(nameNode.getString(),  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(nameNode.getString(),  parent);	  renamer.addDeclaredVarName(n.getString(),    parent);    	non-compiled	[CE]  cannot  find  symbol  nameNode	26	None	replace
179	[BUG]  [BUGGY]  Renamer  renamer.addVarDeclaration(n.getString(),  parent);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer.addVarDeclaration(n.getString(),  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer.addVarDeclaration(n.getString(),  parent);	  renamer.addVarDeclaration(parent.getString(),    n);    	non-compiled	[CE]  ';'  expected	33	None	replace
180	[BUG]  [BUGGY]  Renamer  renamer  =  parent.addVarDeclaration(n.getString(),  parent);  [CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer  =  parent.addVarDeclaration(n.getString(),  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer  =  parent.addVarDeclaration(n.getString(),  parent);	  renamer.addVarDeclaration(parent.getString(),    n);    	non-compiled	[CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	33	None	replace
181	[BUG]  [BUGGY]  renamer.addVarDeclaration(parent.getString(),  n,  parent);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(parent.getString(),  n,  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(parent.getString(),  n,  parent);	  renamer.addVarDeclaration(parent.getString(),    n);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
182	[BUG]  [BUGGY]  renamer.addVarDeclaration(parent.getString(),  n,  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(parent.getString(),  n,  nameNode);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(parent.getString(),  n,  nameNode);	  renamer.addVarDeclaration(parent.getString(),    n);    	non-compiled	[CE]  cannot  find  symbol  nameNode	33	None	replace
183	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  Node  n  =  n.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  Node  n  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(parent.getString());  Node  n  =  n.getFirstChild();	  timeout    	non-compiled	[CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	42	None	add
184	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  Node  nameNode  =  n.getFirstChild();  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  Node  nameNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(parent.getString());  Node  nameNode  =  n.getFirstChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	42	None	add
185	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  Node  parent  =  n.getFirstChild();  [CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  Node  parent  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(parent.getString());  Node  parent  =  n.getFirstChild();	  timeout    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	42	None	add
186	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  Node  n  =  parent.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  Node  n  =  parent.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(parent.getString());  Node  n  =  parent.getFirstChild();	  timeout    	non-compiled	[CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	42	None	add
187	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  Node  child  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getString());        Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(parent.getString());  Node  child  =  n.getFirstChild();	  timeout    	compilable	timeout	42	1	add
188	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  Node  child  =  n.getFirstChild();  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  Node  child  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(parent.getString());  Node  child  =  n.getFirstChild();	  timeout    	compilable	timeout	42	1	add
189	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  Renamer  renamer.addDeclaredName(parent.getString());  Node  n  =  n.getFirstChild();  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  Renamer  renamer.addDeclaredName(parent.getString());  Node  n  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        Node    nameNode    =    n.getFirstChild();    Renamer  renamer.addDeclaredName(parent.getString());  Node  n  =  n.getFirstChild();	  timeout    	non-compiled	[CE]  ';'  expected	42	None	add
190	[BUG]  [BUGGY]  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(newName.getString());  [CE]  cannot  find  symbol  newName  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(newName.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(newName.getString());	          Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    timeout    	non-compiled	[CE]  cannot  find  symbol  newName	11	None	replace
191	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  parent.getLastChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	Node  nameNode  =  parent.getLastChild();  renamer.addDeclaredName(nameNode.getString());	          Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    timeout    	compilable	timeout	11	1	replace
192	[BUG]  [BUGGY]  Node  nameNode  =  parent.getLastChild();  renamer.addDeclaredName(nameNode.getString());  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  parent.getLastChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  parent.getLastChild();  renamer.addDeclaredName(nameNode.getString());	          Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    timeout    	compilable	timeout	11	1	replace
193	[BUG]  [BUGGY]  Renamer  renamer.addFunctionDeclaration(n.getString());  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer.addFunctionDeclaration(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer.addFunctionDeclaration(n.getString());	  Renamer    renamer.addVarDeclaration(n.getString());    	non-compiled	[CE]  ';'  expected	32	None	replace
194	[BUG]  [BUGGY]  Renamer  renamer.addVarDeclaration(parent.getString());  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer.addVarDeclaration(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer.addVarDeclaration(parent.getString());	  Renamer    renamer.addVarDeclaration(n.getString());    	non-compiled	[CE]  ';'  expected	32	None	replace
195	[BUG]  [BUGGY]  Renamer  renamer.addVarDeclaration(n.getString(),  n);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer.addVarDeclaration(n.getString(),  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer.addVarDeclaration(n.getString(),  n);	  Renamer    renamer.addVarDeclaration(n.getString());    	non-compiled	[CE]  ';'  expected	32	None	replace
196	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());	          Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	52	1	replace
197	[BUG]  [BUGGY]  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());	          Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	52	1	replace
198	[BUG]  [BUGGY]  Renamer  renamer  =  n.getVarDeclaration();  [CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer  =  n.getVarDeclaration();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer  =  n.getVarDeclaration();	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    timeout    	non-compiled	[CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	58	None	replace
199	[BUG]  [BUGGY]  ernel.addDeclaredName(n.getString());  [CE]  cannot  find  symbol  ernel  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  ernel.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	ernel.addDeclaredName(n.getString());	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    timeout    	non-compiled	[CE]  cannot  find  symbol  ernel	58	None	replace
200	[BUG]  [BUGGY]  Renamer  renamer  =  n.getParent();  [CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer  =  n.getParent();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer  =  n.getParent();	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    timeout    	non-compiled	[CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	58	None	replace
201	[BUG]  [BUGGY]  Renamer  renamer  =  n.getVar();  [CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer  =  n.getVar();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer  =  n.getVar();	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    timeout    	non-compiled	[CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	58	None	replace
202	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	48	None	add
203	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	48	None	add
204	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  n  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  n  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  n  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());	  timeout    	non-compiled	[CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	48	None	add
205	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(newName.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(newName.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(newName.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	48	None	add
206	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  n.getFirstChild();  RENamer.addDeclaredName(nameNode.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  n.getFirstChild();  RENamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  nameNode  =  n.getFirstChild();  RENamer.addDeclaredName(nameNode.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	48	None	add
207	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	48	None	add
208	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  n  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());  [CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  n  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  n  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	48	None	add
209	[BUG]  [BUGGY]  Renamer  renamer.addVarDeclaration(n,  parent.getString());  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer.addVarDeclaration(n,  parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer.addVarDeclaration(n,  parent.getString());	  renamer.addVarDeclaration(parent,    n.getString());    	non-compiled	[CE]  ';'  expected	34	None	replace
210	[BUG]  [BUGGY]  Renamer  renamer  =  parent.addVarDeclaration(n,  parent.getString());  [CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer  =  parent.addVarDeclaration(n,  parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer  =  parent.addVarDeclaration(n,  parent.getString());	  renamer.addVarDeclaration(parent,    n.getString());    	non-compiled	[CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	34	None	replace
211	[BUG]  [BUGGY]  renamer.addVarDeclaration(nameNode,  n.getString());  [CE]  cannot  find  symbol  nameNode  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(nameNode,  n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(nameNode,  n.getString());	  renamer.addVarDeclaration(parent,    n.getString());    	non-compiled	[CE]  cannot  find  symbol  nameNode	34	None	replace
212	[BUG]  [BUGGY]  renamer.addVarDeclaration(parent,  n.getString(),  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(parent,  n.getString(),  nameNode);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(parent,  n.getString(),  nameNode);	  renamer.addVarDeclaration(parent,    n.getString());    	non-compiled	[CE]  cannot  find  symbol  nameNode	34	None	replace
213	[BUG]  [BUGGY]  renamer.addVarDeclaration(parent,  n,  parent.getString());  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(parent,  n,  parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(parent,  n,  parent.getString());	  renamer.addVarDeclaration(parent,    n.getString());    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
214	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getLastChild(),  parent);  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getLastChild(),  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getLastChild(),  parent);	  renamer.addDeclaredName(n.getLastChild());    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	39	None	replace
215	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getLastChild(),  n);  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getLastChild(),  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getLastChild(),  n);	  renamer.addDeclaredName(n.getLastChild());    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	39	None	replace
216	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getLastChild());  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getLastChild());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getLastChild());	  renamer.addDeclaredName(n.getLastChild());    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	39	None	replace
217	[BUG]  [BUGGY]  RENamer.addDeclaredName(n.getString());  [CE]  cannot  find  symbol  RENamer  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  RENamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	RENamer.addDeclaredName(n.getString());	  renamer.addDeclaredName(parent.getString());    RENamer.addDeclaredName(parent.getString());    	non-compiled	[CE]  cannot  find  symbol  RENamer	6	None	replace
218	[BUG]  [BUGGY]  Node  nameNode  =  n.getFirstChild();  nameNode.addDeclaredName(n.getString());  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getFirstChild();  nameNode.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  n.getFirstChild();  nameNode.addDeclaredName(n.getString());	          Node    nameNode    =    n.getFirstChild();    node.addDeclaredName(nameNode.getString());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
219	[BUG]  [BUGGY]  timeout  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  node  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	Node  node  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());	          Node    nameNode    =    n.getFirstChild();    node.addDeclaredName(nameNode.getString());    	compilable	timeout	17	1	replace
220	[BUG]  [BUGGY]  Node  node  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  timeout  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  node  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  node  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());	          Node    nameNode    =    n.getFirstChild();    node.addDeclaredName(nameNode.getString());    	compilable	timeout	17	1	replace
221	[BUG]  [BUGGY]  Node  nameNode  =  parent.getFirstChild();  nameNode.addDeclaredName(n.getString());  [CE]  cannot  find  symbol  [FE]                                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  parent.getFirstChild();  nameNode.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  parent.getFirstChild();  nameNode.addDeclaredName(n.getString());	          Node    nameNode    =    n.getFirstChild();    node.addDeclaredName(nameNode.getString());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
222	[BUG]  [BUGGY]  Node  nameNode  =  parent.getFirstChild();  node.addDeclaredName(nameNode.getString());  [CE]  cannot  find  symbol  node  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  parent.getFirstChild();  node.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  parent.getFirstChild();  node.addDeclaredName(nameNode.getString());	          Node    nameNode    =    n.getFirstChild();    node.addDeclaredName(nameNode.getString());    	non-compiled	[CE]  cannot  find  symbol  node	17	None	replace
223	[BUG]  [BUGGY]  renamer.addDeclaredName(nameNode.getString(),  n);  [CE]  cannot  find  symbol  nameNode  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(nameNode.getString(),  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(nameNode.getString(),  n);	  renamer.addDeclaredName(parent.getString(),    n);    	non-compiled	[CE]  cannot  find  symbol  nameNode	25	None	replace
224	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString(),  n,  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString(),  n,  nameNode);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString(),  n,  nameNode);	  renamer.addDeclaredName(parent.getString(),    n);    	non-compiled	[CE]  cannot  find  symbol  nameNode	25	None	replace
225	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	53	1	add
226	[BUG]  [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	53	1	add
227	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(n.getType()!=  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Preconditions.checkState(n.getType()!=  Token.NAME);  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	53	1	add
228	[BUG]  [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(n.getType()!=  Token.NAME);  renamer.addDeclaredName(n.getString());  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(n.getType()!=  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Preconditions.checkState(n.getType()!=  Token.NAME);  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	53	1	add
229	[BUG]  [BUGGY]  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Node  nameNode  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Node  nameNode  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	53	1	add
230	[BUG]  [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Node  nameNode  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Node  nameNode  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Node  nameNode  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	53	1	add
231	[BUG]  [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Node  n  =  parent.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  [CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Node  n  =  parent.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Node  n  =  parent.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	53	None	add
232	[BUG]  [BUGGY]  timeout  [FE]                                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(parent.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Preconditions.checkState(parent.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	53	1	add
233	[BUG]  [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(parent.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  timeout  [FE]                                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(parent.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Preconditions.checkState(parent.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	53	1	add
234	[BUG]  [BUGGY]  timeout  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(n.getType()  >=  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Preconditions.checkState(n.getType()  >=  Token.NAME);  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	53	1	add
235	[BUG]  [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(n.getType()  >=  Token.NAME);  renamer.addDeclaredName(n.getString());  timeout  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(n.getType()  >=  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Preconditions.checkState(n.getType()  >=  Token.NAME);  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	53	1	add
236	[BUG]  [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(n.getType()  >>  Token.NAME);  renamer.addDeclaredName(n.getString());  [CE]  no  suitable  method  found  for  checkState(int)  [FE]                                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(n.getType()  >>  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Preconditions.checkState(n.getType()  >>  Token.NAME);  renamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  checkState(int)	53	None	add
237	[BUG]  [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(n.getType()  ==  Token.NAME);  RENamer.addDeclaredName(n.getString());  [CE]  cannot  find  symbol  RENamer  [FE]                                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(n.getType()  ==  Token.NAME);  RENamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Preconditions.checkState(n.getType()  ==  Token.NAME);  RENamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  cannot  find  symbol  RENamer	53	None	add
238	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getLastChild().getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(n.getLastChild().getString());	  renamer.addDeclaredName(n.getFirstChild().getString());    timeout    	compilable	timeout	63	1	replace
239	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getLastChild().getString());  timeout  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getLastChild().getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getLastChild().getString());	  renamer.addDeclaredName(n.getFirstChild().getString());    timeout    	compilable	timeout	63	1	replace
240	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getFirstChild().getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getFirstChild().getString());	  renamer.addDeclaredName(n.getFirstChild().getString());    timeout    	compilable	timeout	63	1	replace
241	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getFirstChild().getString());  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getFirstChild().getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getFirstChild().getString());	  renamer.addDeclaredName(n.getFirstChild().getString());    timeout    	compilable	timeout	63	1	replace
242	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	Preconditions.checkState(parent.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());	          Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	54	1	replace
243	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Preconditions.checkState(parent.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());	          Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	54	1	replace
244	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  nameNode.getFirstChild());  renamer.addDeclaredName(n.getString());  [CE]  cannot  find  symbol  nameNode  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  nameNode.getFirstChild());  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  nameNode.getFirstChild());  renamer.addDeclaredName(n.getString());	          Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    timeout    	non-compiled	[CE]  cannot  find  symbol  nameNode	54	None	replace
245	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  nameNode.getString());  renamer.addDeclaredName(n.getString());  [CE]  cannot  find  symbol  nameNode  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  nameNode.getString());  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  nameNode.getString());  renamer.addDeclaredName(n.getString());	          Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    timeout    	non-compiled	[CE]  cannot  find  symbol  nameNode	54	None	replace
246	[BUG]  [BUGGY]  timeout  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	Preconditions.checkState(n.getType()!=  Token.NAME);  renamer.addDeclaredName(n.getString());	          Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	54	1	replace
247	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME);  renamer.addDeclaredName(n.getString());  timeout  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Preconditions.checkState(n.getType()!=  Token.NAME);  renamer.addDeclaredName(n.getString());	          Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	54	1	replace
248	[BUG]  [BUGGY]  renamer.addVarDeclaration(n,  parent);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(n,  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(n,  parent);	          renamer.addVarDeclaration(n);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
249	[BUG]  [BUGGY]  renamer.addVarDeclaration(parent);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(parent);	          renamer.addVarDeclaration(n);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
250	[BUG]  [BUGGY]  Renamer  renamer  =  parent.addVarDeclaration(n);  [CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer  =  parent.addVarDeclaration(n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer  =  parent.addVarDeclaration(n);	          renamer.addVarDeclaration(n);    	non-compiled	[CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	47	None	replace
251	[BUG]  [BUGGY]  renamer.addDeclaredName(nameNode.getString());  Node  parent  =  n.getFirstChild();  [CE]  cannot  find  symbol  nameNode  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(nameNode.getString());  Node  parent  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(nameNode.getString());  Node  parent  =  n.getFirstChild();	  renamer.addDeclaredName(parent.getString());    Node    parent    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  nameNode	7	None	replace
252	[BUG]  [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isVarDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isVarDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getLastChild();    Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isVarDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	12	None	add
253	[BUG]  [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isVarDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString()  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isVarDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString()  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getLastChild();    Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isVarDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString()	  timeout    	non-compiled	[CE]  ')'  expected	12	None	add
254	[BUG]  [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getLastChild();    Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	12	None	add
255	[BUG]  [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isVarDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isVarDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getLastChild();    Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isVarDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());  }	  timeout    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	add
256	[BUG]  [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getLastChild();    Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	12	None	add
257	[BUG]  [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isVarDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isVarDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getLastChild();    Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isVarDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString	  timeout    	non-compiled	[CE]  ')'  expected	12	None	add
258	[BUG]  [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString()  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString()  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getLastChild();    Node  nameNode  =  n.getLastChild();  }  else  if(NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getLastChild();  renamer.addDeclaredName(nameNode.getString()	  timeout    	non-compiled	[CE]  ')'  expected	12	None	add
259	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isLocalDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isLocalDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    if(NodeUtil.isLocalDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	57	None	add
260	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  }	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());    timeout    	compilable	timeout	2	1	replace
261	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  }	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());    timeout    	compilable	timeout	2	1	replace
262	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());    timeout    	non-compiled	[CE]  ')'  expected	2	None	replace
263	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());    timeout    	compilable	timeout	2	1	replace
264	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());    timeout    	compilable	timeout	2	1	replace
265	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  }	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());    timeout    	compilable	timeout	2	1	replace
266	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  }  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  }	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());    timeout    	compilable	timeout	2	1	replace
267	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  NameNode  nameNode  =  parent.getFirstChild();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  NameNode  nameNode  =  parent.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    NameNode  nameNode  =  parent.getFirstChild();	  timeout    	non-compiled	[CE]  cannot  find  symbol	15	None	add
268	[BUG]  [BUGGY]  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  parentNode  =  parent.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Node    nameNode    =    parent.getFirstChild();    Node  parentNode  =  parent.getFirstChild();	  timeout    	compilable	timeout	15	1	add
269	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  parentNode  =  parent.getFirstChild();  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  parentNode  =  parent.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    Node  parentNode  =  parent.getFirstChild();	  timeout    	compilable	timeout	15	1	add
270	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  n  =  parent.getFirstChild();  [CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  n  =  parent.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    Node  n  =  parent.getFirstChild();	  timeout    	non-compiled	[CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	15	None	add
271	[BUG]  [BUGGY]  renamer.addVarDeclaration(parent.getString(),  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(parent.getString(),  nameNode);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(parent.getString(),  nameNode);	  renamer.addVarDeclaration(n.getString(),    nameNode);    	non-compiled	[CE]  cannot  find  symbol  nameNode	20	None	replace
272	[BUG]  [BUGGY]  renamer.addVarDeclaration(n,  parent,  nameNode.getString());  [CE]  cannot  find  symbol  nameNode  [FE]            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(n,  parent,  nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(n,  parent,  nameNode.getString());	  renamer.addVarDeclaration(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol  nameNode	18	None	replace
273	[BUG]  [BUGGY]  renamer.addVarDeclaration(n,  parent,  n.getString());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(n,  parent,  n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(n,  parent,  n.getString());	  renamer.addVarDeclaration(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
274	[BUG]  [BUGGY]  NameNode  nameNode  =  NodeUtil.getFirstChild(parent);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  NameNode  nameNode  =  NodeUtil.getFirstChild(parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	NameNode  nameNode  =  NodeUtil.getFirstChild(parent);	          NameNode    nameNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
275	[BUG]  [BUGGY]  Renamer  renamer  =  findDeclaredNames(n,  parent);  [CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer  =  findDeclaredNames(n,  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer  =  findDeclaredNames(n,  parent);	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    timeout    	non-compiled	[CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	56	None	replace
276	[BUG]  [BUGGY]  Renamer  renamer  =  findDeclaredNames(n,  parent.getFirstChild());  [CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer  =  findDeclaredNames(n,  parent.getFirstChild());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer  =  findDeclaredNames(n,  parent.getFirstChild());	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    timeout    	non-compiled	[CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	56	None	replace
277	[BUG]  [BUGGY]  Renamer  renamer  =  findDeclaredName(n.getString());  [CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer  =  findDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer  =  findDeclaredName(n.getString());	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    timeout    	non-compiled	[CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	56	None	replace
278	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString(),  n,  n);  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString(),  n,  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString(),  n,  n);	  renamer.addDeclaredName(n.getString(),    parent,    n);    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	64	None	replace
279	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString()  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString()  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString()	  renamer.addDeclaredName(parent.getString());    Renamer    renamer.addDeclaredName(parent.getString());    	non-compiled	[CE]  ')'  expected	3	None	replace
280	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  namer.addDeclaredName(n.getFirstChild().getString());  [CE]  cannot  find  symbol  namer  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  namer.addDeclaredName(n.getFirstChild().getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getFirstChild().getString());    namer.addDeclaredName(n.getFirstChild().getString());	  timeout    	non-compiled	[CE]  cannot  find  symbol  namer	62	None	add
281	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString(),  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString(),  nameNode);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString(),  nameNode);	  renamer.addDeclaredName(nameNode.getString(),    parent);    	non-compiled	[CE]  cannot  find  symbol  nameNode	23	None	replace
282	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  NameNode  nameNode  =  n.getFirstChild();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  NameNode  nameNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    NameNode  nameNode  =  n.getFirstChild();	  timeout    	non-compiled	[CE]  cannot  find  symbol	8	None	add
283	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  nameNode  =  n.getfirstChild();  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  nameNode  =  n.getfirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    Node  nameNode  =  n.getfirstChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	8	None	add
284	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  names  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Node    nameNode    =    n.getFirstChild();    Node  names  =  n.getFirstChild();	  timeout    	compilable	timeout	8	1	add
285	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  names  =  n.getFirstChild();  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  names  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    Node  names  =  n.getFirstChild();	  timeout    	compilable	timeout	8	1	add
286	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(nameNode.getString());  renamer.addDeclaredName(nameNode.getString());  [CE]  cannot  find  symbol  nameNode  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(nameNode.getString());  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(nameNode.getString());  renamer.addDeclaredName(nameNode.getString());	  timeout    	non-compiled	[CE]  cannot  find  symbol  nameNode	1	None	add
287	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());	  timeout    	compilable	timeout	1	1	add
288	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());	  timeout    	compilable	timeout	1	1	add
289	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getType());  renamer.addDeclaredName(parent.getString());  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getType());  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getType());  renamer.addDeclaredName(parent.getString());	  timeout    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	1	None	add
290	[BUG]  [BUGGY]  renamer.addDeclaredVarName(nameNode.getString(),  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredVarName(nameNode.getString(),  nameNode);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(nameNode.getString(),  nameNode);	  renamer.addDeclaredVarName(n.getString(),    nameNode);    	non-compiled	[CE]  cannot  find  symbol  nameNode	29	None	replace
291	[BUG]  [BUGGY]  Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(nameNode,  parent.getString());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(nameNode,  parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(nameNode,  parent.getString());	          Node    nameNode    =    n.getFirstChild();    parent.addDeclaredName(nameNode.getString());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
292	[BUG]  [BUGGY]  Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(new  NameNode(n.getString()));  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(new  NameNode(n.getString()));  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(new  NameNode(n.getString()));	          Node    nameNode    =    n.getFirstChild();    parent.addDeclaredName(nameNode.getString());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
293	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getString());        Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(parent.getString());	  timeout    	compilable	timeout	42	1	add
294	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(parent.getString());	  timeout    	compilable	timeout	42	1	add
295	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  Renamer  renamer.addDeclaredName(parent.getString());  Node  nameNode  =  n.getFirstChild();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  Renamer  renamer.addDeclaredName(parent.getString());  Node  nameNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        Node    nameNode    =    n.getFirstChild();    Renamer  renamer.addDeclaredName(parent.getString());  Node  nameNode  =  n.getFirstChild();	  timeout    	non-compiled	[CE]  ';'  expected	42	None	add
296	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	5	1	replace
297	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	5	1	replace
298	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  [CE]  'else'  without  'if'  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isFunctionDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());    timeout    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
299	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getLastChild(),  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getLastChild(),  nameNode);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getLastChild(),  nameNode);	  renamer.addDeclaredName(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  nameNode	39	None	replace
300	[BUG]  [BUGGY]  renamer.addDeclaredName(nameNode.getLastChild());  [CE]  cannot  find  symbol  nameNode  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(nameNode.getLastChild());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(nameNode.getLastChild());	  renamer.addDeclaredName(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol  nameNode	39	None	replace
301	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkNotNull(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Preconditions.checkNotNull(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	53	1	add
302	[BUG]  [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkNotNull(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkNotNull(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Preconditions.checkNotNull(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	53	1	add
303	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Preconditions.checkState(n.getType()  ==  Token.NAME);	  timeout    	compilable	timeout	53	1	add
304	[BUG]  [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(n.getType()  ==  Token.NAME);  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Preconditions.checkState(n.getType()  ==  Token.NAME);	  timeout    	compilable	timeout	53	1	add
305	[BUG]  [BUGGY]  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkArgument(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Preconditions.checkArgument(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	53	1	add
306	[BUG]  [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkArgument(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkArgument(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Preconditions.checkArgument(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	53	1	add
307	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString(),  n,  null);  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString(),  n,  null);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString(),  n,  null);	  renamer.addDeclaredName(parent.getString(),    n);    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	25	None	replace
308	[BUG]  [BUGGY]  renamer  =  n.getFirstChild();  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer  =  n.getFirstChild();	          nameNode    =    n.getFirstChild();    	non-compiled	[CE]  incompatible  types	46	None	replace
309	[BUG]  [BUGGY]  renamer.addVarDeclaration(parent,  n);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(parent,  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(parent,  n);	          renamer.addVarDeclaration(n);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
310	[BUG]  [BUGGY]  renamer.addDeclaredName(nameNode.getFirstChild(),  parent);  [CE]  cannot  find  symbol  nameNode  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(nameNode.getFirstChild(),  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(nameNode.getFirstChild(),  parent);	  renamer.addDeclaredName(n.getFirstChild(),    parent);    	non-compiled	[CE]  cannot  find  symbol  nameNode	36	None	replace
311	[BUG]  [BUGGY]  renamer.addDeclaredVarName(nameNode,  parent.getString());  [CE]  cannot  find  symbol  nameNode  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredVarName(nameNode,  parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(nameNode,  parent.getString());	  renamer.addDeclaredVarName(n,    parent.getString());    	non-compiled	[CE]  cannot  find  symbol  nameNode	28	None	replace
312	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	Preconditions.checkState(parent.getType()  ==  Token.NAME);	          Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	54	1	replace
313	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Preconditions.checkState(parent.getType()  ==  Token.NAME);	          Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	54	1	replace
314	[BUG]  [BUGGY]  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	Preconditions.checkState(parent.getType()  ==  Token.NAME);  renamer.addDeclaredName(parent.getString());	          Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	54	1	replace
315	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  renamer.addDeclaredName(parent.getString());  timeout  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Preconditions.checkState(parent.getType()  ==  Token.NAME);  renamer.addDeclaredName(parent.getString());	          Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	54	1	replace
316	[BUG]  [BUGGY]  renamer.addVarDeclaration(n.getFirstChild().getString());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(n.getFirstChild().getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(n.getFirstChild().getString());	  renamer.addDeclaredName(n.getFirstChild().getString());    timeout    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
317	[BUG]  [BUGGY]  Renamer  renamer.addDeclaredName(nameNode.getString());  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer.addDeclaredName(nameNode.getString());	  Renamer    renamer.addDeclaredName(n.getString());    	non-compiled	[CE]  ';'  expected	35	None	replace
318	[BUG]  [BUGGY]  Renamer  renamer.addNameDeclaration(n.getString());  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer.addNameDeclaration(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer.addNameDeclaration(n.getString());	  Renamer    renamer.addVarDeclaration(n.getString());    	non-compiled	[CE]  ';'  expected	32	None	replace
319	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(n.getString());    renamer.addDeclaredName(parent.getString());	  timeout    	compilable	timeout	4	1	add
320	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(parent.getString());  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(n.getString());    renamer.addDeclaredName(parent.getString());	  timeout    	compilable	timeout	4	1	add
321	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  RENamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  [CE]  cannot  find  symbol  RENamer  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  RENamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(n.getString());    RENamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  cannot  find  symbol  RENamer	4	None	add
322	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getParent();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	Node  nameNode  =  n.getParent();	          Node    nameNode    =    n.getFirstChild();    timeout    	compilable	timeout	9	1	replace
323	[BUG]  [BUGGY]  Node  nameNode  =  n.getParent();  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getParent();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  n.getParent();	          Node    nameNode    =    n.getFirstChild();    timeout    	compilable	timeout	9	1	replace
324	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getString(),  nameNode,  n,  parent);  [CE]  cannot  find  symbol  nameNode  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getString(),  nameNode,  n,  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getString(),  nameNode,  n,  parent);	  renamer.addDeclaredName(n.getString(),    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  nameNode	21	None	replace
325	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  NameNode  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  NameNode  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    NameNode  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());	  timeout    	non-compiled	[CE]  cannot  find  symbol	48	None	add
326	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  NameNode  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  NameNode  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(n.getString());    NameNode  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  cannot  find  symbol	51	None	add
327	[BUG]  [BUGGY]  renamer.addVarDeclaration(parent,  n.getString(),  n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(parent,  n.getString(),  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(parent,  n.getString(),  n);	  renamer.addVarDeclaration(parent.getString(),    n);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
328	[BUG]  [BUGGY]  renamer.addDeclaredName(nameNode.getString(),  nameNode,  parent);  [CE]  cannot  find  symbol  nameNode  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(nameNode.getString(),  nameNode,  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(nameNode.getString(),  nameNode,  parent);	  renamer.addDeclaredName(n.getString(),    nameNode,    parent);    	non-compiled	[CE]  cannot  find  symbol  nameNode	22	None	replace
329	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  if(NodeUtil.isConstructorDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  if(NodeUtil.isConstructorDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    if(NodeUtil.isConstructorDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	55	None	add
330	[BUG]  [BUGGY]  renamer.addVarDeclaration(n,  parent.getString(),  n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(n,  parent.getString(),  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(n,  parent.getString(),  n);	  renamer.addVarDeclaration(n.getString(),    parent);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
331	[BUG]  [BUGGY]  renamer.addDeclaredVarName(n.getString(),  nameNode,  parent);  [CE]  cannot  find  symbol  nameNode  [FE]            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredVarName(n.getString(),  nameNode,  parent);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(n.getString(),  nameNode,  parent);	  renamer.addDeclaredVarName(n.getString(),    parent);    	non-compiled	[CE]  cannot  find  symbol  nameNode	26	None	replace
332	[BUG]  [BUGGY]  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  n.getFirstChild();  [CE]  cannot  find  symbol  nameNode  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  n.getFirstChild();	  renamer.addDeclaredName(parent.getString());    Node    nameNode    =    n.getFirstChild();    timeout    	non-compiled	[CE]  cannot  find  symbol  nameNode	43	None	replace
333	[BUG]  [BUGGY]  Renamer  renamer  =  findDeclaredNames(n.getFirstChild(),  n);  [CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer  =  findDeclaredNames(n.getFirstChild(),  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer  =  findDeclaredNames(n.getFirstChild(),  n);	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    timeout    	non-compiled	[CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	58	None	replace
334	[BUG]  [BUGGY]  Renamer  renamer  =  NodeUtil.getFunctionDeclaration(n);  [CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer  =  NodeUtil.getFunctionDeclaration(n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer  =  NodeUtil.getFunctionDeclaration(n);	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    timeout    	non-compiled	[CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	58	None	replace
335	[BUG]  [BUGGY]  NameNode  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  NameNode  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	NameNode  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());	          Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    timeout    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
336	[BUG]  [BUGGY]  Node  nameNode  =  n.getfirstChild();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getfirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  n.getfirstChild();	          Node    nameNode    =    n.getLastChild();    timeout    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
337	[BUG]  [BUGGY]  Node  node  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [CE]  cannot  find  symbol  nameNode  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  node  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  node  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());	          Node    nameNode    =    n.getFirstChild();    node.addDeclaredName(nameNode.getString());    	non-compiled	[CE]  cannot  find  symbol  nameNode	17	None	replace
338	[BUG]  [BUGGY]  Node  node  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [CE]  cannot  find  symbol  nameNode  [FE]                              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  node  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  node  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());	          Node    nameNode    =    n.getFirstChild();    node.addDeclaredName(nameNode.getString());    	non-compiled	[CE]  cannot  find  symbol  nameNode	17	None	replace
339	[BUG]  [BUGGY]  renamer.addDeclaredName(nameNode.getFirstChild(),  n);  [CE]  cannot  find  symbol  nameNode  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(nameNode.getFirstChild(),  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(nameNode.getFirstChild(),  n);	  renamer.addDeclaredName(n.getFirstChild(),    nameNode);    	non-compiled	[CE]  cannot  find  symbol  nameNode	41	None	replace
340	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  parent.getFirstChild();  RENamer.addDeclaredName(nameNode.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  parent.getFirstChild();  RENamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  nameNode  =  parent.getFirstChild();  RENamer.addDeclaredName(nameNode.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	10	None	add
341	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  parentNode  =  parent.getFirstChild();  renamer.addDeclaredName(parentNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  parentNode  =  parent.getFirstChild();  renamer.addDeclaredName(parentNode.getString());	  timeout    	compilable	timeout	10	1	add
342	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  parentNode  =  parent.getFirstChild();  renamer.addDeclaredName(parentNode.getString());  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  parentNode  =  parent.getFirstChild();  renamer.addDeclaredName(parentNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  parentNode  =  parent.getFirstChild();  renamer.addDeclaredName(parentNode.getString());	  timeout    	compilable	timeout	10	1	add
343	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getString(),  n,  parent,  idPrefix);  [CE]  cannot  find  symbol  idPrefix  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getString(),  n,  parent,  idPrefix);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getString(),  n,  parent,  idPrefix);	  renamer.addDeclaredName(n.getString(),    n,    parent);    	non-compiled	[CE]  cannot  find  symbol  idPrefix	21	None	replace
344	[BUG]  [BUGGY]  Renamer  renamer  =  findDeclaredNames(n.getString());  [CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Renamer  renamer  =  findDeclaredNames(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer  =  findDeclaredNames(n.getString());	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    timeout    	non-compiled	[CE]  variable  renamer  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	58	None	replace
345	[BUG]  [BUGGY]  Node  n  =  parent.getFirstChild();  renamer.addDeclaredName(n,  n.getString());  [CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  n  =  parent.getFirstChild();  renamer.addDeclaredName(n,  n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  n  =  parent.getFirstChild();  renamer.addDeclaredName(n,  n.getString());	          Node    n    =    parent.getFirstChild();    renamer.addDeclaredName(n.getString());    	non-compiled	[CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	50	None	replace
346	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getString(),  parent,  n,  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getString(),  parent,  n,  nameNode);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getString(),  parent,  n,  nameNode);	  renamer.addDeclaredName(n.getString(),    parent,    n);    	non-compiled	[CE]  cannot  find  symbol  nameNode	64	None	replace
347	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getString(),  parent,  n,  idPrefix);  [CE]  cannot  find  symbol  idPrefix  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getString(),  parent,  n,  idPrefix);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getString(),  parent,  n,  idPrefix);	  renamer.addDeclaredName(n.getString(),    parent,    n);    	non-compiled	[CE]  cannot  find  symbol  idPrefix	64	None	replace
348	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	if(NodeUtil.isVarDeclaration(n))  {  Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  }	          Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	54	1	replace
349	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  }  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))  {  Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  }	          Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    timeout    	compilable	timeout	54	1	replace
350	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  nameNode  =  child.getFirstChild();  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  Node  nameNode  =  child.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    Node  nameNode  =  child.getFirstChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	15	None	add
351	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());    timeout    	non-compiled	[CE]  not  a  statement	5	None	replace
352	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  [CE]  'else'  without  'if'  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());    timeout    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
353	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  [CE]  'else'  without  'if'  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());    timeout    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
354	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  ren  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  ren  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  ren	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());    timeout    	non-compiled	[CE]  not  a  statement	5	None	replace
355	[BUG]  [BUGGY]  NameNode  nameNode  =  n.removeFirstChild();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  NameNode  nameNode  =  n.removeFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	NameNode  nameNode  =  n.removeFirstChild();	          NameNode    nameNode    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
356	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  if(NodeUtil.isImmutableDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  if(NodeUtil.isImmutableDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    if(NodeUtil.isImmutableDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	55	None	add
357	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  if(NodeUtil.isLiteralDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  if(NodeUtil.isLiteralDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    if(NodeUtil.isLiteralDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	55	None	add
358	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Node    nameNode    =    n.getFirstChild();    Preconditions.checkState(n.getType()  ==  Token.NAME);	  timeout    	compilable	timeout	8	1	add
359	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.NAME);  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    Preconditions.checkState(n.getType()  ==  Token.NAME);	  timeout    	compilable	timeout	8	1	add
360	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  nameNode  =  node.getFirstChild();  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  Node  nameNode  =  node.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    Node  nameNode  =  node.getFirstChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	8	None	add
361	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.VAR);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Node    nameNode    =    n.getFirstChild();    Preconditions.checkState(n.getType()  ==  Token.VAR);	  timeout    	compilable	timeout	8	1	add
362	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.VAR);  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  Preconditions.checkState(n.getType()  ==  Token.VAR);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    Preconditions.checkState(n.getType()  ==  Token.VAR);	  timeout    	compilable	timeout	8	1	add
363	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  Node  nameNode  =  parent.getFirstChild();  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  Node  nameNode  =  parent.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(parent.getString());  Node  nameNode  =  parent.getFirstChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	42	None	add
364	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  Node  childNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getString());        Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(parent.getString());  Node  childNode  =  n.getFirstChild();	  timeout    	compilable	timeout	42	1	add
365	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  Node  childNode  =  n.getFirstChild();  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(parent.getString());  Node  childNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(parent.getString());  Node  childNode  =  n.getFirstChild();	  timeout    	compilable	timeout	42	1	add
366	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getString(),  parent.getLocalName());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getString(),  parent.getLocalName());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getString(),  parent.getLocalName());	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getLocalName());    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
367	[BUG]  [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  node.getLastChild();  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getLastChild();  Node  nameNode  =  node.getLastChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getLastChild();    Node  nameNode  =  node.getLastChild();	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	12	None	add
368	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getLastChild();  n  =  n.getLastChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Node    nameNode    =    n.getLastChild();    n  =  n.getLastChild();	  timeout    	compilable	timeout	12	1	add
369	[BUG]  [BUGGY]          Node  nameNode  =  n.getLastChild();  n  =  n.getLastChild();  timeout  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getLastChild();  n  =  n.getLastChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getLastChild();    n  =  n.getLastChild();	  timeout    	compilable	timeout	12	1	add
370	[BUG]  [BUGGY]  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  node  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	Node  node  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());	          Node    nameNode    =    n.getFirstChild();    node.addDeclaredName(nameNode.getString());    	compilable	timeout	17	1	replace
371	[BUG]  [BUGGY]  Node  node  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());  timeout  [FE]                            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  node  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  node  =  n.getFirstChild();  renamer.addDeclaredName(n.getString());	          Node    nameNode    =    n.getFirstChild();    node.addDeclaredName(nameNode.getString());    	compilable	timeout	17	1	replace
372	[BUG]  [BUGGY]  renamer.addVarDeclaration(parent.getString(),  n,  n);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(parent.getString(),  n,  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(parent.getString(),  n,  n);	  renamer.addVarDeclaration(parent.getString(),    n);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
373	[BUG]  [BUGGY]  namer.addDeclaredName(n.getString());  Node  parent  =  n.getFirstChild();  [CE]  cannot  find  symbol  namer  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  namer.addDeclaredName(n.getString());  Node  parent  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	namer.addDeclaredName(n.getString());  Node  parent  =  n.getFirstChild();	  renamer.addDeclaredName(parent.getString());    Node    parent    =    n.getFirstChild();    	non-compiled	[CE]  cannot  find  symbol  namer	7	None	replace
374	[BUG]  [BUGGY]  renamer.addDeclaredVarName(n.getString(),  parent,  n);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredVarName(n.getString(),  parent,  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(n.getString(),  parent,  n);	  renamer.addDeclaredVarName(n.getString(),    parent);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
375	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	10	None	add
376	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  parentNode  =  parent.getFirstChild();  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  parentNode  =  parent.getFirstChild();  renamer.addDeclaredName(parent.getString());	  timeout    	compilable	timeout	10	1	add
377	[BUG]  [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  parentNode  =  parent.getFirstChild();  renamer.addDeclaredName(parent.getString());  timeout  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  parentNode  =  parent.getFirstChild();  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    parent.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  parentNode  =  parent.getFirstChild();  renamer.addDeclaredName(parent.getString());	  timeout    	compilable	timeout	10	1	add
378	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	48	None	add
379	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	48	None	add
380	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  node.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  node.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  nameNode  =  node.getFirstChild();  renamer.addDeclaredName(nameNode.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	48	None	add
381	[BUG]  [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  null;  renamer.addDeclaredName(nameNode.getString());  [CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  null;  renamer.addDeclaredName(nameNode.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.getString());    Node  nameNode  =  null;  renamer.addDeclaredName(nameNode.getString());	  timeout    	non-compiled	[CE]  variable  nameNode  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	48	None	add
382	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.removeFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	Node  nameNode  =  n.removeFirstChild();	          Node    nameNode    =    n.getFirstChild();    timeout    	compilable	timeout	9	1	replace
383	[BUG]  [BUGGY]  Node  nameNode  =  n.removeFirstChild();  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.removeFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  n.removeFirstChild();	          Node    nameNode    =    n.getFirstChild();    timeout    	compilable	timeout	9	1	replace
384	[BUG]  [BUGGY]  renamer.addVarDeclaration(n.getString(),  parent,  n);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addVarDeclaration(n.getString(),  parent,  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(n.getString(),  parent,  n);	  renamer.addVarDeclaration(n.getString(),    parent);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
385	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  RENamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  [CE]  'else'  without  'if'  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  RENamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  RENamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();	  renamer.addDeclaredName(parent.getString());    RENamer.addDeclaredName(parent.getString());    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
386	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  Node  nameNode  =  n.getFirstChild();  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  Node  nameNode  =  n.getFirstChild();  }	  renamer.addDeclaredName(parent.getString());    Node    nameNode    =    n.getFirstChild();    timeout    	compilable	timeout	43	1	replace
387	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  Node  nameNode  =  n.getFirstChild();  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  Node  nameNode  =  n.getFirstChild();  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  Node  nameNode  =  n.getFirstChild();  }	  renamer.addDeclaredName(parent.getString());    Node    nameNode    =    n.getFirstChild();    timeout    	compilable	timeout	43	1	replace
388	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  Node  nameNode  =  n.getFirstChild();  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  Node  nameNode  =  n.getFirstChild();  }	  renamer.addDeclaredName(parent.getString());    Node    nameNode    =    n.getFirstChild();    timeout    	compilable	timeout	43	1	replace
389	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  Node  nameNode  =  n.getFirstChild();  }  timeout  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  Node  nameNode  =  n.getFirstChild();  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  Node  nameNode  =  n.getFirstChild();  }	  renamer.addDeclaredName(parent.getString());    Node    nameNode    =    n.getFirstChild();    timeout    	compilable	timeout	43	1	replace
390	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  n.getFirstChild();  }  [CE]  cannot  find  symbol  nameNode  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  n.getFirstChild();  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(nameNode.getString());  Node  nameNode  =  n.getFirstChild();  }	  renamer.addDeclaredName(parent.getString());    Node    nameNode    =    n.getFirstChild();    timeout    	non-compiled	[CE]  cannot  find  symbol  nameNode	43	None	replace
391	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString(),  n,  idPrefix);  [CE]  cannot  find  symbol  idPrefix  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString(),  n,  idPrefix);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString(),  n,  idPrefix);	  renamer.addDeclaredName(parent.getString(),    n);    	non-compiled	[CE]  cannot  find  symbol  idPrefix	25	None	replace
392	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isImmutableDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isImmutableDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    if(NodeUtil.isImmutableDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	57	None	add
393	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isLiteralDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  if(NodeUtil.isLiteralDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(n.getString());    }    if(NodeUtil.isLiteralDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	57	None	add
394	[BUG]  [BUGGY]  Node  nameNode  =  parent.getfirstChild();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  parent.getfirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  parent.getfirstChild();	          Node    nameNode    =    n.getLastChild();    timeout    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
395	[BUG]  [BUGGY]  Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(newName.getString());  [CE]  cannot  find  symbol  newName  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(newName.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(newName.getString());	          Node    nameNode    =    n.getFirstChild();    parent.addDeclaredName(nameNode.getString());    	non-compiled	[CE]  cannot  find  symbol  newName	14	None	replace
396	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(parent.getString());    if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  }	  timeout    	compilable	timeout	1	1	add
397	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  }  timeout  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  }  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(parent.getString());    if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  }	  timeout    	compilable	timeout	1	1	add
398	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getName());  renamer.addDeclaredName(parent.getString());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getName());  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getName());  renamer.addDeclaredName(parent.getString());	  timeout    	non-compiled	[CE]  cannot  find  symbol	1	None	add
399	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getFirstChild());  renamer.addDeclaredName(parent.getString());  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getFirstChild());  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getFirstChild());  renamer.addDeclaredName(parent.getString());	  timeout    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	1	None	add
400	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getParent());  renamer.addDeclaredName(parent.getString());  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getParent());  renamer.addDeclaredName(parent.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getParent());  renamer.addDeclaredName(parent.getString());	  timeout    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	1	None	add
401	[BUG]  [BUGGY]  renamer  =  parent.getFirstChild();  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer  =  parent.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer  =  parent.getFirstChild();	          nameNode    =    n.getFirstChild();    	non-compiled	[CE]  incompatible  types	46	None	replace
402	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getFirstChild(),  nameNode,  n);  [CE]  cannot  find  symbol  nameNode  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(n.getFirstChild(),  nameNode,  n);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getFirstChild(),  nameNode,  n);	  renamer.addDeclaredName(n.getFirstChild(),    n);    	non-compiled	[CE]  cannot  find  symbol  nameNode	38	None	replace
403	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(n.getString());    renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	4	1	add
404	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(n.getString());  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(n.getString());    renamer.addDeclaredName(n.getString());  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	4	1	add
405	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  [CE]  'else'  without  'if'  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());        renamer.addDeclaredName(n.getString());    if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();	  timeout    	non-compiled	[CE]  'else'  without  'if'	4	None	add
406	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  parent.setType(Token.NAME);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	parent.setType(Token.NAME);	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    else    {    Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.get    	compilable	timeout	59	1	replace
407	[BUG]  [BUGGY]  parent.setType(Token.NAME);  timeout  [FE]                    AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  parent.setType(Token.NAME);  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	parent.setType(Token.NAME);	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    else    {    Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.get    	compilable	timeout	59	1	replace
408	[BUG]  [BUGGY]  Neighbor  n  =  parent.getFirstChild();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  Neighbor  n  =  parent.getFirstChild();  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Neighbor  n  =  parent.getFirstChild();	  if(NodeUtil.isVarDeclaration(n))    {    renamer.addDeclaredName(parent.getString());    }    else    {    Node    nameNode    =    n.getFirstChild();    renamer.addDeclaredName(nameNode.get    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
409	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME)  {  renamer.addDeclaredName(n.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString()  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(n.getType()  ==  Token.NAME)  {  renamer.addDeclaredName(n.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString()  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(n.getType()  ==  Token.NAME)  {  renamer.addDeclaredName(n.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString()	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());    timeout    	non-compiled	[CE]  ')'  expected	2	None	replace
410	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.get  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.get  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.get	  renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());    timeout    	non-compiled	[CE]  ')'  expected	2	None	replace
411	[BUG]  [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(n.getType()  ==  Token.AME);  renamer.addDeclaredName(n.getString());  [CE]  cannot  find  symbol  AME  [FE]                        AssertionFailedError      [CONTEXT]      private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {      [BUGGY]          Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  Preconditions.checkState(n.getType()  ==  Token.AME);  renamer.addDeclaredName(n.getString());  [BUGGY]      }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	                Preconditions.checkState(n.getType()    ==    Token.NAME);    renamer.addDeclaredName(n.getString());    Preconditions.checkState(n.getType()  ==  Token.AME);  renamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  cannot  find  symbol  AME	53	None	add
