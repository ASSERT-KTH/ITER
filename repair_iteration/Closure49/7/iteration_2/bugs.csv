bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());	  timeout    	compilable	timeout	3	1	add
2	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getString());	  timeout    	compilable	timeout	3	1	add
3	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());  Renamer  renamer.addDeclaredName(parent.getString());  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(parent.getString());  Renamer  renamer.addDeclaredName(parent.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());    Renamer  renamer.addDeclaredName(parent.getString());	  timeout    	non-compiled	[CE]  ';'  expected	3	None	add
4	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	3	1	add
5	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  timeout  [FE]                AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(n.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	3	1	add
6	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());  RENamer.addDeclaredName(parent.getString());  [CE]  cannot  find  symbol  RENamer  [FE]                  AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(parent.getString());  RENamer.addDeclaredName(parent.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());    RENamer.addDeclaredName(parent.getString());	  timeout    	non-compiled	[CE]  cannot  find  symbol  RENamer	3	None	add
7	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());  Node  parent  =  n.getFirstChild();  [CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                    AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(parent.getString());  Node  parent  =  n.getFirstChild();  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());    Node  parent  =  n.getFirstChild();	  timeout    	non-compiled	[CE]  variable  parent  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	3	None	add
8	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      Node  nameNode  =  n.getFirstChild();  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	        Node  nameNode  =  n.getFirstChild();	  timeout    	compilable	timeout	5	1	add
9	[BUG]  [BUGGY]      Node  nameNode  =  n.getFirstChild();  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      Node  nameNode  =  n.getFirstChild();  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	        Node  nameNode  =  n.getFirstChild();	  timeout    	compilable	timeout	5	1	add
10	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	        Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());	  timeout    	compilable	timeout	5	1	add
11	[BUG]  [BUGGY]      Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  timeout  [FE]                AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	        Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(nameNode.getString());	  timeout    	compilable	timeout	5	1	add
12	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      Node  nameNode  =  n.getLastChild();  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	        Node  nameNode  =  n.getLastChild();	  timeout    	compilable	timeout	5	1	add
13	[BUG]  [BUGGY]      Node  nameNode  =  n.getLastChild();  timeout  [FE]                  AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      Node  nameNode  =  n.getLastChild();  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	        Node  nameNode  =  n.getLastChild();	  timeout    	compilable	timeout	5	1	add
14	[BUG]  [BUGGY]      Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(nameNode.getString());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(nameNode.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	        Node  nameNode  =  n.getFirstChild();  parent.addDeclaredName(nameNode.getString());	  timeout    	non-compiled	[CE]  cannot  find  symbol	5	None	add
15	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      Node  nameNode  =  parent.getFirstChild();  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	        Node  nameNode  =  parent.getFirstChild();	  timeout    	compilable	timeout	5	1	add
16	[BUG]  [BUGGY]      Node  nameNode  =  parent.getFirstChild();  timeout  [FE]                      AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      Node  nameNode  =  parent.getFirstChild();  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	        Node  nameNode  =  parent.getFirstChild();	  timeout    	compilable	timeout	5	1	add
17	[BUG]  [BUGGY]      Node  nameNode  =  n.getFirstChild();  node.addDeclaredName(nameNode.getString());  [CE]  cannot  find  symbol  node  [FE]                        AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      Node  nameNode  =  n.getFirstChild();  node.addDeclaredName(nameNode.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	        Node  nameNode  =  n.getFirstChild();  node.addDeclaredName(nameNode.getString());	  timeout    	non-compiled	[CE]  cannot  find  symbol  node	5	None	add
18	[BUG]  [BUGGY]  renamer.addVarDeclaration(n,  parent.getString());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addVarDeclaration(n,  parent.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(n,  parent.getString());	  renamer.addVarDeclaration(n.getString());    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
19	[BUG]  [BUGGY]  renamer.addVarDeclaration(n.getString(),  parent);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addVarDeclaration(n.getString(),  parent);  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(n.getString(),  parent);	  renamer.addVarDeclaration(n.getString());    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
20	[BUG]  [BUGGY]  renamer.addVarDeclaration(n.getString(),  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]            AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addVarDeclaration(n.getString(),  nameNode);  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(n.getString(),  nameNode);	  renamer.addVarDeclaration(n.getString());    	non-compiled	[CE]  cannot  find  symbol  nameNode	1	None	replace
21	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getString(),  n,  parent);  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(n.getString(),  n,  parent);  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getString(),  n,  parent);	  renamer.addDeclaredName(n.getString(),    parent);    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	2	None	replace
22	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getString(),  nameNode,  parent);  [CE]  cannot  find  symbol  nameNode  [FE]            AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(n.getString(),  nameNode,  parent);  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getString(),  nameNode,  parent);	  renamer.addDeclaredName(n.getString(),    parent);    	non-compiled	[CE]  cannot  find  symbol  nameNode	2	None	replace
23	[BUG]  [BUGGY]  renamer.addDeclaredName(nameNode.getString(),  parent);  [CE]  cannot  find  symbol  nameNode  [FE]              AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(nameNode.getString(),  parent);  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(nameNode.getString(),  parent);	  renamer.addDeclaredName(n.getString(),    parent);    	non-compiled	[CE]  cannot  find  symbol  nameNode	2	None	replace
24	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getString(),  parent,  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]                AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(n.getString(),  parent,  nameNode);  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getString(),  parent,  nameNode);	  renamer.addDeclaredName(n.getString(),    parent);    	non-compiled	[CE]  cannot  find  symbol  nameNode	2	None	replace
25	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString(),  n);  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(parent.getString(),  n);  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString(),  n);	  renamer.addDeclaredName(n.getString(),    parent);    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	2	None	replace
26	[BUG]  [BUGGY]  renamer.addDeclaredVarName(n.getString(),  parent);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredVarName(n.getString(),  parent);  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(n.getString(),  parent);	  renamer.addDeclaredVarName(n.getString());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
27	[BUG]  [BUGGY]  renamer.addDeclaredVarName(parent.getString());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredVarName(parent.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(parent.getString());	  renamer.addDeclaredVarName(n.getString());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
28	[BUG]  [BUGGY]  renamer.addDeclaredVarName(n,  parent.getString());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredVarName(n,  parent.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(n,  parent.getString());	  renamer.addDeclaredVarName(n.getString());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
29	[BUG]  [BUGGY]  renamer.addDeclaredVarName(n.getString(),  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]              AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredVarName(n.getString(),  nameNode);  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(n.getString(),  nameNode);	  renamer.addDeclaredVarName(n.getString());    	non-compiled	[CE]  cannot  find  symbol  nameNode	9	None	replace
30	[BUG]  [BUGGY]  renamer.addDeclaredVarName(nameNode.getString());  [CE]  cannot  find  symbol  nameNode  [FE]                AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredVarName(nameNode.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(nameNode.getString());	  renamer.addDeclaredVarName(n.getString());    	non-compiled	[CE]  cannot  find  symbol  nameNode	9	None	replace
31	[BUG]  [BUGGY]  renamer.addVarDeclaration(nameNode.getString());  [CE]  cannot  find  symbol  nameNode  [FE]        AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addVarDeclaration(nameNode.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(nameNode.getString());	  renamer.addVarDeclaration(parent.getString());    	non-compiled	[CE]  cannot  find  symbol  nameNode	7	None	replace
32	[BUG]  [BUGGY]  Renamer  renamer.addVarDeclaration(n.getString());  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  Renamer  renamer.addVarDeclaration(n.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer.addVarDeclaration(n.getString());	  renamer.addVarDeclaration(parent.getString());    	non-compiled	[CE]  ';'  expected	7	None	replace
33	[BUG]  [BUGGY]  renamer.addVarDeclaration(parent.getString(),  n);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addVarDeclaration(parent.getString(),  n);  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(parent.getString(),  n);	  renamer.addVarDeclaration(parent.getString());    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
34	[BUG]  [BUGGY]  renamer.addVarDeclaration(parent,  n.getString());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addVarDeclaration(parent,  n.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(parent,  n.getString());	  renamer.addVarDeclaration(parent.getString());    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
35	[BUG]  [BUGGY]  Renamer  renamer.addDeclaredName(n.getString());  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  Renamer  renamer.addDeclaredName(n.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	Renamer  renamer.addDeclaredName(n.getString());	  renamer.addDeclaredName(nameNode.getString());    	non-compiled	[CE]  ';'  expected	8	None	replace
36	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getFirstChild(),  parent);  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(n.getFirstChild(),  parent);  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getFirstChild(),  parent);	  renamer.addDeclaredName(n.getFirstChild());    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	10	None	replace
37	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getFirstChild());  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(parent.getFirstChild());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getFirstChild());	  renamer.addDeclaredName(n.getFirstChild());    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	10	None	replace
38	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getFirstChild(),  n);  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(n.getFirstChild(),  n);  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getFirstChild(),  n);	  renamer.addDeclaredName(n.getFirstChild());    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	10	None	replace
39	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getLastChild());  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(n.getLastChild());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getLastChild());	  renamer.addDeclaredName(n.getFirstChild());    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	10	None	replace
40	[BUG]  [BUGGY]  renamer.addDeclaredName(nameNode.getFirstChild());  [CE]  cannot  find  symbol  nameNode  [FE]          AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(nameNode.getFirstChild());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(nameNode.getFirstChild());	  renamer.addDeclaredName(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol  nameNode	10	None	replace
41	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getFirstChild(),  nameNode);  [CE]  cannot  find  symbol  nameNode  [FE]            AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(n.getFirstChild(),  nameNode);  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getFirstChild(),  nameNode);	  renamer.addDeclaredName(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol  nameNode	10	None	replace
42	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(parent.getString());  Node  nameNode  =  n.getFirstChild();  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();	  timeout    	compilable	timeout	3	1	add
43	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());  Node  nameNode  =  n.getFirstChild();  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(parent.getString());  Node  nameNode  =  n.getFirstChild();  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());    Node  nameNode  =  n.getFirstChild();	  timeout    	compilable	timeout	3	1	add
44	[BUG]  [BUGGY]      NameNode  nameNode  =  n.getFirstChild();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      NameNode  nameNode  =  n.getFirstChild();  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	        NameNode  nameNode  =  n.getFirstChild();	  timeout    	non-compiled	[CE]  cannot  find  symbol	5	None	add
45	[BUG]  [BUGGY]      renamer.addDeclaredName(getString());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      renamer.addDeclaredName(getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	        renamer.addDeclaredName(getString());	  timeout    	non-compiled	[CE]  cannot  find  symbol	5	None	add
46	[BUG]  [BUGGY]      nameNode  =  n.getFirstChild();  [CE]  cannot  find  symbol  nameNode  [FE]                  AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      nameNode  =  n.getFirstChild();  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	        nameNode  =  n.getFirstChild();	  timeout    	non-compiled	[CE]  cannot  find  symbol  nameNode	5	None	add
47	[BUG]  [BUGGY]      renamer.addVarDeclaration(n);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      renamer.addVarDeclaration(n);  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	        renamer.addVarDeclaration(n);	  timeout    	non-compiled	[CE]  cannot  find  symbol	5	None	add
48	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	        Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());	  timeout    	compilable	timeout	5	1	add
49	[BUG]  [BUGGY]      Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	        Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());	  timeout    	compilable	timeout	5	1	add
50	[BUG]  [BUGGY]      Node  n  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)  [FE]                AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      Node  n  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	        Node  n  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());	  timeout    	non-compiled	[CE]  variable  n  is  already  defined  in  method  findDeclaredNames(Node,Node,Renamer)	5	None	add
51	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	        Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	5	1	add
52	[BUG]  [BUGGY]      Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  timeout  [FE]                  AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	        Node  nameNode  =  parent.getFirstChild();  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	5	1	add
53	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	        Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	5	1	add
54	[BUG]  [BUGGY]      Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  timeout  [FE]                    AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]      Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	        Preconditions.checkState(n.getType()  ==  Token.NAME);  renamer.addDeclaredName(n.getString());	  timeout    	compilable	timeout	5	1	add
55	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  renamer.addDeclaredName(parent.getString());    timeout    	compilable	timeout	4	1	replace
56	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  timeout  [FE]            AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }	  renamer.addDeclaredName(parent.getString());    timeout    	compilable	timeout	4	1	replace
57	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }	  renamer.addDeclaredName(parent.getString());    timeout    	compilable	timeout	4	1	replace
58	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  timeout  [FE]              AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(n.getString());  }	  renamer.addDeclaredName(parent.getString());    timeout    	compilable	timeout	4	1	replace
59	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.get  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.get  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	if(NodeUtil.isVarDeclaration(n))  {  renamer.addDeclaredName(parent.getString());  }  else  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.get	  renamer.addDeclaredName(parent.getString());    timeout    	non-compiled	[CE]  ')'  expected	4	None	replace
60	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());  namer.addDeclaredName(parent.getString());  [CE]  cannot  find  symbol  namer  [FE]            AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(parent.getString());  namer.addDeclaredName(parent.getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());    namer.addDeclaredName(parent.getString());	  timeout    	non-compiled	[CE]  cannot  find  symbol  namer	3	None	add
61	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getLocalName());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(parent.getString());  renamer.addDeclaredName(parent.getLocalName());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());    renamer.addDeclaredName(parent.getLocalName());	  timeout    	non-compiled	[CE]  cannot  find  symbol	3	None	add
62	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(n.getFirstChild().getString());	  renamer.addDeclaredName(n.getFirstChild());    	compilable	timeout	10	1	replace
63	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  timeout  [FE]          AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(n.getFirstChild().getString());  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getFirstChild().getString());	  renamer.addDeclaredName(n.getFirstChild());    	compilable	timeout	10	1	replace
64	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getString(),  parent,  n);  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {    [BUGGY]  renamer.addDeclaredName(n.getString(),  parent,  n);  [BUGGY]    }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getString(),  parent,  n);	  renamer.addDeclaredName(n.getString(),    parent);    	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	2	None	replace
