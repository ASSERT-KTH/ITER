bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  renamer.addVarDeclaration(n.getString());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {  [BUGGY]  renamer.addVarDeclaration(n.getString());  [BUGGY]  }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(n.getString());	renamer.addDeclaredName(n.getString());  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
2	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getString(),  parent);  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError  [CONTEXT]  private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {  [BUGGY]  renamer.addDeclaredName(n.getString(),  parent);  [BUGGY]  }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getString(),  parent);	renamer.addDeclaredName(n.getString());  	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	13	None	replace
3	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError  [CONTEXT]  private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {  [BUGGY]  renamer.addDeclaredName(parent.getString());  [BUGGY]  }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	renamer.addDeclaredName(parent.getString());	renamer.addDeclaredName(n.getString());  	compilable	timeout	13	1	replace
4	[BUG]  [BUGGY]  renamer.addDeclaredName(parent.getString());  timeout  [FE]        AssertionFailedError  [CONTEXT]  private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {  [BUGGY]  renamer.addDeclaredName(parent.getString());  [BUGGY]  }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(parent.getString());	renamer.addDeclaredName(n.getString());  	compilable	timeout	13	1	replace
5	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError  [CONTEXT]  private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {  [BUGGY]    [BUGGY]  }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	add	  	renamer.addDeclaredName(n.getString());  	compilable	timeout	13	1	replace
6	[BUG]  [BUGGY]    timeout  [FE]          AssertionFailedError  [CONTEXT]  private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {  [BUGGY]    [BUGGY]  }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	  	renamer.addDeclaredName(n.getString());  	compilable	timeout	13	1	replace
7	[BUG]  [BUGGY]  renamer.addVarDeclaration(parent.getString());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {  [BUGGY]  renamer.addVarDeclaration(parent.getString());  [BUGGY]  }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addVarDeclaration(parent.getString());	renamer.addDeclaredName(n.getString());  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
8	[BUG]  [BUGGY]  renamer.addDeclaredName(nameNode.getString());  [CE]  cannot  find  symbol  nameNode  [FE]      AssertionFailedError  [CONTEXT]  private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {  [BUGGY]  renamer.addDeclaredName(nameNode.getString());  [BUGGY]  }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(nameNode.getString());	renamer.addDeclaredName(n.getString());  	non-compiled	[CE]  cannot  find  symbol  nameNode	13	None	replace
9	[BUG]  [BUGGY]  renamer.addDeclaredVarName(n.getString());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {  [BUGGY]  renamer.addDeclaredVarName(n.getString());  [BUGGY]  }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredVarName(n.getString());	renamer.addDeclaredName(n.getString());  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
10	[BUG]  [BUGGY]  renamer.addDeclaredName(n.getFirstChild());  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError  [CONTEXT]  private  void  findDeclaredNames(Node  n,  Node  parent,  Renamer  renamer)  {    if  (parent  ==  null  ||  parent.getType()  !=  Token.FUNCTION  ||  n  ==  parent.getFirstChild())  {  if  (NodeUtil.isVarDeclaration(n))  {  [BUGGY]  renamer.addDeclaredName(n.getFirstChild());  [BUGGY]  }  else  if  (NodeUtil.isFunctionDeclaration(n))  {  Node  nameNode  =  n.getFirstChild();  renamer.addDeclaredName(nameNode.getString());  }  for  (Node  c  =  n.getFirstChild();  c  !=  null;  c  =  c.getNext())  {  findDeclaredNames(c,  n,  renamer);  }  }  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  findDeclaredNames  [RETURN_TYPE]  void  Node  n  Node  parent  Renamer  renamer  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Node  c  n  nameNode  parent  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5462115958472655	213	213	66	replace	renamer.addDeclaredName(n.getFirstChild());	renamer.addDeclaredName(n.getString());  	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	13	None	replace
