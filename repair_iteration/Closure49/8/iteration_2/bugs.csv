bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + "_ "  +  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getQualifiedName()  + "_ "  +  c.getString();	  String    name    =    c.getString()    +   "_   "    +    c.getQualifiedName();    timeout    	compilable	timeout	18	1	replace
2	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  + "_ "  +  c.getString();  timeout  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + "_ "  +  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getQualifiedName()  + "_ "  +  c.getString();	  String    name    =    c.getString()    +   "_   "    +    c.getQualifiedName();    timeout    	compilable	timeout	18	1	replace
3	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + "_ "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  declarationRoot.getString()  + "_ "  +  c.getQualifiedName();	  String    name    =    c.getString()    +   "_   "    +    c.getQualifiedName();    timeout    	compilable	timeout	18	1	replace
4	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString()  + "_ "  +  c.getQualifiedName();  timeout  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + "_ "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  declarationRoot.getString()  + "_ "  +  c.getQualifiedName();	  String    name    =    c.getString()    +   "_   "    +    c.getQualifiedName();    timeout    	compilable	timeout	18	1	replace
5	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + "._ "  +  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getQualifiedName()  + "._ "  +  c.getString();	  String    name    =    c.getString()    +   "_   "    +    c.getQualifiedName();    timeout    	compilable	timeout	18	1	replace
6	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  + "._ "  +  c.getString();  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + "._ "  +  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getQualifiedName()  + "._ "  +  c.getString();	  String    name    =    c.getString()    +   "_   "    +    c.getQualifiedName();    timeout    	compilable	timeout	18	1	replace
7	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + "._ "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + "._ "  +  c.getQualifiedName();	  String    name    =    c.getString()    +   "_   "    +    c.getQualifiedName();    timeout    	compilable	timeout	18	1	replace
8	[BUG]  [BUGGY]  String  name  =  c.getString()  + "._ "  +  c.getQualifiedName();  timeout  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + "._ "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + "._ "  +  c.getQualifiedName();	  String    name    =    c.getString()    +   "_   "    +    c.getQualifiedName();    timeout    	compilable	timeout	18	1	replace
9	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ",_ "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ",_ "  +  c.getQualifiedName();	  String    name    =    c.getString()    +   "_   "    +    c.getQualifiedName();    timeout    	compilable	timeout	18	1	replace
10	[BUG]  [BUGGY]  String  name  =  c.getString()  + ",_ "  +  c.getQualifiedName();  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ",_ "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ",_ "  +  c.getQualifiedName();	  String    name    =    c.getString()    +   "_   "    +    c.getQualifiedName();    timeout    	compilable	timeout	18	1	replace
11	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + ", "  +  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getQualifiedName()  + ", "  +  c.getString();	  String    name    =    c.getString()    +   ",   "    +    c.getQualifiedName();    timeout    	compilable	timeout	22	1	replace
12	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  + ", "  +  c.getString();  timeout  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + ", "  +  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getQualifiedName()  + ", "  +  c.getString();	  String    name    =    c.getString()    +   ",   "    +    c.getQualifiedName();    timeout    	compilable	timeout	22	1	replace
13	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ";node ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ";node ";	  String    name    =    c.getString()    +   ";n   ";    timeout    	compilable	timeout	8	1	replace
14	[BUG]  [BUGGY]  String  name  =  c.getString()  + ";node ";  timeout  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ";node ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ";node ";	  String    name    =    c.getString()    +   ";n   ";    timeout    	compilable	timeout	8	1	replace
15	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ";null ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ";null ";	  String    name    =    c.getString()    +   ";n   ";    timeout    	compilable	timeout	8	1	replace
16	[BUG]  [BUGGY]  String  name  =  c.getString()  + ";null ";  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ";null ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ";null ";	  String    name    =    c.getString()    +   ";n   ";    timeout    	compilable	timeout	8	1	replace
17	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ";navigation ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ";navigation ";	  String    name    =    c.getString()    +   ";n   ";    timeout    	compilable	timeout	8	1	replace
18	[BUG]  [BUGGY]  String  name  =  c.getString()  + ";navigation ";  timeout  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ";navigation ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ";navigation ";	  String    name    =    c.getString()    +   ";n   ";    timeout    	compilable	timeout	8	1	replace
19	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ",null ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ",null ";	  String    name    =    c.getString()    +   ";n   ";    timeout    	compilable	timeout	8	1	replace
20	[BUG]  [BUGGY]  String  name  =  c.getString()  + ",null ";  timeout  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ",null ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ",null ";	  String    name    =    c.getString()    +   ";n   ";    timeout    	compilable	timeout	8	1	replace
21	[BUG]  [BUGGY]  String  name  =  c.getString()  + ".name ";null   ";  [CE]  unclosed  string  literal  [FE]                      AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ".name ";null   ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ".name ";null   ";	  String    name    =    c.getString()    +   ";n   ";    timeout    	non-compiled	[CE]  unclosed  string  literal	8	None	replace
22	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ";namer ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ";namer ";	  String    name    =    c.getString()    +   ";n   ";    timeout    	compilable	timeout	8	1	replace
23	[BUG]  [BUGGY]  String  name  =  c.getString()  + ";namer ";  timeout  [FE]                        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ";namer ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ";namer ";	  String    name    =    c.getString()    +   ";n   ";    timeout    	compilable	timeout	8	1	replace
24	[BUG]  [BUGGY]  Node  name  =  c.getFirstChild();  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  Node  name  =  c.getFirstChild();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	Node  name  =  c.getFirstChild();	      	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	12	None	replace
25	[BUG]  [BUGGY]  Node  name  =  c.getNext();  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  Node  name  =  c.getNext();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	Node  name  =  c.getNext();	      	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	12	None	replace
26	[BUG]  [BUGGY]  Node  name  =  c.getLastChild();  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  Node  name  =  c.getLastChild();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	Node  name  =  c.getLastChild();	      	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	12	None	replace
27	[BUG]  [BUGGY]  renamer.addDeclaredName(c);  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  renamer.addDeclaredName(c);  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	renamer.addDeclaredName(c);	      	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	12	None	replace
28	[BUG]  [BUGGY]  Node  name  =  declarationRoot.getFirstChild();  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  Node  name  =  declarationRoot.getFirstChild();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	Node  name  =  declarationRoot.getFirstChild();	      	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	12	None	replace
29	[BUG]  [BUGGY]  Node  nameNode  =  c.getFirstChild();  [CE]  cannot  find  symbol  name  [FE]                              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  Node  nameNode  =  c.getFirstChild();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	Node  nameNode  =  c.getFirstChild();	      	non-compiled	[CE]  cannot  find  symbol  name	12	None	replace
30	[BUG]  [BUGGY]  ContextualRenamer  declarationRoot  =  c.getConstructor();  [CE]  variable  declarationRoot  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  ContextualRenamer  declarationRoot  =  c.getConstructor();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	ContextualRenamer  declarationRoot  =  c.getConstructor();	      	non-compiled	[CE]  variable  declarationRoot  is  already  defined  in  method  enterScope(NodeTraversal)	12	None	replace
31	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + ": ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  declarationRoot.getString()  + ": ";	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
32	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString()  + ": ";  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + ": ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  declarationRoot.getString()  + ": ";	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
33	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + ",: ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  declarationRoot.getString()  + ",: ";	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
34	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString()  + ",: ";  timeout  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + ",: ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  declarationRoot.getString()  + ",: ";	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
35	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + ".: ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  declarationRoot.getString()  + ".: ";	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
36	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString()  + ".: ";  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + ".: ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  declarationRoot.getString()  + ".: ";	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
37	[BUG]  [BUGGY]  String  name  =  c.getName()  + ": ";  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getName()  + ": ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getName()  + ": ";	  String    name    =    c.getString()    +   ":   ";    timeout    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
38	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + ": ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getQualifiedName()  + ": ";	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
39	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  + ": ";  timeout  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + ": ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getQualifiedName()  + ": ";	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
40	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString();  String  name  =  declarationRoot.getString();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString();  String  name  =  declarationRoot.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    declarationRoot.getString();    String  name  =  declarationRoot.getString();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	3	None	add
41	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString();  String  name  =  definitionRoot.getString();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString();  String  name  =  definitionRoot.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    declarationRoot.getString();    String  name  =  definitionRoot.getString();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	3	None	add
42	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString();  String  name  =  statementRoot.getString();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString();  String  name  =  statementRoot.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    declarationRoot.getString();    String  name  =  statementRoot.getString();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	3	None	add
43	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString();  String  name  =  declareRoot.getString();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString();  String  name  =  declareRoot.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    declarationRoot.getString();    String  name  =  declareRoot.getString();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	3	None	add
44	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString();  String  name  =  descriptionRoot.getString();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString();  String  name  =  descriptionRoot.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    declarationRoot.getString();    String  name  =  descriptionRoot.getString();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	3	None	add
45	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString();  String  name  =  c.getString();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString();  String  name  =  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    declarationRoot.getString();    String  name  =  c.getString();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	3	None	add
46	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "_   "    +    c.getQualifiedName();    String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	17	None	add
47	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName();  String  name  =  c.getString()  + ",_   "  +  c.getQualifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName();  String  name  =  c.getString()  + ",_   "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "_   "    +    c.getQualifiedName();    String  name  =  c.getString()  + ",_   "  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	17	None	add
48	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName();  String  name  =  c.getString()  + "._   "  +  c.getQualifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName();  String  name  =  c.getString()  + "._   "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "_   "    +    c.getQualifiedName();    String  name  =  c.getString()  + "._   "  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	17	None	add
49	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName());  [CE]  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName());  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "_   "    +    c.getQualifiedName();    String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName());	  timeout    	non-compiled	[CE]  	17	None	add
50	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName();  String  name  =  c.getString()  +... "_   "  +  c.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName();  String  name  =  c.getString()  +... "_   "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "_   "    +    c.getQualifiedName();    String  name  =  c.getString()  +... "_   "  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  illegal  start  of  expression	17	None	add
51	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ";n   ";  String  name  =  c.getString()  +   ";n ";  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ";n   ";  String  name  =  c.getString()  +   ";n ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ";n   ";    String  name  =  c.getString()  +   ";n ";	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	7	None	add
52	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ";n   ";  String  name  =  c.getString()  +   ";n ",;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ";n   ";  String  name  =  c.getString()  +   ";n ",;  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ";n   ";    String  name  =  c.getString()  +   ";n ",;	  timeout    	non-compiled	[CE]  <identifier>  expected	7	None	add
53	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ";n   ";  String  name  =  c.getString()  +   ";n';  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ";n   ";  String  name  =  c.getString()  +   ";n';  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ";n   ";    String  name  =  c.getString()  +   ";n';	  timeout    	non-compiled	[CE]  unclosed  string  literal	7	None	add
54	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ";n   ";  String  name  =  c.getString()  +   ";n ");  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ";n   ";  String  name  =  c.getString()  +   ";n ");  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ";n   ";    String  name  =  c.getString()  +   ";n ");	  timeout    	non-compiled	[CE]  	7	None	add
55	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ";n   ";  String  name  =  c.getString()  + ",;n   ";  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                      AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ";n   ";  String  name  =  c.getString()  + ",;n   ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ";n   ";    String  name  =  c.getString()  + ",;n   ";	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	7	None	add
56	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "n   ";  String  name  =  c.getString()  +   "n   ";  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "n   ";  String  name  =  c.getString()  +   "n   ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "n   ";    String  name  =  c.getString()  +   "n   ";	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	9	None	add
57	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "n   ";  String  name  =  c.getString()  + ",n   ";  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "n   ";  String  name  =  c.getString()  + ",n   ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "n   ";    String  name  =  c.getString()  + ",n   ";	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	9	None	add
58	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "n   ";  String  name  =  c.getString()  +   "n';  [CE]  unclosed  string  literal  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "n   ";  String  name  =  c.getString()  +   "n';  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "n   ";    String  name  =  c.getString()  +   "n';	  timeout    	non-compiled	[CE]  unclosed  string  literal	9	None	add
59	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "n   ";  String  name  =  c.getString()  +   "n ",;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "n   ";  String  name  =  c.getString()  +   "n ",;  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "n   ";    String  name  =  c.getString()  +   "n ",;	  timeout    	non-compiled	[CE]  <identifier>  expected	9	None	add
60	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "n   ";  String  name  =  c.getString()  +   "n   ");  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "n   ";  String  name  =  c.getString()  +   "n   ");  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "n   ";    String  name  =  c.getString()  +   "n   ");	  timeout    	non-compiled	[CE]  	9	None	add
61	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "_   "+nameStack.peek();  String  name  =  c.getString()  +   "_   "+nameStack.peek();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "_   "+nameStack.peek();  String  name  =  c.getString()  +   "_   "+nameStack.peek();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "_   "+nameStack.peek();    String  name  =  c.getString()  +   "_   "+nameStack.peek();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	15	None	add
62	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "_   "+nameStack.peek();  String  name  =  c.getString()  + ",_   "+nameStack.peek();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "_   "+nameStack.peek();  String  name  =  c.getString()  + ",_   "+nameStack.peek();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "_   "+nameStack.peek();    String  name  =  c.getString()  + ",_   "+nameStack.peek();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	15	None	add
63	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "_   "+nameStack.peek();  String  name  =  c.getString()  + "._   "+nameStack.peek();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "_   "+nameStack.peek();  String  name  =  c.getString()  + "._   "+nameStack.peek();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "_   "+nameStack.peek();    String  name  =  c.getString()  + "._   "+nameStack.peek();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	15	None	add
64	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "_   "+nameStack.peek();  String  name  =  c.getString()  +... "_   "+nameStack.peek();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "_   "+nameStack.peek();  String  name  =  c.getString()  +... "_   "+nameStack.peek();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "_   "+nameStack.peek();    String  name  =  c.getString()  +... "_   "+nameStack.peek();	  timeout    	non-compiled	[CE]  illegal  start  of  expression	15	None	add
65	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "_   "+nameStack.peek();  String  name  =  c.getString()  +   "_   "+nameStack.peek());  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "_   "+nameStack.peek();  String  name  =  c.getString()  +   "_   "+nameStack.peek());  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "_   "+nameStack.peek();    String  name  =  c.getString()  +   "_   "+nameStack.peek());	  timeout    	non-compiled	[CE]  	15	None	add
66	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "_   "+nameStack.peek();  String  name  =  c,  getString()  +   "_   "+nameStack.peek();  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "_   "+nameStack.peek();  String  name  =  c,  getString()  +   "_   "+nameStack.peek();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "_   "+nameStack.peek();    String  name  =  c,  getString()  +   "_   "+nameStack.peek();	  timeout    	non-compiled	[CE]  	15	None	add
67	[BUG]  [BUGGY]  String  name  =  declarationRoot.getName();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  declarationRoot.getName();	  String    name    =    c.getName();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
68	[BUG]  [BUGGY]  String  name  =  c!=  null?  c.getName()  : "null ";  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c!=  null?  c.getName()  : "null ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c!=  null?  c.getName()  : "null ";	  String    name    =    c.getName();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
69	[BUG]  [BUGGY]  String  name  =  c!=  null?  declarationRoot.getName()  :  c.getName();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c!=  null?  declarationRoot.getName()  :  c.getName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c!=  null?  declarationRoot.getName()  :  c.getName();	  String    name    =    c.getName();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
70	[BUG]  [BUGGY]  String  name  =  declarationRoot,  c.getName();  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot,  c.getName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  declarationRoot,  c.getName();	  String    name    =    c.getName();    	non-compiled	[CE]  ';'  expected	11	None	replace
71	[BUG]  [BUGGY]  String  name  =  t.getName();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  t.getName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  t.getName();	  String    name    =    c.getName();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
72	[BUG]  [BUGGY]  String  name  =  c!=  null?  c.getName()  :  c.getName();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c!=  null?  c.getName()  :  c.getName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c!=  null?  c.getName()  :  c.getName();	  String    name    =    c.getName();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
73	[BUG]  [BUGGY]  String  name  =  c.getString()  + ",: "  +  c.getName();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ",: "  +  c.getName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ",: "  +  c.getName();	  String    name    =    c.getString()    +   ":   "    +    c.getName();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
74	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString()  + ": "  +  c.getName();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + ": "  +  c.getName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  declarationRoot.getString()  + ": "  +  c.getName();	  String    name    =    c.getString()    +   ":   "    +    c.getName();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
75	[BUG]  [BUGGY]  String  name  =  c.getString()  + ".: "  +  c.getName();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ".: "  +  c.getName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ".: "  +  c.getName();	  String    name    =    c.getString()    +   ":   "    +    c.getName();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
76	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ":   ";  String  name  =  c.getString()  +   ":   ";  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ":   ";  String  name  =  c.getString()  +   ":   ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ":   ";    String  name  =  c.getString()  +   ":   ";	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	5	None	add
77	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ":   ";  String  name  =  c.getString()  + ",:   ";  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ":   ";  String  name  =  c.getString()  + ",:   ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ":   ";    String  name  =  c.getString()  + ",:   ";	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	5	None	add
78	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ":   ";  String  name  =  c.getString()  + ".:   ";  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ":   ";  String  name  =  c.getString()  + ".:   ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ":   ";    String  name  =  c.getString()  + ".:   ";	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	5	None	add
79	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ":   ";  String  name  =  c.getString()  +   ": ".;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ":   ";  String  name  =  c.getString()  +   ": ".;  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ":   ";    String  name  =  c.getString()  +   ": ".;	  timeout    	non-compiled	[CE]  <identifier>  expected	5	None	add
80	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ":   ";  String  name  =  c.getString()  +   ": ",;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ":   ";  String  name  =  c.getString()  +   ": ",;  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ":   ";    String  name  =  c.getString()  +   ": ",;	  timeout    	non-compiled	[CE]  <identifier>  expected	5	None	add
81	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ",   "    +    c.getQualifiedName();    String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	21	None	add
82	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ",'  +  c.getQualifiedName();  [CE]  unclosed  string  literal  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ",'  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ",   "    +    c.getQualifiedName();    String  name  =  c.getString()  +   ",'  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  unclosed  string  literal	21	None	add
83	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName();  String  name  =  c.getString()  + ".,   "  +  c.getQualifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName();  String  name  =  c.getString()  + ".,   "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ",   "    +    c.getQualifiedName();    String  name  =  c.getString()  + ".,   "  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	21	None	add
84	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName());  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName());  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ",   "    +    c.getQualifiedName();    String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName());	  timeout    	non-compiled	[CE]  	21	None	add
85	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ",... "  +  c.getQualifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                      AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ",... "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ",   "    +    c.getQualifiedName();    String  name  =  c.getString()  +   ",... "  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	21	None	add
86	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + ": "  +  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getQualifiedName()  + ": "  +  c.getString();	  String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    timeout    	compilable	timeout	14	1	replace
87	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  + ": "  +  c.getString();  timeout  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + ": "  +  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getQualifiedName()  + ": "  +  c.getString();	  String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    timeout    	compilable	timeout	14	1	replace
88	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + ": "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  declarationRoot.getString()  + ": "  +  c.getQualifiedName();	  String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    timeout    	compilable	timeout	14	1	replace
89	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString()  + ": "  +  c.getQualifiedName();  timeout  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + ": "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  declarationRoot.getString()  + ": "  +  c.getQualifiedName();	  String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    timeout    	compilable	timeout	14	1	replace
90	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + ".: "  +  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getQualifiedName()  + ".: "  +  c.getString();	  String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    timeout    	compilable	timeout	14	1	replace
91	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  + ".: "  +  c.getString();  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + ".: "  +  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getQualifiedName()  + ".: "  +  c.getString();	  String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    timeout    	compilable	timeout	14	1	replace
92	[BUG]  [BUGGY]  String  name  =  c.getName()  + ": "  +  c.getQualifiedName();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getName()  + ": "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getName()  + ": "  +  c.getQualifiedName();	  String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
93	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ": "  +  declarationRoot.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ": "  +  declarationRoot.getQualifiedName();	  String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    timeout    	compilable	timeout	14	1	replace
94	[BUG]  [BUGGY]  String  name  =  c.getString()  + ": "  +  declarationRoot.getQualifiedName();  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ": "  +  declarationRoot.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ": "  +  declarationRoot.getQualifiedName();	  String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    timeout    	compilable	timeout	14	1	replace
95	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName();  String  name  =  c.getQualifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName();  String  name  =  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getQualifiedName();    String  name  =  c.getQualifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	1	None	add
96	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName();  String  name  =  declarationRoot.getQualifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName();  String  name  =  declarationRoot.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getQualifiedName();    String  name  =  declarationRoot.getQualifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	1	None	add
97	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName();  String  name  =  c.getQualifiedName());  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName();  String  name  =  c.getQualifiedName());  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getQualifiedName();    String  name  =  c.getQualifiedName());	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
98	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName();  String  name  =  c,  getQualifiedName();  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName();  String  name  =  c,  getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getQualifiedName();    String  name  =  c,  getQualifiedName();	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
99	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName();  Character  name  =  c.getQualifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName();  Character  name  =  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getQualifiedName();    Character  name  =  c.getQualifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	1	None	add
100	[BUG]  [BUGGY]  Name  name  =  c.getString();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  Name  name  =  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	Name  name  =  c.getString();	  String    name    =    declarationRoot.getString();    timeout    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
101	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  declarationRoot.getQualifiedName();	  String    name    =    declarationRoot.getString();    timeout    	compilable	timeout	4	1	replace
102	[BUG]  [BUGGY]  String  name  =  declarationRoot.getQualifiedName();  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  declarationRoot.getQualifiedName();	  String    name    =    declarationRoot.getString();    timeout    	compilable	timeout	4	1	replace
103	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + "n ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  declarationRoot.getString()  + "n ";	  String    name    =    declarationRoot.getString();    timeout    	compilable	timeout	4	1	replace
104	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString()  + "n ";  timeout  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + "n ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  declarationRoot.getString()  + "n ";	  String    name    =    declarationRoot.getString();    timeout    	compilable	timeout	4	1	replace
105	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + ";n ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  declarationRoot.getString()  + ";n ";	  String    name    =    declarationRoot.getString();    timeout    	compilable	timeout	4	1	replace
106	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString()  + ";n ";  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + ";n ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  declarationRoot.getString()  + ";n ";	  String    name    =    declarationRoot.getString();    timeout    	compilable	timeout	4	1	replace
107	[BUG]  [BUGGY]  String  name  =  c.getString()  + ",_ "  +  c.getName();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ",_ "  +  c.getName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ",_ "  +  c.getName();	  String    name    =    c.getString()    +   "_   "    +    c.getName();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
108	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString()  + "_ "  +  c.getName();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + "_ "  +  c.getName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  declarationRoot.getString()  + "_ "  +  c.getName();	  String    name    =    c.getString()    +   "_   "    +    c.getName();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
109	[BUG]  [BUGGY]  String  name  =  c.getString()  + "._ "  +  c.getName();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + "._ "  +  c.getName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + "._ "  +  c.getName();	  String    name    =    c.getString()    +   "_   "    +    c.getName();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
110	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + "_ ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + "_ ";	  String    name    =    c.getString()    +   "n   ";    timeout    	compilable	timeout	10	1	replace
111	[BUG]  [BUGGY]  String  name  =  c.getString()  + "_ ";  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + "_ ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + "_ ";	  String    name    =    c.getString()    +   "n   ";    timeout    	compilable	timeout	10	1	replace
112	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ", ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ", ";	  String    name    =    c.getString()    +   "n   ";    timeout    	compilable	timeout	10	1	replace
113	[BUG]  [BUGGY]  String  name  =  c.getString()  + ", ";  timeout  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ", ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ", ";	  String    name    =    c.getString()    +   "n   ";    timeout    	compilable	timeout	10	1	replace
114	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + "null ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  declarationRoot.getString()  + "null ";	  String    name    =    c.getString()    +   "n   ";    timeout    	compilable	timeout	10	1	replace
115	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString()  + "null ";  timeout  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + "null ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  declarationRoot.getString()  + "null ";	  String    name    =    c.getString()    +   "n   ";    timeout    	compilable	timeout	10	1	replace
116	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + "' ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + "' ";	  String    name    =    c.getString()    +   "n   ";    timeout    	compilable	timeout	10	1	replace
117	[BUG]  [BUGGY]  String  name  =  c.getString()  + "' ";  timeout  [FE]                      AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + "' ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + "' ";	  String    name    =    c.getString()    +   "n   ";    timeout    	compilable	timeout	10	1	replace
118	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	13	None	add
119	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  String  name  =  c.getString()  + ",:   "  +  c.getQualifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  String  name  =  c.getString()  + ",:   "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    String  name  =  c.getString()  + ",:   "  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	13	None	add
120	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  String  name  =  c.getString()  + ".:   "  +  c.getQualifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  String  name  =  c.getString()  + ".:   "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    String  name  =  c.getString()  + ".:   "  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	13	None	add
121	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ": ".  +  c.getQualifiedName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ": ".  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    String  name  =  c.getString()  +   ": ".  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  <identifier>  expected	13	None	add
122	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ":... "  +  c.getQualifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ":... "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    String  name  =  c.getString()  +   ":... "  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	13	None	add
123	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName());  [CE]  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName());  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName());	  timeout    	non-compiled	[CE]  	13	None	add
124	[BUG]  [BUGGY]  String  name  =  c.getString()  + "_ "+declarationRoot.peek();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + "_ "+declarationRoot.peek();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + "_ "+declarationRoot.peek();	  String    name    =    c.getString()    +   "_   "+nameStack.peek();    timeout    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
125	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + "_ "+nameStack.pop();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + "_ "+nameStack.pop();	  String    name    =    c.getString()    +   "_   "+nameStack.peek();    timeout    	compilable	timeout	16	1	replace
126	[BUG]  [BUGGY]  String  name  =  c.getString()  + "_ "+nameStack.pop();  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + "_ "+nameStack.pop();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + "_ "+nameStack.pop();	  String    name    =    c.getString()    +   "_   "+nameStack.peek();    timeout    	compilable	timeout	16	1	replace
127	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + "._ "+nameStack.peek();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + "._ "+nameStack.peek();	  String    name    =    c.getString()    +   "_   "+nameStack.peek();    timeout    	compilable	timeout	16	1	replace
128	[BUG]  [BUGGY]  String  name  =  c.getString()  + "._ "+nameStack.peek();  timeout  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + "._ "+nameStack.peek();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + "._ "+nameStack.peek();	  String    name    =    c.getString()    +   "_   "+nameStack.peek();    timeout    	compilable	timeout	16	1	replace
129	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ",_ "+nameStack.peek();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ",_ "+nameStack.peek();	  String    name    =    c.getString()    +   "_   "+nameStack.peek();    timeout    	compilable	timeout	16	1	replace
130	[BUG]  [BUGGY]  String  name  =  c.getString()  + ",_ "+nameStack.peek();  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ",_ "+nameStack.peek();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ",_ "+nameStack.peek();	  String    name    =    c.getString()    +   "_   "+nameStack.peek();    timeout    	compilable	timeout	16	1	replace
131	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString()  + "_ "+c.peek();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + "_ "+c.peek();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  declarationRoot.getString()  + "_ "+c.peek();	  String    name    =    c.getString()    +   "_   "+nameStack.peek();    timeout    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
132	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName().trim();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getQualifiedName().trim();	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
133	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName().trim();  timeout  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName().trim();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getQualifiedName().trim();	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
134	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  +  1;  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getQualifiedName()  +  1;	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
135	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  +  1;  timeout  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  +  1;  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getQualifiedName()  +  1;	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
136	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + "n ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getQualifiedName()  + "n ";	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
137	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  + "n ";  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + "n ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getQualifiedName()  + "n ";	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
138	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + ";n ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getQualifiedName()  + ";n ";	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
139	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  + ";n ";  timeout  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + ";n ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getQualifiedName()  + ";n ";	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
140	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName();  String  names  =  c.getQualifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName();  String  names  =  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getQualifiedName();    String  names  =  c.getQualifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	1	None	add
141	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName();  String  Name  =  c.getQualifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName();  String  Name  =  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getQualifiedName();    String  Name  =  c.getQualifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	1	None	add
142	[BUG]  [BUGGY]  Node  declarationRoot  =  c.getFirstChild();  [CE]  variable  declarationRoot  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  Node  declarationRoot  =  c.getFirstChild();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	Node  declarationRoot  =  c.getFirstChild();	      	non-compiled	[CE]  variable  declarationRoot  is  already  defined  in  method  enterScope(NodeTraversal)	12	None	replace
143	[BUG]  [BUGGY]  Node  declarationRoot  =  c.getNext();  [CE]  variable  declarationRoot  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                      AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  Node  declarationRoot  =  c.getNext();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	Node  declarationRoot  =  c.getNext();	      	non-compiled	[CE]  variable  declarationRoot  is  already  defined  in  method  enterScope(NodeTraversal)	12	None	replace
144	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ".name: ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ".name: ";	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
145	[BUG]  [BUGGY]  String  name  =  c.getString()  + ".name: ";  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ".name: ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ".name: ";	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
146	[BUG]  [BUGGY]  String  name  =  c.getString()  + ": "  +  idPrefix;  [CE]  cannot  find  symbol  idPrefix  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ": "  +  idPrefix;  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ": "  +  idPrefix;	  String    name    =    c.getString()    +   ":   ";    timeout    	non-compiled	[CE]  cannot  find  symbol  idPrefix	6	None	replace
147	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ",  declarationRoot: ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ",  declarationRoot: ";	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
148	[BUG]  [BUGGY]  String  name  =  c.getString()  + ",  declarationRoot: ";  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ",  declarationRoot: ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ",  declarationRoot: ";	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
149	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ".name ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ".name ";	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
150	[BUG]  [BUGGY]  String  name  =  c.getString()  + ".name ";  timeout  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ".name ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ".name ";	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
151	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ": "+nameStack.peek();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ": "+nameStack.peek();	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
152	[BUG]  [BUGGY]  String  name  =  c.getString()  + ": "+nameStack.peek();  timeout  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ": "+nameStack.peek();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ": "+nameStack.peek();	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
153	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "_   "+nameStack.peek();  String  name  =  c.getString()  +'_   "+nameStack.peek();  [CE]  unclosed  character  literal  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "_   "+nameStack.peek();  String  name  =  c.getString()  +'_   "+nameStack.peek();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "_   "+nameStack.peek();    String  name  =  c.getString()  +'_   "+nameStack.peek();	  timeout    	non-compiled	[CE]  unclosed  character  literal	15	None	add
154	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ", ",  +  c.getQualifiedName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ", ",  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ",   "    +    c.getQualifiedName();    String  name  =  c.getString()  +   ", ",  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  <identifier>  expected	21	None	add
155	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ";n   ";  String  name  =  c.getString()  +   ";n ".;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ";n   ";  String  name  =  c.getString()  +   ";n ".;  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ";n   ";    String  name  =  c.getString()  +   ";n ".;	  timeout    	non-compiled	[CE]  <identifier>  expected	7	None	add
156	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ",n "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ",n "  +  c.getQualifiedName();	  String    name    =    c.getString()    +   ",   "    +    c.getQualifiedName();    timeout    	compilable	timeout	22	1	replace
157	[BUG]  [BUGGY]  String  name  =  c.getString()  + ",n "  +  c.getQualifiedName();  timeout  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ",n "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ",n "  +  c.getQualifiedName();	  String    name    =    c.getString()    +   ",   "    +    c.getQualifiedName();    timeout    	compilable	timeout	22	1	replace
158	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString();  String  name  =  declaredRoot.getString();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString();  String  name  =  declaredRoot.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    declarationRoot.getString();    String  name  =  declaredRoot.getString();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	3	None	add
159	[BUG]  [BUGGY]  namer  =  c.getString();  [CE]  cannot  find  symbol  namer  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  namer  =  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	namer  =  c.getString();	  String    name    =    c.getString()    +   ";n   ";    timeout    	non-compiled	[CE]  cannot  find  symbol  namer	8	None	replace
160	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ".node ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ".node ";	  String    name    =    c.getString()    +   ";n   ";    timeout    	compilable	timeout	8	1	replace
161	[BUG]  [BUGGY]  String  name  =  c.getString()  + ".node ";  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ".node ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ".node ";	  String    name    =    c.getString()    +   ";n   ";    timeout    	compilable	timeout	8	1	replace
162	[BUG]  [BUGGY]  namer  =  c.getNext();  [CE]  cannot  find  symbol  namer  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  namer  =  c.getNext();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	namer  =  c.getNext();	  String    name    =    c.getString()    +   ";n   ";    timeout    	non-compiled	[CE]  cannot  find  symbol  namer	8	None	replace
163	[BUG]  [BUGGY]  namer  =  c.getString()  + ";n ";  [CE]  cannot  find  symbol  namer  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  namer  =  c.getString()  + ";n ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	namer  =  c.getString()  + ";n ";	  String    name    =    c.getString()    +   ";n   ";    timeout    	non-compiled	[CE]  cannot  find  symbol  namer	8	None	replace
164	[BUG]  [BUGGY]  String  name  =  c!=  null?  c.getName()  :  ARGUMENTS;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c!=  null?  c.getName()  :  ARGUMENTS;  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c!=  null?  c.getName()  :  ARGUMENTS;	  String    name    =    c.getName();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
165	[BUG]  [BUGGY]  String  name  =  c  ==  null?  c.getName()  :  ARGUMENTS;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c  ==  null?  c.getName()  :  ARGUMENTS;  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c  ==  null?  c.getName()  :  ARGUMENTS;	  String    name    =    c.getName();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
166	[BUG]  [BUGGY]  String  name  =  c  ==  null?  declarationRoot.getName()  :  c.getName();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c  ==  null?  declarationRoot.getName()  :  c.getName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c  ==  null?  declarationRoot.getName()  :  c.getName();	  String    name    =    c.getName();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
167	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName().toLowerCase();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getQualifiedName().toLowerCase();	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
168	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName().toLowerCase();  timeout  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName().toLowerCase();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getQualifiedName().toLowerCase();	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
169	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + ", "  +  c.getLastChild();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getQualifiedName()  + ", "  +  c.getLastChild();	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
170	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  + ", "  +  c.getLastChild();  timeout  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + ", "  +  c.getLastChild();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getQualifiedName()  + ", "  +  c.getLastChild();	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
171	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName().replace('.',  '/');  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getQualifiedName().replace('.',  '/');	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
172	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName().replace('.',  '/');  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName().replace('.',  '/');  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getQualifiedName().replace('.',  '/');	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
173	[BUG]  [BUGGY]  String  name  =  c.getString()  + "_ ",  c.getQualifiedName();  [CE]  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + "_ ",  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + "_ ",  c.getQualifiedName();	  String    name    =    c.getString()    +   "_   "    +    c.getQualifiedName();    timeout    	non-compiled	[CE]  	18	None	replace
174	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "n   ";  String  name  =  c.getString()  + ".n   ";  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "n   ";  String  name  =  c.getString()  + ".n   ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "n   ";    String  name  =  c.getString()  + ".n   ";	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	9	None	add
175	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   "_... "  +  c.getQualifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   "_... "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "_   "    +    c.getQualifiedName();    String  name  =  c.getString()  +   "_... "  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	17	None	add
176	[BUG]  [BUGGY]  String  name  =  c.getString()  + "_ "  +  declarationRoot.getName();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + "_ "  +  declarationRoot.getName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + "_ "  +  declarationRoot.getName();	  String    name    =    c.getString()    +   "_   "    +    c.getName();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
177	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ".name: "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ".name: "  +  c.getQualifiedName();	  String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    timeout    	compilable	timeout	14	1	replace
178	[BUG]  [BUGGY]  String  name  =  c.getString()  + ".name: "  +  c.getQualifiedName();  timeout  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ".name: "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ".name: "  +  c.getQualifiedName();	  String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    timeout    	compilable	timeout	14	1	replace
179	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + "_ "  +  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  declarationRoot.getString()  + "_ "  +  c.getString();	  String    name    =    declarationRoot.getString();    timeout    	compilable	timeout	4	1	replace
180	[BUG]  [BUGGY]  String  name  =  declarationRoot.getString()  + "_ "  +  c.getString();  timeout  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  declarationRoot.getString()  + "_ "  +  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  declarationRoot.getString()  + "_ "  +  c.getString();	  String    name    =    declarationRoot.getString();    timeout    	compilable	timeout	4	1	replace
181	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ": ",  +  c.getQualifiedName();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  String  name  =  c.getString()  +   ": ",  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    String  name  =  c.getString()  +   ": ",  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  <identifier>  expected	13	None	add
182	[BUG]  [BUGGY]  String  name  =  c.getString()  + "_ "  +  c.peek();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + "_ "  +  c.peek();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + "_ "  +  c.peek();	  String    name    =    c.getString()    +   "_   "+nameStack.peek();    timeout    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
183	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  String  name  =  c.getString()  +... ":   "  +  c.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  String  name  =  c.getString()  +... ":   "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    String  name  =  c.getString()  +... ":   "  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  illegal  start  of  expression	13	None	add
184	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  String  name  =  c.getString()  + "):   "  +  c.getQualifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ":   "  +  c.getQualifiedName();  String  name  =  c.getString()  + "):   "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    String  name  =  c.getString()  + "):   "  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	13	None	add
185	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =(c.getString()  ==  null)?  c.getString()  : "null ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =(c.getString()  ==  null)?  c.getString()  : "null ";	  String    name    =    declarationRoot.getString();    timeout    	compilable	timeout	4	1	replace
186	[BUG]  [BUGGY]  String  name  =(c.getString()  ==  null)?  c.getString()  : "null ";  timeout  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =(c.getString()  ==  null)?  c.getString()  : "null ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =(c.getString()  ==  null)?  c.getString()  : "null ";	  String    name    =    declarationRoot.getString();    timeout    	compilable	timeout	4	1	replace
187	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =(c.getString()  ==  null)?  declarationRoot.getString()  :  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =(c.getString()  ==  null)?  declarationRoot.getString()  :  c.getString();	  String    name    =    declarationRoot.getString();    timeout    	compilable	timeout	4	1	replace
188	[BUG]  [BUGGY]  String  name  =(c.getString()  ==  null)?  declarationRoot.getString()  :  c.getString();  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =(c.getString()  ==  null)?  declarationRoot.getString()  :  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =(c.getString()  ==  null)?  declarationRoot.getString()  :  c.getString();	  String    name    =    declarationRoot.getString();    timeout    	compilable	timeout	4	1	replace
189	[BUG]  [BUGGY]  String  name  =(c.getString()  ==  null)?  declarationRoot  :  c.getString();  [CE]  incompatible  types  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =(c.getString()  ==  null)?  declarationRoot  :  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =(c.getString()  ==  null)?  declarationRoot  :  c.getString();	  String    name    =    declarationRoot.getString();    timeout    	non-compiled	[CE]  incompatible  types	4	None	replace
190	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =(c.getString()  ==  null)?  c.getString()  : "  <  unknown> ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =(c.getString()  ==  null)?  c.getString()  : "  <  unknown> ";	  String    name    =    declarationRoot.getString();    timeout    	compilable	timeout	4	1	replace
191	[BUG]  [BUGGY]  String  name  =(c.getString()  ==  null)?  c.getString()  : "  <  unknown> ";  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =(c.getString()  ==  null)?  c.getString()  : "  <  unknown> ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =(c.getString()  ==  null)?  c.getString()  : "  <  unknown> ";	  String    name    =    declarationRoot.getString();    timeout    	compilable	timeout	4	1	replace
192	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + "._ ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + "._ ";	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
193	[BUG]  [BUGGY]  String  name  =  c.getString()  + "._ ";  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + "._ ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + "._ ";	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
194	[BUG]  [BUGGY]  String  name  =  c.getString()  + ": ",  t.getModule());  [CE]  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ": ",  t.getModule());  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ": ",  t.getModule());	  String    name    =    c.getString()    +   ":   ";    timeout    	non-compiled	[CE]  	6	None	replace
195	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ".: ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ".: ";	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
196	[BUG]  [BUGGY]  String  name  =  c.getString()  + ".: ";  timeout  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ".: ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ".: ";	  String    name    =    c.getString()    +   ":   ";    timeout    	compilable	timeout	6	1	replace
197	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ":   ";  String  name  =  c.getString()  +... ":   ";  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ":   ";  String  name  =  c.getString()  +... ":   ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ":   ";    String  name  =  c.getString()  +... ":   ";	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
198	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "_   "+nameStack.peek();  String  name  =  c.getString()  + ")_   "+nameStack.peek();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "_   "+nameStack.peek();  String  name  =  c.getString()  + ")_   "+nameStack.peek();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "_   "+nameStack.peek();    String  name  =  c.getString()  + ")_   "+nameStack.peek();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	15	None	add
199	[BUG]  [BUGGY]  null  =  c.getString();  [CE]  unexpected  type  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  null  =  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	null  =  c.getString();	  String    name    =    c.getString()    +   ";n   ";    timeout    	non-compiled	[CE]  unexpected  type	8	None	replace
200	[BUG]  [BUGGY]  node  =  c.getString();  [CE]  cannot  find  symbol  node  [FE]                AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  node  =  c.getString();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	node  =  c.getString();	  String    name    =    c.getString()    +   ";n   ";    timeout    	non-compiled	[CE]  cannot  find  symbol  node	8	None	replace
201	[BUG]  [BUGGY]  namer  =  c.getFirstChild();  [CE]  cannot  find  symbol  namer  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  namer  =  c.getFirstChild();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	namer  =  c.getFirstChild();	  String    name    =    c.getString()    +   ";n   ";    timeout    	non-compiled	[CE]  cannot  find  symbol  namer	8	None	replace
202	[BUG]  [BUGGY]  n   ";  [CE]  unclosed  string  literal  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  n   ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	n   ";	  String    name    =    c.getString()    +   ";n   ";    timeout    	non-compiled	[CE]  unclosed  string  literal	8	None	replace
203	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName();  String  name  =  c.getQUalifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName();  String  name  =  c.getQUalifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getQualifiedName();    String  name  =  c.getQUalifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	1	None	add
204	[BUG]  [BUGGY]  String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName();  String  name  =  c.getString()  + ")_   "  +  c.getQualifiedName();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   "_   "  +  c.getQualifiedName();  String  name  =  c.getString()  + ")_   "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   "_   "    +    c.getQualifiedName();    String  name  =  c.getString()  + ")_   "  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	17	None	add
205	[BUG]  [BUGGY]  Node  name  =(Node)c.getFirstChild();  [CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  Node  name  =(Node)c.getFirstChild();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	Node  name  =(Node)c.getFirstChild();	      	non-compiled	[CE]  method  addDeclaredName  in  interface  Renamer  cannot  be  applied  to  given  types;	12	None	replace
206	[BUG]  [BUGGY]  ContextualRenamer  declarationRoot  =  c.getFirstChild();  [CE]  variable  declarationRoot  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                      AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  ContextualRenamer  declarationRoot  =  c.getFirstChild();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	ContextualRenamer  declarationRoot  =  c.getFirstChild();	      	non-compiled	[CE]  variable  declarationRoot  is  already  defined  in  method  enterScope(NodeTraversal)	12	None	replace
207	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName();  String  name  =  c.getString()  +... ",   "  +  c.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  +   ",   "  +  c.getQualifiedName();  String  name  =  c.getString()  +... ",   "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ",   "    +    c.getQualifiedName();    String  name  =  c.getString()  +... ",   "  +  c.getQualifiedName();	  timeout    	non-compiled	[CE]  illegal  start  of  expression	21	None	add
208	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + ".. "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getQualifiedName()  + ".. "  +  c.getQualifiedName();	  String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    timeout    	compilable	timeout	14	1	replace
209	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  + ".. "  +  c.getQualifiedName();  timeout  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + ".. "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getQualifiedName()  + ".. "  +  c.getQualifiedName();	  String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    timeout    	compilable	timeout	14	1	replace
210	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ".. "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ".. "  +  c.getQualifiedName();	  String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    timeout    	compilable	timeout	14	1	replace
211	[BUG]  [BUGGY]  String  name  =  c.getString()  + ".. "  +  c.getQualifiedName();  timeout  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + ".. "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ".. "  +  c.getQualifiedName();	  String    name    =    c.getString()    +   ":   "    +    c.getQualifiedName();    timeout    	compilable	timeout	14	1	replace
212	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + "_ "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getQualifiedName()  + "_ "  +  c.getQualifiedName();	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
213	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  + "_ "  +  c.getQualifiedName();  timeout  [FE]        AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + "_ "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getQualifiedName()  + "_ "  +  c.getQualifiedName();	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
214	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + ": "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getQualifiedName()  + ": "  +  c.getQualifiedName();	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
215	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  + ": "  +  c.getQualifiedName();  timeout  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + ": "  +  c.getQualifiedName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getQualifiedName()  + ": "  +  c.getQualifiedName();	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
216	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + "_ "  +  c.getLastChild();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getQualifiedName()  + "_ "  +  c.getLastChild();	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
217	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  + "_ "  +  c.getLastChild();  timeout  [FE]            AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getQualifiedName()  + "_ "  +  c.getLastChild();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getQualifiedName()  + "_ "  +  c.getLastChild();	  String    name    =    c.getQualifiedName();    timeout    	compilable	timeout	2	1	replace
218	[BUG]  [BUGGY]  String  name  =  c  ==  null?  t.getName()  :  c.getName();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c  ==  null?  t.getName()  :  c.getName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c  ==  null?  t.getName()  :  c.getName();	  String    name    =    c.getName();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
219	[BUG]  [BUGGY]  String  name  =  c!=  null?  c.getName()  : "  <  unknown> ";  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c!=  null?  c.getName()  : "  <  unknown> ";  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c!=  null?  c.getName()  : "  <  unknown> ";	  String    name    =    c.getName();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
220	[BUG]  [BUGGY]  String  name  =  c  ==  null?  c.getName()  :  c.getName();  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c  ==  null?  c.getName()  :  c.getName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c  ==  null?  c.getName()  :  c.getName();	  String    name    =    c.getName();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
221	[BUG]  [BUGGY]  String  name  =  c.getString()  + "_ "  +  t.getName();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {    [BUGGY]  String  name  =  c.getString()  + "_ "  +  t.getName();  [BUGGY]    renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + "_ "  +  t.getName();	  String    name    =    c.getString()    +   "_   "    +    c.getName();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
