bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ".:   ";  String  name  =  c.getString()  +   ".:   ";  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                    AssertionFailedError      [CONTEXT]      declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {      [BUGGY]  String  name  =  c.getString()  +   ".:   ";  String  name  =  c.getString()  +   ".:   ";  [BUGGY]      renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ".:   ";    String  name  =  c.getString()  +   ".:   ";	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	195	None	add
2	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ".:   ";  String  name  =  c.getString()  + ",.:   ";  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                      AssertionFailedError      [CONTEXT]      declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {      [BUGGY]  String  name  =  c.getString()  +   ".:   ";  String  name  =  c.getString()  + ",.:   ";  [BUGGY]      renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ".:   ";    String  name  =  c.getString()  + ",.:   ";	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	195	None	add
3	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ".:   ";  String  name  =  c.getString()  +   ".: ".;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {      [BUGGY]  String  name  =  c.getString()  +   ".:   ";  String  name  =  c.getString()  +   ".: ".;  [BUGGY]      renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ".:   ";    String  name  =  c.getString()  +   ".: ".;	  timeout    	non-compiled	[CE]  <identifier>  expected	195	None	add
4	[BUG]  [BUGGY]  String  name  =  c.getString()  +   ".:   ";  String  name  =  c.getString()  +   ".: ",;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {      [BUGGY]  String  name  =  c.getString()  +   ".:   ";  String  name  =  c.getString()  +   ".: ",;  [BUGGY]      renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getString()    +   ".:   ";    String  name  =  c.getString()  +   ".: ",;	  timeout    	non-compiled	[CE]  <identifier>  expected	195	None	add
5	[BUG]  [BUGGY]  timeout  [FE]                      AssertionFailedError      [CONTEXT]      declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {      [BUGGY]  String  name  =  c.getString()  + "., "  +  c.getQualifiedName();  [BUGGY]      renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + "., "  +  c.getQualifiedName();	  String    name    =    c.getString()    +       ",       "    +    c.getQualifiedName();    String    name    =    c.getString()    +   ".,       "    +    c.getQualifiedName();    	compilable	timeout	83	1	replace
6	[BUG]  [BUGGY]  String  name  =  c.getString()  + "., "  +  c.getQualifiedName();  timeout  [FE]                      AssertionFailedError      [CONTEXT]      declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {      [BUGGY]  String  name  =  c.getString()  + "., "  +  c.getQualifiedName();  [BUGGY]      renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + "., "  +  c.getQualifiedName();	  String    name    =    c.getString()    +       ",       "    +    c.getQualifiedName();    String    name    =    c.getString()    +   ".,       "    +    c.getQualifiedName();    	compilable	timeout	83	1	replace
7	[BUG]  [BUGGY]  timeout  [FE]                        AssertionFailedError      [CONTEXT]      declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {      [BUGGY]  String  name  =  c.getString()  + ". "  +  c.getQualifiedName();  [BUGGY]      renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =  c.getString()  + ". "  +  c.getQualifiedName();	  String    name    =    c.getString()    +       ",       "    +    c.getQualifiedName();    String    name    =    c.getString()    +   ".,       "    +    c.getQualifiedName();    	compilable	timeout	83	1	replace
8	[BUG]  [BUGGY]  String  name  =  c.getString()  + ". "  +  c.getQualifiedName();  timeout  [FE]                        AssertionFailedError      [CONTEXT]      declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {      [BUGGY]  String  name  =  c.getString()  + ". "  +  c.getQualifiedName();  [BUGGY]      renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =  c.getString()  + ". "  +  c.getQualifiedName();	  String    name    =    c.getString()    +       ",       "    +    c.getQualifiedName();    String    name    =    c.getString()    +   ".,       "    +    c.getQualifiedName();    	compilable	timeout	83	1	replace
9	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  +   ",   "  +  c.getString();  String  name  =  c.getQualifiedName()  +   ",   "  +  c.getString();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                  AssertionFailedError      [CONTEXT]      declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {      [BUGGY]  String  name  =  c.getQualifiedName()  +   ",   "  +  c.getString();  String  name  =  c.getQualifiedName()  +   ",   "  +  c.getString();  [BUGGY]      renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getQualifiedName()    +   ",   "    +    c.getString();    String  name  =  c.getQualifiedName()  +   ",   "  +  c.getString();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	11	None	add
10	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  +   ",   "  +  c.getString();  String  name  =  c.getQualifiedName()  +   ",'  +  c.getString();  [CE]  unclosed  string  literal  [FE]                    AssertionFailedError      [CONTEXT]      declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {      [BUGGY]  String  name  =  c.getQualifiedName()  +   ",   "  +  c.getString();  String  name  =  c.getQualifiedName()  +   ",'  +  c.getString();  [BUGGY]      renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getQualifiedName()    +   ",   "    +    c.getString();    String  name  =  c.getQualifiedName()  +   ",'  +  c.getString();	  timeout    	non-compiled	[CE]  unclosed  string  literal	11	None	add
11	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  +   ",   "  +  c.getString();  String  name  =  c.getQualifiedName()  +   ", ",  +  c.getString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {      [BUGGY]  String  name  =  c.getQualifiedName()  +   ",   "  +  c.getString();  String  name  =  c.getQualifiedName()  +   ", ",  +  c.getString();  [BUGGY]      renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getQualifiedName()    +   ",   "    +    c.getString();    String  name  =  c.getQualifiedName()  +   ", ",  +  c.getString();	  timeout    	non-compiled	[CE]  <identifier>  expected	11	None	add
12	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  +   ",   "  +  c.getString();  String  name  =  c.getQualifiedName()  +   ",... "  +  c.getString();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                        AssertionFailedError      [CONTEXT]      declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {      [BUGGY]  String  name  =  c.getQualifiedName()  +   ",   "  +  c.getString();  String  name  =  c.getQualifiedName()  +   ",... "  +  c.getString();  [BUGGY]      renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getQualifiedName()    +   ",   "    +    c.getString();    String  name  =  c.getQualifiedName()  +   ",... "  +  c.getString();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	11	None	add
13	[BUG]  [BUGGY]  String  name  =  c.getQualifiedName()  +   ",   "  +  c.getString();  String  name  =  c.getQualifiedName()  + ".,   "  +  c.getString();  [CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)  [FE]                          AssertionFailedError      [CONTEXT]      declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {      [BUGGY]  String  name  =  c.getQualifiedName()  +   ",   "  +  c.getString();  String  name  =  c.getQualifiedName()  + ".,   "  +  c.getString();  [BUGGY]      renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String    name    =    c.getQualifiedName()    +   ",   "    +    c.getString();    String  name  =  c.getQualifiedName()  + ".,   "  +  c.getString();	  timeout    	non-compiled	[CE]  variable  name  is  already  defined  in  method  enterScope(NodeTraversal)	11	None	add
14	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError      [CONTEXT]      declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {      [BUGGY]  String  name  =(c.getString()!=  null)?  c.getString()  : "  <  unknown> ";  [BUGGY]      renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	add	String  name  =(c.getString()!=  null)?  c.getString()  : "  <  unknown> ";	  String    name    =(c.getString()    ==    null)?    c.getString()    :   "    <    unknown>   ";    timeout    	compilable	timeout	191	1	replace
15	[BUG]  [BUGGY]  String  name  =(c.getString()!=  null)?  c.getString()  : "  <  unknown> ";  timeout  [FE]                    AssertionFailedError      [CONTEXT]      declarationRoot.getType()  !=  Token.FUNCTION  ||  !(rootRenamer  instanceof  ContextualRenamer));  Preconditions.checkState(t.inGlobalScope());  renamer  =  rootRenamer;  }  else  {  renamer  =  nameStack.peek().forChildScope();  }  if  (declarationRoot.getType()  ==  Token.FUNCTION)  {  for  (Node  c  =  declarationRoot.getFirstChild().getNext().getFirstChild();  c  !=  null;  c  =  c.getNext())  {      [BUGGY]  String  name  =(c.getString()!=  null)?  c.getString()  : "  <  unknown> ";  [BUGGY]      renamer.addDeclaredName(name);  }  Node  functionBody  =  declarationRoot.getLastChild();  findDeclaredNames(functionBody,  null,  renamer);  }else  if  (declarationRoot.getType()  !=  Token.FUNCTION)  {  findDeclaredNames(declarationRoot,  null,  renamer);  }  nameStack.push(renamer);  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  enterScope  [RETURN_TYPE]  void  NodeTraversal  t  [VARIABLES]  Renamer  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  NodeTraversal  t  Node  c  declarationRoot  functionBody  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.5385948274776263	93	93	66	replace	String  name  =(c.getString()!=  null)?  c.getString()  : "  <  unknown> ";	  String    name    =(c.getString()    ==    null)?    c.getString()    :   "    <    unknown>   ";    timeout    	compilable	timeout	191	1	replace
