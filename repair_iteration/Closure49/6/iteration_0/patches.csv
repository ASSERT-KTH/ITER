bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  newName.toLowerCase();  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	add	return  newName.toLowerCase();	return  newName;  	compilable	timeout	11	1	replace
2	[BUG]  [BUGGY]  return  newName.toLowerCase();  timeout  [FE]    AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  newName.toLowerCase();  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	replace	return  newName.toLowerCase();	return  newName;  	compilable	timeout	11	1	replace
3	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  newName.substring(0,  newName.length()  -  1);  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	add	return  newName.substring(0,  newName.length()  -  1);	return  newName;  	compilable	timeout	11	1	replace
4	[BUG]  [BUGGY]  return  newName.substring(0,  newName.length()  -  1);  timeout  [FE]      AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  newName.substring(0,  newName.length()  -  1);  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	replace	return  newName.substring(0,  newName.length()  -  1);	return  newName;  	compilable	timeout	11	1	replace
5	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  newName.trim();  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	add	return  newName.trim();	return  newName;  	compilable	timeout	11	1	replace
6	[BUG]  [BUGGY]  return  newName.trim();  timeout  [FE]        AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  newName.trim();  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	replace	return  newName.trim();	return  newName;  	compilable	timeout	11	1	replace
7	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  newName.toString();  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	add	return  newName.toString();	return  newName;  	compilable	timeout	11	1	replace
8	[BUG]  [BUGGY]  return  newName.toString();  timeout  [FE]          AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  newName.toString();  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	replace	return  newName.toString();	return  newName;  	compilable	timeout	11	1	replace
9	[BUG]  [BUGGY]  return  newName.toLowerCase(Locale.getDefault());  [CE]  cannot  find  symbol  Locale  [FE]            AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  newName.toLowerCase(Locale.getDefault());  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	replace	return  newName.toLowerCase(Locale.getDefault());	return  newName;  	non-compiled	[CE]  cannot  find  symbol  Locale	11	None	replace
10	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  newName.substring(0,  oldName.length()  -  1);  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	add	return  newName.substring(0,  oldName.length()  -  1);	return  newName;  	compilable	timeout	11	1	replace
11	[BUG]  [BUGGY]  return  newName.substring(0,  oldName.length()  -  1);  timeout  [FE]              AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  newName.substring(0,  oldName.length()  -  1);  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	replace	return  newName.substring(0,  oldName.length()  -  1);	return  newName;  	compilable	timeout	11	1	replace
12	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  newName.substring(0,  newName.length()  -  2);  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	add	return  newName.substring(0,  newName.length()  -  2);	return  newName;  	compilable	timeout	11	1	replace
13	[BUG]  [BUGGY]  return  newName.substring(0,  newName.length()  -  2);  timeout  [FE]                AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  newName.substring(0,  newName.length()  -  2);  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	replace	return  newName.substring(0,  newName.length()  -  2);	return  newName;  	compilable	timeout	11	1	replace
14	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]    [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	add	  	return  newName;  	compilable	timeout	11	1	replace
15	[BUG]  [BUGGY]    timeout  [FE]                  AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]    [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	replace	  	return  newName;  	compilable	timeout	11	1	replace
16	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  oldName;  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	add	return  oldName;	return  newName;  	compilable	timeout	11	1	replace
17	[BUG]  [BUGGY]  return  oldName;  timeout  [FE]    AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  oldName;  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	replace	return  oldName;	return  newName;  	compilable	timeout	11	1	replace
18	[BUG]  [BUGGY]  return  newName  <  null?  null  :  newName;  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]      AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  newName  <  null?  null  :  newName;  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	replace	return  newName  <  null?  null  :  newName;	return  newName;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	11	None	replace
19	[BUG]  [BUGGY]  return  newName!=  null?  name.toString()  :  oldName;  [CE]  cannot  find  symbol  name  [FE]    AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  newName!=  null?  name.toString()  :  oldName;  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	replace	return  newName!=  null?  name.toString()  :  oldName;	return  newName;  	non-compiled	[CE]  cannot  find  symbol  name	11	None	replace
20	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  newName!=  null?  oldName  :  newName;  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	add	return  newName!=  null?  oldName  :  newName;	return  newName;  	compilable	timeout	11	1	replace
21	[BUG]  [BUGGY]  return  newName!=  null?  oldName  :  newName;  timeout  [FE]      AssertionFailedError  [CONTEXT]  private  String  getReplacementName(String  oldName)  {  for  (Renamer  names  :  nameStack)  {  String  newName  =  names.getReplacementName(oldName);  if  (newName  !=  null)  {  [BUGGY]  return  newName!=  null?  oldName  :  newName;  [BUGGY]  }  }  return  null;  }  [CLASS]  MakeDeclaredNamesUnique  ContextualRenameInverter  ContextualRenamer  InlineRenamer  BoilerplateRenamer  [METHOD]  getReplacementName  [RETURN_TYPE]  String  String  oldName  [VARIABLES]  Renamer  names  renamer  rootRenamer  AbstractCompiler  compiler  Set  referencedNames  boolean  global  removeConstness  Multiset  nameUsage  Supplier  uniqueIdSupplier  String  ARGUMENTS  UNIQUE_ID_SEPARATOR  idPrefix  name  newName  oldName  Deque  nameStack  referenceStack  Map  declarations  nameMap  	projects/Closure49/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java	0.6890719439107154	196	196	66	replace	return  newName!=  null?  oldName  :  newName;	return  newName;  	compilable	timeout	11	1	replace
