projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption.clone();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.next();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption.getValue();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=false;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=true;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength-1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=tokenLength;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=false;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.stopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,argumentLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=true;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99StopAtNonOption=true;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopsAtNonOption=true;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=this.options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=Arrays.asList(arguments).iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=arguments.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption.cloneTree();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=true;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=true;}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=true;}else{tokens.add(arguments[0],arguments[1]);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength+2);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(true);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(false);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption.getValue();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options.getValue();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest();}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest();}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=false;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=false;}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=false;}else{tokens.add(arguments[0],arguments[1]);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<Object>)iter.next();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.next(),tokenLength;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=eatTheRest;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=false;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=true;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(token,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=this.options.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=arguments.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=tokens.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=tokenLength+1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=0;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=tokenLength-1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength-=tokenLength;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength-2);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength-1+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength+3);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){init(tokenLength);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){init(tokenLength);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){init(tokenLength);}else{tokens=newArrayList<String>();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption.clone();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)arguments.clone();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options.clone();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.eatTheRest;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.stopAtNonOption();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(tokenLength,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption.getAsString();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=true;}else{tokens=newString[tokenLength];}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=currentOptions.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)options.clone();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,null);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.get();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.next()-1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption||eatTheRest;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption+1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=currentOptions.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.ERROR;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EXPR_RESULT;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption+1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest();}else{tokens=newArrayList<String>();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength,arguments.length);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption.getKey();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=token.length;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.remove();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.previous();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption&&arguments.length>0;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.arguments.clone();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EATTheRest;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=stopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(this);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=Arrays.asList(arguments).iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.eatTheRest=false;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(tokenLength,this.stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength/1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=this.arguments.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=this.tokens.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99options.add(arguments[0],arguments[1]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){eatTheRest=true;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(!stopAtNonOption){eatTheRest=false;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(!stopAtNonOption){eatTheRest=false;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption+1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99AssertionFailedError.this.stopAtNonOption=stopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99AssertionFailedError.show(tokenLength,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99AssertionFailedError.this.stopAtNonOption=stopAtNonOption?init(tokenLength):null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99AssertionFailedError.this.stopAtNonOption=stopAtNonOption?init(tokenLength,arguments):null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)arguments.get(0);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)arguments.toArray(newPosixParser<String>());
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)arguments.toArray(newPosixParser[arguments.size()]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption&&eatTheRest;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption||currentOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption||arguments;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption||tokenLength;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)arguments.get();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.arguments.get();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=stopAtNonOption(this);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(this,arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption.getAsString();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options.getAsString();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.arguments.get(0);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options.get(0);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options.getValue(0);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options.get();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){eatTheRest=false;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(!stopAtNonOption){eatTheRest=true;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(!stopAtNonOption){eatTheRest=true;}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName(arguments,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){init(arguments);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){init(arguments);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(arguments,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)arguments;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.getValue();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){eatTheRest();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){eatTheRest();}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){tokens.add(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){currentOption=stopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99StopAtNonOption=false;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption=null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){eatTheRest();}else{tokens=newArrayList<String>();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){currentOption=stopAtNonOption;eatTheRest();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.eatTheRest=true;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.eattheRest=true;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=this.arguments.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99This.stopAtNonOption=true;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.stopAtNonOption(arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.eatTheRest();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.stopAtNonOption(true);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength,arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength,arguments[0]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength,arguments,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength,arguments[0],stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=this.currentOptions.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength,arguments.length-1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength,arguments.length+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(arguments.length,tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99StopAtNonOption(false);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=stopAtNonOption(false);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(false,false);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength-3);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,this);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,argument);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption.getKey();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99StopAtNonOption(true);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99||stopAtNonOption(true);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.next(),tokenLength+1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.next(),arguments;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.next(),tokenLength-1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=tokens.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.arguments.toArray(newPosixParser<String>());
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Ilerator<String>iter=Arrays.asList(arguments).iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99List<String>iter=Arrays.asList(arguments).iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=Arrays.asList(this.options).iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=stopAtNonOption(arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(this.options);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99||stopAtNonOption(arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(tokens);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=tokenLength-2;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=tokenLength/1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption+2;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(arguments,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(this.options);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength-1,tokenLength+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength/1+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){eatTheRest=false;}else{tokens.add(arguments[0],arguments[1]);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){arguments[0]=stopAtNonOption;tokens.add(arguments[1]);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName(arguments[0],arguments[1]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption.cloneTree();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)arguments.cloneTree();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=2;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength-=1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(!stopAtNonOption){eatTheRest();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(!stopAtNonOption){currentOption=stopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(!stopAtNonOption){currentOption=stopAtNonOption;eatTheRest();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99||stopAtNonOption){eatTheRest=false;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EXTENDS;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.ERROR|StopAtNonOption.ERROR;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=this.currentOptions.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength/2);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength*1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopsAtNonOption=false;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,arguments,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,this.arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=stopAtNonOption;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=stopAtNonOption+1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption&1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption+2;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption&&arguments.length>1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption||arguments.length>0;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption&&arguments.length>2;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.false;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.STANDARD;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(tokenLength,this.stopAtNonOption,arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(this.stopAtNonOption,tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(tokenLength,this.stopAtNonOption,eatTheRest);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(tokenLength,this.stopAtNonOption,options);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99This.stopAtNonOption=false;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption||stopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EATTheREST;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EAT_THRESHOLD;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<?>)iter.next();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<?extendsObject>)iter.next();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){thrownewIllegalArgumentException("".equals(arguments));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(!stopAtNonOption){thrownewIllegalArgumentException("".equals(arguments));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=tokenLength+2;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99posixParser<String>currentOption=(PosixParser<String>)iter.next();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength-=arguments.length;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength-=2;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength-=token.length;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){init(tokenLength,stopAtNonOption);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(tokenLength,arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){init(tokenLength,stopAtNonOption);}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(token,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Injectables.checkNotNull(arguments,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Injectables.checkState(stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99safely(stopAtNonOption){eatTheRest=true;}else{tokens=newString[tokenLength];}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){eatTheRest=true;}else{tokens=newString[tokenLength];}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99While(stopAtNonOption){eatTheRest=false;}else{tokens=newString[tokenLength];}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=StopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=this;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=token.length-1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=token.length+1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=token.length-2;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=stopAtNonOption(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99||stopAtNonOption(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(tokenLength,arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=Arrays.asList(this.options).iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Ileratoriter=Arrays.asList(arguments).iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=Arrays.asList(options).iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,tokenLength-1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,tokenLength+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(token,stopAtNonOption,arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(token,stopAtNonOption,argumentLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(token,eatTheRest);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(token,argumentLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99StopAtNonOption=null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99HalteAtNonOption=false;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EXPR_RESULT|StopAtNonOption.EXPR_RESULT;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EXPR_RESULT+1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99||stopAtNonOption){eatTheRest=true;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99||stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99AssertionFailedError.this.stopAtNonOption=stopAtNonOption?null:stopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption.get();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength=4;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength,stopAtNonOption,arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength,argumentLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=currentOption.arguments.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption.getAsPosition();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(Token.NAME,null,tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99allowNonOption(stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler=newAssertionFailedErrorHandler(this,currentOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption("startAtNonOption");
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Integeroptions=currentOption.getOptions();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99AssertionFailedError.checkState(tokenLength==null);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99AssertionFailedError.checkState(tokenLength!=null);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99AssertionFailedError.warning("Currentargumentnotfollowedbyavalue");
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=currentOption.arguments.iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.tokenLength-=argumentLength;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption+1L;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99allowEscaped(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99[Delete]
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99allowEscaped(stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.throwAsSertionFailedError("");
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.arguments.get(arguments[0].clone());
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<Object>)iter.get();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(this,tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.get(0);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99AssertionFailedError.checkNotNull(arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99AssertionFailedError.checkNotNull(arguments,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Optionoption=options.getOption(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.ERROR|StopAtNonOption.EMPTY;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.ERROR|StopAtNonOption.EXPR_RESULT;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.ERROR+1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99allowMutator(stopAtNonOption){eatTheRest();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption("stopAtNonOption");
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99allowMutator(stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength/3);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName(arguments[0],stopAtNonOption){eatTheRest=true;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName(arguments[0],stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName(arguments[0],stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)arguments.get(this.currentOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.clone();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName(arguments[0],stopAtNonOption){eatTheRest();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){init(arguments);}else{tokens=newString[tokenLength];}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=null;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=null;}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption?null:stopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)modules.clone();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99AssertionFailedError.checkState(tokens==null);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.eatTheRest=stopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(tokenLength+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(tokenLength,eatTheRest);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99IntegercurrentOption=init(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99InitParser(this,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){Iterator<String>iter=Arrays.asList(arguments).iterator();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99AssertionFailedError.<String>iter=Arrays.asList(arguments).iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(arguments[0]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99allowMutator(stopAtNonOption){eatTheRest=false;}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler=newAssertionFailedErrorHandler(tokenLength,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler=newAssertionFailedErrorHandler(this,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)arguments.get(arguments[0].clone());
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)arguments.get(argumentLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options.getRawValue();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopsAtNonOption=null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(tokenLength,stopAtNonOption,arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(tokens,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName(token,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EXPR_RESULT+tokenLength;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EXPR_RESULT&&stopAtNonOption!=null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(false,true);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=stopAtNonOption||tokenLength>arguments.length;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options.get(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.getNext();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.next(),tokenLength+2;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption.getRawParser();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption+1L;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.stopAtNonOption(this.eatTheRest);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.stopAtNonOption(this);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption.cloneTree(0);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)currentOption.cloneAtNonOption();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99safely(stopAtNonOption){eatTheRest=true;}else{tokens.add(arguments[0],arguments[1]);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99safely(stopAtNonOption){eatTheRest=false;}else{tokens.add(arguments[0],arguments[1]);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EATTHRESHOLD;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Init(tokenLength,stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Init(tokenLength,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Init(tokenLength,2){thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.options.toArray(newPosixParser<String>());
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOptionLength;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption-1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<Object>)iter.remove();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<Object>)iter.previous();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest=stopAtNonOption(true);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler(tokenLength,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(storageLength,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler(token,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99parent==null&&stopAtNonOption){eatTheRest=false;}else{tokens.add(arguments[0],arguments[1]);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99parent==null&&stopAtNonOption){eatTheRest=false;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99parent==null&&stopAtNonOption){tokens.add(arguments[0],arguments[1]);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99parent==null&&stopAtNonOption){eatTheRest=false;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(arguments,tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)iter.next(),1;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99parent==null&&stopAtNonOption){tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99parent==null&&stopAtNonOption){eatTheRest();}else{tokens.add(token);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99parent==null&&stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99parent==null&&stopAtNonOption){eatTheRest();}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler.handleMissingName(arguments[0],null,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption||arguments.length;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=stopAtNonOption||argumentLength>0;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){eatTheRest=stopAtNonOption;}else{thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){thrownewIllegalStateException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99if(stopAtNonOption){currentOption=null;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.arguments;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99allowSideEffects(stopAtNonOption)){thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99allowSideEffects(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99allowSideEffects("stopAtNonOption")){thrownewIllegalArgumentException("");}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99parent!=null&&stopAtNonOption){tokens.add(arguments[0],arguments[1]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99parent!=null&&stopAtNonOption){tokens.add(arguments[0],arguments[1]);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(arguments[0],arguments[1]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=Arrays.asList(this.arguments).iterator();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iterator<String>iter=Arrays.asList(arguments).iterator(0);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99||stopAtNonOption){tokens.addAll(arguments);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99||stopAtNonOption){tokens.add(arguments[0].toString());
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99||stopAtNonOption){tokens.add(arguments[0]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.arguments=newArrayList<String>();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.arguments=arguments;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.arguments=newHashMap<String,String>();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99aughtExceptionHandler=stopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99AssertionFailedError.checkState(tokenLength<=arguments.length);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99eatTheRest="stopAtNonOption";
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99stopAtNonOption(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength*2);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99init(tokenLength,this.stopAtNonOption,this.options);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99IntegertokenLength=init(tokenLength);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EXPR_RESULT&&stopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EXPR_RESULT&&arguments.length>0;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99OptioncurrentOption=options.getOption(tokenLength-1,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)super.clone();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99PosixParser<String>currentOption=(PosixParser<String>)this.currentOption.remove();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.eatTheRest=null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.ERROR||stopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99this.stopAtNonOption=StopAtNonOption.EMPTY;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java99Iteratoriter=Arrays.asList(this.arguments).iterator();
