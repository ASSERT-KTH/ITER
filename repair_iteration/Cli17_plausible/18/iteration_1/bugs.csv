bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  tokenLength  =  token.length();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  else  if  (token.startsWith( "- "))  {  int  tokenLength  =  token.length();  [BUGGY]    int  tokenLength  =  token.length();  [BUGGY]  if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	    int  tokenLength  =  token.length();		non-compiled	[CE]  <identifier>  expected	37	None	add
2	[BUG]  [BUGGY]    tokens.add(token);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  else  if  (token.startsWith( "- "))  {  int  tokenLength  =  token.length();  [BUGGY]    tokens.add(token);  [BUGGY]  if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	    tokens.add(token);		non-compiled	[CE]  <identifier>  expected	37	None	add
3	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  else  if  (token.startsWith( "- "))  {  int  tokenLength  =  token.length();  [BUGGY]    Iterator  <  String>  iter  =  arguments.iterator();  [BUGGY]  if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	    Iterator  <  String>  iter  =  arguments.iterator();		non-compiled	[CE]  <identifier>  expected	37	None	add
4	[BUG]  [BUGGY]    tokens.add(tokenLength);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  else  if  (token.startsWith( "- "))  {  int  tokenLength  =  token.length();  [BUGGY]    tokens.add(tokenLength);  [BUGGY]  if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	    tokens.add(tokenLength);		non-compiled	[CE]  <identifier>  expected	37	None	add
5	[BUG]  [BUGGY]    Integer  tokenLength  =  options.get(token);  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  else  if  (token.startsWith( "- "))  {  int  tokenLength  =  token.length();  [BUGGY]    Integer  tokenLength  =  options.get(token);  [BUGGY]  if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	    Integer  tokenLength  =  options.get(token);		non-compiled	[CE]  <identifier>  expected	37	None	add
6	[BUG]  [BUGGY]  if  (tokenLength  ==  1)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  else  if  (token.startsWith( "- "))  {  int  tokenLength  =  token.length();  [BUGGY]  if  (tokenLength  ==  1)  {  [BUGGY]  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	if  (tokenLength  ==  1)  {	if  (tokenLength  ==  2)  {  	non-compiled	[CE]  <identifier>  expected	36	None	replace
7	[BUG]  [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  else  if  (token.startsWith( "- "))  {  int  tokenLength  =  token.length();  [BUGGY]    Iterator  <  String>  iter  =  options.iterator();  [BUGGY]  if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	    Iterator  <  String>  iter  =  options.iterator();		non-compiled	[CE]  <identifier>  expected	37	None	add
8	[BUG]  [BUGGY]    Integer  tokenLength  =  options.getOptionLength();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  else  if  (token.startsWith( "- "))  {  int  tokenLength  =  token.length();  [BUGGY]    Integer  tokenLength  =  options.getOptionLength();  [BUGGY]  if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	    Integer  tokenLength  =  options.getOptionLength();		non-compiled	[CE]  <identifier>  expected	37	None	add
9	[BUG]  [BUGGY]    Integer  tokenLength  =  options.getOptionLength(token);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  else  if  (token.startsWith( "- "))  {  int  tokenLength  =  token.length();  [BUGGY]    Integer  tokenLength  =  options.getOptionLength(token);  [BUGGY]  if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	    Integer  tokenLength  =  options.getOptionLength(token);		non-compiled	[CE]  <identifier>  expected	37	None	add
10	[BUG]  [BUGGY]    Iterator  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  else  if  (token.startsWith( "- "))  {  int  tokenLength  =  token.length();  [BUGGY]    Iterator  iter  =  options.iterator();  [BUGGY]  if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	    Iterator  iter  =  options.iterator();		non-compiled	[CE]  <identifier>  expected	37	None	add
11	[BUG]  [BUGGY]    Integer  tokenLength  =  options.get(tokenLength);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  else  if  (token.startsWith( "- "))  {  int  tokenLength  =  token.length();  [BUGGY]    Integer  tokenLength  =  options.get(tokenLength);  [BUGGY]  if  (tokenLength  ==  2)    {  {  processOptionToken(token,  stopAtNonOption);  }  else  if  (options.hasOption(token))  {  tokens.add(token);  }  else  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.30151134457776363	134	135	1	replace	    Integer  tokenLength  =  options.get(tokenLength);		non-compiled	[CE]  <identifier>  expected	37	None	add
