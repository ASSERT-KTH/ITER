bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  tokens.add( "-- "  +  value);  [CE]  [FE]    AssertionFailedError  [CONTEXT]  currentOption  =  null;  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  [BUGGY]  tokens.add( "-- "  +  value);  [BUGGY]  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	214	214	1	replace	tokens.add( "-- "  +  value);	tokens.add( "-- ");  	non-compiled	[CE]  	11	None	replace
2	[BUG]  [BUGGY]  tokens.add( "-- "  +  this.stopAtNonOption);  [CE]  [FE]      AssertionFailedError  [CONTEXT]  currentOption  =  null;  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  [BUGGY]  tokens.add( "-- "  +  this.stopAtNonOption);  [BUGGY]  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	214	214	1	replace	tokens.add( "-- "  +  this.stopAtNonOption);	tokens.add( "-- ");  	non-compiled	[CE]  	11	None	replace
3	[BUG]  [BUGGY]  tokens.add( "-- "  +  currentOption.getName());  [CE]  [FE]        AssertionFailedError  [CONTEXT]  currentOption  =  null;  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  [BUGGY]  tokens.add( "-- "  +  currentOption.getName());  [BUGGY]  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	214	214	1	replace	tokens.add( "-- "  +  currentOption.getName());	tokens.add( "-- ");  	non-compiled	[CE]  	11	None	replace
4	[BUG]  [BUGGY]    [CE]  [FE]          AssertionFailedError  [CONTEXT]  currentOption  =  null;  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  [BUGGY]    [BUGGY]  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	214	214	1	replace	  	tokens.add( "-- ");  	non-compiled	[CE]  	11	None	replace
5	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  [CE]  [FE]    AssertionFailedError  [CONTEXT]  currentOption  =  null;  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  [BUGGY]  tokens.add( "-- ");  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	214	214	1	replace	    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }		non-compiled	[CE]  	12	None	add
6	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  stopAtNonOption  =  true;  }  [CE]  [FE]      AssertionFailedError  [CONTEXT]  currentOption  =  null;  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  stopAtNonOption  =  true;  }  [BUGGY]  tokens.add( "-- ");  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	214	214	1	replace	    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  stopAtNonOption  =  true;  }		non-compiled	[CE]  	12	None	add
7	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  stopAtNonOption  =  false;  }  [CE]  [FE]        AssertionFailedError  [CONTEXT]  currentOption  =  null;  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  stopAtNonOption  =  false;  }  [BUGGY]  tokens.add( "-- ");  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	214	214	1	replace	    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  stopAtNonOption  =  false;  }		non-compiled	[CE]  	12	None	add
8	[BUG]  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  stopAtNonOption  =  null;  }  [CE]  [FE]          AssertionFailedError  [CONTEXT]  currentOption  =  null;  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  [BUGGY]    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  stopAtNonOption  =  null;  }  [BUGGY]  tokens.add( "-- ");  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	214	214	1	replace	    if(stopAtNonOption)  {  tokens.add( "-- ");  tokens.add(value);  }  else  {  stopAtNonOption  =  null;  }		non-compiled	[CE]  	12	None	add
9	[BUG]  [BUGGY]    eatTheRest  =  stopAtNonOption.stopAtNonOption;  [CE]  [FE]    AssertionFailedError  [CONTEXT]  currentOption  =  null;  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  [BUGGY]    eatTheRest  =  stopAtNonOption.stopAtNonOption;  [BUGGY]  tokens.add( "-- ");  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	214	214	1	replace	    eatTheRest  =  stopAtNonOption.stopAtNonOption;		non-compiled	[CE]  	12	None	add
10	[BUG]  [BUGGY]    tokens.add( "-- ");  tokens.add(value);  [CE]  [FE]      AssertionFailedError  [CONTEXT]  currentOption  =  null;  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  [BUGGY]    tokens.add( "-- ");  tokens.add(value);  [BUGGY]  tokens.add( "-- ");  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	214	214	1	replace	    tokens.add( "-- ");  tokens.add(value);		non-compiled	[CE]  	12	None	add
11	[BUG]  [BUGGY]    eatTheRest  =  stopAtNonOption;  [CE]  [FE]        AssertionFailedError  [CONTEXT]  currentOption  =  null;  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  [BUGGY]    eatTheRest  =  stopAtNonOption;  [BUGGY]  tokens.add( "-- ");  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	214	214	1	replace	    eatTheRest  =  stopAtNonOption;		non-compiled	[CE]  	12	None	add
12	[BUG]  [BUGGY]    tokens.add( "-- ");  currentOption  =  null;  [CE]  [FE]          AssertionFailedError  [CONTEXT]  currentOption  =  null;  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  [BUGGY]    tokens.add( "-- ");  currentOption  =  null;  [BUGGY]  tokens.add( "-- ");  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	214	214	1	replace	    tokens.add( "-- ");  currentOption  =  null;		non-compiled	[CE]  	12	None	add
13	[BUG]  [BUGGY]  tokens.remove( "-- ");  [CE]  [FE]    AssertionFailedError  [CONTEXT]  currentOption  =  null;  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  [BUGGY]  tokens.remove( "-- ");  [BUGGY]  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	214	214	1	replace	tokens.remove( "-- ");	tokens.add( "-- ");  	non-compiled	[CE]  	11	None	replace
14	[BUG]  [BUGGY]  tokens.add( "-- ",  currentOption.hasArg());  [CE]  [FE]      AssertionFailedError  [CONTEXT]  currentOption  =  null;  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  [BUGGY]  tokens.add( "-- ",  currentOption.hasArg());  [BUGGY]  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	214	214	1	replace	tokens.add( "-- ",  currentOption.hasArg());	tokens.add( "-- ");  	non-compiled	[CE]  	11	None	replace
15	[BUG]  [BUGGY]    eatTheRest  =  stopAtNonOption.hasArg();  [CE]  [FE]    AssertionFailedError  [CONTEXT]  currentOption  =  null;  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  [BUGGY]    eatTheRest  =  stopAtNonOption.hasArg();  [BUGGY]  tokens.add( "-- ");  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	214	214	1	replace	    eatTheRest  =  stopAtNonOption.hasArg();		non-compiled	[CE]  	12	None	add
16	[BUG]  [BUGGY]  tokens.add( ".-- ");  [CE]  [FE]    AssertionFailedError  [CONTEXT]  currentOption  =  null;  }  else  if  (currentOption.hasArgs())  {  tokens.add(value);  }  }  else  {  eatTheRest  =  true;  [BUGGY]  tokens.add( ".-- ");  [BUGGY]  tokens.add(value);  }  }  [CLASS]  PosixParser  [METHOD]  process  [RETURN_TYPE]  void  String  value  [VARIABLES]  Options  options  List  tokens  Option  currentOption  boolean  eatTheRest  stopAtNonOption  String  value  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.5	214	214	1	replace	tokens.add( ".-- ");	tokens.add( "-- ");  	non-compiled	[CE]  	11	None	replace
