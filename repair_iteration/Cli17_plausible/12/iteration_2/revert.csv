projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(options.hasOption(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption||options.hasOption(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&options.hasOption(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(options.hasArg()&&options.hasOption(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(stopAtNonOption.hasArg()&&(token.length()!=(i+1))){tokens.add("-"+ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){Optionoptions=options.getOption(ch);if(options.hasArg()&&(token.length()!=(i+1))){tokens.add("-"+ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoptions=options.getOption(ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(stopAtNonOption.hasArg()&&(token.length()!=(i+1))){tokens.add(token.substring
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){Optionoptions=options.getOption(ch);if(options.hasArg()&&(token.length()!=(i+1))){tokens.add("-"+ch);currentOption=options.getOption(ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoption=options.getOption(ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionsoptions=options.getOption(ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288OptioncurrentOption=options.getOption(ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(stopAtNonOption){tokens.add("-"+ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(i));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){for(inti=0;i<token.length();i++){Stringch=String.valueOf(token.charAt(i));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){Optionoptions=options.getOption(ch);if(options!=null){tokens.add("-"+ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(!stopAtNonOption){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption||options.hasArg()){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(!stopAtNonOption&&options.hasOption(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption||options.getOption(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoption=options.getOption(ch,i);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoption=options.getOption(ch,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoption=options.getOption(ch,token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(!stopAtNonOption&&options.hasArg()){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&options.hasArg()){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&options.getOption(ch)!=null){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(!stopAtNonOption&&options.getOption(ch)!=null){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288tokens.add("-"+ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288tokens.add("-"+ch);currentOption=options.getOption(ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288options.add("-"+ch);currentOption=options.getOption(ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288tokens.add(ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){tokens.add("-"+ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){tokens.add(token.substring(i+1));break;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){tokens.add(ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288options.add("-"+ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoptions=options.getOption(i);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&options.hasArg()&&options.hasOption(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption||options.hasArg()||options.hasOption(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(options.hasArg()&&options.getOption(ch)!=null){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoptions=currentOption.getOption(ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoptions=options.getOption(ch,i);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoptions=options.getOption(ch,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionsoptions=currentOption.getOption(ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){OptioncurrentOption=options.getOption(ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288OptioncurrentOption=options.getOption(ch,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288OptioncurrentOption=options.getOption(ch,i);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(currentOption.hasArg()&&(token.length()!=(i+1))){tokens.add(token.substring
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(options.hasArg()&&(token.length()!=(i+1))){tokens.add(token.substring
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedTokentoken=(AssertionFailedToken)currentOption.clone();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedTokentoken=(AssertionFailedToken)tokens.get(i);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&currentOption.hasArg()){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){Optionsoptions=options.getOption(ch);if(options!=null){tokens.add("-"+ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedTokeneatTheRest=stopAtNonOption;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){tokens.add(ch);break;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288IntegercurrentOption=options.getOption(ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoption=options.getOption(ch-1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption||options.getOption(ch)!=null){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&options.getOption(ch)==null){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionsoptions=options.getOption(ch,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288tokens.add("-"+i);currentOption=options.getOption(ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288OptioncurrentOption=options.getOption(ch-1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&options.hasArg(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption||!token.isEmpty()){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&!token.equals(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption||!token.equals(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(token,stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(i));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(token,stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(i+1));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(token,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt(i));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(!eatTheRest){tokens.add("-"+ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(token,stopAtNonOption){for(inti=0;i<token.length();i++){Stringch=String.valueOf(token.charAt(i));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(token,stopAtNonOption){for(inti=0;i<token.length();i++){Stringch=String.valueOf(token.charAt(i+1));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch,stopAtNonOption){for(inti=0;i<token.length();i++){Stringch=String.valueOf(token.charAt(i+1));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch){for(inti=0;i<token.length();i++){Stringch=String.valueOf(token.charAt(i+1));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch,stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(i+1));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionError(token,stopAtNonOption){for(inti=0;i<token.length();i++){Stringch=String.valueOf(token.charAt(i+1));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption||options.hasArg(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionsoptions=options.getOption(ch,eatTheRest);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionsoptions=options.getOption(ch,i);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionsoptions=currentOption.getOption(ch,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoptions=currentOption.getOption(ch,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionsoptions=currentOption.getOption(ch,token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&!token.isEmpty()){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(!stopAtNonOption&&!token.isEmpty()){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288OptioncurrentOption=options.getOption(ch,eatTheRest);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){OptioncurrentOption=options.getOption(ch,stopAtNonOption);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){OptioncurrentOption=options.getOption(ch,stopAtNonOption);}else{tokens.add("-"+ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(!stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(currentOption.hasArg()&&(token.length()!=(i+1))){tokens.add(token.substring
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288tokens.add(ch);break;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){tokens.add("-"+ch);break;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoption=options.getOption(ch-1+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoption=options.getOption(ch-1L);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(!stopAtNonOption&&!token.equals(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption||!token.equals("-")){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch,stopAtNonOption){for(inti=0;i<token.length();i++){Stringch=String.valueOf(token.charAt(i));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch){for(inti=0;i<token.length();i++){Stringch=String.valueOf(token.charAt(i));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch,stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(i));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch,stopAtNonOption){for(inti=0;i<token.length();i++){Stringch=String.valueOf(token.charAt
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(!stopAtNonOption&&options.getOption(ch)==null){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288tokens.add(token.substring(i+1));
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288tokens.add(token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(options.hasArg()&&options.getOption(ch)==null){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&options.hasArg()&&options.getOption(ch)!=null){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoptions=currentOption.getOption(i);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288options=options.getOption(ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoption=options.getOption(ch,eatTheRest);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(i+1));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionError(token,stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(i+1));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionError(ch,stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(i+1));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoptions=options.getOption(ch,i+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoptions=currentOption.getOption(ch,i);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288options=options.getOption(ch,i+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption||options.getOption(ch)==null){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288OptioncurrentOption=options.getOption(i);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288options.put(ch,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288IntegercurrentOption=options.getOption(i);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288IntegercurrentOption=options.getOption(ch-1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288IntegercurrentOption=options.getOption(ch,i);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedTokentoken=(AssertionFailedToken)this.tokens.get(i);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedTokentoken=(AssertionFailedToken)tokens.get(ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedTokentoken=(AssertionFailedToken)tokens.get(i+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&options.getOption(ch)!=null&&token.length()>0){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288tors.add("-"+ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288OptioncurrentOption=options.getOption(ch,i+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){OptioncurrentOption=options.getOption(ch,i);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){OptioncurrentOption=options.getOption(ch,i);}else{tokens.add("-"+ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){OptioncurrentOption=options.getOption(ch,i);tokens.add("-"+ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&options.hasArg()||options.hasOption(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption||options.hasArg()&&options.hasOption(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(!stopAtNonOption&&options.hasArg()||options.hasOption(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(!stopAtNonOption&&options.hasArg()&&options.hasOption(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedTokentoken=(AssertionFailedToken)this.currentOption.clone();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedTokentoken=(AssertionFailedToken)currentOption.clone(),ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption||currentOption.hasArg()){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedTokeneatTheRest=token;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedTokeneatTheRest=false;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedTokeneatTheRest=true;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedTokeneatTheRest=i;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(options.hasArg()&&(token.length()!=(i+1))){tokens.add(token.sub
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288OptioncurrentOption=options.getOption(ch-1+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288OptioncurrentOption=options.getOption(ch+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288options.add("-"+ch,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288tokens.add(token.substring(i+1));break;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288ters.add(token.substring(i+1));break;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoption=options.getOption(i,token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoption=options.getOption(ch,tokens[i]);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoption=options.getOption(ch,i+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoption=options.getOption(ch,i++);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoption=options.getOption(ch,i+2);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&options.getOption(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(!stopAtNonOption&&options.getOption(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288options.add(ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288tokens.add("-"+ch,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288tokens.add("-"+i);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&!token.equals("-")){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&!token.equals("")){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoptions=options.getOption(ch,eatTheRest);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){tokens.add("-"+i);currentOption=options.getOption(ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoptions=currentOption.getOption(ch,token);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(i));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch,stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch,stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt(0));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){options.add("-"+ch);currentOption=options.getOption(ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt(i));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt(i));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt(0));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(token.charAt(i+1));}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch,stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch){for(inti=1;i<token.length();i++){ch=String.valueOf(ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288options.add("-"+i);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){options.add("-"+ch);currentOption=options.getOption(ch);}else{tokens.add("-"+ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&options.getOption(ch)==null||eatTheRest){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoptions=currentOption.hasArg()?options.getOption(ch):null;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoptions=(Option)options.getOption(ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288options.add(ch);break;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){tokens.add("-"+i);currentOption=options.getOption(ch);if(options.hasArg()&&(token.length()!=(i+1))){tokens.add(token.substring
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch,stopAtNonOption){for(inti=0;i<token.length();i++){Stringch=String.valueOf(ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){AssertionFailedToName(token,stopAtNonOption){for(inti=0;i<token.length();i++){Stringch=String.valueOf(token.charAt
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){tokens.add("-"+i);currentOption=options.getOption(ch);if(currentOption.hasArg()&&(token.length()!=(i+1))){tokens.add(token.substring
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){OptioncurrentOption=options.getOption(i);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionsoptions=options.getOption(ch,i+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedTokentoken=(AssertionFailedToken)tokens.get(i-1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288OptioncurrentOption=options.getOption(ch,i++);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){OptioncurrentOption=options.getOption(ch,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288tokens.add(token.substring(i));
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedTokeneatTheRest=stopAtNonOption&&token.charAt(i);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedTokeneatTheRest=stopAtNonOption&&token.equals(ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch){for(inti=0;i<token.length();i++){Stringch=String.valueOf(ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&options.getOption(ch)>=null){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch,stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch){for(inti=1;i<token.length();i++){Stringch=String.valueOf(ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){AssertionFailedToName(token,stopAtNonOption){for(inti=1;i<token.length();i++){Stringch=String.valueOf(token.charAt
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&options.hasArg()&&options.getOption(ch)==null){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&options.hasArg()&&options.getOption(ch)>=null){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoption=options.getOption(ch,eattheRest);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288OptioncurrentOption=options.getOption(ch-1L);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption||options.getOption(ch)>=null){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288IntegercurrentOption=options.getOption(ch,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){Optionsoptions=options.getOption(ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption||eatTheRest){tokens.add(ch);break;}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption||options.hasOption(ch)||options.hasOption(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption||options.getOption(ch)!=null&&token.length()>0){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(options.hasArg()&&token.length()!=(i+1)){tokens.add(token.substring
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){OptioncurrentOption=options.getOption(ch,stopAtNonOption);if(currentOption!=null){tokens.add("-"+ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){OptioncurrentOption=options.getOption(ch,stopAtNonOption);if(currentOption==null){tokens.add("-"+ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoptions=currentOption.getOptions(ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288tokens.add(token.substring(i,ch));
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288tokens.add("-",ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&options.getOption(ch)!=null&&token.length()==0){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288TokenBuffertokens=newTokenBuffer(ch,stopAtNonOption);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288TokenBuffertokens=newTokenBuffer(ch);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288TokenBuffertokens=newTokenBuffer(token.length(),i+1);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&options.getOption(ch)==null&&token.length()>0){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption&&options.getOption(ch)==null&&token.equals("-")){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedTokentoken=(AssertionFailedToken)token.clone();
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(!stopAtNonOption&&options.hasArg(ch)){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288Optionoptions=options.getOption(ch,i++);
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch),stopAtNonOption){for(inti=1;i<token.length();i++){ch=String.valueOf(ch);}
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedTokeneatTheRest=stopAtNonOption?token:ch;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedTokeneatTheRest=stopAtNonOption&&token.length()==0;
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(options.hasOption(ch)&&options.getOption(ch)!=null){
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288if(stopAtNonOption){tokens.add("-"+ch);currentOption=options.getOption(ch);if(currentOption.hasArg()&&token.length()!=(i+1)){tokens.add(token.substring
projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java288AssertionFailedToName(ch),stopAtNonOption){for(inti=0;i<token.length();i++){Stringch=String.valueOf(ch);}
