bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  +  1);  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(tokenLength  +  1);	      Option    currentOption    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
2	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  -  1);  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(tokenLength  -  1);	      Option    currentOption    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
3	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  <  String>  iter  =  Arrays.asList(arguments).iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
4	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Iterator  <  String>  iter  =  arguments.iterator();  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  <  String>  iter  =  arguments.iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
5	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  <  String>  iter  =  this.options.iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
6	[BUG]  [BUGGY]  Iterator  iter  =  arguments.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Iterator  iter  =  arguments.iterator();  [BUGGY]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  arguments.iterator();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
7	[BUG]  [BUGGY]  tokens.add(options.getOption( "stopAtNonOption "));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  tokens.add(options.getOption( "stopAtNonOption "));  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	tokens.add(options.getOption( "stopAtNonOption "));	      Option    currentOption    =    options.getOption(   "stopAtNonOption   ");    tokens.add(currentOption);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
8	[BUG]  [BUGGY]  tokens.add( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  tokens.add( "stopAtNonOption ");  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	tokens.add( "stopAtNonOption ");	      Option    currentOption    =    options.getOption(   "stopAtNonOption   ");    tokens.add(currentOption);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
9	[BUG]  [BUGGY]  Iterator  iter  =  this.options.iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Iterator  iter  =  this.options.iterator();  [BUGGY]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  this.options.iterator();	  Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
10	[BUG]  [BUGGY]  Iterator  iter  =  currentOptions.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Iterator  iter  =  currentOptions.iterator();  [BUGGY]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  currentOptions.iterator();	  Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
11	[BUG]  [BUGGY]  Arrays.asList(this.options).iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Arrays.asList(this.options).iterator();  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(this.options).iterator();	      Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
12	[BUG]  [BUGGY]  Arrays.asList(arguments).reset();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Arrays.asList(arguments).reset();  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).reset();	      Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
13	[BUG]  [BUGGY]  Arrays.asList(arguments).add( "-- ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Arrays.asList(arguments).add( "-- ");  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).add( "-- ");	      Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
14	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getOption(arguments);  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(arguments);	      Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
15	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments[tokenLength]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getOption(arguments[tokenLength]);  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(arguments[tokenLength]);	      Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
16	[BUG]  [BUGGY]  Iterator  iter  =(options!=  null)?  options.iterator()  :  Arrays.asList(options).iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Iterator  iter  =(options!=  null)?  options.iterator()  :  Arrays.asList(options).iterator();  [BUGGY]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =(options!=  null)?  options.iterator()  :  Arrays.asList(options).iterator();	  Iterator    iter    =    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
17	[BUG]  [BUGGY]  Iterator  iter  =  tokens.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Iterator  iter  =  tokens.iterator();  [BUGGY]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  tokens.iterator();	  Iterator    iter    =    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
18	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  null;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  null;  [BUGGY]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  null;	  Iterator    iter    =    Arrays.asList(this.options).iterator();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
19	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption( "stopAtNonOption ",  arguments);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getOption( "stopAtNonOption ",  arguments);  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption( "stopAtNonOption ",  arguments);	      Option    currentOption    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
20	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption( "stopAtNonOption. ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getOption( "stopAtNonOption. ");  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption( "stopAtNonOption. ");	      Option    currentOption    =    options.getOption(   "stopAtNonOption   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Iterator  iter  =  this.arguments.iterator();  [BUGGY]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  this.arguments.iterator();	  Iterator    iter    =    Arrays.asList(this.arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
22	[BUG]  [BUGGY]  Ilerator  iter  =  Arrays.asList(arguments,  stopAtNonOption).iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Ilerator  iter  =  Arrays.asList(arguments,  stopAtNonOption).iterator();  [BUGGY]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Ilerator  iter  =  Arrays.asList(arguments,  stopAtNonOption).iterator();	  Ilerator    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
23	[BUG]  [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  -  1);  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  -  1);	      List    <    String>    arguments    =    new    ArrayList    <    String>(arguments.size());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
24	[BUG]  [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  +  1);  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	List  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size()  +  1);	      List    <    String>    arguments    =    new    ArrayList    <    String>(arguments.size());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
25	[BUG]  [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size());  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	ArrayList  <  String>  arguments  =  new  ArrayList  <  String>(arguments.size());	      List    <    String>    arguments    =    new    ArrayList    <    String>(arguments.size());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
26	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  +  2);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength  +  2);  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(tokenLength  +  2);	      Option    currentOption    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
27	[BUG]  [BUGGY]  Options  options  =  options.getOption( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Options  options  =  options.getOption( "stopAtNonOption ");  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Options  options  =  options.getOption( "stopAtNonOption ");	      Option    currentOption    =    options.getOption(   "stopAtNonOption   ");    tokens.add(currentOption);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
28	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption( "eatTheRest ");  tokens.add(currentOption);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getOption( "eatTheRest ");  tokens.add(currentOption);  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption( "eatTheRest ");  tokens.add(currentOption);	      Option    currentOption    =    options.getOption(   "stopAtNonOption   ");    tokens.add(currentOption);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
29	[BUG]  [BUGGY]  IllegalArgumentIterator  iter  =  Arrays.asList(arguments).iterator();  [CE]  [FE]        AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  IllegalArgumentIterator  iter  =  Arrays.asList(arguments).iterator();  [BUGGY]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	IllegalArgumentIterator  iter  =  Arrays.asList(arguments).iterator();	  Ilerator    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  	12	None	replace
30	[BUG]  [BUGGY]  Ilerator  iter  =  Arrays.asList(options).iterator();  [CE]  [FE]          AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Ilerator  iter  =  Arrays.asList(options).iterator();  [BUGGY]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Ilerator  iter  =  Arrays.asList(options).iterator();	  Ilerator    iter    =    Arrays.asList(arguments).iterator();    	non-compiled	[CE]  	12	None	replace
31	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  currentOptions.iterator();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Iterator  <  String>  iter  =  currentOptions.iterator();  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  <  String>  iter  =  currentOptions.iterator();	      Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
32	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments[0]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getOption(arguments[0]);  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(arguments[0]);	      Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
33	[BUG]  [BUGGY]  Arrays.asList(arguments).clear();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Arrays.asList(arguments).clear();  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).clear();	      Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
34	[BUG]  [BUGGY]  Arrays.asList(arguments).add( "n ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Arrays.asList(arguments).add( "n ");  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).add( "n ");	      Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
35	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.iterator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Iterator  <  Option>  iter  =  options.iterator();  [BUGGY]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  <  Option>  iter  =  options.iterator();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
36	[BUG]  [BUGGY]  iter.remove();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  iter.remove();  [BUGGY]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	iter.remove();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
37	[BUG]  [BUGGY]  Iterator  iter  =  arrays.iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Iterator  iter  =  arrays.iterator();  [BUGGY]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  arrays.iterator();	  Iterator    iter    =    Arrays.asList(options).iterator();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
38	[BUG]  [BUGGY]  Iterator  iter  =  currentOption.options.iterator();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Iterator  iter  =  currentOption.options.iterator();  [BUGGY]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =  currentOption.options.iterator();	  Iterator    iter    =    options.iterator();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
39	[BUG]  [BUGGY]  List  <  String>  arguments  =  options.getOptions( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  List  <  String>  arguments  =  options.getOptions( "stopAtNonOption ");  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	List  <  String>  arguments  =  options.getOptions( "stopAtNonOption ");	      Option    currentOption    =    options.getOption(   "stopAtNonOption   ");    tokens.add(currentOption);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
40	[BUG]  [BUGGY]  List  <  String>  arguments  =  options.getOption( "stopAtNonOption ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  List  <  String>  arguments  =  options.getOption( "stopAtNonOption ");  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	List  <  String>  arguments  =  options.getOption( "stopAtNonOption ");	      Option    currentOption    =    options.getOption(   "stopAtNonOption   ");    tokens.add(currentOption);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
41	[BUG]  [BUGGY]  Arrays.sort(arguments).iterator();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Arrays.sort(arguments).iterator();  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.sort(arguments).iterator();	      Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
42	[BUG]  [BUGGY]  Arrays.asList(arguments).addAll(this);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Arrays.asList(arguments).addAll(this);  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Arrays.asList(arguments).addAll(this);	      Arrays.asList(arguments).iterator();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
43	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments.length);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getOption(tokenLength,  arguments.length);  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(tokenLength,  arguments.length);	      Option    currentOption    =    options.getOption(tokenLength);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
44	[BUG]  [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  this.options;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  this.options;  [BUGGY]      while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Iterator  iter  =(this.options!=  null)?  Arrays.asList(this.options).iterator()  :  this.options;	  Iterator    iter    =    Arrays.asList(this.options).iterator();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
45	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(token,  stopAtNonOption);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {  init();  this.options  =  options;      [BUGGY]  Option  currentOption  =  options.getOption(token,  stopAtNonOption);  [BUGGY]    Iterator  iter  =  Arrays.asList(arguments).iterator();  while  (iter.hasNext())  {  String  token  =  (String)  iter.next();  if  (token.startsWith(   "--   "))  {  [CLASS]  PosixParser  [METHOD]  flatten  [RETURN_TYPE]  String[]  Options  options  String[]  arguments  boolean  stopAtNonOption  [VARIABLES]  Options  options  boolean  eatTheRest  stopAtNonOption  Iterator  iter  List  tokens  Option  currentOption  String[]  arguments  String  token  int  tokenLength  	projects/Cli17/src/java/org/apache/commons/cli/PosixParser.java	0.2773500981126146	103	103	1	replace	Option  currentOption  =  options.getOption(token,  stopAtNonOption);	      Option    currentOption    =    options.getOption(token);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
