bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] } catch (ClassNotFoundException ex) { [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT] in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());      @SuppressWarnings("unchecked") // see above T readObject = (T) in.readObject(); return readObject; [BUGGY] } catch (ClassNotFoundException ex) { [BUGGY] throw new SerializationException("ClassNotFoundException while reading cloned object data", ex); } catch (IOException ex) { throw new SerializationException("IOException while reading cloned object data", ex); } finally { try { if (in != null) { in.close(); } } catch (IOException ex) { throw new SerializationException("IOException on closing cloned object data InputStream.", ex); [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	1.0	98	98	1	replace	
2	[BUG] [BUGGY] [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT] in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());      @SuppressWarnings("unchecked") // see above T readObject = (T) in.readObject(); return readObject; [BUGGY] [BUGGY] } catch (ClassNotFoundException ex) { throw new SerializationException("ClassNotFoundException while reading cloned object data", ex); } catch (IOException ex) { throw new SerializationException("IOException while reading cloned object data", ex); } finally { try { if (in != null) { in.close(); } } catch (IOException ex) { throw new SerializationException("IOException on closing cloned object data InputStream.", ex); [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	1.0	98	98	1	add	
3	[BUG] [BUGGY] throw new SerializationException("ClassNotFoundException while reading cloned object data", ex); [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT]      @SuppressWarnings("unchecked") // see above T readObject = (T) in.readObject(); return readObject; } catch (ClassNotFoundException ex) { [BUGGY] throw new SerializationException("ClassNotFoundException while reading cloned object data", ex); [BUGGY] } catch (IOException ex) { throw new SerializationException("IOException while reading cloned object data", ex); } finally { try { if (in != null) { in.close(); } } catch (IOException ex) { throw new SerializationException("IOException on closing cloned object data InputStream.", ex); } [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	1.0	99	99	1	replace	
4	[BUG] [BUGGY] [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT]      @SuppressWarnings("unchecked") // see above T readObject = (T) in.readObject(); return readObject; } catch (ClassNotFoundException ex) { [BUGGY] [BUGGY] throw new SerializationException("ClassNotFoundException while reading cloned object data", ex); } catch (IOException ex) { throw new SerializationException("IOException while reading cloned object data", ex); } finally { try { if (in != null) { in.close(); } } catch (IOException ex) { throw new SerializationException("IOException on closing cloned object data InputStream.", ex); } [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	1.0	99	99	1	add	
5	[BUG] [BUGGY] try { [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT]  @SuppressWarnings("unchecked") // see above T readObject = (T) in.readObject(); return readObject; } catch (ClassNotFoundException ex) { throw new SerializationException("ClassNotFoundException while reading cloned object data", ex); } catch (IOException ex) { throw new SerializationException("IOException while reading cloned object data", ex); } finally { [BUGGY] try { [BUGGY] if (in != null) { in.close(); } } catch (IOException ex) { throw new SerializationException("IOException on closing cloned object data InputStream.", ex); } } } [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	1.0	103	103	1	replace	
6	[BUG] [BUGGY] [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT]  @SuppressWarnings("unchecked") // see above T readObject = (T) in.readObject(); return readObject; } catch (ClassNotFoundException ex) { throw new SerializationException("ClassNotFoundException while reading cloned object data", ex); } catch (IOException ex) { throw new SerializationException("IOException while reading cloned object data", ex); } finally { [BUGGY] [BUGGY] try { if (in != null) { in.close(); } } catch (IOException ex) { throw new SerializationException("IOException on closing cloned object data InputStream.", ex); } } } [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	1.0	103	103	1	add	
7	[BUG] [BUGGY] ByteArrayInputStream bais = new ByteArrayInputStream(objectData); [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT] public static <T extends Serializable> T clone(T object) { if (object == null) { return null; } byte[] objectData = serialize(object); [BUGGY] ByteArrayInputStream bais = new ByteArrayInputStream(objectData); [BUGGY]  ClassLoaderAwareObjectInputStream in = null; try {  in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());      [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	83	83	1	replace	
8	[BUG] [BUGGY] [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT] public static <T extends Serializable> T clone(T object) { if (object == null) { return null; } byte[] objectData = serialize(object); [BUGGY] [BUGGY] ByteArrayInputStream bais = new ByteArrayInputStream(objectData); ClassLoaderAwareObjectInputStream in = null; try {  in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());      [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	83	83	1	add	
9	[BUG] [BUGGY] ClassLoaderAwareObjectInputStream in = null; [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT] public static <T extends Serializable> T clone(T object) { if (object == null) { return null; } byte[] objectData = serialize(object); ByteArrayInputStream bais = new ByteArrayInputStream(objectData); [BUGGY] ClassLoaderAwareObjectInputStream in = null; [BUGGY] try {  in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());      @SuppressWarnings("unchecked") // see above T readObject = (T) in.readObject(); [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	85	85	1	replace	
10	[BUG] [BUGGY] [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT] public static <T extends Serializable> T clone(T object) { if (object == null) { return null; } byte[] objectData = serialize(object); ByteArrayInputStream bais = new ByteArrayInputStream(objectData); [BUGGY] [BUGGY] ClassLoaderAwareObjectInputStream in = null; try {  in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());      @SuppressWarnings("unchecked") // see above T readObject = (T) in.readObject(); [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	85	85	1	add	
11	[BUG] [BUGGY] in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader()); [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT] public static <T extends Serializable> T clone(T object) { if (object == null) { return null; } byte[] objectData = serialize(object); ByteArrayInputStream bais = new ByteArrayInputStream(objectData); ClassLoaderAwareObjectInputStream in = null; try {  [BUGGY] in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader()); [BUGGY]      @SuppressWarnings("unchecked") // see above T readObject = (T) in.readObject(); return readObject; } catch (ClassNotFoundException ex) { [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	88	88	1	replace	
12	[BUG] [BUGGY] [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT] public static <T extends Serializable> T clone(T object) { if (object == null) { return null; } byte[] objectData = serialize(object); ByteArrayInputStream bais = new ByteArrayInputStream(objectData); ClassLoaderAwareObjectInputStream in = null; try {  [BUGGY] [BUGGY] in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());      @SuppressWarnings("unchecked") // see above T readObject = (T) in.readObject(); return readObject; } catch (ClassNotFoundException ex) { [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	88	88	1	add	
13	[BUG] [BUGGY] T readObject = (T) in.readObject(); [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT] ClassLoaderAwareObjectInputStream in = null; try {  in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());      @SuppressWarnings("unchecked") // see above [BUGGY] T readObject = (T) in.readObject(); [BUGGY] return readObject; } catch (ClassNotFoundException ex) { throw new SerializationException("ClassNotFoundException while reading cloned object data", ex); } catch (IOException ex) { throw new SerializationException("IOException while reading cloned object data", ex); } finally { try { if (in != null) { in.close(); [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	95	95	1	replace	
14	[BUG] [BUGGY] [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT] ClassLoaderAwareObjectInputStream in = null; try {  in = new ClassLoaderAwareObjectInputStream(bais, object.getClass().getClassLoader());      @SuppressWarnings("unchecked") // see above [BUGGY] [BUGGY] T readObject = (T) in.readObject(); return readObject; } catch (ClassNotFoundException ex) { throw new SerializationException("ClassNotFoundException while reading cloned object data", ex); } catch (IOException ex) { throw new SerializationException("IOException while reading cloned object data", ex); } finally { try { if (in != null) { in.close(); [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	95	95	1	add	
15	[BUG] [BUGGY] if (in != null) { [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT] @SuppressWarnings("unchecked") // see above T readObject = (T) in.readObject(); return readObject; } catch (ClassNotFoundException ex) { throw new SerializationException("ClassNotFoundException while reading cloned object data", ex); } catch (IOException ex) { throw new SerializationException("IOException while reading cloned object data", ex); } finally { try { [BUGGY] if (in != null) { [BUGGY] in.close(); } } catch (IOException ex) { throw new SerializationException("IOException on closing cloned object data InputStream.", ex); } } } [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	104	104	1	replace	
16	[BUG] [BUGGY] [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT] @SuppressWarnings("unchecked") // see above T readObject = (T) in.readObject(); return readObject; } catch (ClassNotFoundException ex) { throw new SerializationException("ClassNotFoundException while reading cloned object data", ex); } catch (IOException ex) { throw new SerializationException("IOException while reading cloned object data", ex); } finally { try { [BUGGY] [BUGGY] if (in != null) { in.close(); } } catch (IOException ex) { throw new SerializationException("IOException on closing cloned object data InputStream.", ex); } } } [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	104	104	1	add	
17	[BUG] [BUGGY] in.close(); [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT] T readObject = (T) in.readObject(); return readObject; } catch (ClassNotFoundException ex) { throw new SerializationException("ClassNotFoundException while reading cloned object data", ex); } catch (IOException ex) { throw new SerializationException("IOException while reading cloned object data", ex); } finally { try { if (in != null) { [BUGGY] in.close(); [BUGGY] } } catch (IOException ex) { throw new SerializationException("IOException on closing cloned object data InputStream.", ex); } } } [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	105	105	1	replace	
18	[BUG] [BUGGY] [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT] T readObject = (T) in.readObject(); return readObject; } catch (ClassNotFoundException ex) { throw new SerializationException("ClassNotFoundException while reading cloned object data", ex); } catch (IOException ex) { throw new SerializationException("IOException while reading cloned object data", ex); } finally { try { if (in != null) { [BUGGY] [BUGGY] in.close(); } } catch (IOException ex) { throw new SerializationException("IOException on closing cloned object data InputStream.", ex); } } } [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	105	105	1	add	
19	[BUG] [BUGGY] } [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT] throw new SerializationException("ClassNotFoundException while reading cloned object data", ex); } catch (IOException ex) { throw new SerializationException("IOException while reading cloned object data", ex); } finally { try { if (in != null) { in.close(); } } catch (IOException ex) { throw new SerializationException("IOException on closing cloned object data InputStream.", ex); [BUGGY] } [BUGGY] } } [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	109	109	1	replace	
20	[BUG] [BUGGY] [FE] SerializationException testPrimitiveTypeClassSerialization [CONTEXT] throw new SerializationException("ClassNotFoundException while reading cloned object data", ex); } catch (IOException ex) { throw new SerializationException("IOException while reading cloned object data", ex); } finally { try { if (in != null) { in.close(); } } catch (IOException ex) { throw new SerializationException("IOException on closing cloned object data InputStream.", ex); [BUGGY] [BUGGY] } } } [CLASS] SerializationUtils ClassLoaderAwareObjectInputStream [METHOD] clone [RETURN_TYPE] <T  T object [VARIABLES] byte[] objectData ClassLoaderAwareObjectInputStream in boolean T object readObject ByteArrayInputStream bais ClassLoader classLoader IOException ex ClassNotFoundException ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	109	109	1	add	
