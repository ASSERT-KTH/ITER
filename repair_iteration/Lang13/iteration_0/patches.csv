bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action1	[BUG]  [BUGGY]  if(in!=  null)  {  ClassLoaderAwareObjectInputStream  in  =  readObject();  if(in.readObject()!=  objectData[])  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data ",  ex);  }  [CE]  [CONTEXT]  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  if  (in  !=  null)  {  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  [BUGGY]  if(in!=  null)  {  ClassLoaderAwareObjectInputStream  in  =  readObject();  if(in.readObject()!=  objectData[])  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data ",  ex);  }  [BUGGY]  }  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	109	109	1	replace	if(in!=  null)  {  ClassLoaderAwareObjectInputStream  in  =  readObject();  if(in.readObject()!=  objectData[])  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data ",  ex);  }	}  	non-compiled	[CE]  	19	None	replace
2	[BUG]  [BUGGY]  if(in!=  null)  {  ClassLoaderAwareObjectInputStream  in  =  readObject();  if(in.close()!=  null)  {  in.close();  }  [CE]  illegal  start  of  expression  [CONTEXT]  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  if  (in  !=  null)  {  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  [BUGGY]  if(in!=  null)  {  ClassLoaderAwareObjectInputStream  in  =  readObject();  if(in.close()!=  null)  {  in.close();  }  [BUGGY]  }  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	109	109	1	replace	if(in!=  null)  {  ClassLoaderAwareObjectInputStream  in  =  readObject();  if(in.close()!=  null)  {  in.close();  }	}  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
3	[BUG]  [BUGGY]  if(in!=  null)  {  ClassLoaderAwareObjectInputStream  in  =  readObject();  if(in.close()  ==  null)  {  in.close();  }  [CE]  illegal  start  of  expression  [CONTEXT]  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  if  (in  !=  null)  {  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  [BUGGY]  if(in!=  null)  {  ClassLoaderAwareObjectInputStream  in  =  readObject();  if(in.close()  ==  null)  {  in.close();  }  [BUGGY]  }  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	109	109	1	replace	if(in!=  null)  {  ClassLoaderAwareObjectInputStream  in  =  readObject();  if(in.close()  ==  null)  {  in.close();  }	}  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
4	[BUG]  [BUGGY]  if(in!=  null)  {  ClassLoaderAwareObjectInputStream  in  =  readObject();  if(in.readObject()!=  objectData[])  {  throw  new  SerializationException( " ");  }  [CE]  [CONTEXT]  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  if  (in  !=  null)  {  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  [BUGGY]  if(in!=  null)  {  ClassLoaderAwareObjectInputStream  in  =  readObject();  if(in.readObject()!=  objectData[])  {  throw  new  SerializationException( " ");  }  [BUGGY]  }  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	109	109	1	replace	if(in!=  null)  {  ClassLoaderAwareObjectInputStream  in  =  readObject();  if(in.readObject()!=  objectData[])  {  throw  new  SerializationException( " ");  }	}  	non-compiled	[CE]  	19	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [CONTEXT]  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  if  (in  !=  null)  {  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  [BUGGY]    [BUGGY]  }  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	109	109	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
12	[BUG]  [BUGGY]  [FE]  SerializationException  testPrimitiveTypeClassSerialization  [CONTEXT]  @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  [BUGGY]  if(in  ==  null)  {  [BUGGY]  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  }  }  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	104	104	1	add	if(in  ==  null)  {	if  (in  !=  null)  {  	compilable	  [FE]  SerializationException  testPrimitiveTypeClassSerialization	15	1
13	[BUG]  [BUGGY]  if(in  ==  null)  {  [FE]  SerializationException  testPrimitiveTypeClassSerialization  [CONTEXT]  @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  [BUGGY]  if(in  ==  null)  {  [BUGGY]  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  }  }  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	104	104	1	replace	if(in  ==  null)  {	if  (in  !=  null)  {  	compilable	  [FE]  SerializationException  testPrimitiveTypeClassSerialization	15	1	replace
14	[BUG]  [BUGGY]  if(in  }  null)  {  [CE]  ')'  expected  [CONTEXT]  @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  [BUGGY]  if(in  }  null)  {  [BUGGY]  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  }  }  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	104	104	1	replace	if(in  }  null)  {	if  (in  !=  null)  {  	non-compiled	[CE]  ')'  expected	15	None	replace
15	[BUG]  [BUGGY]    [CE]  'try'  without  'catch'  or  'finally'  [CONTEXT]  @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  [BUGGY]    [BUGGY]  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  }  }  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	104	104	1	replace	  	if  (in  !=  null)  {  	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	15	None	replace
21	[BUG]  [BUGGY]    byte[]  classLoader  =  object.getClass().getClassLoader();  [CE]  incompatible  types  [CONTEXT]  public  static  <T  extends  Serializable>  T  clone(T  object)  {  if  (object  ==  null)  {  return  null;  }  byte[]  objectData  =  serialize(object);  [BUGGY]    byte[]  classLoader  =  object.getClass().getClassLoader();  [BUGGY]  ByteArrayInputStream  bais  =  new  ByteArrayInputStream(objectData);  ClassLoaderAwareObjectInputStream  in  =  null;  try  {  in  =  new  ClassLoaderAwareObjectInputStream(bais,  object.getClass().getClassLoader());      [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	83	83	1	replace	    byte[]  classLoader  =  object.getClass().getClassLoader();		non-compiled	[CE]  incompatible  types	8	None	add
22	[BUG]  [BUGGY]    byte[]  objectData  =  serialize(object);  [CE]  variable  objectData  is  already  defined  in  method  <T>clone(T)  [CONTEXT]  public  static  <T  extends  Serializable>  T  clone(T  object)  {  if  (object  ==  null)  {  return  null;  }  byte[]  objectData  =  serialize(object);  [BUGGY]    byte[]  objectData  =  serialize(object);  [BUGGY]  ByteArrayInputStream  bais  =  new  ByteArrayInputStream(objectData);  ClassLoaderAwareObjectInputStream  in  =  null;  try  {  in  =  new  ClassLoaderAwareObjectInputStream(bais,  object.getClass().getClassLoader());      [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	83	83	1	replace	    byte[]  objectData  =  serialize(object);		non-compiled	[CE]  variable  objectData  is  already  defined  in  method  <T>clone(T)	8	None	add
23	[BUG]  [BUGGY]    boolean  readObject  =  object.readObject();  [CE]  cannot  find  symbol  [CONTEXT]  public  static  <T  extends  Serializable>  T  clone(T  object)  {  if  (object  ==  null)  {  return  null;  }  byte[]  objectData  =  serialize(object);  [BUGGY]    boolean  readObject  =  object.readObject();  [BUGGY]  ByteArrayInputStream  bais  =  new  ByteArrayInputStream(objectData);  ClassLoaderAwareObjectInputStream  in  =  null;  try  {  in  =  new  ClassLoaderAwareObjectInputStream(bais,  object.getClass().getClassLoader());      [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	83	83	1	replace	    boolean  readObject  =  object.readObject();		non-compiled	[CE]  cannot  find  symbol	8	None	add
24	[BUG]  [BUGGY]    byte[]  objectData  =  serializeObject(object);  [CE]  variable  objectData  is  already  defined  in  method  <T>clone(T)  [CONTEXT]  public  static  <T  extends  Serializable>  T  clone(T  object)  {  if  (object  ==  null)  {  return  null;  }  byte[]  objectData  =  serialize(object);  [BUGGY]    byte[]  objectData  =  serializeObject(object);  [BUGGY]  ByteArrayInputStream  bais  =  new  ByteArrayInputStream(objectData);  ClassLoaderAwareObjectInputStream  in  =  null;  try  {  in  =  new  ClassLoaderAwareObjectInputStream(bais,  object.getClass().getClassLoader());      [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	83	83	1	replace	    byte[]  objectData  =  serializeObject(object);		non-compiled	[CE]  variable  objectData  is  already  defined  in  method  <T>clone(T)	8	None	add
25	[BUG]  [BUGGY]    byte[]  classLoader  =  object.getClass().getClassLoader();  this.readObject  =  object;  [CE]  incompatible  types  [CONTEXT]  public  static  <T  extends  Serializable>  T  clone(T  object)  {  if  (object  ==  null)  {  return  null;  }  byte[]  objectData  =  serialize(object);  [BUGGY]    byte[]  classLoader  =  object.getClass().getClassLoader();  this.readObject  =  object;  [BUGGY]  ByteArrayInputStream  bais  =  new  ByteArrayInputStream(objectData);  ClassLoaderAwareObjectInputStream  in  =  null;  try  {  in  =  new  ClassLoaderAwareObjectInputStream(bais,  object.getClass().getClassLoader());      [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	83	83	1	replace	    byte[]  classLoader  =  object.getClass().getClassLoader();  this.readObject  =  object;		non-compiled	[CE]  incompatible  types	8	None	add
32	[BUG]  [BUGGY]  T  readObject  =(T)in.readArray();  [CE]  cannot  find  symbol  [CONTEXT]  ClassLoaderAwareObjectInputStream  in  =  null;  try  {  in  =  new  ClassLoaderAwareObjectInputStream(bais,  object.getClass().getClassLoader());      @SuppressWarnings( "unchecked ")  //  see  above  [BUGGY]  T  readObject  =(T)in.readArray();  [BUGGY]  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  if  (in  !=  null)  {  in.close();  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	95	95	1	replace	T  readObject  =(T)in.readArray();	T  readObject  =  (T)  in.readObject();  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
34	[BUG]  [BUGGY]  T  readObject  =(T)in.clone();  [CE]  clone()  has  protected  access  in  Object  [CONTEXT]  ClassLoaderAwareObjectInputStream  in  =  null;  try  {  in  =  new  ClassLoaderAwareObjectInputStream(bais,  object.getClass().getClassLoader());      @SuppressWarnings( "unchecked ")  //  see  above  [BUGGY]  T  readObject  =(T)in.clone();  [BUGGY]  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  if  (in  !=  null)  {  in.close();  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	95	95	1	replace	T  readObject  =(T)in.clone();	T  readObject  =  (T)  in.readObject();  	non-compiled	[CE]  clone()  has  protected  access  in  Object	13	None	replace
35	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  ClassLoaderAwareObjectInputStream  in  =  null;  try  {  in  =  new  ClassLoaderAwareObjectInputStream(bais,  object.getClass().getClassLoader());      @SuppressWarnings( "unchecked ")  //  see  above  [BUGGY]    [BUGGY]  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  if  (in  !=  null)  {  in.close();  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	95	95	1	replace	  	T  readObject  =  (T)  in.readObject();  	non-compiled	[CE]  illegal  start  of  type	13	None	replace
41	[BUG]  [BUGGY]    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)in.readObject();  [CE]  variable  in  is  already  defined  in  method  <T>clone(T)  [CONTEXT]    @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  [BUGGY]    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)in.readObject();  [BUGGY]  try  {  if  (in  !=  null)  {  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  }  }  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	1.0	103	103	1	replace	    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)in.readObject();		non-compiled	[CE]  variable  in  is  already  defined  in  method  <T>clone(T)	6	None	add
42	[BUG]  [BUGGY]    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)readObject.clone();  [CE]  variable  in  is  already  defined  in  method  <T>clone(T)  [CONTEXT]    @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  [BUGGY]    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)readObject.clone();  [BUGGY]  try  {  if  (in  !=  null)  {  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  }  }  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	1.0	103	103	1	replace	    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)readObject.clone();		non-compiled	[CE]  variable  in  is  already  defined  in  method  <T>clone(T)	6	None	add
43	[BUG]  [BUGGY]    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)readObject;  [CE]  variable  in  is  already  defined  in  method  <T>clone(T)  [CONTEXT]    @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  [BUGGY]    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)readObject;  [BUGGY]  try  {  if  (in  !=  null)  {  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  }  }  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	1.0	103	103	1	replace	    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)readObject;		non-compiled	[CE]  variable  in  is  already  defined  in  method  <T>clone(T)	6	None	add
44	[BUG]  [BUGGY]    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)in.readObject();  readObject  =(T)in.readObject();  [CE]  variable  in  is  already  defined  in  method  <T>clone(T)  [CONTEXT]    @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  [BUGGY]    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)in.readObject();  readObject  =(T)in.readObject();  [BUGGY]  try  {  if  (in  !=  null)  {  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  }  }  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	1.0	103	103	1	replace	    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)in.readObject();  readObject  =(T)in.readObject();		non-compiled	[CE]  variable  in  is  already  defined  in  method  <T>clone(T)	6	None	add
45	[BUG]  [BUGGY]    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)readObject.clone();  readObject  =(T)in.readObject();  [CE]  variable  in  is  already  defined  in  method  <T>clone(T)  [CONTEXT]    @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  [BUGGY]    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)readObject.clone();  readObject  =(T)in.readObject();  [BUGGY]  try  {  if  (in  !=  null)  {  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  }  }  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	1.0	103	103	1	replace	    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)readObject.clone();  readObject  =(T)in.readObject();		non-compiled	[CE]  variable  in  is  already  defined  in  method  <T>clone(T)	6	None	add
51	[BUG]  [BUGGY]    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)in.readObject();  [CE]  variable  in  is  already  defined  in  method  <T>clone(T)  [CONTEXT]        @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  [BUGGY]    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)in.readObject();  [BUGGY]  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  if  (in  !=  null)  {  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	1.0	99	99	1	replace	    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)in.readObject();		non-compiled	[CE]  variable  in  is  already  defined  in  method  <T>clone(T)	4	None	add
52	[BUG]  [BUGGY]    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)readObject.clone();  [CE]  variable  in  is  already  defined  in  method  <T>clone(T)  [CONTEXT]        @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  [BUGGY]    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)readObject.clone();  [BUGGY]  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  if  (in  !=  null)  {  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	1.0	99	99	1	replace	    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)readObject.clone();		non-compiled	[CE]  variable  in  is  already  defined  in  method  <T>clone(T)	4	None	add
53	[BUG]  [BUGGY]    byte[]  objectData  =(byte[])in.readObject();  [CE]  variable  objectData  is  already  defined  in  method  <T>clone(T)  [CONTEXT]        @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  [BUGGY]    byte[]  objectData  =(byte[])in.readObject();  [BUGGY]  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  if  (in  !=  null)  {  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	1.0	99	99	1	replace	    byte[]  objectData  =(byte[])in.readObject();		non-compiled	[CE]  variable  objectData  is  already  defined  in  method  <T>clone(T)	4	None	add
54	[BUG]  [BUGGY]    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)readObject;  [CE]  variable  in  is  already  defined  in  method  <T>clone(T)  [CONTEXT]        @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  [BUGGY]    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)readObject;  [BUGGY]  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  if  (in  !=  null)  {  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	1.0	99	99	1	replace	    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)readObject;		non-compiled	[CE]  variable  in  is  already  defined  in  method  <T>clone(T)	4	None	add
55	[BUG]  [BUGGY]    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)super.clone();  [CE]  variable  in  is  already  defined  in  method  <T>clone(T)  [CONTEXT]        @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  [BUGGY]    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)super.clone();  [BUGGY]  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  if  (in  !=  null)  {  in.close();  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	1.0	99	99	1	replace	    ClassLoaderAwareObjectInputStream  in  =(ClassLoaderAwareObjectInputStream)super.clone();		non-compiled	[CE]  variable  in  is  already  defined  in  method  <T>clone(T)	4	None	add
61	[BUG]  [BUGGY]  ClassLoaderAwareObjectInputStream  in  =  bais;  [CE]  incompatible  types  [CONTEXT]  public  static  <T  extends  Serializable>  T  clone(T  object)  {  if  (object  ==  null)  {  return  null;  }  byte[]  objectData  =  serialize(object);  ByteArrayInputStream  bais  =  new  ByteArrayInputStream(objectData);  [BUGGY]  ClassLoaderAwareObjectInputStream  in  =  bais;  [BUGGY]  try  {  in  =  new  ClassLoaderAwareObjectInputStream(bais,  object.getClass().getClassLoader());      @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	85	85	1	replace	ClassLoaderAwareObjectInputStream  in  =  bais;	ClassLoaderAwareObjectInputStream  in  =  null;  	non-compiled	[CE]  incompatible  types	9	None	replace
62	[BUG]  [BUGGY]  ClassLoaderAwareObjectInputStream  in  =  new  ClassLoaderAwareObjectInputStream(bais);  [CE]  constructor  ClassLoaderAwareObjectInputStream  in  class  ClassLoaderAwareObjectInputStream  cannot  be  applied  to  given  types;  [CONTEXT]  public  static  <T  extends  Serializable>  T  clone(T  object)  {  if  (object  ==  null)  {  return  null;  }  byte[]  objectData  =  serialize(object);  ByteArrayInputStream  bais  =  new  ByteArrayInputStream(objectData);  [BUGGY]  ClassLoaderAwareObjectInputStream  in  =  new  ClassLoaderAwareObjectInputStream(bais);  [BUGGY]  try  {  in  =  new  ClassLoaderAwareObjectInputStream(bais,  object.getClass().getClassLoader());      @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	85	85	1	replace	ClassLoaderAwareObjectInputStream  in  =  new  ClassLoaderAwareObjectInputStream(bais);	ClassLoaderAwareObjectInputStream  in  =  null;  	non-compiled	[CE]  constructor  ClassLoaderAwareObjectInputStream  in  class  ClassLoaderAwareObjectInputStream  cannot  be  applied  to  given  types;	9	None	replace
63	[BUG]  [BUGGY]  ClassLoaderAwareObjectInputStream  in  =  object;  [CE]  incompatible  types  [CONTEXT]  public  static  <T  extends  Serializable>  T  clone(T  object)  {  if  (object  ==  null)  {  return  null;  }  byte[]  objectData  =  serialize(object);  ByteArrayInputStream  bais  =  new  ByteArrayInputStream(objectData);  [BUGGY]  ClassLoaderAwareObjectInputStream  in  =  object;  [BUGGY]  try  {  in  =  new  ClassLoaderAwareObjectInputStream(bais,  object.getClass().getClassLoader());      @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	85	85	1	replace	ClassLoaderAwareObjectInputStream  in  =  object;	ClassLoaderAwareObjectInputStream  in  =  null;  	non-compiled	[CE]  incompatible  types	9	None	replace
64	[BUG]  [BUGGY]  ClassLoaderAwareObjectInputStream  in  =  new  ClassLoaderAwareObjectInputStream;  [CE]  '('  or  '['  expected  [CONTEXT]  public  static  <T  extends  Serializable>  T  clone(T  object)  {  if  (object  ==  null)  {  return  null;  }  byte[]  objectData  =  serialize(object);  ByteArrayInputStream  bais  =  new  ByteArrayInputStream(objectData);  [BUGGY]  ClassLoaderAwareObjectInputStream  in  =  new  ClassLoaderAwareObjectInputStream;  [BUGGY]  try  {  in  =  new  ClassLoaderAwareObjectInputStream(bais,  object.getClass().getClassLoader());      @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	85	85	1	replace	ClassLoaderAwareObjectInputStream  in  =  new  ClassLoaderAwareObjectInputStream;	ClassLoaderAwareObjectInputStream  in  =  null;  	non-compiled	[CE]  '('  or  '['  expected	9	None	replace
65	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  in  [CONTEXT]  public  static  <T  extends  Serializable>  T  clone(T  object)  {  if  (object  ==  null)  {  return  null;  }  byte[]  objectData  =  serialize(object);  ByteArrayInputStream  bais  =  new  ByteArrayInputStream(objectData);  [BUGGY]    [BUGGY]  try  {  in  =  new  ClassLoaderAwareObjectInputStream(bais,  object.getClass().getClassLoader());      @SuppressWarnings( "unchecked ")  //  see  above  T  readObject  =  (T)  in.readObject();  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	85	85	1	replace	  	ClassLoaderAwareObjectInputStream  in  =  null;  	non-compiled	[CE]  cannot  find  symbol  in	9	None	replace
72	[BUG]  [BUGGY]  in.closeAsObject();  [CE]  cannot  find  symbol  [CONTEXT]  T  readObject  =  (T)  in.readObject();  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  if  (in  !=  null)  {  [BUGGY]  in.closeAsObject();  [BUGGY]  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  }  }  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	105	105	1	replace	in.closeAsObject();	in.close();  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
73	[BUG]  [BUGGY]  in.closeArchive();  [CE]  cannot  find  symbol  [CONTEXT]  T  readObject  =  (T)  in.readObject();  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  if  (in  !=  null)  {  [BUGGY]  in.closeArchive();  [BUGGY]  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  }  }  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	105	105	1	replace	in.closeArchive();	in.close();  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
74	[BUG]  [BUGGY]  in.closeAwareObject();  [CE]  cannot  find  symbol  [CONTEXT]  T  readObject  =  (T)  in.readObject();  return  readObject;  }  catch  (ClassNotFoundException  ex)  {  throw  new  SerializationException( "ClassNotFoundException  while  reading  cloned  object  data ",  ex);  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  while  reading  cloned  object  data ",  ex);  }  finally  {  try  {  if  (in  !=  null)  {  [BUGGY]  in.closeAwareObject();  [BUGGY]  }  }  catch  (IOException  ex)  {  throw  new  SerializationException( "IOException  on  closing  cloned  object  data  InputStream. ",  ex);  }  }  }  [CLASS]  SerializationUtils  ClassLoaderAwareObjectInputStream  [METHOD]  clone  [RETURN_TYPE]  <T  T  object  [VARIABLES]  byte[]  objectData  ClassLoaderAwareObjectInputStream  in  boolean  T  object  readObject  ByteArrayInputStream  bais  ClassLoader  classLoader  IOException  ex  ClassNotFoundException  ex  	projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java	0.7071067811865475	105	105	1	replace	in.closeAwareObject();	in.close();  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
