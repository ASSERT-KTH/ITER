projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98}catch(ClassNotFoundExceptionex){
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98}catch(Exceptionex){
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98}catch(IOExceptionex){
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object!=null){ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,classLoader.getClass().getClassLoader());@SuppressWarnings("unchecked")
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object==null){ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,classLoader.getClass().getClassLoader());@SuppressWarnings("unchecked")
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object!=null){ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader());@SuppressWarnings("unchecked")
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object==null){ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader());@SuppressWarnings("unchecked")
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object!=null){ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader());@SuppressWarnings("unchecked")//seeaboveTreadObject=
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,classLoader.getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=classLoader.getClassLoader();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(object.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=(ClassLoaderAwareObjectInputStream)in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object!=null){thrownewSerializationException("");}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object==null){thrownewSerializationException("");}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(readObject!=null){thrownewSerializationException("");}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(readObject!=null){thrownewSerializationException("")+"couldnotreadobject:"+object.getClass().getName());}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object==null){thrownewSerializationException("")+"doesnotsupporttheClassLoaderAwareObjectInputStream.");}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98in=(ClassLoaderAwareObjectInputStream)in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98InputStreamin=(ClassLoaderAwareObjectInputStream)in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=(ClassLoaderAwareObjectInputStream)this.in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(readObject!=null){ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,classLoader.getClass().getClassLoader());@SuppressWarnings("unchecked")
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(readObject==null){ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,classLoader.getClass().getClassLoader());@SuppressWarnings("unchecked")
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98}catch(Throwableex){
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtException("")+"couldnotreadobject:"+object.getClass().getName());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98wires.add(object.getClass().getName());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtException("")+"couldnotreadobject:"+object.getClass().getName());}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=(T)in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,classLoader.getClassLoader(),object);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object==null){ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader());@SuppressWarnings("unchecked")//seeaboveTreadObject=
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aught(ClassLoaderAwareObjectInputStream.class)+"doesnotsupporttheClassLoaderAwareObjectInputStream.");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aught(ClassLoaderAwareObjectInputStream.class)*2+"doesnotsupporttheClassLoaderAwareObjectInputStream.");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aught(ClassLoaderAwareObjectInputStream.class)*10+"doesnotsupporttheClassLoaderAwareObjectInputStream.");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtException("")+"doesnotsupporttheClassLoaderAwareObjectInputStream.");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object!=null){ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader());}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object!=null){in=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader());}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject==null){thrownewSerializationException("");}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject!=null){thrownewSerializationException("");}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtExceptionHandler.throwAsIOException("");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtExceptionHandler.throwAsIOException(bais,object.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=this.classLoader.getClassLoader();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=bais.getClassLoader();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=object.getClassLoader();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader(),classLoader);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(object,bais.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98in=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98InputStreamin=newClassLoaderAwareObjectInputStream(object.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(readObject==null){thrownewSerializationException("");}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(readObject!=null){thrownewSerializationException("".getMessage());}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98while(object!=null){thrownewSerializationException("");}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=(T)object.clone();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=null;
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98wires.put(object,readObject);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98((ClassLoaderAwareObjectInputStream)in).close();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(readObject==null){ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader());@SuppressWarnings("unchecked")
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(classLoader,bais.getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreambais=(ClassLoaderAwareObjectInputStream)in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98BYteArrayInputStreamin=newByteArrayInputStream(bais,object.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98BYteArrayInputStreamin=newByteArrayInputStream(bais,readObject.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98BYteArrayInputStreambais=(ByteArrayInputStream)in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98BYteArrayInputStreamin=newByteArrayInputStream(bais.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(object.getClass().getClassLoader(),classLoader);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(object.getClass().getClassLoader(),object);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(readObject!=null){ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader());@SuppressWarnings("unchecked")
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=(ClassLoaderAwareObjectInputStream)object.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98(T)in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98booleanex=in.readByteArrayInputStream();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98booleanex=in.readBoolean();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98booleanex=in.readByteArray();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=readObject.clone();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=(T)readObject.clone();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=newByteArrayInputStream(bais,object.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=newByteArrayInputStream(bais.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=newByteArrayInputStream(bais);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object!=null){ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader());@SuppressWarnings("readObject")
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtExceptionHandler(bais,object.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtExceptionHandler(bais,object.getClass().getClassLoader(),null);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98InputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=(ClassLoaderAwareObjectInputStream)in.readObject()-1;
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aught(newSerializationException(""))+"doesnotsupporttheClassLoaderAwareObjectInputStream.");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=object!=null?null:object.getClass().getName();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=object!=null?(T)object.getClass().getName():null;
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98InputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98in=newClassLoaderAwareObjectInputStream(bais,classLoader.getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98InputStreamin=newClassLoaderAwareObjectInputStream(bais,classLoader.getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(bais!=null){ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(classLoader,bais.getClassLoader());}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(in!=null){aught(newSerializationException(""))+"doesnotsupporttheClassLoaderAwareObjectInputStream.");}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aught(newSerializationException("ClassLoaderAwareObjectInputStream.class"))+"doesnotsupporttheClassLoaderAwareObjectInputStream.");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=object==null?(T)object.getClass().getName():null;
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(object,bais.getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object.getClass().getClassLoader()!=null){aughtExceptionHandler.throwAsIOException(bais,object.getClass().getClassLoader());}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object.getClass().getClassLoader()==null){aughtExceptionHandler.throwAsIOException(bais,object.getClass().getClassLoader());}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ObjectUtils.throwAsIOException(bais,object.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98java.util.ArrayList.throwAsIOException(bais,object.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=(ClassLoaderAwareObjectInputStream)this.object.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=(ClassLoaderAwareObjectInputStream)object.clone();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object==null){ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader());}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98reader==null){thrownewSerializationException("");}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98BYteArrayInputStreamin=newByteArrayInputStream(bais,object.getClass(),classLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98BYteArrayInputStreamin=newByteArrayInputStream(bais,object.getClass().getClassLoader(),classLoader);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98BYteArrayInputStreamin=newByteArrayInputStream(bais,classLoader.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aught(ClassLoaderAwareObjectInputStream.class)*10+",doesnotsupporttheClassLoaderAwareObjectInputStream.");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98InputStreamin=newClassLoaderAwareObjectInputStream(object.getClass().getClassLoader(),classLoader);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98InputStreamin=newClassLoaderAwareObjectInputStream(object.getClass().getClassLoader(),bais);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aught(ClassLoaderAwareObjectInputStream.class)*2+",doesnotsupporttheClassLoaderAwareObjectInputStream.");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=this.object.getClassLoader();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,this.classLoader.getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98BYteArrayInputStreamin=newByteArrayInputStream(readObject,bais.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(in.throwAsIOException(""))thrownewSerializationException("");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(readObject.throwAsIOException(""))thrownewSerializationException("");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98java.util.ArrayList.throwAsIOException("");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(in.throwAsIOException("");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtException("ClassLoaderAwareObjectInputStreamdoesnotsupporttheClassLoaderAwareObjectInputStream.");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98in=(ClassLoaderAwareObjectInputStream)this.in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=newByteArrayInputStream(bais,classLoader);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=newByteArrayInputStream(in,bais);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=newByteArrayInputStream(bais,classLoader.getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=newByteArrayInputStream(in);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98InputStreamin=(ClassLoaderAwareObjectInputStream)this.in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98InputStreamin=(ClassLoaderAwareObjectInputStream)object.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98in=newClassLoaderAwareObjectInputStream(bais,classLoader.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98in=newClassLoaderAwareObjectInputStream(bais,object.getClass(),classLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98in=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader(),classLoader);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98BYteArrayInputStreamin=(ByteArrayInputStream)in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ByteArrayInputStreambais=(ByteArrayInputStream)in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98BYteArrayInputStreambais=(ByteArrayInputStream)bytes.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=(T)in.clone();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98clone=(T)object.clone();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98object=(T)object.clone();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=object==null?null:object.getClass().getName();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98(T)in.readInt();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98(T)in.readObject()-1;
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98(T)object.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98booleanex=this.in.readByteArrayInputStream();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98Booleanex=in.readByteArrayInputStream();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98wires.add(in.getClass().getName());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98wires.add(bais.getClass().getName());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98reader!=null){thrownewSerializationException("");}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader(),readObject);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(classLoader,object.getClass().getClassLoader(),classLoader);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,classLoader.getClass().getClassLoader(),object);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader(),this.classLoader);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(classLoader.getClass().getClassLoader(),object);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(object.getClass().getClassLoader(),bais);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(object.getClass().getClassLoader(),bais,classLoader);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=in.readObject()?null:in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=in.readObject()?null:Integer.toString(in.readObject());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=newByteArrayInputStream(bais,object.getClass().getClassLoader(),classLoader);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=newByteArrayInputStream(object.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=newByteArrayInputStream(object,bais.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=newByteArrayInputStream(bais,object.getClass().getLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98bais=(ClassLoaderAwareObjectInputStream)in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreambais=(ClassLoaderAwareObjectInputStream)this.in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98clone=(T)in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98object=(T)in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98InputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader(),classLoader);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98InputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader(),readObject);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98InputStreamin=newClassLoaderAwareObjectInputStream(object,bais.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClassLoader(),classLoader);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98in=newClassLoaderAwareObjectInputStream(bais,object.getClassLoader(),classLoader);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98InputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClassLoader(),classLoader);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,classLoader.getClassLoader(),object,readObject);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=in.clone();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=object.clone();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98clone=readObject.clone();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=ObjectUtils.clone(readObject);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=newByteArrayInputStream(in.readObject());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98while(readObject!=null){thrownewSerializationException("");}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98while(object!=null){thrownewSerializationException(".");}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98while(in!=null){thrownewSerializationException("");}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader(),object);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=(ClassLoaderAwareObjectInputStream)object.readObject()-1;
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98booleanex=this.in.readBoolean();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98booleanex=in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98clone=(T)readObject.clone();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98object=(T)readObject.clone();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=newByteArrayInputStream(bais.getClass().getClassLoader(),object);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98reader=newByteArrayInputStream(bais.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98BYteArrayInputStreamin=newByteArrayInputStream(bais,classLoader.getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98InputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98InputStreamin=newClassLoaderAwareObjectInputStream(object,bais.getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(in==null){thrownewSerializationException("");}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object==null){in=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader());}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98booleanex=this.in.readByteArray();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98Booleanex=in.readByteArray();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98wires.put(object,in);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98in.put(object,readObject);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object!=null){thrownewSerializationException("".getMessage());}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(in!=null){thrownewSerializationException("".getMessage());}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(readObject!=null){thrownewSerializationException("T".getMessage());}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98((ClassLoaderAwareObjectInputStream)in).clone();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98((ClassLoaderAwareObjectInputStream)in).flush();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98((ClassLoaderAwareObjectInputStream)in).closeAllObjects();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtExceptionHandler(bais,classLoader.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtExceptionHandler(bais,object.getClass(),classLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtExceptionHandler(object,classLoader.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtExceptionHandler(object,classLoader.getClass().getClassLoader(),null);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtExceptionHandler(bais,classLoader.getClass().getClassLoader(),null);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtExceptionHandler(bais,object.getClass().getClassLoader(),in,null);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object==null){ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader());@SuppressWarnings("readObject")
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=bais.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aught(newSerializationException(""))+"doesnotsupporttheClassLoaderAwareObjectInputStream.n");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtExceptionHandler(object,in.getClass().getClassLoader(),null);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtExceptionHandler(object,object.getClass().getClassLoader(),null);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(classLoader,object.getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(readObject==null){thrownewSerializationException("",in);}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=(T)object.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=(T)this.object.clone();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=newByteArrayInputStream(bais.getClass().getClassLoader(),classLoader);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=newByteArrayInputStream(bais.getClass().getClassLoader(),in);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98InputStreamin=(ClassLoaderAwareObjectInputStream)in.readObject()-1;
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=newByteArrayInputStream(bais,object.getClass().getClassLoader(),in);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtExceptionHandler(bais,object.getClass(),in.getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtExceptionHandler(object,bais.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98object==null){thrownewSerializationException("");}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98in=(ClassLoaderAwareObjectInputStream)object.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98object!=null){thrownewSerializationException("");}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClassLoader(),classLoader);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(object,classLoader.getClassLoader(),object);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98BYteArrayInputStreamin=newByteArrayInputStream(bais,object.getClass(),classLoader);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98BYteArrayInputStreamin=newByteArrayInputStream(object,bais.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98BYteArrayInputStreamin=newByteArrayInputStream(bais,object.getClass(),ClassLoader.classLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreambais=(ClassLoaderAwareObjectInputStream)in.getObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98(T)in.readObject(bais);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98(T)in.close();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98BYteArrayInputStreamin=newByteArrayInputStream(bais.getClass(),object.getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(object!=null){aughtExceptionHandler.throwAsIOException(bais,object.getClass().getClassLoader());}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98Object.throwAsIOException(bais,object.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(readObject!=null){thrownewSerializationException("",in.getMessage());}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aught(ClassLoaderAwareObjectInputStream.class)*1000+"doesnotsupporttheClassLoaderAwareObjectInputStream.");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=object;
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=newByteArrayObjectInputStream(bais);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98BYteArrayInputStreamin=newByteArrayInputStream(readObject,object.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(classLoader,object.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aught(ClassLoaderAwareObjectInputStream.class)*4+"doesnotsupporttheClassLoaderAwareObjectInputStream.");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=this.readObject.clone();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98wires.add(object.getClass().getName(),readObject);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98wires.add(object,in.getClass().getName());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98InputStreamin=newClassLoaderAwareObjectInputStream(object.getClass().getClassLoader(),readObject);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(object.getClass().getClassLoader(),objects);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(object,object.getClass().getClassLoader());
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98while(object!=null){thrownewSerializationException("",in);}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98wires.put(readObject,object);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98wires.put(openObject,readObject);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98while(object!=null){in=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader());}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98((ClassLoaderAwareObjectInputStream)in).closeClassLoader();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98booleanex=readObject.readByteArray();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtException(")+"doesnotsupporttheClassLoaderAwareObjectInputStream.");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98aughtException("TheClassLoaderAwareObjectInputStreamdoesnotsupporttheClassLoaderAwareObjectInputStream.");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=(ClassLoader)this.classLoader.getClassLoader();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(readObject!=null){aughtExceptionHandler.throwAsIOException("");}
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ObjectUtils.throwAsIOException("");
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=bais.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98if(readObject!=null){ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(bais,object.getClass().getClassLoader());@SuppressWarnings("readObject")
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=(T)this.readObject.clone();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=(ClassLoaderAwareObjectInputStream)object.getObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=(ClassLoaderAwareObjectInputStream)in.readObject()/1;
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98booleanex=readObject.readByteArrayInputStream();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(object.getClass().getClassLoader(),readObject);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98ClassLoaderAwareObjectInputStreamin=newClassLoaderAwareObjectInputStream(object.getClass().getClassLoader(),classLoader,readObject);
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=this.in.readObject();
projects/Lang13/src/main/java/org/apache/commons/lang3/SerializationUtils.java98readObject=object.readObject();
