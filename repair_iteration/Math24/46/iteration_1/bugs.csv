bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(x)+  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  [BUGGY]    final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(x)+  absoluteThreshold;  [BUGGY]  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	148	148	1	replace	    final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(x)+  absoluteThreshold;		non-compiled	[CE]  illegal  start  of  type	92	None	add
2	[BUG]  [BUGGY]    final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)+  a;  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  [BUGGY]    final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)+  a;  [BUGGY]  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	148	148	1	replace	    final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)+  a;		non-compiled	[CE]  illegal  start  of  type	92	None	add
3	[BUG]  [BUGGY]    final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)+  b;  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  [BUGGY]    final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)+  b;  [BUGGY]  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	148	148	1	replace	    final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)+  b;		non-compiled	[CE]  illegal  start  of  type	92	None	add
4	[BUG]  [BUGGY]  final  double  tol1  =  m  *  FastMath.abs(x)+  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  [BUGGY]  final  double  tol1  =  m  *  FastMath.abs(x)+  absoluteThreshold;  [BUGGY]  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	148	148	1	replace	final  double  tol1  =  m  *  FastMath.abs(x)+  absoluteThreshold;	final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
5	[BUG]  [BUGGY]  final  double  tol1  =  relativeThreshold  *  FastMath.abs(m)+  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  [BUGGY]  final  double  tol1  =  relativeThreshold  *  FastMath.abs(m)+  absoluteThreshold;  [BUGGY]  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	148	148	1	replace	final  double  tol1  =  relativeThreshold  *  FastMath.abs(m)+  absoluteThreshold;	final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
6	[BUG]  [BUGGY]  final  double  tol1  =  a  *  FastMath.abs(x)+  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  [BUGGY]  final  double  tol1  =  a  *  FastMath.abs(x)+  absoluteThreshold;  [BUGGY]  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	148	148	1	replace	final  double  tol1  =  a  *  FastMath.abs(x)+  absoluteThreshold;	final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
7	[BUG]  [BUGGY]    final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)+  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  [BUGGY]    final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)+  absoluteThreshold;  [BUGGY]  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	148	148	1	replace	    final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)+  absoluteThreshold;		non-compiled	[CE]  illegal  start  of  type	92	None	add
8	[BUG]  [BUGGY]    final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  [BUGGY]    final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m);  [BUGGY]  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	148	148	1	replace	    final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m);		non-compiled	[CE]  illegal  start  of  type	92	None	add
9	[BUG]  [BUGGY]    final  double  a  =  relativeThreshold  *  FastMath.abs(m);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  [BUGGY]    final  double  a  =  relativeThreshold  *  FastMath.abs(m);  [BUGGY]  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	148	148	1	replace	    final  double  a  =  relativeThreshold  *  FastMath.abs(m);		non-compiled	[CE]  illegal  start  of  type	92	None	add
10	[BUG]  [BUGGY]    final  double  a  =  relativeThreshold  *  FastMath.abs(m)/  GOLDEN_SECTION;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  [BUGGY]    final  double  a  =  relativeThreshold  *  FastMath.abs(m)/  GOLDEN_SECTION;  [BUGGY]  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	148	148	1	replace	    final  double  a  =  relativeThreshold  *  FastMath.abs(m)/  GOLDEN_SECTION;		non-compiled	[CE]  illegal  start  of  type	92	None	add
11	[BUG]  [BUGGY]    final  double  a  =  relativeThreshold  *  FastMath.abs(m)+  a;  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  [BUGGY]    final  double  a  =  relativeThreshold  *  FastMath.abs(m)+  a;  [BUGGY]  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	148	148	1	replace	    final  double  a  =  relativeThreshold  *  FastMath.abs(m)+  a;		non-compiled	[CE]  illegal  start  of  type	92	None	add
12	[BUG]  [BUGGY]    final  double  a  =  relativeThreshold  *  FastMath.abs(m)+  b;  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  [BUGGY]    final  double  a  =  relativeThreshold  *  FastMath.abs(m)+  b;  [BUGGY]  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	148	148	1	replace	    final  double  a  =  relativeThreshold  *  FastMath.abs(m)+  b;		non-compiled	[CE]  illegal  start  of  type	92	None	add
13	[BUG]  [BUGGY]  final  double  tol1  =  1  *  FastMath.abs(x)+  1;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  [BUGGY]  final  double  tol1  =  1  *  FastMath.abs(x)+  1;  [BUGGY]  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	148	148	1	replace	final  double  tol1  =  1  *  FastMath.abs(x)+  1;	final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
