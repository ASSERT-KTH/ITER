projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148finaldoubleabsoluteThreshold=relativeThreshold*FastMath.abs(x)+absoluteThreshold;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148finaldoubleabsoluteThreshold=relativeThreshold*FastMath.abs(m)+a;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148finaldoubleabsoluteThreshold=relativeThreshold*FastMath.abs(m)+b;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148finaldoubletol1=relativeThreshold*FastMath.abs(x)+absoluteThreshold;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148finaldoubletol1=m*FastMath.abs(x)+absoluteThreshold;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148finaldoubletol1=relativeThreshold*FastMath.abs(m)+absoluteThreshold;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148finaldoubletol1=a*FastMath.abs(x)+absoluteThreshold;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148finaldoubleabsoluteThreshold=relativeThreshold*FastMath.abs(m)+absoluteThreshold;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148finaldoubleabsoluteThreshold=relativeThreshold*FastMath.abs(m);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148finaldoublea=relativeThreshold*FastMath.abs(m);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148finaldoublea=relativeThreshold*FastMath.abs(m)/GOLDEN_SECTION;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148finaldoublea=relativeThreshold*FastMath.abs(m)+a;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148finaldoublea=relativeThreshold*FastMath.abs(m)+b;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148finaldoubletol1=1*FastMath.abs(x)+1;
