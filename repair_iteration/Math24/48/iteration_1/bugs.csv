bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  boolean  stop  =  FastMath.abs(m  -  x)  <  =  tol2  -  0.5  *  (b  -  a);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [BUGGY]  final  boolean  stop  =  FastMath.abs(m  -  x)  <  =  tol2  -  0.5  *  (b  -  a);  [BUGGY]  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  if  (FastMath.abs(e)  >  tol1)  {  //  Fit  parabola.  r  =  (x  -  w)  *  (fx  -  fv);  q  =  (x  -  v)  *  (fx  -  fw);  p  =  (x  -  v)  *  q  -  (x  -  w)  *  r;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	152	152	1	replace	final  boolean  stop  =  FastMath.abs(m  -  x)  <  =  tol2  -  0.5  *  (b  -  a);	final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  	non-compiled	[CE]  illegal  start  of  type	95	None	replace
2	[BUG]  [BUGGY]  final  boolean  stop  =  FastMath.abs(m  -  x)  <  =  tol1  -  0.5  *  (b  -  a);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [BUGGY]  final  boolean  stop  =  FastMath.abs(m  -  x)  <  =  tol1  -  0.5  *  (b  -  a);  [BUGGY]  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  if  (FastMath.abs(e)  >  tol1)  {  //  Fit  parabola.  r  =  (x  -  w)  *  (fx  -  fv);  q  =  (x  -  v)  *  (fx  -  fw);  p  =  (x  -  v)  *  q  -  (x  -  w)  *  r;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	152	152	1	replace	final  boolean  stop  =  FastMath.abs(m  -  x)  <  =  tol1  -  0.5  *  (b  -  a);	final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  	non-compiled	[CE]  illegal  start  of  type	95	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [BUGGY]    [BUGGY]  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  if  (FastMath.abs(e)  >  tol1)  {  //  Fit  parabola.  r  =  (x  -  w)  *  (fx  -  fv);  q  =  (x  -  v)  *  (fx  -  fw);  p  =  (x  -  v)  *  q  -  (x  -  w)  *  r;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	152	152	1	replace	  	final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  	non-compiled	[CE]  illegal  start  of  type	95	None	replace
4	[BUG]  [BUGGY]    final  double  m  =  relativeThreshold  *  FastMath.abs(x)+  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [BUGGY]    final  double  m  =  relativeThreshold  *  FastMath.abs(x)+  absoluteThreshold;  [BUGGY]  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  if  (FastMath.abs(e)  >  tol1)  {  //  Fit  parabola.  r  =  (x  -  w)  *  (fx  -  fv);  q  =  (x  -  v)  *  (fx  -  fw);  p  =  (x  -  v)  *  q  -  (x  -  w)  *  r;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	152	152	1	replace	    final  double  m  =  relativeThreshold  *  FastMath.abs(x)+  absoluteThreshold;		non-compiled	[CE]  illegal  start  of  type	96	None	add
5	[BUG]  [BUGGY]    final  double  a  =  relativeThreshold  *  FastMath.abs(x)+  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [BUGGY]    final  double  a  =  relativeThreshold  *  FastMath.abs(x)+  absoluteThreshold;  [BUGGY]  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  if  (FastMath.abs(e)  >  tol1)  {  //  Fit  parabola.  r  =  (x  -  w)  *  (fx  -  fv);  q  =  (x  -  v)  *  (fx  -  fw);  p  =  (x  -  v)  *  q  -  (x  -  w)  *  r;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	152	152	1	replace	    final  double  a  =  relativeThreshold  *  FastMath.abs(x)+  absoluteThreshold;		non-compiled	[CE]  illegal  start  of  type	96	None	add
6	[BUG]  [BUGGY]    final  double  a  =  relativeThreshold  *  FastMath.abs(m)+  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [BUGGY]    final  double  a  =  relativeThreshold  *  FastMath.abs(m)+  absoluteThreshold;  [BUGGY]  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  if  (FastMath.abs(e)  >  tol1)  {  //  Fit  parabola.  r  =  (x  -  w)  *  (fx  -  fv);  q  =  (x  -  v)  *  (fx  -  fw);  p  =  (x  -  v)  *  q  -  (x  -  w)  *  r;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	152	152	1	replace	    final  double  a  =  relativeThreshold  *  FastMath.abs(m)+  absoluteThreshold;		non-compiled	[CE]  illegal  start  of  type	96	None	add
7	[BUG]  [BUGGY]  final  boolean  stop  =  FastMath.abs(m  -  tol2)  <  =  tol2  -  0.5  *  (b  -  a);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [BUGGY]  final  boolean  stop  =  FastMath.abs(m  -  tol2)  <  =  tol2  -  0.5  *  (b  -  a);  [BUGGY]  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  if  (FastMath.abs(e)  >  tol1)  {  //  Fit  parabola.  r  =  (x  -  w)  *  (fx  -  fv);  q  =  (x  -  v)  *  (fx  -  fw);  p  =  (x  -  v)  *  q  -  (x  -  w)  *  r;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	152	152	1	replace	final  boolean  stop  =  FastMath.abs(m  -  tol2)  <  =  tol2  -  0.5  *  (b  -  a);	final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  	non-compiled	[CE]  illegal  start  of  type	95	None	replace
8	[BUG]  [BUGGY]  final  boolean  stop  =  FastMath.abs(m  -  tol1)  <  =  tol2  -  0.5  *  (b  -  a);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [BUGGY]  final  boolean  stop  =  FastMath.abs(m  -  tol1)  <  =  tol2  -  0.5  *  (b  -  a);  [BUGGY]  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  if  (FastMath.abs(e)  >  tol1)  {  //  Fit  parabola.  r  =  (x  -  w)  *  (fx  -  fv);  q  =  (x  -  v)  *  (fx  -  fw);  p  =  (x  -  v)  *  q  -  (x  -  w)  *  r;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	152	152	1	replace	final  boolean  stop  =  FastMath.abs(m  -  tol1)  <  =  tol2  -  0.5  *  (b  -  a);	final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  	non-compiled	[CE]  illegal  start  of  type	95	None	replace
9	[BUG]  [BUGGY]    final  double  a  =  relativeThreshold  *  FastMath.abs(x)-  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [BUGGY]    final  double  a  =  relativeThreshold  *  FastMath.abs(x)-  absoluteThreshold;  [BUGGY]  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  if  (FastMath.abs(e)  >  tol1)  {  //  Fit  parabola.  r  =  (x  -  w)  *  (fx  -  fv);  q  =  (x  -  v)  *  (fx  -  fw);  p  =  (x  -  v)  *  q  -  (x  -  w)  *  r;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	152	152	1	replace	    final  double  a  =  relativeThreshold  *  FastMath.abs(x)-  absoluteThreshold;		non-compiled	[CE]  illegal  start  of  type	96	None	add
10	[BUG]  [BUGGY]    final  double  a  =  relativeThreshold  *  FastMath.abs(m);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [BUGGY]    final  double  a  =  relativeThreshold  *  FastMath.abs(m);  [BUGGY]  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  if  (FastMath.abs(e)  >  tol1)  {  //  Fit  parabola.  r  =  (x  -  w)  *  (fx  -  fv);  q  =  (x  -  v)  *  (fx  -  fw);  p  =  (x  -  v)  *  q  -  (x  -  w)  *  r;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	152	152	1	replace	    final  double  a  =  relativeThreshold  *  FastMath.abs(m);		non-compiled	[CE]  illegal  start  of  type	96	None	add
11	[BUG]  [BUGGY]    final  double  b  =  relativeThreshold  *  FastMath.abs(x)+  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [BUGGY]    final  double  b  =  relativeThreshold  *  FastMath.abs(x)+  absoluteThreshold;  [BUGGY]  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  if  (FastMath.abs(e)  >  tol1)  {  //  Fit  parabola.  r  =  (x  -  w)  *  (fx  -  fv);  q  =  (x  -  v)  *  (fx  -  fw);  p  =  (x  -  v)  *  q  -  (x  -  w)  *  r;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	152	152	1	replace	    final  double  b  =  relativeThreshold  *  FastMath.abs(x)+  absoluteThreshold;		non-compiled	[CE]  illegal  start  of  type	96	None	add
12	[BUG]  [BUGGY]    final  double  b  =  relativeThreshold  *  FastMath.abs(x)-  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [BUGGY]    final  double  b  =  relativeThreshold  *  FastMath.abs(x)-  absoluteThreshold;  [BUGGY]  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  if  (FastMath.abs(e)  >  tol1)  {  //  Fit  parabola.  r  =  (x  -  w)  *  (fx  -  fv);  q  =  (x  -  v)  *  (fx  -  fw);  p  =  (x  -  v)  *  q  -  (x  -  w)  *  r;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	152	152	1	replace	    final  double  b  =  relativeThreshold  *  FastMath.abs(x)-  absoluteThreshold;		non-compiled	[CE]  illegal  start  of  type	96	None	add
13	[BUG]  [BUGGY]    final  double  b  =  relativeThreshold  *  FastMath.abs(x)/  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [BUGGY]    final  double  b  =  relativeThreshold  *  FastMath.abs(x)/  absoluteThreshold;  [BUGGY]  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  if  (FastMath.abs(e)  >  tol1)  {  //  Fit  parabola.  r  =  (x  -  w)  *  (fx  -  fv);  q  =  (x  -  v)  *  (fx  -  fw);  p  =  (x  -  v)  *  q  -  (x  -  w)  *  r;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	152	152	1	replace	    final  double  b  =  relativeThreshold  *  FastMath.abs(x)/  absoluteThreshold;		non-compiled	[CE]  illegal  start  of  type	96	None	add
14	[BUG]  [BUGGY]  final  boolean  stop  =  FastMath.abs(b  -  m)  <  =  tol2  -  0.5  *  (a  -  m);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [BUGGY]  final  boolean  stop  =  FastMath.abs(b  -  m)  <  =  tol2  -  0.5  *  (a  -  m);  [BUGGY]  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  if  (FastMath.abs(e)  >  tol1)  {  //  Fit  parabola.  r  =  (x  -  w)  *  (fx  -  fv);  q  =  (x  -  v)  *  (fx  -  fw);  p  =  (x  -  v)  *  q  -  (x  -  w)  *  r;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	152	152	1	replace	final  boolean  stop  =  FastMath.abs(b  -  m)  <  =  tol2  -  0.5  *  (a  -  m);	final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  	non-compiled	[CE]  illegal  start  of  type	95	None	replace
