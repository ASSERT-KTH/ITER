bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  u  =  p  *  r;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	u  =  p  *  r;	  u    =    p    +    r;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  d  =  p  /  q  *  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	d  =  p  /  q  *  1;	  d    =    p    /    q    +    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
3	[BUG]  [BUGGY]  d  =  p  /  q  *  2  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  q  *  2  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	d  =  p  /  q  *  2  +  1;	  d    =    p    /    q    +    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
4	[BUG]  [BUGGY]  if(m  <  =  a)  {  d  =  p;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  <  =  a)  {  d  =  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(m  <  =  a)  {  d  =  p;  }	  if(d    <    =    p)    {    if(m    >    a)    {    d    =    p;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
5	[BUG]  [BUGGY]  if(m  <  =  a)  {  if(x  >=  a)  {  d  =  p;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  <  =  a)  {  if(x  >=  a)  {  d  =  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(m  <  =  a)  {  if(x  >=  a)  {  d  =  p;  }	  if(m    >    a)    {    if(x    >=    a)    {    d    =    p;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
6	[BUG]  [BUGGY]  u  =  d  *  p;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  p;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	u  =  d  *  p;	  u    =    p    *    d;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
7	[BUG]  [BUGGY]  if(x  <  =  a)  {  if(m  >  a)  {  d  =  p;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  =  a)  {  if(m  >  a)  {  d  =  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(x  <  =  a)  {  if(m  >  a)  {  d  =  p;  }	  if(m    <    =    a)    {    if(x    >    a)    {    d    =    p;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
8	[BUG]  [BUGGY]  if(m  <  =  r)  {  if(x  >  a)  {  d  =  p;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  <  =  r)  {  if(x  >  a)  {  d  =  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(m  <  =  r)  {  if(x  >  a)  {  d  =  p;  }	  if(m    <    =    a)    {    if(x    >    a)    {    d    =    p;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
9	[BUG]  [BUGGY]  d  =  r  *  q;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  *  q;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	d  =  r  *  q;	  d    =    r    /    q;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  u  =  d  *  r;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	u  =  d  *  r;	  u    =    d    *    x;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  u  =  p  *  x;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  x;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	u  =  p  *  x;	  u    =    d    *    x;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  d  =  p  /  r  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	d  =  p  /  r  +  1;	  d    =    p    /    r;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  u  =  d  +  m;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  m;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	u  =  d  +  m;	  u    =    d    +    tol1;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
14	[BUG]  [BUGGY]  d  =  p  /  m;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  m;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	d  =  p  /  m;	  d    =    q    /    m;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
15	[BUG]  [BUGGY]  if(d  <  a)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  a)  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(d  <  a)  {	  if(m    >    a)    {    if(x    >    a    *    (a    -    x)&&    p    <    q    *    (b    -    x)&&    FastMath.abs(p)    <    =    FastMath.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
16	[BUG]  [BUGGY]  if(d  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  ==  0)  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(d  ==  0)  {	  if(m    >    a)    {    if(x    >    a    *    (a    -    x)&&    p    <    q    *    (b    -    x)&&    FastMath.abs(p)    <    =    FastMath.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
17	[BUG]  [BUGGY]  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {	  if(x    >    a    *    (a    -    x)&&    p    <    q    *    (b    -    x)&&    FastMath.abs(p)    <    =    FastMath.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
18	[BUG]  [BUGGY]  if(x  <  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(x  <  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {	  if(x    >    a    *    (a    -    x)&&    p    <    q    *    (b    -    x)&&    FastMath.abs(p)    <    =    FastMath.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
19	[BUG]  [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(r  <  a)  {  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(r  <  a)  {  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {	  if(r    <    a)    {    if(x    >    a    *    (a    -    x)&&    p    <    q    *    (b    -    x)&&    FastMath.abs(p)    <    =    FastMath.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
20	[BUG]  [BUGGY]  u  =  d  *  a;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  a;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	u  =  d  *  a;	  u    =    d    +    a;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  d  =  p  *  r  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  *  r  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	d  =  p  *  r  +  1;	  d    =    p    *    r;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  u  =  p  *  q;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	u  =  p  *  q;	  u    =    p    +    q;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
23	[BUG]  [BUGGY]  u  =  u  +  tol2;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	u  =  u  +  tol2;	  u    =    u    +    tol1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
24	[BUG]  [BUGGY]  u  =  a  +  tol1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	u  =  a  +  tol1;	  u    =    u    +    tol1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
25	[BUG]  [BUGGY]  if(m  <  =  a)  {  if(x  <  a)  {  d  =  p;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  <  =  a)  {  if(x  <  a)  {  d  =  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(m  <  =  a)  {  if(x  <  a)  {  d  =  p;  }	  if(m    >    a)    {    if(x    <    a)    {    d    =    p;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  d  =  r  /  q  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  r  /  q  +  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	d  =  r  /  q  +  1;	  d    =    r    /    q;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
27	[BUG]  [BUGGY]  u  =  d  +  q;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  +  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	u  =  d  +  q;	  u    =    d    +    a;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
28	[BUG]  [BUGGY]  if(x  <  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(x  <  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  d  =	  if(r    ==    0)    {    if(x    >    a    *    (a    -    x)&&    p    <    q    *    (b    -    x)&&    FastMath.abs(p)    <    =    FastMath.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
29	[BUG]  [BUGGY]  u  =  u  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  u  +  1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	u  =  u  +  1;	  u    =    u    +    tol1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
30	[BUG]  [BUGGY]  u  =  d  *  q;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  q;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	u  =  d  *  q;	  u    =    d    *    x;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
31	[BUG]  [BUGGY]  d  =  p  /  g;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  /  g;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	d  =  p  /  g;	  d    =    p;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
32	[BUG]  [BUGGY]  if(x  <  a)  {  if(m  >  a)  {  d  =  p;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  a)  {  if(m  >  a)  {  d  =  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(x  <  a)  {  if(m  >  a)  {  d  =  p;  }	  if(m    <    =    a)    {    if(x    >    a)    {    d    =    p;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
33	[BUG]  [BUGGY]  if(m  >  a)  {  d  =  p;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  >  a)  {  d  =  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(m  >  a)  {  d  =  p;  }	  if(d    <    =    p)    {    if(m    >    a)    {    d    =    p;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
34	[BUG]  [BUGGY]  u  =  p  +  q  *  r;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  +  q  *  r;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	u  =  p  +  q  *  r;	  u    =    p    +    q;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
35	[BUG]  [BUGGY]  if(x  >  a  *  (a  -  x)&&  b  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >  a  *  (a  -  x)&&  b  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(x  >  a  *  (a  -  x)&&  b  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {	  if(m    >    a)    {    if(x    >    a    *    (a    -    x)&&    p    <    q    *    (b    -    x)&&    FastMath.abs(p)    <    =    FastMath.abs(0.5    *    q    *    r))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
36	[BUG]  [BUGGY]  if(m  <  =  0)  {  if(x  <  a)  {  d  =  p;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  <  =  0)  {  if(x  <  a)  {  d  =  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(m  <  =  0)  {  if(x  <  a)  {  d  =  p;  }	  if(m    >    a)    {    if(x    <    a)    {    d    =    p;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(p  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(p  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  d  =	  if(x    >    a    *    (a    -    x)&&    p    <    q    *    (b    -    x)&&    FastMath.abs(p)    <    =    FastMath.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
38	[BUG]  [BUGGY]  d  =  q  /  r;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  q  /  r;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	d  =  q  /  r;	  d    =    r    /    q;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
39	[BUG]  [BUGGY]  if(d  <  =  m)  {  if(x  >=  a)  {  d  =  p;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  =  m)  {  if(x  >=  a)  {  d  =  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(d  <  =  m)  {  if(x  >=  a)  {  d  =  p;  }	  if(m    >    a)    {    if(x    >=    a)    {    d    =    p;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
40	[BUG]  [BUGGY]  u  =  a  +  tol2;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  a  +  tol2;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	u  =  a  +  tol2;	  u    =    d    +    tol2;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
41	[BUG]  [BUGGY]  u  =  p  /  d;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  p  /  d;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	u  =  p  /  d;	  u    =    p    *    d;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
42	[BUG]  [BUGGY]  u  =  m  +  tol1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  m  +  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	u  =  m  +  tol1;	  u    =    u    +    tol1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
43	[BUG]  [BUGGY]  if(m  <  =  p)  {  d  =  p;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(m  <  =  p)  {  d  =  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(m  <  =  p)  {  d  =  p;  }	  if(d    <    =    p)    {    if(m    >    a)    {    d    =    p;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
44	[BUG]  [BUGGY]  if(d  <  a)  {  if(x  >  a)  {  d  =  p;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  a)  {  if(x  >  a)  {  d  =  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(d  <  a)  {  if(x  >  a)  {  d  =  p;  }	  if(m    <    =    a)    {    if(x    >    a)    {    d    =    p;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
45	[BUG]  [BUGGY]  if(d  <  a)  {  if(m  >  a)  {  d  =  p;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  a)  {  if(m  >  a)  {  d  =  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(d  <  a)  {  if(m  >  a)  {  d  =  p;  }	  if(m    >    a)    {    if(x    <    a)    {    d    =    p;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
46	[BUG]  [BUGGY]  if(x  <  a)  {  d  =  p;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  <  a)  {  d  =  p;  }  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(x  <  a)  {  d  =  p;  }	  if(m    >    a)    {    if(x    <    a)    {    d    =    p;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
47	[BUG]  [BUGGY]  if(x  >=  a)  {  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(x  >=  a)  {  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(x  >=  a)  {  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  d  =	  if(r    ==    0)    {    if(x    >    a    *    (a    -    x)&&    p    <    q    *    (b    -    x)&&    FastMath.abs(p)    <    =    FastMath.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
48	[BUG]  [BUGGY]  if(d  <  a)  {  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  d  =  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  if(d  <  a)  {  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  d  =  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	if(d  <  a)  {  if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  d  =	  if(x    <    a)    {    if(x    >    a    *    (a    -    x)&&    p    <    q    *    (b    -    x)&&    FastMath.abs(p)    <    =    FastMath.abs(0.5    *    q    *    r))    {    d    =    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
49	[BUG]  [BUGGY]  u  =  d  *  tol1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  u  =  d  *  tol1;  [BUGGY]        if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	u  =  d  *  tol1;	  u    =    d    +    tol1;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
50	[BUG]  [BUGGY]  d  =  p  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;      [BUGGY]  d  =  p  -  1;  [BUGGY]      u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	179	179	1	replace	d  =  p  -  1;	  d    =    p;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
