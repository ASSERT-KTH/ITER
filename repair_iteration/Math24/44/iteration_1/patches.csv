bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  a  =  current.relativeThreshold  *  FastMath.abs(a);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);    [BUGGY]  int  a  =  current.relativeThreshold  *  FastMath.abs(a);  [BUGGY]    int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	145	145	1	replace	int  a  =  current.relativeThreshold  *  FastMath.abs(a);	      int    a    =    relativeThreshold    *    FastMath.abs(a);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
2	[BUG]  [BUGGY]  ConvergenceChecker  checker  =  getOptimizer(previous);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);    [BUGGY]  ConvergenceChecker  checker  =  getOptimizer(previous);  [BUGGY]    int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	145	145	1	replace	ConvergenceChecker  checker  =  getOptimizer(previous);	      ConvergenceChecker    checker    =    getOptimizer();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  int  iter  =  isMinim?  fx  :  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);    [BUGGY]  int  iter  =  isMinim?  fx  :  1;  [BUGGY]    int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	145	145	1	replace	int  iter  =  isMinim?  fx  :  1;	      int    iter    =    isMinim?    fx    :    0;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
4	[BUG]  [BUGGY]  int  a  =  relativeThreshold  *  FastMath.abs(previous);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);    [BUGGY]  int  a  =  relativeThreshold  *  FastMath.abs(previous);  [BUGGY]    int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	145	145	1	replace	int  a  =  relativeThreshold  *  FastMath.abs(previous);	      int    a    =    relativeThreshold    *    FastMath.abs(fw);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  int  a  =  relativeThreshold  *  FastMath.abs(fv);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);    [BUGGY]  int  a  =  relativeThreshold  *  FastMath.abs(fv);  [BUGGY]    int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	145	145	1	replace	int  a  =  relativeThreshold  *  FastMath.abs(fv);	      int    a    =    relativeThreshold    *    FastMath.abs(fw);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
6	[BUG]  [BUGGY]  ConvergenceChecker  checker  =  getOptimizer(current,  current);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);    [BUGGY]  ConvergenceChecker  checker  =  getOptimizer(current,  current);  [BUGGY]    int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	145	145	1	replace	ConvergenceChecker  checker  =  getOptimizer(current,  current);	      ConvergenceChecker    checker    =    getOptimizer(current);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
7	[BUG]  [BUGGY]  int  absoluteThreshold  =  relativeThreshold  *  fw;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);    [BUGGY]  int  absoluteThreshold  =  relativeThreshold  *  fw;  [BUGGY]    int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	145	145	1	replace	int  absoluteThreshold  =  relativeThreshold  *  fw;	      int    absoluteThreshold    =    relativeThreshold    *    fx;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
8	[BUG]  [BUGGY]  int  absoluteThreshold  =  relativeThreshold  /  fx;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);    [BUGGY]  int  absoluteThreshold  =  relativeThreshold  /  fx;  [BUGGY]    int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	145	145	1	replace	int  absoluteThreshold  =  relativeThreshold  /  fx;	      int    absoluteThreshold    =    relativeThreshold    *    fx;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  int  iter  =  current.getIterator();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);    [BUGGY]  int  iter  =  current.getIterator();  [BUGGY]    int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	145	145	1	replace	int  iter  =  current.getIterator();	      int    iter    =    previous.getIterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  int  iter  =  isMinim?  fw  :  -1;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);    [BUGGY]  int  iter  =  isMinim?  fw  :  -1;  [BUGGY]    int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	145	145	1	replace	int  iter  =  isMinim?  fw  :  -1;	      int    iter    =    isMinim?    fx    :    -1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
11	[BUG]  [BUGGY]  int  a  =  relativeThreshold  *  FastMath.abs(v);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);    [BUGGY]  int  a  =  relativeThreshold  *  FastMath.abs(v);  [BUGGY]    int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	145	145	1	replace	int  a  =  relativeThreshold  *  FastMath.abs(v);	      int    a    =    relativeThreshold    *    FastMath.abs(fx);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
12	[BUG]  [BUGGY]  int  absoluteThreshold  =  relativeThreshold  *  fv;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);    [BUGGY]  int  absoluteThreshold  =  relativeThreshold  *  fv;  [BUGGY]    int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	145	145	1	replace	int  absoluteThreshold  =  relativeThreshold  *  fv;	      int    absoluteThreshold    =    relativeThreshold    *    fx;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  ConvergenceChecker  checker  =  getPreviousOptimizer();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);    [BUGGY]  ConvergenceChecker  checker  =  getPreviousOptimizer();  [BUGGY]    int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	145	145	1	replace	ConvergenceChecker  checker  =  getPreviousOptimizer();	      ConvergenceChecker    checker    =    getOptimizer();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
14	[BUG]  [BUGGY]  int  iter  =  isMinim?  fw  :  0;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);    [BUGGY]  int  iter  =  isMinim?  fw  :  0;  [BUGGY]    int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	145	145	1	replace	int  iter  =  isMinim?  fw  :  0;	      int    iter    =    isMinim?    fx    :    0;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
15	[BUG]  [BUGGY]  int  iter  =  this.previous.getIterator();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);    [BUGGY]  int  iter  =  this.previous.getIterator();  [BUGGY]    int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	145	145	1	replace	int  iter  =  this.previous.getIterator();	      int    iter    =    previous.getIterator();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]  int  a  =  relativeThreshold  *  FastMath.abs(b);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);    [BUGGY]  int  a  =  relativeThreshold  *  FastMath.abs(b);  [BUGGY]    int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	145	145	1	replace	int  a  =  relativeThreshold  *  FastMath.abs(b);	      int    a    =    relativeThreshold    *    FastMath.abs(a);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
