bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  checker.setConvergenceChecker(null);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  checker.setConvergenceChecker(null);  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	checker.setConvergenceChecker(null);	      if(checker!=    null)    {    checker.setConvergenceChecker(null);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  Checker  checker  =  null;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  Checker  checker  =  null;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	Checker  checker  =  null;	      if(checker!=    null)    {    checker.setConvergenceChecker(null);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  b  =  hi  +  2;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  b  =  hi  +  2;  [BUGGY]    }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	b  =  hi  +  2;	  b    =    hi    +    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  While(checker!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  While(checker!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	While(checker!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(checker!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  While(checker!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  While(checker!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	While(checker!=  null)  {  throw  new  IllegalArgumentException( " ".);  }	      if(checker!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  double  mid  =  getMin();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  double  mid  =  getMin();  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	double  mid  =  getMin();	      int    mid    =    getMin();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  int  mid  =  getMin()  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  int  mid  =  getMin()  -  1;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	int  mid  =  getMin()  -  1;	      int    mid    =    getMin();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
8	[BUG]  [BUGGY]  b  =  checker.getNumberValue();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  b  =  checker.getNumberValue();  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	b  =  checker.getNumberValue();	      b    =    checker.getPartialValue();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  double  mid  =  getMax();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  double  mid  =  getMax();  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	double  mid  =  getMax();	      int    mid    =    getMax();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
10	[BUG]  [BUGGY]  a  =  mid;  b  =  lo;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  a  =  mid;  b  =  lo;  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	a  =  mid;  b  =  lo;	      if(mid    <    hi)    {    a    =    mid;    b    =    lo;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
11	[BUG]  [BUGGY]  if(lo  <  hi)  {  a  =  mid;  b  =  lo;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  if(lo  <  hi)  {  a  =  mid;  b  =  lo;  }  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	if(lo  <  hi)  {  a  =  mid;  b  =  lo;  }	      if(mid    <    hi)    {    a    =    mid;    b    =    lo;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  checker.setConvergenceChecker(a);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  checker.setConvergenceChecker(a);  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	checker.setConvergenceChecker(a);	      if(checker!=    null)    {    checker.setConvergenceChecker(a);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
13	[BUG]  [BUGGY]  Checker  checker  =  getConvergenceChecker();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  Checker  checker  =  getConvergenceChecker();  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	Checker  checker  =  getConvergenceChecker();	      if(checker!=    null)    {    checker.setConvergenceChecker(a);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  b  =  checker.getConvergenceChecker(a);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  b  =  checker.getConvergenceChecker(a);  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	b  =  checker.getConvergenceChecker(a);	      b    =    checker.getConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  if(checker  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  if(checker  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	if(checker  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      if(checker!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
16	[BUG]  [BUGGY]  b  =  checker.getPrimaryValue();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  b  =  checker.getPrimaryValue();  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	b  =  checker.getPrimaryValue();	      b    =    checker.getPartialValue();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
17	[BUG]  [BUGGY]  if(lo  <  mid)  {  a  =  mid;  b  =  lo;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  if(lo  <  mid)  {  a  =  mid;  b  =  lo;  }  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	if(lo  <  mid)  {  a  =  mid;  b  =  lo;  }	      if(mid    <    hi)    {    a    =    mid;    b    =    lo;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  b  =  a;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  b  =  a;  [BUGGY]    }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	b  =  a;	  b    =    lo;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
19	[BUG]  [BUGGY]  b  =  1;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  b  =  1;  [BUGGY]    }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	b  =  1;	  b    =    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
20	[BUG]  [BUGGY]  b  =  checker.getPrimitiveValue();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  b  =  checker.getPrimitiveValue();  [BUGGY]    b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	b  =  checker.getPrimitiveValue();	      b    =    checker.getPartialValue();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
21	[BUG]  [BUGGY]  b  =  a  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;    [BUGGY]  b  =  a  +  1;  [BUGGY]    }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  double  d  =  0;  double  e  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	123	123	1	replace	b  =  a  +  1;	  b    =    hi    +    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
