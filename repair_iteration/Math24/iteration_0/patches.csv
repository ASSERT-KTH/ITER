bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
4	[BUG]  [BUGGY]  v  =  h;  [CE]  cannot  find  symbol  h  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  [BUGGY]  v  =  h;  [BUGGY]  fv  =  fu;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	262	262	1	replace	v  =  h;	v  =  u;  	non-compiled	[CE]  cannot  find  symbol  h	7	None
5	[BUG]  [BUGGY]  [FE]  AssertionError  testMath855  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  [BUGGY]    [BUGGY]  fv  =  fu;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	262	262	1	add	  	v  =  u;  	compilable	  [FE]  AssertionError  testMath855	7	1
6	[BUG]  [BUGGY]    [FE]  AssertionError  testMath855  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  [BUGGY]    [BUGGY]  fv  =  fu;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	262	262	1	replace	  	v  =  u;  	compilable	  [FE]  AssertionError  testMath855	7	1
11	[BUG]  [BUGGY]    if(x  >  tol1)  {  if(u  >  a  ||  b  >  a)  {  d  =  -tol1;  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    if(x  >  tol1)  {  if(u  >  a  ||  b  >  a)  {  d  =  -tol1;  }  [BUGGY]  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	182	182	1	replace	    if(x  >  tol1)  {  if(u  >  a  ||  b  >  a)  {  d  =  -tol1;  }		non-compiled	[CE]  illegal  start  of  expression	20	None
12	[BUG]  [BUGGY]    if(x  >  tol1)  {  if(u  >  a  ||  b  >  a)  {  d  =  -tol2;  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    if(x  >  tol1)  {  if(u  >  a  ||  b  >  a)  {  d  =  -tol2;  }  [BUGGY]  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	182	182	1	replace	    if(x  >  tol1)  {  if(u  >  a  ||  b  >  a)  {  d  =  -tol2;  }		non-compiled	[CE]  illegal  start  of  expression	20	None
13	[BUG]  [BUGGY]    if(u  >  a  ||  b  >  a)  {  if(x  >  m)  {  d  =  -tol1;  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    if(u  >  a  ||  b  >  a)  {  if(x  >  m)  {  d  =  -tol1;  }  [BUGGY]  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	182	182	1	replace	    if(u  >  a  ||  b  >  a)  {  if(x  >  m)  {  d  =  -tol1;  }		non-compiled	[CE]  illegal  start  of  expression	20	None
14	[BUG]  [BUGGY]    if(u  >  a  ||  b  >  a)  {  if(tol1  <  tol2)  {  d  =  -tol1;  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    if(u  >  a  ||  b  >  a)  {  if(tol1  <  tol2)  {  d  =  -tol1;  }  [BUGGY]  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	182	182	1	replace	    if(u  >  a  ||  b  >  a)  {  if(tol1  <  tol2)  {  d  =  -tol1;  }		non-compiled	[CE]  illegal  start  of  expression	20	None
15	[BUG]  [BUGGY]    if(u  >  a  ||  b  >  a)  {  if(x  >  m)  {  d  =  -tol2;  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;    [BUGGY]    if(u  >  a  ||  b  >  a)  {  if(x  >  m)  {  d  =  -tol2;  }  [BUGGY]  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	182	182	1	replace	    if(u  >  a  ||  b  >  a)  {  if(x  >  m)  {  d  =  -tol2;  }		non-compiled	[CE]  illegal  start  of  expression	20	None
31	[BUG]  [BUGGY]    a  =  b.doubleValue();  [CE]  double  cannot  be  dereferenced  [CONTEXT]  if  (u  <  x)  {  a  =  u;  }  else  {  [BUGGY]    a  =  b.doubleValue();  [BUGGY]  b  =  u;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	251	251	1	replace	    a  =  b.doubleValue();		non-compiled	[CE]  double  cannot  be  dereferenced	12	None
32	[BUG]  [BUGGY]    a  =  b.getValue();  [CE]  double  cannot  be  dereferenced  [CONTEXT]  if  (u  <  x)  {  a  =  u;  }  else  {  [BUGGY]    a  =  b.getValue();  [BUGGY]  b  =  u;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	251	251	1	replace	    a  =  b.getValue();		non-compiled	[CE]  double  cannot  be  dereferenced	12	None
33	[BUG]  [BUGGY]    a  =  b.longValue();  [CE]  double  cannot  be  dereferenced  [CONTEXT]  if  (u  <  x)  {  a  =  u;  }  else  {  [BUGGY]    a  =  b.longValue();  [BUGGY]  b  =  u;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	251	251	1	replace	    a  =  b.longValue();		non-compiled	[CE]  double  cannot  be  dereferenced	12	None
34	[BUG]  [BUGGY]    a  =  b.toString();  [CE]  double  cannot  be  dereferenced  [CONTEXT]  if  (u  <  x)  {  a  =  u;  }  else  {  [BUGGY]    a  =  b.toString();  [BUGGY]  b  =  u;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	251	251	1	replace	    a  =  b.toString();		non-compiled	[CE]  double  cannot  be  dereferenced	12	None
35	[BUG]  [BUGGY]    a  =  b.getLineno();  [CE]  double  cannot  be  dereferenced  [CONTEXT]  if  (u  <  x)  {  a  =  u;  }  else  {  [BUGGY]    a  =  b.getLineno();  [BUGGY]  b  =  u;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	251	251	1	replace	    a  =  b.getLineno();		non-compiled	[CE]  double  cannot  be  dereferenced	12	None
41	[BUG]  [BUGGY]    if(u  >  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  return;  }  [CE]  missing  return  value  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  [BUGGY]    if(u  >  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  return;  }  [BUGGY]  v  =  u;  fv  =  fu;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	262	262	1	replace	    if(u  >  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  return;  }		non-compiled	[CE]  missing  return  value	8	None
43	[BUG]  [BUGGY]    if(u  >  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  checker.isMinimize();  }  [CE]  cannot  find  symbol  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  [BUGGY]    if(u  >  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  checker.isMinimize();  }  [BUGGY]  v  =  u;  fv  =  fu;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	262	262	1	replace	    if(u  >  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  checker.isMinimize();  }		non-compiled	[CE]  cannot  find  symbol	8	None
44	[BUG]  [BUGGY]    if(u  >  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  checker.checker.isMinimized();  }  [CE]  cannot  find  symbol  checker  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  [BUGGY]    if(u  >  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  checker.checker.isMinimized();  }  [BUGGY]  v  =  u;  fv  =  fu;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	262	262	1	replace	    if(u  >  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  checker.checker.isMinimized();  }		non-compiled	[CE]  cannot  find  symbol  checker	8	None
45	[BUG]  [BUGGY]    if(u  >  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  checker.isMinimize;  }  [CE]  not  a  statement  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  [BUGGY]    if(u  >  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  checker.isMinimize;  }  [BUGGY]  v  =  u;  fv  =  fu;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	262	262	1	replace	    if(u  >  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  checker.isMinimize;  }		non-compiled	[CE]  not  a  statement	8	None
51	[BUG]  [BUGGY]    double  tol1  =  Math.abs(0.5  *  q  *  r);  [CE]  variable  tol1  is  already  defined  in  method  doOptimize()  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {    [BUGGY]    double  tol1  =  Math.abs(0.5  *  q  *  r);  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	178	178	1	replace	    double  tol1  =  Math.abs(0.5  *  q  *  r);		non-compiled	[CE]  variable  tol1  is  already  defined  in  method  doOptimize()	16	None
52	[BUG]  [BUGGY]    if(q  >  0)  {  if(m  >  x)  {  return;  }  [CE]  illegal  start  of  expression  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {    [BUGGY]    if(q  >  0)  {  if(m  >  x)  {  return;  }  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	178	178	1	replace	    if(q  >  0)  {  if(m  >  x)  {  return;  }		non-compiled	[CE]  illegal  start  of  expression	16	None
53	[BUG]  [BUGGY]    double  tol1  =  Math.abs(0.5  *  q  *  r)+  p;  [CE]  variable  tol1  is  already  defined  in  method  doOptimize()  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {    [BUGGY]    double  tol1  =  Math.abs(0.5  *  q  *  r)+  p;  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	178	178	1	replace	    double  tol1  =  Math.abs(0.5  *  q  *  r)+  p;		non-compiled	[CE]  variable  tol1  is  already  defined  in  method  doOptimize()	16	None
54	[BUG]  [BUGGY]    if(q  >  0)  {  if(m  >  x)  {  tol1;  }  [CE]  not  a  statement  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {    [BUGGY]    if(q  >  0)  {  if(m  >  x)  {  tol1;  }  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	178	178	1	replace	    if(q  >  0)  {  if(m  >  x)  {  tol1;  }		non-compiled	[CE]  not  a  statement	16	None
55	[BUG]  [BUGGY]    double  tol1  =  Math.abs(0.5  *  q  *  r));  [CE]  ';'  expected  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {    [BUGGY]    double  tol1  =  Math.abs(0.5  *  q  *  r));  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	178	178	1	replace	    double  tol1  =  Math.abs(0.5  *  q  *  r));		non-compiled	[CE]  ';'  expected	16	None
95	[BUG]  [BUGGY]    [CE]  'else'  without  'if'  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  [BUGGY]    [BUGGY]  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	  	if  (x  <=  m)  {  	non-compiled	[CE]  'else'  without  'if'	1	None
101	[BUG]  [BUGGY]  [FE]  AssertionError  testMath855  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  [BUGGY]    e  =  b  -  x;  [BUGGY]  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	184	184	1	add	    e  =  b  -  x;		compilable	  [FE]  AssertionError  testMath855	4	1
102	[BUG]  [BUGGY]    e  =  b  -  x;  [FE]  AssertionError  testMath855  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  [BUGGY]    e  =  b  -  x;  [BUGGY]  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	184	184	1	replace	    e  =  b  -  x;		compilable	  [FE]  AssertionError  testMath855	4	1
102	[BUG]  [BUGGY]  [FE]  AssertionError  testMath855  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  [BUGGY]    u  =  b  -  x;  [BUGGY]  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	184	184	1	add	    u  =  b  -  x;		compilable	  [FE]  AssertionError  testMath855	4	1
103	[BUG]  [BUGGY]    u  =  b  -  x;  [FE]  AssertionError  testMath855  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  [BUGGY]    u  =  b  -  x;  [BUGGY]  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	184	184	1	replace	    u  =  b  -  x;		compilable	  [FE]  AssertionError  testMath855	4	1
103	[BUG]  [BUGGY]  [FE]  AssertionError  testMath855  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  [BUGGY]    d  =  b  -  x;  [BUGGY]  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	184	184	1	add	    d  =  b  -  x;		compilable	  [FE]  AssertionError  testMath855	4	1
104	[BUG]  [BUGGY]    d  =  b  -  x;  [FE]  AssertionError  testMath855  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  [BUGGY]    d  =  b  -  x;  [BUGGY]  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	184	184	1	replace	    d  =  b  -  x;		compilable	  [FE]  AssertionError  testMath855	4	1
111	[BUG]  [BUGGY]    if(a  ==  v)  {  if(fv  ==  v  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  v  =  v;  v  =  v;  }  [CE]  'else'  without  'if'  [CONTEXT]  a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;  [BUGGY]    if(a  ==  v)  {  if(fv  ==  v  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  v  =  v;  v  =  v;  }  [BUGGY]  }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	    if(a  ==  v)  {  if(fv  ==  v  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  v  =  v;  v  =  v;  }		non-compiled	[CE]  'else'  without  'if'	14	None
