bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(checker!=  null)  {  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [BUGGY]  if(checker!=  null)  {  [BUGGY]  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	121	121	1	replace	if(checker!=  null)  {	if  (lo  <  hi)  {  	non-compiled	[CE]  illegal  start  of  type	59	None	replace
2	[BUG]  [BUGGY]  if(checker  ==  null)  {  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [BUGGY]  if(checker  ==  null)  {  [BUGGY]  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	121	121	1	replace	if(checker  ==  null)  {	if  (lo  <  hi)  {  	non-compiled	[CE]  illegal  start  of  type	59	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [BUGGY]    [BUGGY]  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	121	121	1	replace	  	if  (lo  <  hi)  {  	non-compiled	[CE]  illegal  start  of  type	59	None	replace
4	[BUG]  [BUGGY]    if(checker!=  null)  {  if(lo  <  min)  {  lo  =  getMin();  }  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [BUGGY]    if(checker!=  null)  {  if(lo  <  min)  {  lo  =  getMin();  }  [BUGGY]  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	121	121	1	replace	    if(checker!=  null)  {  if(lo  <  min)  {  lo  =  getMin();  }		non-compiled	[CE]  illegal  start  of  type	60	None	add
5	[BUG]  [BUGGY]    if(checker!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [BUGGY]    if(checker!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	121	121	1	replace	    if(checker!=  null)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  type	60	None	add
6	[BUG]  [BUGGY]    if(checker!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  initialize  UnivariatePointValuePair. ");  }  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [BUGGY]    if(checker!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  initialize  UnivariatePointValuePair. ");  }  [BUGGY]  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	121	121	1	replace	    if(checker!=  null)  {  throw  new  IllegalArgumentException( "Failed  to  initialize  UnivariatePointValuePair. ");  }		non-compiled	[CE]  illegal  start  of  type	60	None	add
7	[BUG]  [BUGGY]    if(checker  ==  null)  {  if(lo  <  min)  {  lo  =  getMin();  }  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [BUGGY]    if(checker  ==  null)  {  if(lo  <  min)  {  lo  =  getMin();  }  [BUGGY]  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	121	121	1	replace	    if(checker  ==  null)  {  if(lo  <  min)  {  lo  =  getMin();  }		non-compiled	[CE]  illegal  start  of  type	60	None	add
8	[BUG]  [BUGGY]    if(checker!=  null)  {  if(lo  >  mid)  {  lo  =  getMin();  }  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [BUGGY]    if(checker!=  null)  {  if(lo  >  mid)  {  lo  =  getMin();  }  [BUGGY]  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	121	121	1	replace	    if(checker!=  null)  {  if(lo  >  mid)  {  lo  =  getMin();  }		non-compiled	[CE]  illegal  start  of  type	60	None	add
9	[BUG]  [BUGGY]    b  =  checker.getConvergenceChecker();  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [BUGGY]    b  =  checker.getConvergenceChecker();  [BUGGY]  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	121	121	1	replace	    b  =  checker.getConvergenceChecker();		non-compiled	[CE]  illegal  start  of  type	60	None	add
10	[BUG]  [BUGGY]    if(checker!=  null)  {  if(lo  <  =  GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [BUGGY]    if(checker!=  null)  {  if(lo  <  =  GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	121	121	1	replace	    if(checker!=  null)  {  if(lo  <  =  GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  type	60	None	add
11	[BUG]  [BUGGY]    if(checker!=  null)  {  if(lo  <  min)  {  a  =  lo;  b  =  b;  }  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [BUGGY]    if(checker!=  null)  {  if(lo  <  min)  {  a  =  lo;  b  =  b;  }  [BUGGY]  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	121	121	1	replace	    if(checker!=  null)  {  if(lo  <  min)  {  a  =  lo;  b  =  b;  }		non-compiled	[CE]  illegal  start  of  type	60	None	add
