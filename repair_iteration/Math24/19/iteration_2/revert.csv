projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<Object>checker=checker.getOptimizer();
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<GOLDEN_SECTION||checker.isOptional();
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<GOLDEN_SECTION||checker.isOptimizer();
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80if(abs<=0){
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80if(rel<=0){
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<GOLDEN_SECTION||checker==GOLDEN_SECTION);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<Object>absoluteThreshold=checker.getRelativeThreshold();
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<GOLDEN_SECTION||checker==GOLDEN_SECTION;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80if(rel<=GOLDEN_SECTION){if(rel>GOLDEN_SECTION){thrownewNotStrictlyPositiveException(rel);}
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80RelativePointValuePairabsoluteThreshold=checker.getRelativePointValuePair();
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80if(rel<=GOLDEN_SECTION){if(rel>GOLDEN_SECTION){thrownewNotStrictlyPositiveException(rel,rel);}
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<GOLDEN_SECTION||RelUtil.isRelative(rel);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80if(rel<=absoluteThreshold){
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80if(rel<=0||absoluteThreshold<=0){
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<GOLDEN_SECTION&&checker==GOLDEN_SECTION);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<Object>checker=checker.getValuePair();
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<GOLDEN_SECTION&&checker==GOLDEN_SECTION;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80rel<=GOLDEN_SECTION){if(rel>GOLDEN_SECTION){thrownewNotStrictlyPositiveException(rel,rel);}
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80rel<=GOLDEN_SECTION){if(rel>=GOLDEN_SECTION){thrownewNotStrictlyPositiveException(rel,rel);}
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<GOLDEN_SECTION&&checker.isOptional();
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80RelativePointValuePairabsoluteThreshold=checker.getRelativePointValuePair(),rel;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<GOLDEN_SECTION&&checker.isOptimizer();
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<Object>absoluteThreshold=checker.getRelativeThreshold(rel);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80luate(rel,rel);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80rel=rel;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80luate(rel,checker);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80luate(rel,abs);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80RelativePointValuePairabsoluteThreshold=checker.getRelativePointValuePair(rel);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80if(rel<0){
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<Object>checker=checker.setOptimizer(null);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80Annotations.checkState(rel<=GOLDEN_SECTION);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80AnnotationInfoinfo=getAnnotationInfo(rel);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80rel=checker;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80rel=abs;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80luate(rel,checker,absoluteThreshold);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80luate(rel,checker,abs);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80if(rel<absoluteThreshold){
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<GOLDEN_SECTION&&RelUtil.isRelative(rel);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80if(rel<=0||absoluteThreshold>0){
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80Annotations.checkState(rel<=GOLDEN_SECTION,rel);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80AnnotationInfoinfo=getAnnotationInfo(rel,checker);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80RelativePointValuePairabsoluteThreshold=checker.getRelativePointValuePair(rel,rel);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80rel<=GOLDEN_SECTION){
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80if(rel<0||rel>absoluteThreshold){
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<Object>absoluteThreshold=checker.getRelativeThreshold(rel,rel);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<Object>checker=checker.setOptimizer(this);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80luate(rel,abs,checker);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80luate(rel,absoluteThreshold,abs);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80RelativePointValuePairabsoluteThreshold=checker.getRelativePointValuePair(),rel,relativeThreshold;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80(rel<=GOLDEN_SECTION)||(rel>GOLDEN_SECTION)){thrownewNotStrictlyPositiveException(rel,rel);}
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80luate(rel,rel,checker);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<Object>checker=checker.getValue();
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80ConvergenceChecker<Object>checker=checker.setOptimizer(null,rel);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80RelativePointValuePairabsoluteThreshold=checker.getRelativePointValuePair(),rel+1;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80luate(rel,Checker.DEFAULT_RELATIVE_TOLERANCE);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80rel<=GOLDEN_SECTION){if(rel>GOLDEN_RELATIVE_TOLERANCE){thrownewNotStrictlyPositiveException(rel,rel);}
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80if(rel<0||absoluteThreshold<=0){
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80rel-=rel;
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java80rel<=GOLDEN_SECTION){thrownewNotStrictlyPositiveException(rel,rel);}
