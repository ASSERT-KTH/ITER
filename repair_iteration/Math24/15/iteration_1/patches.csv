bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  w  =  u;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (checker  !=  null)  {  if  (checker.converged(iter,  previous,  current))  {  return  current;  }  }  if  (fu  <=  fx)  {  if  (u  <  x)  {    [BUGGY]  w  =  u;  [BUGGY]    b  =  x;  }  else  {  a  =  x;  }  v  =  w;  fv  =  fw;  w  =  x;  fw  =  fx;  x  =  u;  fx  =  fu;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	237	237	1	replace	w  =  u;	      w    =    x;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  w  =  fx;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (checker  !=  null)  {  if  (checker.converged(iter,  previous,  current))  {  return  current;  }  }  if  (fu  <=  fx)  {  if  (u  <  x)  {    [BUGGY]  w  =  fx;  [BUGGY]    b  =  x;  }  else  {  a  =  x;  }  v  =  w;  fv  =  fw;  w  =  x;  fw  =  fx;  x  =  u;  fx  =  fu;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	237	237	1	replace	w  =  fx;	      w    =    x;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  a  =  x;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    if  (checker  !=  null)  {  if  (checker.converged(iter,  previous,  current))  {  return  current;  }  }  if  (fu  <=  fx)  {  if  (u  <  x)  {    [BUGGY]  a  =  x;  [BUGGY]    }  else  {  a  =  x;  }  v  =  w;  fv  =  fw;  w  =  x;  fw  =  fx;  x  =  u;  fx  =  fu;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	237	237	1	replace	a  =  x;	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  a  =  fx;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    if  (checker  !=  null)  {  if  (checker.converged(iter,  previous,  current))  {  return  current;  }  }  if  (fu  <=  fx)  {  if  (u  <  x)  {    [BUGGY]  a  =  fx;  [BUGGY]    }  else  {  a  =  x;  }  v  =  w;  fv  =  fw;  w  =  x;  fw  =  fx;  x  =  u;  fx  =  fu;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	237	237	1	replace	a  =  fx;	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  x  =  fx;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (checker  !=  null)  {  if  (checker.converged(iter,  previous,  current))  {  return  current;  }  }  if  (fu  <=  fx)  {  if  (u  <  x)  {    [BUGGY]  x  =  fx;  [BUGGY]    b  =  x;  }  else  {  a  =  x;  }  v  =  w;  fv  =  fw;  w  =  x;  fw  =  fx;  x  =  u;  fx  =  fu;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	237	237	1	replace	x  =  fx;	      x    =    u;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  x  =  u  +  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    if  (checker  !=  null)  {  if  (checker.converged(iter,  previous,  current))  {  return  current;  }  }  if  (fu  <=  fx)  {  if  (u  <  x)  {    [BUGGY]  x  =  u  +  1;  [BUGGY]    b  =  x;  }  else  {  a  =  x;  }  v  =  w;  fv  =  fw;  w  =  x;  fw  =  fx;  x  =  u;  fx  =  fu;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	237	237	1	replace	x  =  u  +  1;	      x    =    u;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  x  =  w;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (checker  !=  null)  {  if  (checker.converged(iter,  previous,  current))  {  return  current;  }  }  if  (fu  <=  fx)  {  if  (u  <  x)  {    [BUGGY]  x  =  w;  [BUGGY]    b  =  x;  }  else  {  a  =  x;  }  v  =  w;  fv  =  fw;  w  =  x;  fw  =  fx;  x  =  u;  fx  =  fu;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	237	237	1	replace	x  =  w;	      x    =    u;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  x  =  x;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    if  (checker  !=  null)  {  if  (checker.converged(iter,  previous,  current))  {  return  current;  }  }  if  (fu  <=  fx)  {  if  (u  <  x)  {    [BUGGY]  x  =  x;  [BUGGY]    b  =  x;  }  else  {  a  =  x;  }  v  =  w;  fv  =  fw;  w  =  x;  fw  =  fx;  x  =  u;  fx  =  fu;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	237	237	1	replace	x  =  x;	      x    =    u;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
