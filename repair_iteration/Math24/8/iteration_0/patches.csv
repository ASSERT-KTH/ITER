bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {    [BUGGY]    if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	178	178	1	replace	    if(x  >  a  *  (a  -  x)&&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {		non-compiled	[CE]  illegal  start  of  expression	16	None	add
2	[BUG]  [BUGGY]    if(x  >  a  &&  p  <  a  &&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {    [BUGGY]    if(x  >  a  &&  p  <  a  &&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	178	178	1	replace	    if(x  >  a  &&  p  <  a  &&  p  <  q  *  (b  -  x)&&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {		non-compiled	[CE]  illegal  start  of  expression	16	None	add
3	[BUG]  [BUGGY]    if(x  >  a  &&  p  <  a  &&  p  <  q  *  (b  -  x)&&  p  <  =  FastMath.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {    [BUGGY]    if(x  >  a  &&  p  <  a  &&  p  <  q  *  (b  -  x)&&  p  <  =  FastMath.abs(0.5  *  q  *  r))  {  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	178	178	1	replace	    if(x  >  a  &&  p  <  a  &&  p  <  q  *  (b  -  x)&&  p  <  =  FastMath.abs(0.5  *  q  *  r))  {		non-compiled	[CE]  illegal  start  of  expression	16	None	add
4	[BUG]  [BUGGY]  d  =  p  /  r;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {    [BUGGY]  d  =  p  /  r;  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	178	178	1	replace	d  =  p  /  r;	d  =  p  /  q;  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
5	[BUG]  [BUGGY]  d  =  p  *  q;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {    [BUGGY]  d  =  p  *  q;  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	178	178	1	replace	d  =  p  *  q;	d  =  p  /  q;  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
6	[BUG]  [BUGGY]    if(x  >  a  *(a  -  x)&&  p  <  a  *(b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {    [BUGGY]    if(x  >  a  *(a  -  x)&&  p  <  a  *(b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	178	178	1	replace	    if(x  >  a  *(a  -  x)&&  p  <  a  *(b  -  x)&&  FastMath.abs(p)  <  =  FastMath.abs(0.5  *  q  *  r))  {		non-compiled	[CE]  illegal  start  of  expression	16	None	add
7	[BUG]  [BUGGY]  d  =  q  /  p;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {    [BUGGY]  d  =  q  /  p;  [BUGGY]  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	178	178	1	replace	d  =  q  /  p;	d  =  p  /  q;  	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
8	[BUG]  [BUGGY]    if(x  >  a  &&  p  <  a  &&  b  <  q  *  r)  {  break;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {    [BUGGY]    if(x  >  a  &&  p  <  a  &&  b  <  q  *  r)  {  break;  }  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	178	178	1	replace	    if(x  >  a  &&  p  <  a  &&  b  <  q  *  r)  {  break;  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
9	[BUG]  [BUGGY]    if(x  >  a  &&  p  <  a  &&  b  <  q  *  r)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {    [BUGGY]    if(x  >  a  &&  p  <  a  &&  b  <  q  *  r)  {  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	178	178	1	replace	    if(x  >  a  &&  p  <  a  &&  b  <  q  *  r)  {		non-compiled	[CE]  illegal  start  of  expression	16	None	add
10	[BUG]  [BUGGY]    if(x  >  a  &&  p  <  a  &&  b  <  q  *  r)  {  d  =  m;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {    [BUGGY]    if(x  >  a  &&  p  <  a  &&  b  <  q  *  r)  {  d  =  m;  }  [BUGGY]  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	178	178	1	replace	    if(x  >  a  &&  p  <  a  &&  b  <  q  *  r)  {  d  =  m;  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
