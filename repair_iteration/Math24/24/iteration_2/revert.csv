projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46if(isOptimizer()){for(inti=1;i<=10;i++){returnMIN_RELATIVE_TOLERANCE*FastMath.ulp(i);}
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46if(isOptimizer()){for(inti=1;i<=10;i++){returnMIN_RELATIVE_TOLERANCE*FastMath.sqrt(i);}
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46if(isOptimizer()){for(inti=1;i<=10;i++){returnMIN_RELATIVE_TOLERANCE;}
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2*FastMath.ulp(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d*FastMath.ulp(2d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2*FastMath.max(1d,1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46Validate.notNull(getOptimizer());
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46Validate.notEmpty(getOptimizer());
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46Validate.notNull(this);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d*FastMath.ulp(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2*FastMath.log(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46Validate.notNull(getValue());
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1*FastMath.log(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d*FastMath.log(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46safeMultiply(FieldUtils.safeMultiply(getValue()));
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2d*FastMath.ulp(2d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d/FastMath.ulp(2d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46Validate.notEmpty(getValue());
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2*FastMath.max(1,1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46safeMultiply(Factory.ulp(1d));
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46Validate.notEmpty(this);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d/FastMath.ulp(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2d*FastMath.ulp(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46safeMultiply(getOptimizer()){for(inti=1;i<10;i++){returnMIN_RELATIVE_TOLERANCE*FastMath.ulp(i);}
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=FastMath.log(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46safeMultiply(FieldUtils.safeMultiply(getOptimizer())){for(inti=1;i<10;i++){returnMIN_RELATIVE_TOLERANCE*FastMath.sqrt
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d*FastMath.min(1d,2);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46AssertionError.checkState(isOptimizer());
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46AssertionError.warning("msg.illegal.character");
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d*FastMath.max(1d,1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46AssertionError<1||isOptimizer()){for(inti=1;i<10;i++){returnMIN_RELATIVE_TOLERANCE*FastMath.ulp(i);}
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d/FastMath.log(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46AssertionError.warning("msg.illegal.character",MIN_RELATIVE_TOLERANCE);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46safeMultiply(FieldUtils.safeMultiply(getValue()+1));
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46safeMultiply(FieldUtils.safeMultiply(getValue(),false));
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2d/FastMath.ulp(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d/FastMath.min(1d,2);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1*FastMath.log(type);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1*FastMath.log(type,1);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46AssertionError.checkState(isOptimizer()||isNumberOfLines());
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2*FastMath.min(1,1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2*FastMath.max(1,4);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2d/FastMath.ulp(2d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2d*FastMath.min(2d,2d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46AssertionError<1||isInterface()){for(inti=1;i<10;i++){returnMIN_RELATIVE_TOLERANCE*FastMath.ulp(i);}
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d/FastMath.max(1d,1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2d*FastMath.max(1d,1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=FastMath.log(1000);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinallongMIN_RELATIVE_TOLERANCE=FastMath.log(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46safeMultiply(FieldUtils.safeMultiply(getOptimizer())){for(inti=1;i<10;i++){returnMIN_RELATIVE_TOLERANCE*FastMath.
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46safeMultiply(Factory.ulp(2d));
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46safeMultiply(Factory.ulp(1d),MIN_RELATIVE_TOLERANCE);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2*FastMath.max(0,1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=FastMath.log(Locale.getDefault());
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46finalAssertionError<1||isOptimizer()){for(inti=1;i<10;i++){returnMIN_RELATIVE_TOLERANCE*FastMath.ulp(i);}
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2d*FastMath.log(2d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2d*FastMath.min(2d,1);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2d*FastMath.log(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46AssertionError.error("msg.illegal.character");
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46AssertionError.checkState(isOptimizer()&&isEnabled(Feature.QUOTE_FIELD_NAME));
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d*FastMath.min(1,2);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46safeMultiply(Factory.ulp(1d),0);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d/FastMath.rint(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d*FastMath.log(type);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46AssertionError.checkState(isOptimizer()||isVarDelimiter());
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d*FastMath.max(1,1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2*FastMath.max(2,1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46safeMultiply(getOptimizer()){for(inti=1;i<10;i++){returnMIN_RELATIVE_TOLERANCE*FastMath.ulp(1d);}
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46AssertionError<1||isImmutableAndOptimizer()){for(inti=1;i<10;i++){returnMIN_RELATIVE_TOLERANCE*FastMath.ulp(i);}
