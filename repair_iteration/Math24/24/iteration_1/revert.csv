projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46if(isOptimizer()){for(inti=1;i<=10;i++){returnMIN_RELATIVE_TOLERANCE*FastMath.ulp(i);}
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46if(isOptimizer()){for(inti=1;i<=10;i++){returnMIN_RELATIVE_TOLERANCE*FastMath.sqrt(i);}
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46if(isOptimizer()){for(inti=1;i<=10;i++){returnMIN_RELATIVE_TOLERANCE;}
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2*FastMath.ulp(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d*FastMath.ulp(2d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2*FastMath.max(1d,1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46Validate.notNull(getOptimizer());
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46Validate.notEmpty(getOptimizer());
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46Validate.notNull(this);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d*FastMath.ulp(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2*FastMath.log(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46Validate.notNull(getValue());
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1*FastMath.log(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d*FastMath.log(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46safeMultiply(FieldUtils.safeMultiply(getValue()));
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2d*FastMath.ulp(2d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d/FastMath.ulp(2d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46Validate.notEmpty(getValue());
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2*FastMath.max(1,1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46safeMultiply(Factory.ulp(1d));
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46Validate.notEmpty(this);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d/FastMath.ulp(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=2d*FastMath.ulp(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46safeMultiply(getOptimizer()){for(inti=1;i<10;i++){returnMIN_RELATIVE_TOLERANCE*FastMath.ulp(i);}
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=FastMath.log(1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46safeMultiply(FieldUtils.safeMultiply(getOptimizer())){for(inti=1;i<10;i++){returnMIN_RELATIVE_TOLERANCE*FastMath.sqrt
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d*FastMath.min(1d,2);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46AssertionError.checkState(isOptimizer());
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46AssertionError.warning("msg.illegal.character");
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46privatestaticfinaldoubleMIN_RELATIVE_TOLERANCE=1d*FastMath.max(1d,1d);
projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java46AssertionError<1||isOptimizer()){for(inti=1;i<10;i++){returnMIN_RELATIVE_TOLERANCE*FastMath.ulp(i);}
