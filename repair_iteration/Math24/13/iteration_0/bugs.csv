bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
25	[BUG] [BUGGY] p = -p; [FE] AssertionError [CONTEXT] double r = 0; double u = 0; if (FastMath.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { [BUGGY] p = -p; [BUGGY] } else { q = -q; } r = e; e = d; if (p > q * (a - x) && p < q * (b - x) && FastMath.abs(p) < FastMath.abs(0.5 * q * r)) { [CLASS] BrentOptimizer [METHOD] doOptimize [RETURN_TYPE] UnivariatePointValuePair  [VARIABLES] ConvergenceChecker checker UnivariatePointValuePair current previous boolean isMinim stop double GOLDEN_SECTION MIN_RELATIVE_TOLERANCE a abs absoluteThreshold b d e fu fv fw fx hi lo m mid p q r rel relativeThreshold tol1 tol2 u v w x int iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	166	166	1	replace	
26	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] double r = 0; double u = 0; if (FastMath.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; q = 2 * (q - r); if (q > 0) { [BUGGY] [BUGGY] p = -p; } else { q = -q; } r = e; e = d; if (p > q * (a - x) && p < q * (b - x) && FastMath.abs(p) < FastMath.abs(0.5 * q * r)) { [CLASS] BrentOptimizer [METHOD] doOptimize [RETURN_TYPE] UnivariatePointValuePair  [VARIABLES] ConvergenceChecker checker UnivariatePointValuePair current previous boolean isMinim stop double GOLDEN_SECTION MIN_RELATIVE_TOLERANCE a abs absoluteThreshold b d e fu fv fw fx hi lo m mid p q r rel relativeThreshold tol1 tol2 u v w x int iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	166	166	1	add	
