bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  d  =  -tol1;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  d  =  -tol1;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	d  =  -tol1;	      if(u    >    a)    {    d    =    -tol1;    }    	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	11	None	replace
2	[BUG]  [BUGGY]  tatement(u  >  a)&&  d  <  =  -tol1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  tatement(u  >  a)&&  d  <  =  -tol1;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	tatement(u  >  a)&&  d  <  =  -tol1;	      if(u    >    a)    {    d    =    -tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]      u  =  m  -  a;  u  =  m  -  a;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]      u  =  m  -  a;  u  =  m  -  a;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	        u    =    m    -    a;    u  =  m  -  a;	  	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	3	None	add
4	[BUG]  [BUGGY]      u  =  m  -  a;  int  u  =  m  -  a;  [CE]  variable  u  is  already  defined  in  method  doOptimize()  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]      u  =  m  -  a;  int  u  =  m  -  a;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	        u    =    m    -    a;    int  u  =  m  -  a;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  doOptimize()	3	None	add
5	[BUG]  [BUGGY]      u  =  m  -  a;  u  =  m  -  a);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]      u  =  m  -  a;  u  =  m  -  a);  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	        u    =    m    -    a;    u  =  m  -  a);	  	non-compiled	[CE]  ';'  expected	3	None	add
6	[BUG]  [BUGGY]  u  =  u  +  d;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  u  =  u  +  d;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	u  =  u  +  d;	      u    =    m    +    d;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	2	None	replace
7	[BUG]  [BUGGY]  if  (u  <  m)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  if  (u  <  m)  {  [BUGGY]    d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	if  (u  <  m)  {	  if    (x    <    m)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  if  (u  <  a)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  if  (u  <  a)  {  [BUGGY]    d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	if  (u  <  a)  {	  if    (x    <    m)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  if  (u  <  =  tol1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  if  (u  <  =  tol1)  {  [BUGGY]    d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	if  (u  <  =  tol1)  {	  if    (u    <    =    m)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  u  =  u  -  a;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  u  =  u  -  a;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	u  =  u  -  a;	      u    =    m    -    a;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	4	None	replace
11	[BUG]  [BUGGY]  u  =  m  -  tol2;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  u  =  m  -  tol2;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	u  =  m  -  tol2;	      u    =    m    -    a;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	4	None	replace
12	[BUG]  [BUGGY]  tate.isMinimum();  [CE]  cannot  find  symbol  tate  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  tate.isMinimum();  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	tate.isMinimum();	      if(u    >    a)    {    d    =    -tol1;    }    else    {    d    =    -1;    }    	non-compiled	[CE]  cannot  find  symbol  tate	13	None	replace
13	[BUG]  [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]      u  =  m  +  d;  u  =  m  +  d;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	        u    =    m    +    d;    u  =  m  +  d;	  	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	1	None	add
14	[BUG]  [BUGGY]      u  =  m  +  d;  u  =  m  +  d);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]      u  =  m  +  d;  u  =  m  +  d);  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	        u    =    m    +    d;    u  =  m  +  d);	  	non-compiled	[CE]  ';'  expected	1	None	add
15	[BUG]  [BUGGY]      u  =  m  +  d;  U  =  m  +  d;  [CE]  cannot  find  symbol  U  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]      u  =  m  +  d;  U  =  m  +  d;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	        u    =    m    +    d;    U  =  m  +  d;	  	non-compiled	[CE]  cannot  find  symbol  U	1	None	add
16	[BUG]  [BUGGY]  u  =  r  *  q;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  u  =  r  *  q;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	u  =  r  *  q;	      u    =    q    *    r;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	10	None	replace
17	[BUG]  [BUGGY]  u  =  a  *  r;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  u  =  a  *  r;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	u  =  a  *  r;	      u    =    q    *    r;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	10	None	replace
18	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  [Delete]  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	[Delete]	      if(u    >    a)    {    d    =    -tol1;    }    else    {    d    =    -tol2;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
19	[BUG]  [BUGGY]  député  ||  u  >  a)  {  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  député  ||  u  >  a)  {  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	député  ||  u  >  a)  {	      if(u    >    a)    {    d    =    -tol1;    }    else    {    d    =    -tol2;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
20	[BUG]  [BUGGY]      u  =  a  +  d;  u  =  a  +  d;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]      u  =  a  +  d;  u  =  a  +  d;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	        u    =    a    +    d;    u  =  a  +  d;	  	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	5	None	add
21	[BUG]  [BUGGY]      u  =  a  +  d;  int  u  =  a  +  d;  [CE]  variable  u  is  already  defined  in  method  doOptimize()  [FE]      AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]      u  =  a  +  d;  int  u  =  a  +  d;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	        u    =    a    +    d;    int  u  =  a  +  d;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  doOptimize()	5	None	add
22	[BUG]  [BUGGY]      u  =  a  +  d;  u  =  a  +  d);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]      u  =  a  +  d;  u  =  a  +  d);  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	        u    =    a    +    d;    u  =  a  +  d);	  	non-compiled	[CE]  ';'  expected	5	None	add
23	[BUG]  [BUGGY]  u  =  u  +  tol2;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  u  =  u  +  tol2;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	u  =  u  +  tol2;	      u    =    a    +    d;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	6	None	replace
24	[BUG]  [BUGGY]      u  =  m  -  a;  U  =  m  -  a;  [CE]  cannot  find  symbol  U  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]      u  =  m  -  a;  U  =  m  -  a;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	        u    =    m    -    a;    U  =  m  -  a;	  	non-compiled	[CE]  cannot  find  symbol  U	3	None	add
25	[BUG]  [BUGGY]  tate.checkNotNull(d);  [CE]  cannot  find  symbol  tate  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  tate.checkNotNull(d);  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	tate.checkNotNull(d);	      if(u    >    a)    {    d    =    -tol1;    }    	non-compiled	[CE]  cannot  find  symbol  tate	11	None	replace
26	[BUG]  [BUGGY]  u  =  x  +  d;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  u  =  x  +  d;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	u  =  x  +  d;	      u    =    m    +    d;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	2	None	replace
27	[BUG]  [BUGGY]  if(m  <  x)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  if(m  <  x)  {  [BUGGY]    d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	if(m  <  x)  {	  if    (x    <    m)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
28	[BUG]  [BUGGY]  if  (u  <  tol1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  if  (u  <  tol1)  {  [BUGGY]    d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	if  (u  <  tol1)  {	  if    (x    <    m)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
29	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	aughtExceptionHandler.handleMissingException( " ");	      if(u    >    a)    {    d    =    -tol1;    }    else    {    d    =    -1;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	13	None	replace
30	[BUG]  [BUGGY]  aughtExceptionHandler.handleMoreGuaranteed();  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  aughtExceptionHandler.handleMoreGuaranteed();  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	aughtExceptionHandler.handleMoreGuaranteed();	      if(u    >    a)    {    d    =    -tol1;    }    else    {    d    =    -tol2;    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	12	None	replace
31	[BUG]  [BUGGY]  if  (u  <  =  x)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  if  (u  <  =  x)  {  [BUGGY]    d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	if  (u  <  =  x)  {	  if    (m    <    =    x)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  if  (m  <  tol1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  if  (m  <  tol1)  {  [BUGGY]    d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	if  (m  <  tol1)  {	  if    (m    <    =    x)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]      u  =  m  +  d;  int  u  =  m  +  d;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]      u  =  m  +  d;  int  u  =  m  +  d;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	        u    =    m    +    d;    int  u  =  m  +  d;	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
34	[BUG]  [BUGGY]      u  =  a  +  d;  u  =  m  +  d;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]      u  =  a  +  d;  u  =  m  +  d;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	        u    =    a    +    d;    u  =  m  +  d;	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
35	[BUG]  [BUGGY]      u  =  a  +  d;  u  =  tol1  +  d;  [CE]  variable  u  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]      u  =  a  +  d;  u  =  tol1  +  d;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	        u    =    a    +    d;    u  =  tol1  +  d;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  doOptimize()	5	None	add
36	[BUG]  [BUGGY]  u  =  p  *  r;  [CE]  cannot  find  symbol  y  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  u  =  p  *  r;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	u  =  p  *  r;	      u    =    q    *    r;    	non-compiled	[CE]  cannot  find  symbol  y	10	None	replace
37	[BUG]  [BUGGY]  d  =  -tol2;  [CE]  cannot  find  symbol  y  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  d  =  -tol2;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	d  =  -tol2;	      if(u    >    a)    {    d    =    -tol1;    }    	non-compiled	[CE]  cannot  find  symbol  y	11	None	replace
38	[BUG]  [BUGGY]  d  =  -tol1;  }  else  {  d  =  -1;  }  [CE]  'else'  without  'if'  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  d  =  -tol1;  }  else  {  d  =  -1;  }  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	d  =  -tol1;  }  else  {  d  =  -1;  }	      if(u    >    a)    {    d    =    -tol1;    }    else    {    d    =    -1;    }    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
39	[BUG]  [BUGGY]  u  =  b  -  a;  [CE]  cannot  find  symbol  y  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  u  =  b  -  a;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	u  =  b  -  a;	      u    =    m    -    a;    	non-compiled	[CE]  cannot  find  symbol  y	4	None	replace
40	[BUG]  [BUGGY]  if(u  <  a  ||  b  <  a)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  if(u  <  a  ||  b  <  a)  {  [BUGGY]    d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	if(u  <  a  ||  b  <  a)  {	  if    (x    <    m)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
41	[BUG]  [BUGGY]      u  =  m  -  a;  (  u  =  m  -  a;  [CE]  ')'  expected  [FE]    AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]      u  =  m  -  a;  (  u  =  m  -  a;  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	        u    =    m    -    a;    (  u  =  m  -  a;	  	non-compiled	[CE]  ')'  expected	3	None	add
42	[BUG]  [BUGGY]  if  (u  <  =  a)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {    [BUGGY]  if  (u  <  =  a)  {  [BUGGY]    d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5	183	183	1	replace	if  (u  <  =  a)  {	  if    (u    <    =    m)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
