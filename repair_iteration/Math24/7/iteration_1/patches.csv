bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!isMinim)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  if(!isMinim)  {  return  null;  }  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	if(!isMinim)  {  return  null;  }	      if(fu    >    GOLDEN_SECTION)    {    if(!isMinimim)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  if(fu  <  =  GOLDEN_SECTION)  {  if(!isMinimim)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  if(fu  <  =  GOLDEN_SECTION)  {  if(!isMinimim)  {  return  null;  }  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	if(fu  <  =  GOLDEN_SECTION)  {  if(!isMinimim)  {  return  null;  }	      if(fu    >    GOLDEN_SECTION)    {    if(!isMinimim)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  v  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  w;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  v  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  w;  }  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	v  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  w;  }	      if(b    ==    null)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  if(fu  <  =  fv  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  w;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  if(fu  <  =  fv  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  w;  }  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	if(fu  <  =  fv  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  w;  }	      if(b    ==    null)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  if(isMinimum)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  w;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  if(isMinimum)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  w;  }  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	if(isMinimum)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  w;  }	      if(!isMinimum)    {    for(int    x    =    0;    x    <    iter.next();    x++)    {    v    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  if(isMinimum)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  fw;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  if(isMinimum)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  fw;  }  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	if(isMinimum)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  fw;  }	      if(!isMinimum)    {    for(int    x    =    0;    x    <    iter.next();    x++)    {    v    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  }  else  if(fu  <  =  fw  ||  Precision.equals(w,  x)||  Precision.equals(v,  fv))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  }  else  if(fu  <  =  fw  ||  Precision.equals(w,  x)||  Precision.equals(v,  fv))  {  [BUGGY]    Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	}  else  if(fu  <  =  fw  ||  Precision.equals(w,  x)||  Precision.equals(v,  fv))  {	  }    else    if(fu    <    =    fv    ||    Precision.equals(w,    x)||    Precision.equals(v,    fv))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(w,  x)||  Precision.equals(v,  fv))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(w,  x)||  Precision.equals(v,  fv))  {  [BUGGY]    Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	}  else  if(fu  <  =  w  ||  Precision.equals(w,  x)||  Precision.equals(v,  fv))  {	  }    else    if(fu    <    =    fv    ||    Precision.equals(w,    x)||    Precision.equals(v,    fv))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
9	[BUG]  [BUGGY]  if(isMinimum)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  fx;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  if(isMinimum)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  fx;  }  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	if(isMinimum)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  fx;  }	      if(!isMinimum)    {    for(int    x    =    0;    x    <    iter.next();    x++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  if(fu  <  =  fv  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  if(fu  <  =  fv  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  }  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	if(fu  <  =  fv  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  }	      if(b    ==    null)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    fw;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
11	[BUG]  [BUGGY]  if(fu  ==  0)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  if(fu  ==  0)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	if(fu  ==  0)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }	      if(b    ==    null)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    fw;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
12	[BUG]  [BUGGY]  }  else  if(fu  <  =  fw  ||  Precision.equals(w,  x)||  Precision.equals(v,  w))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  }  else  if(fu  <  =  fw  ||  Precision.equals(w,  x)||  Precision.equals(v,  w))  {  [BUGGY]    Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	}  else  if(fu  <  =  fw  ||  Precision.equals(w,  x)||  Precision.equals(v,  w))  {	  }    else    if(fu    <    =    fv    ||    Precision.equals(w,    x)||    Precision.equals(v,    w))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  }  else  if(fu  <  =  fu  ||  Precision.equals(w,  x)||  Precision.equals(v,  w))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  }  else  if(fu  <  =  fu  ||  Precision.equals(w,  x)||  Precision.equals(v,  w))  {  [BUGGY]    Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	}  else  if(fu  <  =  fu  ||  Precision.equals(w,  x)||  Precision.equals(v,  w))  {	  }    else    if(fu    <    =    fv    ||    Precision.equals(w,    x)||    Precision.equals(v,    w))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  fv  =  fx;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  fv  =  fx;  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	fv  =  fx;	      if(fu    >    GOLDEN_SECTION)    {    v    =    w;    fv    =    fx;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
15	[BUG]  [BUGGY]  }  else  if(fu  <  =  fu  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  }  else  if(fu  <  =  fu  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  [BUGGY]    Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	}  else  if(fu  <  =  fu  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {	  }    else    if(fu    <    =    w    ||    Precision.equals(v,    x)||    Precision.equals(v,    w))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
16	[BUG]  [BUGGY]  b  =  fx;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  b  =  fx;  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	b  =  fx;	      b    =    b;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  b  =  w;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  b  =  w;  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	b  =  w;	      b    =    b;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  }  else  if(fu  <  =  fw  ||  Precision.equals(w,  x)||  Precision.equals(v,  fw))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  }  else  if(fu  <  =  fw  ||  Precision.equals(w,  x)||  Precision.equals(v,  fw))  {  [BUGGY]    Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	}  else  if(fu  <  =  fw  ||  Precision.equals(w,  x)||  Precision.equals(v,  fw))  {	  }    else    if(fu    <    =    fw    ||    Precision.equals(v,    x)||    Precision.equals(v,    w))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  }  else  if(fu  ==  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  }  else  if(fu  ==  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  [BUGGY]    Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	}  else  if(fu  ==  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {	  }    else    if(fu    <    =    fw    ||    Precision.equals(v,    x)||    Precision.equals(v,    w))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
20	[BUG]  [BUGGY]  if(fu  ==  0)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  w;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  if(fu  ==  0)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  w;  }  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	if(fu  ==  0)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  w;  }	      if(b    ==    null)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  if(fu  >=  0)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  w;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  if(fu  >=  0)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  w;  }  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	if(fu  >=  0)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  w;  }	      if(b    ==    null)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  }  else  if(fu  <  =  fw  ||  Precision.equals(w,  fv)||  Precision.equals(v,  fv))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  }  else  if(fu  <  =  fw  ||  Precision.equals(w,  fv)||  Precision.equals(v,  fv))  {  [BUGGY]    Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	}  else  if(fu  <  =  fw  ||  Precision.equals(w,  fv)||  Precision.equals(v,  fv))  {	  }    else    if(fu    <    =    fv    ||    Precision.equals(w,    x)||    Precision.equals(v,    fv))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  v  =  w;  fv  =  fx;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  v  =  w;  fv  =  fx;  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	v  =  w;  fv  =  fx;	      if(fu    >    GOLDEN_SECTION)    {    v    =    w;    fv    =    fx;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
24	[BUG]  [BUGGY]  v  =  fx;  fv  =  fx;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  v  =  fx;  fv  =  fx;  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	v  =  fx;  fv  =  fx;	      if(fu    >    GOLDEN_SECTION)    {    v    =    w;    fv    =    fx;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
25	[BUG]  [BUGGY]  if(fu  ==  w)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  if(fu  ==  w)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	if(fu  ==  w)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }	      if(b    ==    null)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    fw;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  if(!isMinimim)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  if(!isMinimim)  {  return  null;  }  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	if(!isMinimim)  {  return  null;  }	      if(fu    >    GOLDEN_SECTION)    {    if(!isMinimim)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  if(fu  ==  GOLDEN_SECTION)  {  if(!isMinimim)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  if(fu  ==  GOLDEN_SECTION)  {  if(!isMinimim)  {  return  null;  }  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	if(fu  ==  GOLDEN_SECTION)  {  if(!isMinimim)  {  return  null;  }	      if(fu    >    GOLDEN_SECTION)    {    if(!isMinimim)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  if(fu  <  =  fv  ||  Precision.equals(v,  w))  {  v  =  w;  fv  =  fw;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  if(fu  <  =  fv  ||  Precision.equals(v,  w))  {  v  =  w;  fv  =  fw;  }  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	if(fu  <  =  fv  ||  Precision.equals(v,  w))  {  v  =  w;  fv  =  fw;  }	      if(b    ==    null)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    fw;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
29	[BUG]  [BUGGY]  if(fu  >  GOLDEN_SECTION  ||  fv  <  =  fx)  {  v  =  w;  fv  =  fx;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  if(fu  >  GOLDEN_SECTION  ||  fv  <  =  fx)  {  v  =  w;  fv  =  fx;  }  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	if(fu  >  GOLDEN_SECTION  ||  fv  <  =  fx)  {  v  =  w;  fv  =  fx;  }	      if(fu    >    GOLDEN_SECTION)    {    v    =    w;    fv    =    fx;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
30	[BUG]  [BUGGY]  if(fu  <  =  fv  ||  Precision.equals(v,  w))  {  v  =  w;  fv  =  w;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  if(fu  <  =  fv  ||  Precision.equals(v,  w))  {  v  =  w;  fv  =  w;  }  [BUGGY]    }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	if(fu  <  =  fv  ||  Precision.equals(v,  w))  {  v  =  w;  fv  =  w;  }	      if(b    ==    null)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  }  else  if(fu  <  =  v  ||  Precision.equals(w,  x)||  Precision.equals(v,  w))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;    [BUGGY]  }  else  if(fu  <  =  v  ||  Precision.equals(w,  x)||  Precision.equals(v,  w))  {  [BUGGY]    Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	}  else  if(fu  <  =  v  ||  Precision.equals(w,  x)||  Precision.equals(v,  w))  {	  }    else    if(fu    <    =    fw    ||    Precision.equals(v,    x)||    Precision.equals(v,    w))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
