bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(b  ==  null)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  w;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;  [BUGGY]    if(b  ==  null)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  w;  }  [BUGGY]  }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	    if(b  ==  null)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  w;  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
2	[BUG]  [BUGGY]    if(b  ==  null)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;  [BUGGY]    if(b  ==  null)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }  [BUGGY]  }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	    if(b  ==  null)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
3	[BUG]  [BUGGY]    b  =  b;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;  [BUGGY]    b  =  b;  [BUGGY]  }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	    b  =  b;		non-compiled	[CE]  illegal  start  of  expression	14	None	add
4	[BUG]  [BUGGY]  }  else  if(fu  <  =  fw  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;  [BUGGY]  }  else  if(fu  <  =  fw  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  [BUGGY]  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	}  else  if(fu  <  =  fw  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {	}  else  if  (fu  <=  fv  ||    Precision.equals(v,  x)  ||        Precision.equals(v,  w))  {  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
5	[BUG]  [BUGGY]  }  else  if(fu  <  =  fv  ||  Precision.equals(w,  x)||  Precision.equals(v,  fv))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;  [BUGGY]  }  else  if(fu  <  =  fv  ||  Precision.equals(w,  x)||  Precision.equals(v,  fv))  {  [BUGGY]  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	}  else  if(fu  <  =  fv  ||  Precision.equals(w,  x)||  Precision.equals(v,  fv))  {	}  else  if  (fu  <=  fv  ||    Precision.equals(v,  x)  ||        Precision.equals(v,  w))  {  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]    if(!isMinimum)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  fx;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;  [BUGGY]    if(!isMinimum)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  fx;  }  [BUGGY]  }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	    if(!isMinimum)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  fx;  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
7	[BUG]  [BUGGY]    if(!isMinimum)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  w;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;  [BUGGY]    if(!isMinimum)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  w;  }  [BUGGY]  }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	    if(!isMinimum)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  w;  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
8	[BUG]  [BUGGY]  }  else  if(fu  <  =  fv  ||  Precision.equals(w,  x)||  Precision.equals(v,  w))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;  [BUGGY]  }  else  if(fu  <  =  fv  ||  Precision.equals(w,  x)||  Precision.equals(v,  w))  {  [BUGGY]  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	}  else  if(fu  <  =  fv  ||  Precision.equals(w,  x)||  Precision.equals(v,  w))  {	}  else  if  (fu  <=  fv  ||    Precision.equals(v,  x)  ||        Precision.equals(v,  w))  {  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;  [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  [BUGGY]  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	}  else  if(fu  <  =  w  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {	}  else  if  (fu  <=  fv  ||    Precision.equals(v,  x)  ||        Precision.equals(v,  w))  {  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]    if(fu  >  GOLDEN_SECTION)  {  if(!isMinimim)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;  [BUGGY]    if(fu  >  GOLDEN_SECTION)  {  if(!isMinimim)  {  return  null;  }  [BUGGY]  }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	    if(fu  >  GOLDEN_SECTION)  {  if(!isMinimim)  {  return  null;  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
11	[BUG]  [BUGGY]    if(fu  >  GOLDEN_SECTION)  {  v  =  w;  fv  =  fx;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;  [BUGGY]    if(fu  >  GOLDEN_SECTION)  {  v  =  w;  fv  =  fx;  }  [BUGGY]  }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	259	261	1	replace	    if(fu  >  GOLDEN_SECTION)  {  v  =  w;  fv  =  fx;  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
