bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  checker  =  getOptimizer();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  checker  =  getOptimizer();  [BUGGY]      final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	checker  =  getOptimizer();	  if(checker    ==    null)    {    checker    =    getOptimizer();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
2	[BUG]  [BUGGY]  Checker  checker  =  getOptimizer();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  Checker  checker  =  getOptimizer();  [BUGGY]      final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	Checker  checker  =  getOptimizer();	  if(checker    ==    null)    {    checker    =    getOptimizer();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
3	[BUG]  [BUGGY]  final  double  a  =  getEndValue();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  final  double  a  =  getEndValue();  [BUGGY]      final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	final  double  a  =  getEndValue();	  final    int    a    =    getEndValue();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
4	[BUG]  [BUGGY]  final  double  a  =  getStartValue().getIndex()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  final  double  a  =  getStartValue().getIndex()  +  1;  [BUGGY]      final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	final  double  a  =  getStartValue().getIndex()  +  1;	  final    int    a    =    getStartValue().getIndex()    +    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
5	[BUG]  [BUGGY]  final  double  a  =  getMax();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  final  double  a  =  getMax();  [BUGGY]      final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	final  double  a  =  getMax();	  final    int    a    =    getMax();    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(this.isOptimized()  &&  this.isOptimized());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  Preconditions.checkState(this.isOptimized()  &&  this.isOptimized());  [BUGGY]      final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	Preconditions.checkState(this.isOptimized()  &&  this.isOptimized());	  Preconditions.checkState(this.isOptimized()    ||    this.isOptimized());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
7	[BUG]  [BUGGY]  Preconditions.checkState(isOptimized(),  isMinim);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  Preconditions.checkState(isOptimized(),  isMinim);  [BUGGY]      final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	Preconditions.checkState(isOptimized(),  isMinim);	  Preconditions.checkState(this.isOptimized(),    isMinim);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
8	[BUG]  [BUGGY]  Preconditions.checkState(!isMinim  &&  checker  ==  null);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  Preconditions.checkState(!isMinim  &&  checker  ==  null);  [BUGGY]      final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	Preconditions.checkState(!isMinim  &&  checker  ==  null);	  Preconditions.checkState(!isMinim    &&    checker!=    null);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  final  double  a  =  getMin();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  final  double  a  =  getMin();  [BUGGY]      final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	final  double  a  =  getMin();	  final    int    a    =    getMin();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
10	[BUG]  [BUGGY]  Preconditions.checkState(checker  ==  null);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  Preconditions.checkState(checker  ==  null);  [BUGGY]      final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	Preconditions.checkState(checker  ==  null);	  Preconditions.checkState(checker!=    null);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
11	[BUG]  [BUGGY]  final  boolean  isMinim  =  getMax()  <  GoalType.MINIMIZE;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  final  boolean  isMinim  =  getMax()  <  GoalType.MINIMIZE;  [BUGGY]      final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	final  boolean  isMinim  =  getMax()  <  GoalType.MINIMIZE;	  final    boolean    isMinim    =    getMax()    >    GoalType.MINIMIZE;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  final  double  min  =  getMin();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  final  double  min  =  getMin();  [BUGGY]      final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	final  double  min  =  getMin();	  final    int    min    =    getMin();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  final  double  a  =  getEndValue().getIndex();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  final  double  a  =  getEndValue().getIndex();  [BUGGY]      final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	final  double  a  =  getEndValue().getIndex();	  final    int    a    =    getEndValue().getIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  final  boolean  isMinim  =  getMin()  <  GoalType.MINIMIZE;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  final  boolean  isMinim  =  getMin()  <  GoalType.MINIMIZE;  [BUGGY]      final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	final  boolean  isMinim  =  getMin()  <  GoalType.MINIMIZE;	  final    boolean    isMinim    =    getMin()    >    GoalType.MINIMIZE;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  Preconditions.checkState(!isOptimized());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  Preconditions.checkState(!isOptimized());  [BUGGY]      final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	Preconditions.checkState(!isOptimized());	  Preconditions.checkState(!this.isOptimized());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  final  double  max  =  getMax()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  final  double  max  =  getMax()  -  1;  [BUGGY]      final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	final  double  max  =  getMax()  -  1;	  final    double    max    =    getMax();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  ConvergenceChecker  <?>  checker  =  getConvergenceChecker();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  ConvergenceChecker  <?>  checker  =  getConvergenceChecker();  [BUGGY]      final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	ConvergenceChecker  <?>  checker  =  getConvergenceChecker();	  ConvergenceChecker    <?>    checker    =    getOptimizer();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
18	[BUG]  [BUGGY]  ConvergenceChecker  <  Object>  checker  =  getConvergenceChecker();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  ConvergenceChecker  <  Object>  checker  =  getConvergenceChecker();  [BUGGY]      final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	ConvergenceChecker  <  Object>  checker  =  getConvergenceChecker();	  ConvergenceChecker    <    Object>    checker    =    getOptimizer();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
19	[BUG]  [BUGGY]  final  boolean  isMinim  =  getMax()  >  GoalType.MINIMIZE  ||  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  final  boolean  isMinim  =  getMax()  >  GoalType.MINIMIZE  ||  [BUGGY]      final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	final  boolean  isMinim  =  getMax()  >  GoalType.MINIMIZE  ||	  final    boolean    isMinim    =    getMax()    >    GoalType.MINIMIZE;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  final  int  a  =  getEndValue().getIndex()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  final  int  a  =  getEndValue().getIndex()  +  1;  [BUGGY]      final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	final  int  a  =  getEndValue().getIndex()  +  1;	  final    int    a    =    getEndValue().getIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
21	[BUG]  [BUGGY]  final  ConvergenceChecker  <  Object>  checker  =  getOptimizer();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  final  ConvergenceChecker  <  Object>  checker  =  getOptimizer();  [BUGGY]      final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	final  ConvergenceChecker  <  Object>  checker  =  getOptimizer();	  ConvergenceChecker    <    Object>    checker    =    getOptimizer();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
22	[BUG]  [BUGGY]  Preconditions.checkState(this.isOptimized(),  GoalType.MINIMIZE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  Preconditions.checkState(this.isOptimized(),  GoalType.MINIMIZE);  [BUGGY]      final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	Preconditions.checkState(this.isOptimized(),  GoalType.MINIMIZE);	  Preconditions.checkState(this.isOptimized(),    isMinim);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkState(!this.isOptimized(),  isMinim);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  Preconditions.checkState(!this.isOptimized(),  isMinim);  [BUGGY]      final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	Preconditions.checkState(!this.isOptimized(),  isMinim);	  Preconditions.checkState(this.isOptimized(),    isMinim);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
24	[BUG]  [BUGGY]  final  boolean  isMinim  =  getMax()  >  GoalType.MINIMIZE_ROOT;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  final  boolean  isMinim  =  getMax()  >  GoalType.MINIMIZE_ROOT;  [BUGGY]      final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	final  boolean  isMinim  =  getMax()  >  GoalType.MINIMIZE_ROOT;	  final    boolean    isMinim    =    getMax()    >    GoalType.MINIMIZE;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
25	[BUG]  [BUGGY]  final  int  a  =  getEndValue().getIndex()  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  UnivariatePointValuePair  doOptimize()  {      [BUGGY]  final  int  a  =  getEndValue().getIndex()  -  1;  [BUGGY]      final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	110	110	1	replace	final  int  a  =  getEndValue().getIndex()  -  1;	  final    int    a    =    getEndValue().getIndex();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
