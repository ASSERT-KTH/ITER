bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  current.set(x,  fw);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  current.set(x,  fw);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	current.set(x,  fw);	  if(!isMinim)    {    current.set(x,    fw);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
2	[BUG]  [BUGGY]  vice(iter.next());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  vice(iter.next());  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	vice(iter.next());	  if(isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
3	[BUG]  [BUGGY]  RectangleEdge.this.remove(current.getValue());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  RectangleEdge.this.remove(current.getValue());  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	RectangleEdge.this.remove(current.getValue());	  RectangleEdge.this.remove(current);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
4	[BUG]  [BUGGY]  current.set(w,  x);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  current.set(w,  x);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	current.set(w,  x);	  current.set(x,    w);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
5	[BUG]  [BUGGY]  current.set(fx,  w);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  current.set(fx,  w);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	current.set(fx,  w);	  current.set(x,    w);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  ConvergenceChecker.checkNotNull(previous);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  ConvergenceChecker.checkNotNull(previous);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	ConvergenceChecker.checkNotNull(previous);	  ConvergenceChecker.checkNotNull(current);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  int  i  =  0;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  int  i  =  0;  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	int  i  =  0;	  int    i    =    0;    if(!isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
8	[BUG]  [BUGGY]  Integer  i  =  0;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  Integer  i  =  0;  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	Integer  i  =  0;	  int    i    =    0;    if(!isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
9	[BUG]  [BUGGY]  (int  i  =  1;  i  <  iter.next();  i++)  {  v  =  fx;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  (int  i  =  1;  i  <  iter.next();  i++)  {  v  =  fx;  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	(int  i  =  1;  i  <  iter.next();  i++)  {  v  =  fx;  }	  (int    i    =    0;    i    <    iter.next();    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  RectangleEdge.this.remove(v);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  RectangleEdge.this.remove(v);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	RectangleEdge.this.remove(v);	  RectangleEdge.this.remove(iter);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
11	[BUG]  [BUGGY]  (int  i  =  1;  i  <  iter.next());  i++)  {  v  =  fx;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  (int  i  =  1;  i  <  iter.next());  i++)  {  v  =  fx;  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	(int  i  =  1;  i  <  iter.next());  i++)  {  v  =  fx;  }	  (int    i    =    0;    i    <    iter.next());    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  RectangleEdge.this.set(current);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  RectangleEdge.this.set(current);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	RectangleEdge.this.set(current);	  RectangleEdge.this.reset();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
13	[BUG]  [BUGGY]  luate(w,  x))  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.add(x);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  luate(w,  x))  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.add(x);  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	luate(w,  x))  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.add(x);  }	  luate(x,    w))    {    current.remove();    }    else    {    for(int    iter    =    1;    iter    <    =    0;    iter++)    {    current.add(x);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
14	[BUG]  [BUGGY]  vice.remove(fw);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  vice.remove(fw);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	vice.remove(fw);	  vice.remove();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  int  i  =  1;  i  <  iter.next();  i++)  {  v  =  fx;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  int  i  =  1;  i  <  iter.next();  i++)  {  v  =  fx;  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	int  i  =  1;  i  <  iter.next();  i++)  {  v  =  fx;  }	  int    i    =    0;    i    <    iter.next();    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
16	[BUG]  [BUGGY]  current.remove(x);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  current.remove(x);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	current.remove(x);	  current.remove();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
17	[BUG]  [BUGGY]  ConvergenceChecker.checkState(isMinim,  isMinim);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  ConvergenceChecker.checkState(isMinim,  isMinim);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	ConvergenceChecker.checkState(isMinim,  isMinim);	  ConvergenceChecker.checkState(isMinim);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
18	[BUG]  [BUGGY]  vice.set(v,  w);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  vice.set(v,  w);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	vice.set(v,  w);	  vice.set(x,    w);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
19	[BUG]  [BUGGY]  vice.set(w,  x);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  vice.set(w,  x);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	vice.set(w,  x);	  vice.set(x,    w);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
20	[BUG]  [BUGGY]  luate(current,  x);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  luate(current,  x);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	luate(current,  x);	  luate(current);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
21	[BUG]  [BUGGY]  luate(current,  w);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  luate(current,  w);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	luate(current,  w);	  luate(current);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
22	[BUG]  [BUGGY]  current.set(v,  w);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  current.set(v,  w);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	current.set(v,  w);	  if(!isMinim)    {    current.set(v,    w);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
23	[BUG]  [BUGGY]  vice.remove(x);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  vice.remove(x);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	vice.remove(x);	  vice.remove();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
24	[BUG]  [BUGGY]  ConvergenceChecker.checkState(current);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  ConvergenceChecker.checkState(current);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	ConvergenceChecker.checkState(current);	  ConvergenceChecker.checkState(isMinim);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  ConvergenceChecker.checkState(!isMinim);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  ConvergenceChecker.checkState(!isMinim);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	ConvergenceChecker.checkState(!isMinim);	  ConvergenceChecker.checkState(isMinim);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
26	[BUG]  [BUGGY]  int  i  =  0;  i  <  iter.next();  i++)  {  v  =  i;  fx  =  i;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  int  i  =  0;  i  <  iter.next();  i++)  {  v  =  i;  fx  =  i;  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	int  i  =  0;  i  <  iter.next();  i++)  {  v  =  i;  fx  =  i;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    i;    fx    =    i;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
27	[BUG]  [BUGGY]  int  i  =  0;  iter.next();  i++)  {  v  =  i;  fx  =  i;  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  int  i  =  0;  iter.next();  i++)  {  v  =  i;  fx  =  i;  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	int  i  =  0;  iter.next();  i++)  {  v  =  i;  fx  =  i;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    i;    fx    =    i;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
28	[BUG]  [BUGGY]  ConvergenceChecker.checkNotNull(exp);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  ConvergenceChecker.checkNotNull(exp);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	ConvergenceChecker.checkNotNull(exp);	  ConvergenceChecker.checkNotNull(current);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
29	[BUG]  [BUGGY]  if(!isMinim)  {  current.set(fx,  fw);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  if(!isMinim)  {  current.set(fx,  fw);  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	if(!isMinim)  {  current.set(fx,  fw);  }	  if(!isMinim)    {    current.set(x,    fw);    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
30	[BUG]  [BUGGY]  RectangleEdge.this.reset(v);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  RectangleEdge.this.reset(v);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	RectangleEdge.this.reset(v);	  RectangleEdge.this.reset();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
31	[BUG]  [BUGGY]  if(!isMinim)  {  current.set(v,  fw);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  if(!isMinim)  {  current.set(v,  fw);  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	if(!isMinim)  {  current.set(v,  fw);  }	  if(!isMinim)    {    current.set(v,    w);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
32	[BUG]  [BUGGY]  vice.set(fx,  w);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  vice.set(fx,  w);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	vice.set(fx,  w);	  vice.set(x,    w);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
33	[BUG]  [BUGGY]  if(!isMinimum)  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.remove();  continue  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  if(!isMinimum)  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.remove();  continue  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	if(!isMinimum)  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.remove();  continue	  if(!isMinimum)    {    current.remove();    }    else    {    for(int    iter    =    1;    iter    <    =    0;    iter++)    {    current.remove();    continue;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
34	[BUG]  [BUGGY]  luate(current,  fx);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  luate(current,  fx);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	luate(current,  fx);	  luate(current);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
35	[BUG]  [BUGGY]  (int  i  =  0;  i  <  fu.next());  i++)  {  v  =  fx;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  (int  i  =  0;  i  <  fu.next());  i++)  {  v  =  fx;  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	(int  i  =  0;  i  <  fu.next());  i++)  {  v  =  fx;  }	  (int    i    =    0;    i    <    iter.next());    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
36	[BUG]  [BUGGY]  int  i  =  1;  if(!isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  fx;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  int  i  =  1;  if(!isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  fx;  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	int  i  =  1;  if(!isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  fx;  }	  int    i    =    0;    if(!isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
37	[BUG]  [BUGGY]  luate(x,  fw))  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.add(x);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  luate(x,  fw))  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.add(x);  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	luate(x,  fw))  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.add(x);  }	  luate(x,    w))    {    current.remove();    }    else    {    for(int    iter    =    1;    iter    <    =    0;    iter++)    {    current.add(x);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
38	[BUG]  [BUGGY]  luate(v,  w))  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.add(x);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  luate(v,  w))  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.add(x);  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	luate(v,  w))  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.add(x);  }	  luate(x,    w))    {    current.remove();    }    else    {    for(int    iter    =    1;    iter    <    =    0;    iter++)    {    current.add(x);    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
39	[BUG]  [BUGGY]  (int  i  =  0;  i  <  fu.next();  i++)  {  v  =  fx;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  (int  i  =  0;  i  <  fu.next();  i++)  {  v  =  fx;  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	(int  i  =  0;  i  <  fu.next();  i++)  {  v  =  fx;  }	  (int    i    =    0;    i    <    iter.next();    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
40	[BUG]  [BUGGY]  int  i  =  0;  i  <  iter.next();  i++)  {  v  =  i;  fw  =  i;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  int  i  =  0;  i  <  iter.next();  i++)  {  v  =  i;  fw  =  i;  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	int  i  =  0;  i  <  iter.next();  i++)  {  v  =  i;  fw  =  i;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    i;    fw    =    i;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
41	[BUG]  [BUGGY]  int  i  =  0;  iter.next();  i++)  {  v  =  i;  fw  =  i;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  int  i  =  0;  iter.next();  i++)  {  v  =  i;  fw  =  i;  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	int  i  =  0;  iter.next();  i++)  {  v  =  i;  fw  =  i;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    i;    fw    =    i;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
42	[BUG]  [BUGGY]  Integer  w  =  iter.next();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  Integer  w  =  iter.next();  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	Integer  w  =  iter.next();	  if(isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
43	[BUG]  [BUGGY]  luate(iter,  m.getValue());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  luate(iter,  m.getValue());  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	luate(iter,  m.getValue());	  if(isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
44	[BUG]  [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  u;  fw  =  i;  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  u;  fw  =  i;  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	if(isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  u;  fw  =  i;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    i;    fw    =    i;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
45	[BUG]  [BUGGY]  RectangleEdge.this.start();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  RectangleEdge.this.start();  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	RectangleEdge.this.start();	  RectangleEdge.this.reset();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
46	[BUG]  [BUGGY]  int  i  =  0;  iter  <  iter.next();  i++)  {  v  =  fx;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  int  i  =  0;  iter  <  iter.next();  i++)  {  v  =  fx;  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	int  i  =  0;  iter  <  iter.next();  i++)  {  v  =  fx;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
47	[BUG]  [BUGGY]  int  i  =  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  int  i  =  1;  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	int  i  =  1;	  int    i    =    0;    if(!isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
48	[BUG]  [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  u;  fx  =  i;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  u;  fx  =  i;  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	if(isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  u;  fx  =  i;  }	  if(isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    i;    fx    =    i;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
49	[BUG]  [BUGGY]  ConvergenceChecker.checkNotNull(current,  v);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  ConvergenceChecker.checkNotNull(current,  v);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	ConvergenceChecker.checkNotNull(current,  v);	  ConvergenceChecker.checkNotNull(current);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
50	[BUG]  [BUGGY]  ConvergenceChecker.checkNotNull(current,  fw);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  ConvergenceChecker.checkNotNull(current,  fw);  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	ConvergenceChecker.checkNotNull(current,  fw);	  ConvergenceChecker.checkNotNull(current);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
51	[BUG]  [BUGGY]  (int  i  =  0;  i  <  iter.next();  i++)  {  v  =  w;  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  (int  i  =  0;  i  <  iter.next();  i++)  {  v  =  w;  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  w;  }	  (int    i    =    0;    i    <    iter.next();    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
52	[BUG]  [BUGGY]  RectangleEdge.this.remove(current.getRange());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  RectangleEdge.this.remove(current.getRange());  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	RectangleEdge.this.remove(current.getRange());	  RectangleEdge.this.remove(current);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
53	[BUG]  [BUGGY]  (int  i  =  0;  i  <  iter.next());  i++)  {  v  =  w;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).      [BUGGY]  (int  i  =  0;  i  <  iter.next());  i++)  {  v  =  w;  }  [BUGGY]      return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	(int  i  =  0;  i  <  iter.next());  i++)  {  v  =  w;  }	  (int    i    =    0;    i    <    iter.next());    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
