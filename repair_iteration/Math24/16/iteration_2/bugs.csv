bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ConvergenceChecker.checkNotNull(current);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  ConvergenceChecker.checkNotNull(current);  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	ConvergenceChecker.checkNotNull(current);	      if(!isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    i;    fw    =    i;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2	[BUG]  [BUGGY]  ConvergenceChecker.checkState(isMinim);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  ConvergenceChecker.checkState(isMinim);  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	ConvergenceChecker.checkState(isMinim);	      if(!isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    i;    fw    =    i;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
3	[BUG]  [BUGGY]  (int  i  =  0;  i  <  iter.next();  i++)  {  v  =  fx;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  (int  i  =  0;  i  <  iter.next();  i++)  {  v  =  fx;  }  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  fx;  }	      if(!isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  (int  i  =  0;  i  <  iter.next());  i++)  {  v  =  fx;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  (int  i  =  0;  i  <  iter.next());  i++)  {  v  =  fx;  }  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	(int  i  =  0;  i  <  iter.next());  i++)  {  v  =  fx;  }	      if(!isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  current.remove();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  current.remove();  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	current.remove();	      if(!isMinim)    {    current.remove();    }    else    {    for(int    iter    =    1;    iter    <    =    0;    iter++)    {    current.add(x);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  vice.remove();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  vice.remove();  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	vice.remove();	      if(!isMinim)    {    current.remove();    }    else    {    for(int    iter    =    1;    iter    <    =    0;    iter++)    {    current.add(x);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  current.reset();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  current.reset();  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	current.reset();	      if(!isMinim)    {    current.reset();    }    else    {    current.reset();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  if(isMinim)  {  current.reset();  }  else  {  current.reset();  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  if(isMinim)  {  current.reset();  }  else  {  current.reset();  }  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	if(isMinim)  {  current.reset();  }  else  {  current.reset();  }	      if(!isMinim)    {    current.reset();    }    else    {    current.reset();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  RectangleEdge.this.remove(iter);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  RectangleEdge.this.remove(iter);  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	RectangleEdge.this.remove(iter);	      if(!isMinim)    {    current.remove();    }    else    {    for(int    iter    =    1;    iter    <    =    0;    iter++)    {    current.remove();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
10	[BUG]  [BUGGY]  if(isMinim)  {  current.reset();  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  if(isMinim)  {  current.reset();  }  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	if(isMinim)  {  current.reset();  }	      if(!isMinim)    {    current.reset();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
11	[BUG]  [BUGGY]  current.set(x,  w);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  current.set(x,  w);  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	current.set(x,  w);	      if(!isMinim)    {    current.set(x,    w);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]  vice.set(x,  w);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  vice.set(x,  w);  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	vice.set(x,  w);	      if(!isMinim)    {    current.set(x,    w);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
13	[BUG]  [BUGGY]  luate(current);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  luate(current);  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	luate(current);	      if(!isMinim)    {    current.remove();    }    else    {    for(int    iter    =    1;    iter    <    =    0;    iter++)    {    current.remove();    continue;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
14	[BUG]  [BUGGY]  return  fw;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  return  fw;  [BUGGY]    }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	return  fw;	  return    w;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  return  u;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  return  u;  [BUGGY]    }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	return  u;	  return    v;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  i;  fw  =  i;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  i;  fw  =  i;  }  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	if(isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  i;  fw  =  i;  }	      if(!isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    i;    fw    =    i;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  i;  fx  =  i;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  i;  fx  =  i;  }  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	if(isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  i;  fx  =  i;  }	      if(!isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    i;    fx    =    i;    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
18	[BUG]  [BUGGY]  RectangleEdge.this.reset();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  RectangleEdge.this.reset();  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	RectangleEdge.this.reset();	      if(!isMinim)    {    current.remove();    }    else    {    for(int    iter    =    1;    iter    <    =    0;    iter++)    {    current.add(x);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
19	[BUG]  [BUGGY]  if(!isMinim)  {  current.set(x,  fw);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  if(!isMinim)  {  current.set(x,  fw);  }  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	if(!isMinim)  {  current.set(x,  fw);  }	      if(!isMinim)    {    current.set(x,    w);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
20	[BUG]  [BUGGY]  int  i  =  0;  i  <  iter.next();  i++)  {  v  =  fx;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  int  i  =  0;  i  <  iter.next();  i++)  {  v  =  fx;  }  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	int  i  =  0;  i  <  iter.next();  i++)  {  v  =  fx;  }	      if(!isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
21	[BUG]  [BUGGY]  int  i  =  0;  if(!isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  fx;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  int  i  =  0;  if(!isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  fx;  }  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	int  i  =  0;  if(!isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  fx;  }	      if(!isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  RectangleEdge.this.remove(current);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  RectangleEdge.this.remove(current);  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	RectangleEdge.this.remove(current);	      if(!isMinim)    {    current.remove();    }    else    {    for(int    iter    =    1;    iter    <    =    0;    iter++)    {    current.remove();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  luate(x,  w))  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.add(x);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  luate(x,  w))  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.add(x);  }  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	luate(x,  w))  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.add(x);  }	      if(!isMinim)    {    current.remove();    }    else    {    for(int    iter    =    1;    iter    <    =    0;    iter++)    {    current.add(x);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
24	[BUG]  [BUGGY]  if(!isMinim)  {  current.set(v,  w);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  if(!isMinim)  {  current.set(v,  w);  }  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	if(!isMinim)  {  current.set(v,  w);  }	      if(!isMinim)    {    current.set(x,    w);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  if(!isMinimum)  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.remove();  continue;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  if(!isMinimum)  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.remove();  continue;  }  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	if(!isMinimum)  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.remove();  continue;  }	      if(!isMinim)    {    current.remove();    }    else    {    for(int    iter    =    1;    iter    <    =    0;    iter++)    {    current.remove();    continue;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
26	[BUG]  [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  fx;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).    [BUGGY]  if(isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  fx;  }  [BUGGY]    return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	if(isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  fx;  }	      if(!isMinim)    {    for(int    i    =    0;    i    <    iter.next();    i++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
