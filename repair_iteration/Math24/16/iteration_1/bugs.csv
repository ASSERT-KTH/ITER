bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(!isMinim)  {  current.reset();  }  else  {  current.reset();  }  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).  [BUGGY]    if(!isMinim)  {  current.reset();  }  else  {  current.reset();  }  [BUGGY]  return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	    if(!isMinim)  {  current.reset();  }  else  {  current.reset();  }		non-compiled	[CE]  illegal  start  of  type	32	None	add
2	[BUG]  [BUGGY]    if(!isMinim)  {  current.reset();  }  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).  [BUGGY]    if(!isMinim)  {  current.reset();  }  [BUGGY]  return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	    if(!isMinim)  {  current.reset();  }		non-compiled	[CE]  illegal  start  of  type	32	None	add
3	[BUG]  [BUGGY]    if(!isMinim)  {  current.set(x,  w);  }  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).  [BUGGY]    if(!isMinim)  {  current.set(x,  w);  }  [BUGGY]  return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	    if(!isMinim)  {  current.set(x,  w);  }		non-compiled	[CE]  illegal  start  of  type	32	None	add
4	[BUG]  [BUGGY]  return  v;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).  [BUGGY]  return  v;  [BUGGY]  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	return  v;	return  current;  	non-compiled	[CE]  illegal  start  of  type	31	None	replace
5	[BUG]  [BUGGY]  return  w;  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).  [BUGGY]  return  w;  [BUGGY]  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	return  w;	return  current;  	non-compiled	[CE]  illegal  start  of  type	31	None	replace
6	[BUG]  [BUGGY]    if(!isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  i;  fw  =  i;  }  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).  [BUGGY]    if(!isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  i;  fw  =  i;  }  [BUGGY]  return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	    if(!isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  i;  fw  =  i;  }		non-compiled	[CE]  illegal  start  of  type	32	None	add
7	[BUG]  [BUGGY]    if(!isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  fx;  }  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).  [BUGGY]    if(!isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  fx;  }  [BUGGY]  return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	    if(!isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  fx;  }		non-compiled	[CE]  illegal  start  of  type	32	None	add
8	[BUG]  [BUGGY]    if(!isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  i;  fx  =  i;  }  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).  [BUGGY]    if(!isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  i;  fx  =  i;  }  [BUGGY]  return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	    if(!isMinim)  {  for(int  i  =  0;  i  <  iter.next();  i++)  {  v  =  i;  fx  =  i;  }		non-compiled	[CE]  illegal  start  of  type	32	None	add
9	[BUG]  [BUGGY]    if(!isMinim)  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.remove();  }  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).  [BUGGY]    if(!isMinim)  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.remove();  }  [BUGGY]  return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	    if(!isMinim)  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.remove();  }		non-compiled	[CE]  illegal  start  of  type	32	None	add
10	[BUG]  [BUGGY]    if(!isMinim)  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.remove();  continue;  }  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).  [BUGGY]    if(!isMinim)  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.remove();  continue;  }  [BUGGY]  return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	    if(!isMinim)  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.remove();  continue;  }		non-compiled	[CE]  illegal  start  of  type	32	None	add
11	[BUG]  [BUGGY]    if(!isMinim)  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.add(x);  }  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  w  =  u;  fw  =  fu;  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  }  else  {  //  Default  termination  (Brent's  criterion).  [BUGGY]    if(!isMinim)  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.add(x);  }  [BUGGY]  return  current;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	267	267	1	replace	    if(!isMinim)  {  current.remove();  }  else  {  for(int  iter  =  1;  iter  <  =  0;  iter++)  {  current.add(x);  }		non-compiled	[CE]  illegal  start  of  type	32	None	add
