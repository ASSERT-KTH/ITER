bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  ConvergenceChecker  <  UnivariatePointValuePair>  checker  =  getConvergenceChecker(mid);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();    [BUGGY]  final  ConvergenceChecker  <  UnivariatePointValuePair>  checker  =  getConvergenceChecker(mid);  [BUGGY]  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	116	117	1	replace	final  ConvergenceChecker  <  UnivariatePointValuePair>  checker  =  getConvergenceChecker(mid);	final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
2	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();    [BUGGY]    [BUGGY]  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	116	117	1	replace	  	final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
3	[BUG]  [BUGGY]    final  double  max  =  getMax();  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();    [BUGGY]    final  double  max  =  getMax();  [BUGGY]  final  ConvergenceChecker<UnivariatePointValuePair>  checker    =  getConvergenceChecker();  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	116	117	1	replace	    final  double  max  =  getMax();		non-compiled	[CE]  illegal  start  of  type	58	None	add
4	[BUG]  [BUGGY]    if(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();    [BUGGY]    if(isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  ConvergenceChecker<UnivariatePointValuePair>  checker    =  getConvergenceChecker();  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	116	117	1	replace	    if(isMinim)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  type	58	None	add
5	[BUG]  [BUGGY]    final  double  max  =  getMin();  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();    [BUGGY]    final  double  max  =  getMin();  [BUGGY]  final  ConvergenceChecker<UnivariatePointValuePair>  checker    =  getConvergenceChecker();  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	116	117	1	replace	    final  double  max  =  getMin();		non-compiled	[CE]  illegal  start  of  type	58	None	add
6	[BUG]  [BUGGY]    final  double  hi  =  getMax();  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();    [BUGGY]    final  double  hi  =  getMax();  [BUGGY]  final  ConvergenceChecker<UnivariatePointValuePair>  checker    =  getConvergenceChecker();  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	116	117	1	replace	    final  double  hi  =  getMax();		non-compiled	[CE]  illegal  start  of  type	58	None	add
7	[BUG]  [BUGGY]    final  double  hi  =  getMin();  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();    [BUGGY]    final  double  hi  =  getMin();  [BUGGY]  final  ConvergenceChecker<UnivariatePointValuePair>  checker    =  getConvergenceChecker();  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	116	117	1	replace	    final  double  hi  =  getMin();		non-compiled	[CE]  illegal  start  of  type	58	None	add
8	[BUG]  [BUGGY]    if(isMinim)  {  if(mid  >  GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();    [BUGGY]    if(isMinim)  {  if(mid  >  GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  ConvergenceChecker<UnivariatePointValuePair>  checker    =  getConvergenceChecker();  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	116	117	1	replace	    if(isMinim)  {  if(mid  >  GOLDEN_SECTION)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  type	58	None	add
9	[BUG]  [BUGGY]    if(isMinim)  {  if(!isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();    [BUGGY]    if(isMinim)  {  if(!isMinim)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  final  ConvergenceChecker<UnivariatePointValuePair>  checker    =  getConvergenceChecker();  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	116	117	1	replace	    if(isMinim)  {  if(!isMinim)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  type	58	None	add
10	[BUG]  [BUGGY]  ConvergenceChecker  <  UnivariatePointValuePair>  checker  =  getConvergenceChecker();  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();    [BUGGY]  ConvergenceChecker  <  UnivariatePointValuePair>  checker  =  getConvergenceChecker();  [BUGGY]  =  getConvergenceChecker();  double  a;  double  b;  if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math24/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	116	117	1	replace	ConvergenceChecker  <  UnivariatePointValuePair>  checker  =  getConvergenceChecker();	final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  	non-compiled	[CE]  illegal  start  of  type	57	None	replace
