compilation error,114,add,[CE] cannot find symbol, ,if(Double.isNaN(this.minimumRangeValue)) { this.minimumRangeValue = Double.NaN - 2; } else { this.data.add(DefaultBoxAndWhiskerCategoryDataset()); }
patch is same with buggy,114,replace,, this.rangeBounds  =  new  Range(5.0,  5.0);  ,this.rangeBounds = new Range(5.0, 5.0);
patch is same with buggy,162,replace,, double  maxval  =  Double.NaN  /  2;  ,double maxval = Double.NaN / 2;
compilation error,113,add,[CE] cannot find symbol maximumRangeValueCoumn, ,this.maximumRangeValueCoumn = -1;
compilation error,162,add,[CE] incompatible types, ,Double maxval = Double.NaN - minval / 1;
compilation error,162,add,[CE] cannot find symbol naN, ,double maxval = Double.naN - minval / 1;
compilation error,162,replace,[CE] <identifier> expected, double  maxval  =  Double.NaN  /  2;  ,double maxval = Double.NaN * 1; if(item.getMaxOutlier()!= null) { maxval = item.getMinOutlier().doubleValue(); } if(Double.isNaN(this.minimumRangeValueRow)) { minval = item.
patch is same with buggy,174,replace,, this.maximumRangeValueColumn  =  r;  this.maximumRangeValueColumn  =  c;  ,this.maximumRangeValueColumn = r; this.maximumRangeValueColumn = c;
compilation error,174,replace,[CE] not a statement, this.maximumRangeValueColumn  =  r;  this.maximumRangeValueColumn  =  c;  ,if(Double.isNaN(this.maximumRangeValueColumn)) { this.maximumRangeValueColumn = r; this.maximumRangeValueColumn = c; } else { this.maximumRangeValueColum
compilation error,174,add,[CE] ')' expected, ,if(Double.isNaN(this.minimumRangeValueRow)) { this.minimumRangeValueRow = r; this.maximumRangeValueRow = c; } else if(maxval < this.maximumRangeValu
increase failing tests,160,add, [FE] 5]>, ,r = this.data.getRowIndex(columnKey);
increase failing tests,160,add, [FE] 5]>, ,r = this.data.getColumnIndex(rowKey);
compilation error,169,add,[CE] cannot find symbol l, ,this.minimumRangeValueRow = l + 1;
compilation error,173,add,[CE] illegal start of expression, ,if(Double.isNaN(this.maximumRangeValue)) { this.maximumRangeValue = r; >>
compilation error,173,add,[CE] illegal start of expression, ,if(Double.isNaN(this.maximumRangeValue)) { this.maximumRangeValue = r;!=
compilation error,162,add,[CE] cannot find symbol minimumRangeValuecolumn, ,double maxval = Double.NaN / this.minimumRangeValuecolumn;
compilation error,172,add,[CE] 'else' without 'if', ,else if(Double.isNaN(this.minimumRangeValueColumn)||(c > this.minimumRangeValueColumn || c > this.maximumRangeValueColumn)) {
patch is same with buggy,183,replace,, if(Double.isNaN(this.minimumRangeValue))  {  ,if(Double.isNaN(this.minimumRangeValue)) {
patch is same with buggy,178,replace,, if(Double.isNaN(this.minimumRangeValue)||  Double.isNaN(this.maximumRangeValue))  {  ,if(Double.isNaN(this.minimumRangeValue)|| Double.isNaN(this.maximumRangeValue)) {
increase failing tests,178,replace, [FE] 0]>, if(Double.isNaN(this.minimumRangeValue)||  Double.isNaN(this.maximumRangeValue))  {  ,if(Double.isNaN(this.minimumRangeValue)&& Double.isNaN(this.maximumRangeValue)) {
patch is same with buggy,112,replace,, this.maximumRangeValueColumn  =  0;  this.minimumRangeValueColumn  =  0;  ,this.maximumRangeValueColumn = 0; this.minimumRangeValueColumn = 0;
compilation error,183,add,[CE] illegal start of expression, ,else if(maxval > this.maximumRangeValue) }
compilation error,183,add,[CE] illegal start of expression, ,else if(maxval > this.maximumRangeValue) >>
patch is same with buggy,108,replace,, this.minimumRangeValue  =  Double.NaN  /  2;  ,this.minimumRangeValue = Double.NaN / 2;
compilation error,175,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValueColumn)) { if(Double.isNaN(this.minimumRangeValueColumn)) { this.minimumRangeValueColumn = c; }
compilation error,111,add,[CE] illegal start of expression, ,if(Double.isNaN(this.maximumRangeValue)|| Double.isNaN(this.maximumRangeValue)) { this.maximumRangeValue = Double.NaN - 1; >>
patch is same with buggy,174,replace,, if(Double.isNaN(this.maximumRangeValueRow))  {  this.maximumRangeValueRow  =  c  +  1;  }  ,if(Double.isNaN(this.maximumRangeValueRow)) { this.maximumRangeValueRow = c + 1; }
patch is same with buggy,174,replace,, if(Double.isNaN(this.maximumRangeValueRow))  {  this.maximumRangeValueRow  =  c  +  1;  }  , 
compilation error,180,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValue)) { this.minimumRangeValueColumn = r; >>
compilation error,180,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValue)) { this.minimumRangeValueColumn = r;!=
compilation error,174,add,[CE] illegal start of expression, ,if(Double.isNaN(this.maximumRangeValueRow)) { this.maximumRangeValueRow = r * 1; >>
compilation error,174,add,[CE] illegal start of expression, ,if(Double.isNaN(this.maximumRangeValueRow)) { this.maximumRangeValueRow = r * 1;!=
patch is same with buggy,113,replace,, this.minimumRangeValueColumn  =  0;  this.minimumRangeValueColumn  =  -1;  ,this.minimumRangeValueColumn = 0; this.minimumRangeValueColumn = -1;
patch is same with buggy,175,replace,, this.minimumRangeValueColumn  =  r;  ,this.minimumRangeValueColumn = r;
patch is same with buggy,740,replace,, this.minimumRangeValue  =  Double.NaN  -  2;  ,this.minimumRangeValue = Double.NaN - 2;
compilation error,162,add,[CE] cannot find symbol maximumRangeValuecolumn, ,double maxval = Double.NaN / this.maximumRangeValuecolumn;
compilation error,162,add,[CE] incompatible types, ,Double maxval = Double.NaN / this.maximumRangeValueColumn;
patch is same with buggy,108,replace,, this.minimumRangeValue  =  Double.NaN  +  1;  ,this.minimumRangeValue = Double.NaN + 1;
patch is same with buggy,174,replace,, this.minimumRangeValueRow  =  c  +  1;  ,this.minimumRangeValueRow = c + 1;
patch is same with buggy,114,replace,, this.minimumRangeValue  =  Double.NaN;  this.maximumRangeValueColumn  =  -2;  , 
patch is same with buggy,113,replace,, this.minimumRangeValueColumn  =  -1;  this.minimumRangeValueColumn  =  0;  ,this.minimumRangeValueColumn = -1; this.minimumRangeValueColumn = 0;
patch is same with buggy,169,replace,, this.maximumRangeValueRow  =  r  *  4;  , 
patch is same with buggy,174,replace,, this.minimumRangeValueRow  =  r  +  1;  ,this.minimumRangeValueRow = r + 1;
patch is same with buggy,169,replace,, this.maximumRangeValueRow  =  r  *  2;  ,this.maximumRangeValueRow = r * 2;
increase failing tests,112,add, [FE] AssertionFailedError, ,this.minimumRangeValue = 0; this.minimumRangeValueColumn = -1;
patch is same with buggy,114,replace,, this.maximumRangeValue  =  Double.NaN  -  1;  ,this.maximumRangeValue = Double.NaN - 1;
patch is same with buggy,180,replace,, this.maximumRangeValueColumn  =  r;  ,this.maximumRangeValueColumn = r;
compilation error,183,add,[CE] 'else' without 'if', ,else if(c <= this.maximumRangeValueColumn) {
patch is same with buggy,110,replace,, if(this.minimumRangeValueColumn!=  0)  {  this.maximumRangeValueColumn  =  -1;  this.maximumRangeValueColumn  =  -1;  }  ,if(this.minimumRangeValueColumn!= 0) { this.maximumRangeValueColumn = -1; this.maximumRangeValueColumn = -1; }
compilation error,180,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValueRow)) { this.minimumRangeValueRow = r + 2; >>
compilation error,180,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValueRow)) { this.minimumRangeValueRow = r + 2;!=
patch is same with buggy,183,replace,, if(Double.isNaN(this.minimumRangeValue))  {  ,if(Double.isNaN(this.minimumRangeValue)) {
patch is same with buggy,152,replace,, if(r  >=  c  &&  c  <=  this.maximumRangeValueColumn)  {  ,if(r >= c && c <= this.maximumRangeValueColumn) {
patch is same with buggy,112,replace,, this.minimumRangeValueColumn  =  1;  this.minimumRangeValueColumn  =  1;  ,this.minimumRangeValueColumn = 1; this.minimumRangeValueColumn = 1;
patch is same with buggy,112,replace,, this.minimumRangeValueRow  =  -1;  this.maximumRangeValueColumn  =  -1;  ,this.minimumRangeValueRow = -1; this.maximumRangeValueColumn = -1;
compilation error,174,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValueRow)) { this.minimumRangeValueRow = r * 1; } if(Double.isNaN(this.minimumRangeValueRow)) {
patch is same with buggy,173,replace,, this.minimumRangeValue  =  maxval;  ,this.minimumRangeValue = maxval;
patch is same with buggy,112,replace,, this.maximumRangeValueColumn  =  -1;  this.maximumRangeValueColumn  =  -1;  ,this.maximumRangeValueColumn = -1; this.maximumRangeValueColumn = -1;
compilation error,113,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValue)) { this.minimumRangeValue = Double.NaN - 1; >>
compilation error,112,replace,[CE] cannot find symbol optimumRangeValueColumn, this.maximumRangeValueColumn  =  -1;  this.maximumRangeValueColumn  =  -1;  ,this.minimumRangeValueColumn = -1; this.optimumRangeValueColumn = -1;
patch is same with buggy,112,replace,, this.maximumRangeValueColumn  =  -1;  this.maximumRangeValueColumn  =  -1;  , 
patch is same with buggy,110,replace,, this.maximumRangeValueColumn  =  -2;  , 
compilation error,110,add,[CE] illegal start of expression, ,if(this.minimumRangeValueColumn!= 0.0) { this.minimumRangeValueColumn = -1; this.maximumRangeValueColumn = -1; >>
patch is same with buggy,112,replace,, this.minimumRangeValueRow  =  0;  this.minimumRangeValueColumn  =  0;  ,this.minimumRangeValueRow = 0; this.minimumRangeValueColumn = 0;
increase failing tests,113,add, [FE] AssertionFailedError, ,this.minimumRangeValue = 0; this.minimumRangeValueColumn = -1;
compilation error,174,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValueRow)) { this.minimumRangeValueRow = r; this.maximumRangeValueColumn = c; } else { this.minimumRangeValueRow =
compilation error,174,add,[CE] not a statement, ,if(Double.isNaN(this.minimumRangeValueRow)) { this.minimumRangeValueRow = r; this.maximumRangeValueColumn = c; } else { this.minimumRangeValueRow
increase failing tests,152,replace, [FE] 5]>, if(r  >=  c  &&  c  <=  this.minimumRangeValueColumn)  {  ,if(r >= c && c < this.maximumRangeValueColumn) {
patch is same with buggy,174,replace,, this.maximumRangeValueRow  =  r  *  2;  ,this.maximumRangeValueRow = r * 2;
patch is same with buggy,172,replace,, else  if(Double.isNaN(this.minimumRangeValueColumn)||(c  <  this.minimumRangeValueColumn  ||  c  >  this.maximumRangeValueColumn))  {  ,else if(Double.isNaN(this.minimumRangeValueColumn)||(c < this.minimumRangeValueColumn || c > this.maximumRangeValueColumn)) {
patch is same with buggy,172,replace,, else  if(Double.isNaN(this.minimumRangeValueColumn)||(c  <  this.minimumRangeValueColumn  ||  c  >  this.maximumRangeValueColumn))  {  , 
compilation error,174,replace,[CE] illegal start of expression, this.maximumRangeValueColumn  =  r;  this.maximumRangeValueColumn  =  c;  ,if(Double.isNaN(this.minimumRangeValueRow)) { this.minimumRangeValueRow = r; this.maximumRangeValueRow = c; } else { this.maximumRangeValueRow =
compilation error,178,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValue)|| Double.isNaN(this.maximumRangeValue)) }
patch is same with buggy,173,replace,, if(Double.isNaN(this.maximumRangeValue))  {  this.maximumRangeValue  =  r;  }  ,if(Double.isNaN(this.maximumRangeValue)) { this.maximumRangeValue = r; }
patch is same with buggy,180,replace,, if(Double.isNaN(this.minimumRangeValue))  {  this.minimumRangeValueRow  =  r;  this.minimumRangeValueRow  =  c;  }  ,if(Double.isNaN(this.minimumRangeValue)) { this.minimumRangeValueRow = r; this.minimumRangeValueRow = c; }
compilation error,180,add,[CE] not a statement, ,if(Double.isNaN(this.minimumRangeValueRow)) { this.minimumRangeValueRow = c + 1; Afterward
compilation error,110,add,[CE] ';' expected, ,this.minimumRangeValueColumn = 3);
patch is same with buggy,110,replace,, this.maximumRangeValueColumn  =  -1;  this.maximumRangeValueColumn  =  -1;  ,this.maximumRangeValueColumn = -1; this.maximumRangeValueColumn = -1;
patch is same with buggy,155,replace,, Range  rangeBounds  =  new  Range(this.minimumRangeValueRow,  this.minimumRangeValueColumn);  ,Range rangeBounds = new Range(this.minimumRangeValueRow, this.minimumRangeValueColumn);
compilation error,180,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValue)) { this.minimumRangeValueRow = c + 1; >>
compilation error,180,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValue)) { this.minimumRangeValueRow = c + 1;!=
compilation error,150,add,[CE] variable r is already defined in method add(BoxAndWhiskerItem,Comparable,Comparable), ,int r = this.data.getColumnIndex(rowKey)+ 2;
compilation error,150,add,[CE] variable r is already defined in method add(BoxAndWhiskerItem,Comparable,Comparable), ,int r = this.data.getColumnIndex(columnKey)+ 2;
increase failing tests,155,replace, [FE] 5]>, Range  rangeBounds  =  new  Range(this.minimumRangeValueRow,  this.minimumRangeValueColumn);  ,rangeBounds = new Range(this.maximumRangeValueRow, r);
compilation error,152,add,[CE] illegal start of expression, ,if(r >= c && c < this.minimumRangeValueColumn) {
increase failing tests,152,add, [FE] IllegalArgumentException, ,if(r >= c && c <= this.minimumRangeValueColumn) { throw new IllegalArgumentException(""); }
increase failing tests,110,add, [FE] AssertionFailedError, ,this.minimumRangeValue = -1; this.maximumRangeValueColumn = -1;
compilation error,173,replace,[CE] not a statement, if(Double.isNaN(this.maximumRangeValue))  {  this.maximumRangeValue  =  r;  }  else  {  this.maximumRangeValue  =  c;  }  ,if(Double.isNaN(this.maximumRangeValue)) { this.maximumRangeValue = r; bodied else { this.maximumRangeValue = c; }
patch is same with buggy,173,replace,, if(Double.isNaN(this.maximumRangeValue))  {  this.maximumRangeValue  =  r;  }  else  {  this.maximumRangeValue  =  c;  }  ,if(Double.isNaN(this.maximumRangeValue)) { this.maximumRangeValue = r; } else { this.maximumRangeValue = c; }
compilation error,180,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValue)) { this.minimumRangeValueRow = r * 1; >>
compilation error,180,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValue)) { this.minimumRangeValueRow = r * 1;!=
patch is same with buggy,741,replace,, this.maximumRangeValue  =  Double.NaN  +  1;  ,this.maximumRangeValue = Double.NaN + 1;
compilation error,150,add,[CE] variable r is already defined in method add(BoxAndWhiskerItem,Comparable,Comparable), ,int r = this.data.getColumnIndex(rowKey)/ 1;
compilation error,150,add,[CE] variable r is already defined in method add(BoxAndWhiskerItem,Comparable,Comparable), ,int r = this.data.getColumnIndex(columnKey)/ 1;
compilation error,180,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValue)) { this.maximumRangeValueColumn = r; } else if(minval < this.minimumRangeValue) { this.minimumRangeValue =
compilation error,180,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValue)) { this.maximumRangeValueColumn = r; } else if(minval < this.minimumRangeValue) { this.minimumRangeValueRow =
compilation error,162,add,[CE] incompatible types, ,Double maxval = Double.NaN / 2;
compilation error,162,add,[CE] cannot find symbol naN, ,double maxval = Double.naN / 2;
patch is same with buggy,150,replace,, int  r  =  this.data.getRowIndex(rowKey)/  1;  ,int r = this.data.getRowIndex(rowKey)/ 1;
compilation error,172,add,[CE] ')' expected, ,else if(Double.isNaN(this.maximumRangeValue),&& c > this.maximumRangeValueColumn) {
compilation error,172,add,[CE] illegal start of expression, ,else if(Double.isNaN(this.maximumRangeValue)&& c > this.maximumRangeValueColumn) }
patch is same with buggy,158,replace,, double  minval  =  Double.NaN  /  2;  ,double minval = Double.NaN / 2;
patch is same with buggy,114,replace,, this.minimumRangeValue  =  Double.NaN;  this.minimumRangeValueRow  =  1;  ,this.minimumRangeValue = Double.NaN; this.minimumRangeValueRow = 1;
compilation error,180,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValue)) { this.minimumRangeValueRow = r; this.minimumRangeValueRow = c; >>
compilation error,180,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValue)) { this.minimumRangeValueRow = r; this.minimumRangeValueRow = c;!=
patch is same with buggy,183,replace,, else  if(maxval  >  this.maximumRangeValue)  {  ,else if(maxval > this.maximumRangeValue) {
increase failing tests,155,replace, [FE] 5]>, Range  rangeBounds  =  new  Range(this.minimumRangeValueRow,  this.minimumRangeValueColumn);  ,rangeBounds = new Range(this.minimumRangeValueRow, this.minimumRangeValueColumn);
patch is same with buggy,169,replace,, this.minimumRangeValueRow  =  c;  ,this.minimumRangeValueRow = c;
compilation error,113,add,[CE] illegal start of expression, ,if(this.minimumRangeValueColumn!= 0) { this.minimumRangeValueColumn = -1; this.maximumRangeValueColumn = -1; >>
patch is same with buggy,114,replace,, this.maximumRangeValue  =  Double.NaN;  this.minimumRangeValueColumn  =  1;  ,this.maximumRangeValue = Double.NaN; this.minimumRangeValueColumn = 1;
compilation error,112,add,[CE] ';' expected, ,this.maximumRangeValueRow = 3);
compilation error,174,add,[CE] illegal start of expression, ,if(Double.isNaN(this.maximumRangeValueColumn)) { this.maximumRangeValueRow = r + 1; >>
compilation error,174,add,[CE] illegal start of expression, ,if(Double.isNaN(this.maximumRangeValueColumn)) { this.maximumRangeValueRow = r + 1;!=
patch is same with buggy,108,replace,, this.minimumRangeValue  =  Double.NaN  /  10;  , 
compilation error,174,add,[CE] illegal start of expression, ,if(Double.isNaN(this.maximumRangeValueRow)) { this.maximumRangeValueRow = c + 1; >>
compilation error,174,add,[CE] illegal start of expression, ,if(Double.isNaN(this.maximumRangeValueRow)) { this.maximumRangeValueRow = c + 1;!=
patch is same with buggy,183,replace,, if(Double.isNaN(this.minimumRangeValueColumn))  {  ,if(Double.isNaN(this.minimumRangeValueColumn)) {
patch is same with buggy,112,replace,, this.minimumRangeValueColumn  =  -1;  this.minimumRangeValueColumn  =  0;  ,this.minimumRangeValueColumn = -1; this.minimumRangeValueColumn = 0;
compilation error,169,add,[CE] illegal start of expression, ,if(c > this.maximumRangeValueRow) { if(Double.isNaN(this.maximumRangeValueRow)) { this.maximumRangeValueRow = r * 3; }
compilation error,169,add,[CE] illegal start of expression, ,if(c > this.maximumRangeValueRow) { if(Double.isNaN(this.maximumRangeValueRow)) } this.maximumRangeValueRow = r * 3; }
compilation error,741,add,[CE] class expected, ,this.maximumRangeValue = double.NaN - 3;
patch is same with buggy,109,replace,, this.maximumRangeValueColumn  =  0;  , 
patch is same with buggy,113,replace,, this.minimumRangeValueColumn  =  1;  this.minimumRangeValueColumn  =  0;  ,this.minimumRangeValueColumn = 1; this.minimumRangeValueColumn = 0;
increase failing tests,112,add, [FE] AssertionFailedError, ,this.minimumRangeValue = -1; this.maximumRangeValueRow = -1;
compilation error,174,add,[CE] not a statement, ,if(Double.isNaN(this.minimumRangeValueRow)) { this.minimumRangeValueRow = r + 1; } else if(maxval < this.maximumRangeValueRow) { this.maxim
patch is same with buggy,174,replace,, if(Double.isNaN(this.maximumRangeValueRow))  {  this.maximumRangeValueRow  =  r  *  1;  }  ,if(Double.isNaN(this.maximumRangeValueRow)) { this.maximumRangeValueRow = r * 1; }
compilation error,181,add,[CE] cannot find symbol maximumRangeValuecolumn, ,c = this.maximumRangeValuecolumn;
compilation error,181,add,[CE] cannot find symbol maximumRangeValueCoumn, ,c = this.maximumRangeValueCoumn;
compilation error,113,add,[CE] cannot find symbol optimumRangeValue, ,this.optimumRangeValue = Double.NaN;this.minimumRangeValueColumn = -1;
patch is same with buggy,180,replace,, this.minimumRangeValueRow  =  r  *  2;  ,this.minimumRangeValueRow = r * 2;
patch is same with buggy,174,replace,, this.maximumRangeValueRow  =  r;  this.maximumRangeValueColumn  =  c;  ,this.maximumRangeValueRow = r; this.maximumRangeValueColumn = c;
compilation error,174,replace,[CE] illegal start of expression, this.maximumRangeValueRow  =  r;  this.maximumRangeValueColumn  =  c;  ,if(Double.isNaN(this.maximumRangeValueRow)) { this.maximumRangeValueRow = r; this.maximumRangeValueColumn = c; } else { this.maximumRangeValueRow =
increase failing tests,113,add, [FE] AssertionFailedError, ,this.minimumRangeValue = -1; this.maximumRangeValueColumn = -1;
compilation error,162,add,[CE] incompatible types, ,Double maxval = Double.NaN - minval + 2;
compilation error,162,add,[CE] variable maxval is already defined in method add(BoxAndWhiskerItem,Comparable,Comparable), ,double maxval = Double.NaN + minval + 2;
patch is same with buggy,114,replace,, this.rangeBounds  =  new  Range(2.0,  5.0);  ,this.rangeBounds = new Range(2.0, 5.0);
compilation error,169,add,[CE] illegal start of expression, ,if(r * 1 > this.maximumRangeValueRow) { if(Double.isNaN(this.maximumRangeValueRow)) { this.maximumRangeValueRow =(r * 1); }
compilation error,169,add,[CE] illegal start of expression, ,if(r * 1 > this.maximumRangeValueRow) { this.maximumRangeValueRow =(r * 1); } else if(maxval < this.maximumRangeValueRow) { this.maximumRangeValueRow =
patch is same with buggy,110,replace,, this.minimumRangeValueColumn  =  -1;  this.maximumRangeValueColumn  =  -1;  ,this.minimumRangeValueColumn = -1; this.maximumRangeValueColumn = -1;
compilation error,158,add,[CE] incompatible types, ,Double minval = Double.NaN / 2;
compilation error,158,add,[CE] cannot find symbol naN, ,double minval = Double.naN / 2;
patch is same with buggy,741,replace,, this.maximumRangeValue  =  Double.NaN  /  2  +  1;  ,this.maximumRangeValue = Double.NaN / 2 + 1;
compilation error,169,add,[CE] cannot find symbol l, ,this.maximumRangeValueRow = l * 2;
compilation error,169,add,[CE] ')' expected, ,this.maximumRangeValueRow =(r * 2;
compilation error,180,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValue)) { this.minimumRangeValueRow = r + 2; >>
compilation error,180,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValue)) { this.minimumRangeValueRow = r + 2;!=
compilation error,183,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValueColumn)) }
compilation error,183,add,[CE] 'else' without 'if', ,if(Double.isNaN(this.maximumRangeValueColumn)) {
patch is same with buggy,112,replace,, this.maximumRangeValueRow  =  -1;  this.minimumRangeValueRow  =  -1;  ,this.maximumRangeValueRow = -1; this.minimumRangeValueRow = -1;
compilation error,741,add,[CE] class expected, ,this.maximumRangeValue = double.NaN / 2 + 1;
patch is same with buggy,113,replace,, this.minimumRangeValueColumn  =  0;  this.minimumRangeValueColumn  =  -1;  , 
patch is same with buggy,174,replace,, if(Double.isNaN(this.maximumRangeValueRow))  {  this.minimumRangeValueRow  =  r;  this.maximumRangeValueColumn  =  c;  }  ,if(Double.isNaN(this.maximumRangeValueRow)) { this.minimumRangeValueRow = r; this.maximumRangeValueColumn = c; }
patch is same with buggy,152,replace,, if(r  >=  c  &&  c  <=  this.minimumRangeValueColumn)  {  ,if(r >= c && c <= this.minimumRangeValueColumn) {
compilation error,169,add,[CE] illegal start of expression, ,if(c > this.maximumRangeValueRow) { if(Double.isNaN(this.maximumRangeValueRow)) { this.maximumRangeValueRow = r * 4; }
compilation error,169,add,[CE] illegal start of expression, ,if(c > this.maximumRangeValueRow) { if(Double.isNaN(this.maximumRangeValueRow)) } this.maximumRangeValueRow = r * 4; }
compilation error,110,add,[CE] cannot find symbol MaximumRangeValue, ,this.MaximumRangeValue = Double.NaN - 1;
compilation error,114,add,[CE] illegal start of expression, ,if(this.minimumRangeValue == Double.NaN) { this.minimumRangeValue = Double.NaN - 1; >>
patch is same with buggy,114,replace,, if(this.minimumRangeValue  ==  Double.NaN)  {  this.minimumRangeValue  =  Double.NaN  -  1;  }  ,if(this.minimumRangeValue == Double.NaN) { this.minimumRangeValue = Double.NaN - 1; }
patch is same with buggy,114,replace,, if(this.minimumRangeValue  ==  Double.NaN)  {  this.minimumRangeValue  =  Double.NaN  -  1;  }  , 
patch is same with buggy,113,replace,, this.maximumRangeValueColumn  =  0;  this.minimumRangeValueColumn  =  0;  ,this.maximumRangeValueColumn = 0; this.minimumRangeValueColumn = 0;
patch is same with buggy,112,replace,, this.minimumRangeValueColumn  =  -1;  this.minimumRangeValueColumn  =  0;  ,this.minimumRangeValueColumn = -1; this.minimumRangeValueColumn = 0;
compilation error,174,add,[CE] illegal start of expression, ,if(Double.isNaN(this.maximumRangeValue)) { this.maximumRangeValueColumn = r; >>
compilation error,174,add,[CE] not a statement, ,if(Double.isNaN(this.maximumRangeValue)) { this.maximumRangeValueColumn = r; bodied
compilation error,180,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValue)) { this.maximumRangeValueRow = c + 1; } else if(minval < this.minimumRangeValue) { this.minimumRangeValue =
compilation error,174,add,[CE] not a statement, ,if(Double.isNaN(this.maximumRangeValueRow)) { this.maximumRangeValueRow = r * 2; } else if(maxval < this.maximumRangeValueRow) { this.maxim
compilation error,173,add,[CE] illegal start of expression, ,if(Double.isNaN(this.maximumRangeValue)) { this.maximumRangeValue = maxval; >>
compilation error,173,add,[CE] not a statement, ,if(Double.isNaN(this.maximumRangeValue)) { this.maximumRangeValue = maxval; delt
patch is same with buggy,162,replace,, double  maxval  =  Double.NaN  /  minval  +  1;  ,double maxval = Double.NaN / minval + 1;
patch is same with buggy,160,replace,, updateBounds();  r  =  this.data.getColumnIndex(columnKey);  ,updateBounds(); r = this.data.getColumnIndex(columnKey);
patch is same with buggy,112,replace,, this.maximumRangeValueColumn  =  -2;  , 
increase failing tests,111,replace, [FE] AssertionFailedError, if(Double.isNaN(this.maximumRangeValue)||  Double.isNaN(this.maximumRangeValue))  {  this.maximumRangeValue  =  Double.NaN  -  1;  }  ,if(Double.isNaN(this.maximumRangeValue)|| Double.isNaN(this.maximumRangeValueColumn)) { this.maximumRangeValue = Double.NaN - 1; }
patch is same with buggy,180,replace,, this.minimumRangeValueRow  =  r;  this.maximumRangeValueRow  =  c;  ,this.minimumRangeValueRow = r; this.maximumRangeValueRow = c;
compilation error,180,replace,[CE] possible loss of precision, this.minimumRangeValueRow  =  r;  this.maximumRangeValueRow  =  c;  ,this.minimumRangeValueRow = minval; this.maximumRangeValueRow = c;
compilation error,174,replace,[CE] illegal start of expression, if(Double.isNaN(this.maximumRangeValue))  {  this.maximumRangeValueColumn  =  r;  }  ,if(Double.isNaN(this.maximumRangeValueRow)) { this.maximumRangeValueColumn = r; >>
compilation error,162,add,[CE] incompatible types, ,Double maxval = Double.NaN / this.maximumRangeValue;
patch is same with buggy,180,replace,, this.minimumRangeValueColumn  =  r;  this.minimumRangeValueColumn  =  c;  ,this.minimumRangeValueColumn = r; this.minimumRangeValueColumn = c;
patch is same with buggy,741,replace,, this.minimumRangeValue  =  Double.NaN  -  2;  , 
patch is same with buggy,113,replace,, this.minimumRangeValueColumn  =  -1;  this.maximumRangeValueColumn  =  -1;  ,this.minimumRangeValueColumn = -1; this.maximumRangeValueColumn = -1;
compilation error,109,add,[CE] cannot find symbol optimumRangeValue, ,this.optimumRangeValue = Double.NaN / 1;
patch is same with buggy,107,replace,, this.rangeBounds  =  new  Range(0.00,  0.0);  ,this.rangeBounds = new Range(0.00, 0.0);
patch is same with buggy,175,replace,, c  =  this.minimumRangeValueColumn;  ,c = this.minimumRangeValueColumn;
patch is same with buggy,113,replace,, this.minimumRangeValueColumn  =  -1;  this.minimumRangeValueColumn  =  0;  ,this.minimumRangeValueColumn = -1; this.minimumRangeValueColumn = 0;
compilation error,183,add,[CE] 'else' without 'if', ,else if(Double.isNaN(this.minimumRangeValueColumn)|| Double.isNaN(this.maximumRangeValueColumn)) {
compilation error,162,add,[CE] ';' expected, ,double maxval = Double.NaN / minval + 1.doubleValue();
compilation error,162,add,[CE] incompatible types, ,Double maxval = Double.NaN / minval + 1;
patch is same with buggy,181,replace,, c  =  this.maximumRangeValueColumn;  ,c = this.maximumRangeValueColumn;
patch is same with buggy,110,replace,, this.maximumRangeValue  =  Double.NaN  -  1;  ,this.maximumRangeValue = Double.NaN - 1;
patch is same with buggy,113,replace,, if(Double.isNaN(this.minimumRangeValue))  {  this.minimumRangeValue  =  Double.NaN  -  1;  }  ,if(Double.isNaN(this.minimumRangeValue)) { this.minimumRangeValue = Double.NaN - 1; }
patch is same with buggy,113,replace,, if(Double.isNaN(this.minimumRangeValue))  {  this.minimumRangeValue  =  Double.NaN  -  1;  }  , 
patch is same with buggy,183,replace,, if(Double.isNaN(this.minimumRangeValue))  {  ,if(Double.isNaN(this.minimumRangeValue)) {
patch is same with buggy,113,replace,, this.minimumRangeValueColumn  =  0;  this.minimumRangeValueColumn  =  -1;  ,this.minimumRangeValueColumn = 0; this.minimumRangeValueColumn = -1;
compilation error,152,add,[CE] illegal start of expression, ,if(r >= c && c <= this.minimumRangeValueColumn) }
patch is same with buggy,112,replace,, this.minimumRangeValueColumn  =  -1;  this.minimumRangeValueColumn  =  0;  ,this.minimumRangeValueColumn = -1; this.minimumRangeValueColumn = 0;
compilation error,180,add,[CE] not a statement, ,if(Double.isNaN(this.minimumRangeValue)) { this.minimumRangeValueRow = r * 1; figured
compilation error,180,add,[CE] illegal start of expression, ,if(Double.isNaN(this.minimumRangeValue)) { this.minimumRangeValueRow = r * 1; & }
compilation error,180,replace,[CE] illegal start of expression, if(Double.isNaN(this.minimumRangeValue))  {  this.minimumRangeValueColumn  =  r;  }  ,if(Double.isNaN(this.minimumRangeValue)) { this.minimumRangeValueColumn = r; if(c < this.minimumRangeValueRow) {
compilation error,111,add,[CE] not a statement, ,if(Double.isNaN(this.maximumRangeValue)|| Double.isNaN(this.maximumRangeValue)) { this.maximumRangeValue = Double.NaN - 1; meanwhile
patch is same with buggy,174,replace,, this.maximumRangeValueRow  =  r;  this.maximumRangeValueColumn  =  c;  ,this.maximumRangeValueRow = r; this.maximumRangeValueColumn = c;
compilation error,173,replace,[CE] illegal start of expression, if(Double.isNaN(this.maximumRangeValue))  {  this.maximumRangeValue  =  r;  }  else  {  this.maximumRangeValue  =  c;  }  ,this.maximumRangeValue = r; if(Double.isNaN(this.maximumRangeValue)) {
compilation error,173,replace,[CE] illegal start of expression, if(Double.isNaN(this.maximumRangeValue))  {  this.maximumRangeValue  =  r;  }  else  {  this.maximumRangeValue  =  c;  }  ,this.maximumRangeValue = r; if(Double.isNaN(this.maximumRangeValueColumn)) {
compilation error,174,add,[CE] not a statement, ,if(Double.isNaN(this.maximumRangeValueColumn)) { this.maximumRangeValueRow = r + 1; meanwhile
compilation error,174,add,[CE] not a statement, ,if(Double.isNaN(this.maximumRangeValueColumn)) { this.maximumRangeValueRow = r + 1; figured
compilation error,110,add,[CE] cannot find symbol optimumRangeValue, ,this.optimumRangeValue = Double.NaN - 1;
compilation error,114,add,[CE] not a statement, ,if(this.minimumRangeValue == Double.NaN) { this.minimumRangeValue = Double.NaN - 1; meanwhile
compilation error,114,add,[CE] not a statement, ,if(this.minimumRangeValue == Double.NaN) { this.minimumRangeValue = Double.NaN - 1; figured
compilation error,169,add,[CE] variable c is already defined in method add(BoxAndWhiskerItem,Comparable,Comparable), ,int c = this.maximumRangeValueRow * 4;
compilation error,180,add,[CE] cannot find symbol optimumRangeValueRow, ,this.optimumRangeValueRow = r + 2;
patch is same with buggy,112,replace,, this.maximumRangeValueRow  =  -1;  this.minimumRangeValueRow  =  -1;  ,this.maximumRangeValueRow = -1; this.minimumRangeValueRow = -1;
compilation error,162,add,[CE] illegal start of expression, ,if(item.getMaxOutlier()!= null) { if(Double.isNaN(this.maximumRangeValueColumn)) { maxval = item.getMaxOutlier().doubleValue(); }
compilation error,110,add,[CE] illegal start of expression, ,if(this.minimumRangeValueColumn!= 0.0) { this.minimumRangeValueColumn = -1; this.maximumRangeValueColumn = -1; ++this.minimumRangeValueColumn = -1;
compilation error,110,add,[CE] unexpected type, ,if(this.minimumRangeValueColumn!= 0.0) { this.minimumRangeValueColumn = -1; this.maximumRangeValueColumn = -1; ++this.minimumRangeValueColumn = -1; }
