bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  this.tableau.getSolution();  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  RealPointValuePair  doOptimize()  throws  OptimizationException  {  final  SimplexTableau  tableau  =  new  SimplexTableau(f,  constraints,  goalType,  restrictToNonNegative,  epsilon);  solvePhase1(tableau);  tableau.discardArtificialVariables();  while  (!isOptimal(tableau))  {  doIteration(tableau);  }  [BUGGY]  return  this.tableau.getSolution();  [BUGGY]  }  [CLASS]  SimplexSolver  [METHOD]  doOptimize  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2886751345948129	193	193	1	replace	return  this.tableau.getSolution();	return  tableau.getSolution();  	non-compiled	[CE]  <identifier>  expected	9	None	replace
2	[BUG]  [BUGGY]  return  tableau.doOptimize();  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  public  RealPointValuePair  doOptimize()  throws  OptimizationException  {  final  SimplexTableau  tableau  =  new  SimplexTableau(f,  constraints,  goalType,  restrictToNonNegative,  epsilon);  solvePhase1(tableau);  tableau.discardArtificialVariables();  while  (!isOptimal(tableau))  {  doIteration(tableau);  }  [BUGGY]  return  tableau.doOptimize();  [BUGGY]  }  [CLASS]  SimplexSolver  [METHOD]  doOptimize  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2886751345948129	193	193	1	replace	return  tableau.doOptimize();	return  tableau.getSolution();  	non-compiled	[CE]  <identifier>  expected	9	None	replace
3	[BUG]  [BUGGY]  return  table.doOptimize();  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  public  RealPointValuePair  doOptimize()  throws  OptimizationException  {  final  SimplexTableau  tableau  =  new  SimplexTableau(f,  constraints,  goalType,  restrictToNonNegative,  epsilon);  solvePhase1(tableau);  tableau.discardArtificialVariables();  while  (!isOptimal(tableau))  {  doIteration(tableau);  }  [BUGGY]  return  table.doOptimize();  [BUGGY]  }  [CLASS]  SimplexSolver  [METHOD]  doOptimize  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2886751345948129	193	193	1	replace	return  table.doOptimize();	return  tableau.getSolution();  	non-compiled	[CE]  <identifier>  expected	9	None	replace
4	[BUG]  [BUGGY]  return  tableau.getOptimization();  [CE]  <identifier>  expected  [FE]          AssertionError  [CONTEXT]  public  RealPointValuePair  doOptimize()  throws  OptimizationException  {  final  SimplexTableau  tableau  =  new  SimplexTableau(f,  constraints,  goalType,  restrictToNonNegative,  epsilon);  solvePhase1(tableau);  tableau.discardArtificialVariables();  while  (!isOptimal(tableau))  {  doIteration(tableau);  }  [BUGGY]  return  tableau.getOptimization();  [BUGGY]  }  [CLASS]  SimplexSolver  [METHOD]  doOptimize  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2886751345948129	193	193	1	replace	return  tableau.getOptimization();	return  tableau.getSolution();  	non-compiled	[CE]  <identifier>  expected	9	None	replace
5	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]            AssertionError  [CONTEXT]  public  RealPointValuePair  doOptimize()  throws  OptimizationException  {  final  SimplexTableau  tableau  =  new  SimplexTableau(f,  constraints,  goalType,  restrictToNonNegative,  epsilon);  solvePhase1(tableau);  tableau.discardArtificialVariables();  while  (!isOptimal(tableau))  {  doIteration(tableau);  }  [BUGGY]    [BUGGY]  }  [CLASS]  SimplexSolver  [METHOD]  doOptimize  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2886751345948129	193	193	1	replace	  	return  tableau.getSolution();  	non-compiled	[CE]  <identifier>  expected	9	None	replace
6	[BUG]  [BUGGY]    solvePhase1(tableau);  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  RealPointValuePair  doOptimize()  throws  OptimizationException  {  final  SimplexTableau  tableau  =  new  SimplexTableau(f,  constraints,  goalType,  restrictToNonNegative,  epsilon);  solvePhase1(tableau);  tableau.discardArtificialVariables();  while  (!isOptimal(tableau))  {  doIteration(tableau);  }  [BUGGY]    solvePhase1(tableau);  [BUGGY]  return  tableau.getSolution();  }  [CLASS]  SimplexSolver  [METHOD]  doOptimize  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2886751345948129	193	193	1	replace	    solvePhase1(tableau);		non-compiled	[CE]  <identifier>  expected	10	None	add
7	[BUG]  [BUGGY]    solvePhase2(tableau);  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  public  RealPointValuePair  doOptimize()  throws  OptimizationException  {  final  SimplexTableau  tableau  =  new  SimplexTableau(f,  constraints,  goalType,  restrictToNonNegative,  epsilon);  solvePhase1(tableau);  tableau.discardArtificialVariables();  while  (!isOptimal(tableau))  {  doIteration(tableau);  }  [BUGGY]    solvePhase2(tableau);  [BUGGY]  return  tableau.getSolution();  }  [CLASS]  SimplexSolver  [METHOD]  doOptimize  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2886751345948129	193	193	1	replace	    solvePhase2(tableau);		non-compiled	[CE]  <identifier>  expected	10	None	add
8	[BUG]  [BUGGY]    solvePhase2(tab);  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  public  RealPointValuePair  doOptimize()  throws  OptimizationException  {  final  SimplexTableau  tableau  =  new  SimplexTableau(f,  constraints,  goalType,  restrictToNonNegative,  epsilon);  solvePhase1(tableau);  tableau.discardArtificialVariables();  while  (!isOptimal(tableau))  {  doIteration(tableau);  }  [BUGGY]    solvePhase2(tab);  [BUGGY]  return  tableau.getSolution();  }  [CLASS]  SimplexSolver  [METHOD]  doOptimize  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2886751345948129	193	193	1	replace	    solvePhase2(tab);		non-compiled	[CE]  <identifier>  expected	10	None	add
9	[BUG]  [BUGGY]    solvePhase1(tabeleu);  [CE]  <identifier>  expected  [FE]          AssertionError  [CONTEXT]  public  RealPointValuePair  doOptimize()  throws  OptimizationException  {  final  SimplexTableau  tableau  =  new  SimplexTableau(f,  constraints,  goalType,  restrictToNonNegative,  epsilon);  solvePhase1(tableau);  tableau.discardArtificialVariables();  while  (!isOptimal(tableau))  {  doIteration(tableau);  }  [BUGGY]    solvePhase1(tabeleu);  [BUGGY]  return  tableau.getSolution();  }  [CLASS]  SimplexSolver  [METHOD]  doOptimize  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2886751345948129	193	193	1	replace	    solvePhase1(tabeleu);		non-compiled	[CE]  <identifier>  expected	10	None	add
10	[BUG]  [BUGGY]    solvePhase1(tabelem);  [CE]  <identifier>  expected  [FE]            AssertionError  [CONTEXT]  public  RealPointValuePair  doOptimize()  throws  OptimizationException  {  final  SimplexTableau  tableau  =  new  SimplexTableau(f,  constraints,  goalType,  restrictToNonNegative,  epsilon);  solvePhase1(tableau);  tableau.discardArtificialVariables();  while  (!isOptimal(tableau))  {  doIteration(tableau);  }  [BUGGY]    solvePhase1(tabelem);  [BUGGY]  return  tableau.getSolution();  }  [CLASS]  SimplexSolver  [METHOD]  doOptimize  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2886751345948129	193	193	1	replace	    solvePhase1(tabelem);		non-compiled	[CE]  <identifier>  expected	10	None	add
11	[BUG]  [BUGGY]    f.setOptimize(true);  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  RealPointValuePair  doOptimize()  throws  OptimizationException  {  final  SimplexTableau  tableau  =  new  SimplexTableau(f,  constraints,  goalType,  restrictToNonNegative,  epsilon);  solvePhase1(tableau);  tableau.discardArtificialVariables();  while  (!isOptimal(tableau))  {  doIteration(tableau);  }  [BUGGY]    f.setOptimize(true);  [BUGGY]  return  tableau.getSolution();  }  [CLASS]  SimplexSolver  [METHOD]  doOptimize  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2886751345948129	193	193	1	replace	    f.setOptimize(true);		non-compiled	[CE]  <identifier>  expected	10	None	add
12	[BUG]  [BUGGY]    solvePhase1(tab);  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  public  RealPointValuePair  doOptimize()  throws  OptimizationException  {  final  SimplexTableau  tableau  =  new  SimplexTableau(f,  constraints,  goalType,  restrictToNonNegative,  epsilon);  solvePhase1(tableau);  tableau.discardArtificialVariables();  while  (!isOptimal(tableau))  {  doIteration(tableau);  }  [BUGGY]    solvePhase1(tab);  [BUGGY]  return  tableau.getSolution();  }  [CLASS]  SimplexSolver  [METHOD]  doOptimize  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2886751345948129	193	193	1	replace	    solvePhase1(tab);		non-compiled	[CE]  <identifier>  expected	10	None	add
13	[BUG]  [BUGGY]  return  tableau.getOptimize();  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  RealPointValuePair  doOptimize()  throws  OptimizationException  {  final  SimplexTableau  tableau  =  new  SimplexTableau(f,  constraints,  goalType,  restrictToNonNegative,  epsilon);  solvePhase1(tableau);  tableau.discardArtificialVariables();  while  (!isOptimal(tableau))  {  doIteration(tableau);  }  [BUGGY]  return  tableau.getOptimize();  [BUGGY]  }  [CLASS]  SimplexSolver  [METHOD]  doOptimize  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2886751345948129	193	193	1	replace	return  tableau.getOptimize();	return  tableau.getSolution();  	non-compiled	[CE]  <identifier>  expected	9	None	replace
14	[BUG]  [BUGGY]  return  tableau.getOptimizer();  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  RealPointValuePair  doOptimize()  throws  OptimizationException  {  final  SimplexTableau  tableau  =  new  SimplexTableau(f,  constraints,  goalType,  restrictToNonNegative,  epsilon);  solvePhase1(tableau);  tableau.discardArtificialVariables();  while  (!isOptimal(tableau))  {  doIteration(tableau);  }  [BUGGY]  return  tableau.getOptimizer();  [BUGGY]  }  [CLASS]  SimplexSolver  [METHOD]  doOptimize  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2886751345948129	193	193	1	replace	return  tableau.getOptimizer();	return  tableau.getSolution();  	non-compiled	[CE]  <identifier>  expected	9	None	replace
15	[BUG]  [BUGGY]    solvePhase2(tabelem);  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  RealPointValuePair  doOptimize()  throws  OptimizationException  {  final  SimplexTableau  tableau  =  new  SimplexTableau(f,  constraints,  goalType,  restrictToNonNegative,  epsilon);  solvePhase1(tableau);  tableau.discardArtificialVariables();  while  (!isOptimal(tableau))  {  doIteration(tableau);  }  [BUGGY]    solvePhase2(tabelem);  [BUGGY]  return  tableau.getSolution();  }  [CLASS]  SimplexSolver  [METHOD]  doOptimize  [RETURN_TYPE]  RealPointValuePair  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2886751345948129	193	193	1	replace	    solvePhase2(tabelem);		non-compiled	[CE]  <identifier>  expected	10	None	add
