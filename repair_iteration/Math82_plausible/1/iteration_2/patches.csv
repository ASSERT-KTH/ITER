bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Tableau  table  =(Tableau)tableau.clone();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Tableau  table  =(Tableau)tableau.clone();  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Tableau  table  =(Tableau)tableau.clone();	  Tableau    table    =(Tableau)tableau.getTable();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  Tableau  table  =(Tableau)tableau.cloneTree();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Tableau  table  =(Tableau)tableau.cloneTree();  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Tableau  table  =(Tableau)tableau.cloneTree();	  Tableau    table    =(Tableau)tableau.getTable();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
3	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "));  [CE]  <identifier>  expected  [FE]        IllegalArgumentException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  IllegalArgumentException( " "));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	19	None	replace
4	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  IllegalArgumentException( " ")	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	19	None	replace
5	[BUG]  [BUGGY]  Tableau  table  =(Tableau)this.tableau.clone();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Tableau  table  =(Tableau)this.tableau.clone();  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Tableau  table  =(Tableau)this.tableau.clone();	  Tableau    table    =(Tableau)this.tableau.getTable();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
6	[BUG]  [BUGGY]  Tableau  table  =(Tableau)this.tableau.cloneTree();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Tableau  table  =(Tableau)this.tableau.cloneTree();  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Tableau  table  =(Tableau)this.tableau.cloneTree();	  Tableau    table    =(Tableau)this.tableau.getTable();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
7	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throw  new  IllegalArgumentException( " ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  <identifier>  expected	31	None	replace
8	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( " ".equals(tableau.getRhsOffset()));  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throw  new  IllegalArgumentException( " ".equals(tableau.getRhsOffset()));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throw  new  IllegalArgumentException( " ".equals(tableau.getRhsOffset()));	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  <identifier>  expected	31	None	replace
9	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "));  [CE]  <identifier>  expected  [FE]        IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  IllegalStateException( " "));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
10	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  [CE]  <identifier>  expected  [FE]          IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  IllegalStateException( " ")	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
11	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Phase1  cannot  be  null. ");  [CE]  <identifier>  expected  [FE]            IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Phase1  cannot  be  null. ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  IllegalStateException( "Phase1  cannot  be  null. ");	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
12	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( " "),  table);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( " "),  table);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( " "),  table);	  throw    new    NoFeasibleSolutionException(   "   "),    tableau);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
13	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  is  null. ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  is  null. ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  is  null. ");	  throw    new    NoFeasibleSolutionException(   "   "),    tableau);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
14	[BUG]  [BUGGY]  Throwables.throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types, ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types, ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types, ");	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types,   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
15	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types,  must  be  ' "  +  getClass().getName()  + "'. ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types,  must  be  ' "  +  getClass().getName()  + "'. ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types,  must  be  ' "  +  getClass().getName()  + "'. ");	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types,   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
16	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types,  must  be  ' "  +  getClass().getName()  + "' ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types,  must  be  ' "  +  getClass().getName()  + "' ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types,  must  be  ' "  +  getClass().getName()  + "' ");	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types,   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
17	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(tableau,  DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(tableau,  DEFAULT_EPSILON);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(tableau,  DEFAULT_EPSILON);	  SimplexTableau    table    =(SimplexTableau)super.solvePhase(tableau,    DEFAULT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
18	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.tableau.solvePhase(tableau,  DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.tableau.solvePhase(tableau,  DEFAULT_EPSILON);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)this.tableau.solvePhase(tableau,  DEFAULT_EPSILON);	  SimplexTableau    table    =(SimplexTableau)super.solvePhase(tableau,    DEFAULT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
19	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  DEFAULT_EPSILON,  epsilon);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  DEFAULT_EPSILON,  epsilon);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  DEFAULT_EPSILON,  epsilon);	  SimplexTableau    table    =(SimplexTableau)super.solvePhase(tableau,    DEFAULT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
20	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase1(tableau,  DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase1(tableau,  DEFAULT_EPSILON);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)super.solvePhase1(tableau,  DEFAULT_EPSILON);	  SimplexTableau    table    =(SimplexTableau)super.solvePhase(tableau,    DEFAULT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
21	[BUG]  [BUGGY]  Throwables.throw  new  NoFeasibleSolverException( " "));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  NoFeasibleSolverException( " "));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  NoFeasibleSolverException( " "));	  Throwables.throw    new    NoFeasibleSolverException(   "   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
22	[BUG]  [BUGGY]  Throwables.throw  new  NoFeasibleSolverException( " ")  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  NoFeasibleSolverException( " ")  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  NoFeasibleSolverException( " ")	  Throwables.throw    new    NoFeasibleSolverException(   "   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
23	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.cloneTree();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.cloneTree();  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)tableau.cloneTree();	  SimplexTableau    tableau    =(SimplexTableau)tableau.solvePhase1(tableau);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
24	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase1(this);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase1(this);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)tableau.solvePhase1(this);	  SimplexTableau    tableau    =(SimplexTableau)tableau.solvePhase1(tableau);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
25	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  tableau);  [CE]  <identifier>  expected  [FE]          IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  tableau);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  IllegalStateException( " "  +  tableau);	  Throwables.throw    new    IllegalStateException(   "   ".equals(tableau));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
26	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Phase1: "  +  tableau);  [CE]  <identifier>  expected  [FE]            IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Phase1: "  +  tableau);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  IllegalStateException( "Phase1: "  +  tableau);	  Throwables.throw    new    IllegalStateException(   "   ".equals(tableau));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
27	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase1(tab);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase1(tab);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)tableau.solvePhase1(tab);	  SimplexTableau    table    =(SimplexTableau)tableau.solvePhase1(tableau);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
28	[BUG]  [BUGGY]  Throwables.throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types. ");  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types. ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types. ");	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types.   ");    	non-compiled	[CE]  <identifier>  expected	22	None	replace
29	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types.  Please  check  that  the  tableau  is  not  implemented  correctly. ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types.  Please  check  that  the  tableau  is  not  implemented  correctly. ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types.  Please  check  that  the  tableau  is  not  implemented  correctly. ");	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types.   ");    	non-compiled	[CE]  <identifier>  expected	22	None	replace
30	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.tableau.solvePhase1(tableau);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.tableau.solvePhase1(tableau);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)this.tableau.solvePhase1(tableau);	  SimplexTableau    table    =(SimplexTableau)super.solvePhase1(tableau);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
31	[BUG]  [BUGGY]  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]        IllegalArgumentException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  IllegalArgumentException( " ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
32	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equals(tableau.getRhsOffset()));  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  IllegalArgumentException( " ".equals(tableau.getRhsOffset()));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  IllegalArgumentException( " ".equals(tableau.getRhsOffset()));	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
33	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equals(tableau.getEntry(0,  table.getRhsOffset())));  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  IllegalArgumentException( " ".equals(tableau.getEntry(0,  table.getRhsOffset())));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  IllegalArgumentException( " ".equals(tableau.getEntry(0,  table.getRhsOffset())));	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
34	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equals(tableau.getNumArtificialVariables()));  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  IllegalArgumentException( " ".equals(tableau.getNumArtificialVariables()));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  IllegalArgumentException( " ".equals(tableau.getNumArtificialVariables()));	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
35	[BUG]  [BUGGY]  Throwables.throw  new  NoFeasibleSolutionException( " ",  Table.class);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  NoFeasibleSolutionException( " ",  Table.class);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  NoFeasibleSolutionException( " ",  Table.class);	  throw    new    NoFeasibleSolutionException(   "   ",    Table.class);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
36	[BUG]  [BUGGY]  Throwables.throw  new  NoFeasibleSolutionException( " ", "Table.class);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  NoFeasibleSolutionException( " ", "Table.class);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  NoFeasibleSolutionException( " ", "Table.class);	  throw    new    NoFeasibleSolutionException(   "   ",    Table.class);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
37	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( " "),  Tableau.INITIALIZER;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( " "),  Tableau.INITIALIZER;  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( " "),  Tableau.INITIALIZER;	  throw    new    NoFeasibleSolutionException(   "   "),    Tableau.INITIALIZER);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
38	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( " "  +  Tableau.INITIALIZER),  Tableau.INITIALIZER);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( " "  +  Tableau.INITIALIZER),  Tableau.INITIALIZER);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( " "  +  Tableau.INITIALIZER),  Tableau.INITIALIZER);	  throw    new    NoFeasibleSolutionException(   "   "),    Tableau.INITIALIZER);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
39	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  method  not  found  in  the  table: "  +  table);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  method  not  found  in  the  table: "  +  table);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  method  not  found  in  the  table: "  +  table);	  throw    new    NoFeasibleSolutionException(   "   ",    table);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
40	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  is  not  a  table ",  table);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  is  not  a  table ",  table);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  is  not  a  table ",  table);	  throw    new    NoFeasibleSolutionException(   "   ",    table);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
41	[BUG]  [BUGGY]  Throwables.throw  new  NoFeasibleSolverException( "The  table  must  be  initialized. ");  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  NoFeasibleSolverException( "The  table  must  be  initialized. ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  NoFeasibleSolverException( "The  table  must  be  initialized. ");	  throw    new    NoFeasibleSolverException(   "The    table    must    be    initialized.   ");    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
42	[BUG]  [BUGGY]  new  NoFeasibleSolverException( "The  table  must  be  initialized. ");  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  NoFeasibleSolverException( "The  table  must  be  initialized. ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  NoFeasibleSolverException( "The  table  must  be  initialized. ");	  throw    new    NoFeasibleSolverException(   "The    table    must    be    initialized.   ");    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
43	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.tableau.getIterator();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.tableau.getIterator();  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimpleTableau)this.tableau.getIterator();	  SimplexTableau    table    =(SimpleTableau)this.tableau.getValue();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
44	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Invalid  table: "  +  table.getRhsOffset());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Invalid  table: "  +  table.getRhsOffset());  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Invalid  table: "  +  table.getRhsOffset());	  throw    new    NoFeasibleSolutionException(   "Invalid    tableau:   "    +    table.getNumArtificialVariables());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
45	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Invalid  table: "  +  table.getName());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Invalid  table: "  +  table.getName());  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Invalid  table: "  +  table.getName());	  throw    new    NoFeasibleSolutionException(   "Invalid    tableau:   "    +    table.getNumArtificialVariables());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
46	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Invalid  table: "  +  table.getNumArtificialVariables());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Invalid  table: "  +  table.getNumArtificialVariables());  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Invalid  table: "  +  table.getNumArtificialVariables());	  throw    new    NoFeasibleSolutionException(   "Invalid    tableau:   "    +    table.getNumArtificialVariables());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
47	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Invalid  tableau: "  +  table.getName());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Invalid  tableau: "  +  table.getName());  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Invalid  tableau: "  +  table.getName());	  throw    new    NoFeasibleSolutionException(   "Invalid    tableau:   "    +    table.getNumArtificialVariables());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
48	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types ",  table,  table);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types ",  table,  table);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types ",  table,  table);	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types   ",    table);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
49	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types "  +  table,  table);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types "  +  table,  table);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types "  +  table,  table);	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types   ",    table);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
50	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types   ",  table,  tableau);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types   ",  table,  tableau);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types   ",  table,  tableau);	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types   ",    table);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
51	[BUG]  [BUGGY]  SimplexTableau  tableau  =(SimplexTableau)tableau.solvePhase1(this);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  tableau  =(SimplexTableau)tableau.solvePhase1(this);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  tableau  =(SimplexTableau)tableau.solvePhase1(this);	  SimplexTableau    tableau    =(SimplexTableau)tableau.solvePhase1(super);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
52	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase1(new  SimplexTableau());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase1(new  SimplexTableau());  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)tableau.solvePhase1(new  SimplexTableau());	  SimplexTableau    table    =(SimplexTableau)tableau.solvePhase1(super);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
53	[BUG]  [BUGGY]  Throw  new  IllegalStateException( " ");  [CE]  not  a  statement  [FE]          IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throw  new  IllegalStateException( " ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(       "       ");    Throw    new    IllegalStateException(       "       ");    	non-compiled	[CE]  not  a  statement	17	None	replace
54	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(tableau.getEntry(0,  table.getRhsOffset())));  [CE]  <identifier>  expected  [FE]            IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(tableau.getEntry(0,  table.getRhsOffset())));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(tableau.getEntry(0,  table.getRhsOffset())));	  throw    new    IllegalStateException(       "       ");    Throw    new    IllegalStateException(       "       ");    	non-compiled	[CE]  <identifier>  expected	17	None	replace
55	[BUG]  [BUGGY]  Throwables.throw  new  NoSuchElementException( " ");  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  NoSuchElementException( " ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  NoSuchElementException( " ");	  Throwables.throw    new    NoFeasibleSolutionException(   "   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
56	[BUG]  [BUGGY]  Tableau  table  =  new  SimplexTableau(table.getRhsOffset());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Tableau  table  =  new  SimplexTableau(table.getRhsOffset());  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Tableau  table  =  new  SimplexTableau(table.getRhsOffset());	  Tableau    table    =    table.getTable();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
57	[BUG]  [BUGGY]  Throwables.throw  new  NoFeasibleSolutionException( " "),  Tableau.instance;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  NoFeasibleSolutionException( " "),  Tableau.instance;  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  NoFeasibleSolutionException( " "),  Tableau.instance;	  throw    new    NoFeasibleSolutionException(   "   "),    Tableau.instance;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
58	[BUG]  [BUGGY]  Throwables.throw  new  NoFeasibleSolverException( "Phase1: ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  NoFeasibleSolverException( "Phase1: ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  NoFeasibleSolverException( "Phase1: ");	  throw    new    NoFeasibleSolverException(   "Phase1:   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
59	[BUG]  [BUGGY]  throw  new  NoFeasibleSolverException( "Phase1: "  +  table);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolverException( "Phase1: "  +  table);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolverException( "Phase1: "  +  table);	  throw    new    NoFeasibleSolverException(   "Phase1:   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
60	[BUG]  [BUGGY]  throw  new  NoFeasibleSolverException( "Phase1: "  +  table.getName());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolverException( "Phase1: "  +  table.getName());  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolverException( "Phase1: "  +  table.getName());	  throw    new    NoFeasibleSolverException(   "Phase1:   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
61	[BUG]  [BUGGY]  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]        IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  IllegalStateException( " ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  IllegalStateException( " ");	  throw    new    IllegalStateException(       "       ");    new    IllegalStateException(       "       ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
62	[BUG]  [BUGGY]  new  IllegalStateException( " ".equals(tableau.getEntry(0,  table.getRhsOffset())));  [CE]  <identifier>  expected  [FE]          IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  IllegalStateException( " ".equals(tableau.getEntry(0,  table.getRhsOffset())));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  IllegalStateException( " ".equals(tableau.getEntry(0,  table.getRhsOffset())));	  throw    new    IllegalStateException(       "       ");    new    IllegalStateException(       "       ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
63	[BUG]  [BUGGY]  new  IllegalStateException( " ".equals(tableau.getRhsOffset()));  [CE]  <identifier>  expected  [FE]            IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  IllegalStateException( " ".equals(tableau.getRhsOffset()));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  IllegalStateException( " ".equals(tableau.getRhsOffset()));	  throw    new    IllegalStateException(       "       ");    new    IllegalStateException(       "       ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
64	[BUG]  [BUGGY]  new  IllegalStateException( " ".equals(tableau.getNumArtificialVariables()));  [CE]  <identifier>  expected  [FE]              IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  IllegalStateException( " ".equals(tableau.getNumArtificialVariables()));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  IllegalStateException( " ".equals(tableau.getNumArtificialVariables()));	  throw    new    IllegalStateException(       "       ");    new    IllegalStateException(       "       ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
65	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  table);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  table);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  table);	  SimplexTableau    tableau    =(SimplexTableau)super.solvePhase(tableau,    table);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
66	[BUG]  [BUGGY]  SimplexTableau  tableau  =(SimplexTableau)tableau.solvePhase(tableau,  table);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  tableau  =(SimplexTableau)tableau.solvePhase(tableau,  table);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  tableau  =(SimplexTableau)tableau.solvePhase(tableau,  table);	  SimplexTableau    tableau    =(SimplexTableau)super.solvePhase(tableau,    table);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
67	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(tableau,  table);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(tableau,  table);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(tableau,  table);	  SimplexTableau    tableau    =(SimplexTableau)super.solvePhase(tableau,    table);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
68	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(tableau,  super);  [CE]  [FE]                            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(tableau,  super);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(tableau,  super);	  SimplexTableau    tableau    =(SimplexTableau)super.solvePhase(tableau,    table);    	non-compiled	[CE]  	27	None	replace
69	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(this);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(this);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(this);	  SimplexTableau    table    =(SimplexTableau)tableau.solvePhase(super);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
70	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(new  SimplexTableau());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(new  SimplexTableau());  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(new  SimplexTableau());	  SimplexTableau    table    =(SimplexTableau)tableau.solvePhase(super);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
71	[BUG]  [BUGGY]  new  NoFeasibleSolutionException( "Phase1  is  null. ");  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  NoFeasibleSolutionException( "Phase1  is  null. ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  NoFeasibleSolutionException( "Phase1  is  null. ");	  new    NoFeasibleSolutionException(   "   "));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
72	[BUG]  [BUGGY]  new  NoFeasibleSolutionException( "Phase1  is  null ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  NoFeasibleSolutionException( "Phase1  is  null ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  NoFeasibleSolutionException( "Phase1  is  null ");	  new    NoFeasibleSolutionException(   "   "));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
73	[BUG]  [BUGGY]  new  NoFeasibleSolutionException( "Phase1  is  not  an  empty  table ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  NoFeasibleSolutionException( "Phase1  is  not  an  empty  table ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  NoFeasibleSolutionException( "Phase1  is  not  an  empty  table ");	  new    NoFeasibleSolutionException(   "   "));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
74	[BUG]  [BUGGY]  solvePhase1(tableau,  table,  epsilon);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  solvePhase1(tableau,  table,  epsilon);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	solvePhase1(tableau,  table,  epsilon);	  solvePhase1(tableau,    epsilon);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
75	[BUG]  [BUGGY]  solvePhase(tableau,  epsilon);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  solvePhase(tableau,  epsilon);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	solvePhase(tableau,  epsilon);	  solvePhase1(tableau,    epsilon);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
76	[BUG]  [BUGGY]  solvePhase1(tableau,  epsilon,  pivotVal);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  solvePhase1(tableau,  epsilon,  pivotVal);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	solvePhase1(tableau,  epsilon,  pivotVal);	  solvePhase1(tableau,    epsilon);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
77	[BUG]  [BUGGY]  solvePhase1(tableau,  epsilon,  table.getRhsOffset());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  solvePhase1(tableau,  epsilon,  table.getRhsOffset());  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	solvePhase1(tableau,  epsilon,  table.getRhsOffset());	  solvePhase1(tableau,    epsilon);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
78	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(tableau.getNumArtificialVariables()));  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(tableau.getNumArtificialVariables()));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(tableau.getNumArtificialVariables()));	  throw    new    IllegalArgumentException(       "       ");    Throwables.throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
79	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(tableau.getRhsOffset()));  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(tableau.getRhsOffset()));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(tableau.getRhsOffset()));	  throw    new    IllegalArgumentException(       "       ");    Throwables.throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
80	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(tableau);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(tableau);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(tableau);	  SimplexTableau    table    =(SimplexTableau)super.solvePhase(tableau);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
81	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.tableau.solvePhase(tableau);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.tableau.solvePhase(tableau);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)this.tableau.solvePhase(tableau);	  SimplexTableau    table    =(SimplexTableau)super.solvePhase(tableau);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
82	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(tableau.getNumArtificialVariables()));  [CE]  <identifier>  expected  [FE]        IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " ".equals(tableau.getNumArtificialVariables()));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  IllegalStateException( " ".equals(tableau.getNumArtificialVariables()));	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException(       "       ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
83	[BUG]  [BUGGY]  Throwables.throw  new  NoFeasibleSolutionException( "The  table  must  be  initialized. ");  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  NoFeasibleSolutionException( "The  table  must  be  initialized. ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  NoFeasibleSolutionException( "The  table  must  be  initialized. ");	  throw    new    NoFeasibleSolutionException(   "The    table    must    be    initialized.   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
84	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "The  table  must  be  initialized: ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "The  table  must  be  initialized: ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "The  table  must  be  initialized: ");	  throw    new    NoFeasibleSolutionException(   "The    table    must    be    initialized.   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
85	[BUG]  [BUGGY]  solvePhase(tableau,  table);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  solvePhase(tableau,  table);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	solvePhase(tableau,  table);	  solvePhase(tableau);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
86	[BUG]  [BUGGY]  new  NoFeasibleSolutionException( " ")  [CE]  [FE]        IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  NoFeasibleSolutionException( " ")  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  NoFeasibleSolutionException( " ")	  new    NoFeasibleSolutionException(   "   ");    	non-compiled	[CE]  	44	None	replace
87	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)tableau.getIterator();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimpleTableau)tableau.getIterator();  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimpleTableau)tableau.getIterator();	  SimplexTableau    table    =(SimpleTableau)tableau.getValue();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
88	[BUG]  [BUGGY]  Throwables.throw  new  NoSuchElementException( " "));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  NoSuchElementException( " "));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  NoSuchElementException( " "));	  Throwables.throw    new    NoFeasibleSolutionException(   "   "));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
89	[BUG]  [BUGGY]  solvePhase2(tableau,  epsilon);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  solvePhase2(tableau,  epsilon);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	solvePhase2(tableau,  epsilon);	  solvePhase2(tableau);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
90	[BUG]  [BUGGY]  SimplexTableau  tableau  =(SimplexTableau)super.solvePhase(tableau,  DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  tableau  =(SimplexTableau)super.solvePhase(tableau,  DEFAULT_EPSILON);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  tableau  =(SimplexTableau)super.solvePhase(tableau,  DEFAULT_EPSILON);	  SimplexTableau    tableau    =(SimplexTableau)super.solvePhase(tableau,    epsilon);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
91	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  graph);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  graph);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  graph);	  SimplexTableau    tableau    =(SimplexTableau)super.solvePhase(tableau,    epsilon);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
92	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  epsilon,  pivotVal);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  epsilon,  pivotVal);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  epsilon,  pivotVal);	  SimplexTableau    tableau    =(SimplexTableau)super.solvePhase(tableau,    epsilon);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
93	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)tableau.cloneTree();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimpleTableau)tableau.cloneTree();  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimpleTableau)tableau.cloneTree();	  SimplexTableau    table    =(SimpleTableau)tableau.clone();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
94	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)charset.clone();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimpleTableau)charset.clone();  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimpleTableau)charset.clone();	  SimplexTableau    table    =(SimpleTableau)tableau.clone();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
95	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.tableau.cloneTree();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.tableau.cloneTree();  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimpleTableau)this.tableau.cloneTree();	  SimplexTableau    table    =(SimpleTableau)this.tableau.clone();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
96	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)tree.clone();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimpleTableau)tree.clone();  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimpleTableau)tree.clone();	  SimplexTableau    table    =(SimpleTableau)this.tableau.clone();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
97	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(tableau.getNumArtificialVariables()));  [CE]  <identifier>  expected  [FE]            IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(tableau.getNumArtificialVariables()));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(tableau.getNumArtificialVariables()));	  throw    new    IllegalStateException(       "       ");    Throwables.throw    new    IllegalStateException(   "       ");    	non-compiled	[CE]  <identifier>  expected	18	None	replace
98	[BUG]  [BUGGY]  IllegalStateException.throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]              IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  IllegalStateException.throw  new  IllegalStateException( " ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	IllegalStateException.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(       "       ");    Throwables.throw    new    IllegalStateException(   "       ");    	non-compiled	[CE]  <identifier>  expected	18	None	replace
99	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  is  null. ",  table);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  is  null. ",  table);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  is  null. ",  table);	  throw    new    NoFeasibleSolutionException(   "   ",    table);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
100	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  solve: "  +  table);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  solve: "  +  table);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  solve: "  +  table);	  throw    new    NoFeasibleSolutionException(   "   ",    table);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
101	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase  1  cannot  solve  the  table: "  +  table);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase  1  cannot  solve  the  table: "  +  table);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase  1  cannot  solve  the  table: "  +  table);	  throw    new    NoFeasibleSolutionException(   "   ",    table);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
102	[BUG]  [BUGGY]  new  NoFeasibleSolutionException( "));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  NoFeasibleSolutionException( "));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  NoFeasibleSolutionException( "));	  new    NoFeasibleSolutionException(   "   "));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
103	[BUG]  [BUGGY]  new  NoFeasibleSolutionException( " "),  table);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  NoFeasibleSolutionException( " "),  table);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  NoFeasibleSolutionException( " "),  table);	  new    NoFeasibleSolutionException(   "   "));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
104	[BUG]  [BUGGY]  new  NoFeasibleSolutionException( "Simple "));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  NoFeasibleSolutionException( "Simple "));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  NoFeasibleSolutionException( "Simple "));	  new    NoFeasibleSolutionException(   "   "));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
105	[BUG]  [BUGGY]  Throwables.throw  new  NoFeasibleSolutionException( " ")  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  NoFeasibleSolutionException( " ")  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  NoFeasibleSolutionException( " ")	  Throwables.throw    new    NoFeasibleSolutionException(   "   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
106	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(tableau.getRhsOffset()));  [CE]  <identifier>  expected  [FE]        IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(tableau.getRhsOffset()));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(tableau.getRhsOffset()));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
107	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.tableau.getTables().clone();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimpleTableau)this.tableau.getTables().clone();  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimpleTableau)this.tableau.getTables().clone();	  SimplexTableau    table    =(SimpleTableau)this.tableau.clone();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
108	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( " ",  tableau);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( " ",  tableau);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( " ",  tableau);	  throw    new    NoFeasibleSolutionException(   "   "),    tableau);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
109	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase1(this.paint);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase1(this.paint);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)tableau.solvePhase1(this.paint);	  SimplexTableau    table    =(SimplexTableau)tableau.solvePhase1(tableau);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
110	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(tableau));  [CE]  <identifier>  expected  [FE]          IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(tableau));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  IllegalStateException( " ").equals(tableau));	  Throwables.throw    new    IllegalStateException(   "   ".equals(tableau));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
111	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase2(tableau);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase2(tableau);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)super.solvePhase2(tableau);	  SimplexTableau    table    =(SimplexTableau)super.solvePhase1(tableau);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
112	[BUG]  [BUGGY]  SimplexTableau  tableau  =(SimplexTableau)tableau.solvePhase(tableau,  super);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  tableau  =(SimplexTableau)tableau.solvePhase(tableau,  super);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  tableau  =(SimplexTableau)tableau.solvePhase(tableau,  super);	  SimplexTableau    tableau    =(SimplexTableau)super.solvePhase(tableau,    table);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
113	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase1(tableau,  table);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase1(tableau,  table);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)super.solvePhase1(tableau,  table);	  SimplexTableau    tableau    =(SimplexTableau)super.solvePhase(tableau,    table);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
114	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.super.solvePhase1(tableau);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)this.super.solvePhase1(tableau);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)this.super.solvePhase1(tableau);	  SimplexTableau    table    =(SimplexTableau)tableau.solvePhase1(super);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
115	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types, "  + ", ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types, "  + ", ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types, "  + ", ");	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types,   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
116	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types,  can  not  be  applied  to: ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types,  can  not  be  applied  to: ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types,  can  not  be  applied  to: ");	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types,   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
117	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types,  can  not  be  applied  to: "  +  table);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types,  can  not  be  applied  to: "  +  table);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types,  can  not  be  applied  to: "  +  table);	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types,   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
118	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types ",  table,  epsilon);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types ",  table,  epsilon);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types ",  table,  epsilon);	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types   ",    table);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
119	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  0);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  0);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  0);	  SimplexTableau    table    =(SimplexTableau)super.solvePhase(tableau,    DEFAULT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
120	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(super,  DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(super,  DEFAULT_EPSILON);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)tableau.solvePhase(super,  DEFAULT_EPSILON);	  SimplexTableau    table    =(SimplexTableau)super.solvePhase(tableau,    DEFAULT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
121	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  0,  DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  0,  DEFAULT_EPSILON);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  0,  DEFAULT_EPSILON);	  SimplexTableau    table    =(SimplexTableau)super.solvePhase(tableau,    DEFAULT_EPSILON);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
122	[BUG]  [BUGGY]  Tableau  table  =  new  SimplexTableau(tableau.getTable());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Tableau  table  =  new  SimplexTableau(tableau.getTable());  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Tableau  table  =  new  SimplexTableau(tableau.getTable());	  Tableau    table    =    tableau.getTable();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
123	[BUG]  [BUGGY]  Tableau  table  =(this.tableau!=  null)?  this.tableau.getTable()  :  table;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Tableau  table  =(this.tableau!=  null)?  this.tableau.getTable()  :  table;  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Tableau  table  =(this.tableau!=  null)?  this.tableau.getTable()  :  table;	  Tableau    table    =    this.tableau.getTable();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
124	[BUG]  [BUGGY]  new  NoFeasibleSolutionException( "The  table  must  be  initialized. ");  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  NoFeasibleSolutionException( "The  table  must  be  initialized. ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  NoFeasibleSolutionException( "The  table  must  be  initialized. ");	  throw    new    NoFeasibleSolutionException(   "The    table    must    be    initialized.   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
125	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "The  Table  must  be  initialized. ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "The  Table  must  be  initialized. ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "The  Table  must  be  initialized. ");	  throw    new    NoFeasibleSolutionException(   "The    table    must    be    initialized.   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
126	[BUG]  [BUGGY]  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types. ");  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types. ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types. ");	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types.   ");    	non-compiled	[CE]  <identifier>  expected	22	None	replace
127	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types. ",  Tableau.DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types. ",  Tableau.DEFAULT_EPSILON);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types. ",  Tableau.DEFAULT_EPSILON);	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types.   ");    	non-compiled	[CE]  <identifier>  expected	22	None	replace
128	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types.  Please  check  that  the  tableau  does  not  exist. ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types.  Please  check  that  the  tableau  does  not  exist. ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types.  Please  check  that  the  tableau  does  not  exist. ");	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types.   ");    	non-compiled	[CE]  <identifier>  expected	22	None	replace
129	[BUG]  [BUGGY]  Throw  new  NoFeasibleSolverException( "The  table  must  be  initialized. ");  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throw  new  NoFeasibleSolverException( "The  table  must  be  initialized. ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throw  new  NoFeasibleSolverException( "The  table  must  be  initialized. ");	  throw    new    NoFeasibleSolverException(   "The    table    must    be    initialized.   ");    	non-compiled	[CE]  not  a  statement	56	None	replace
130	[BUG]  [BUGGY]  if(!isPhase1Solved(tableau))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]        IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  if(!isPhase1Solved(tableau))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	if(!isPhase1Solved(tableau))  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException(       "       ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
131	[BUG]  [BUGGY]  solvePhase(Tableau.DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  solvePhase(Tableau.DEFAULT_EPSILON);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	solvePhase(Tableau.DEFAULT_EPSILON);	  solvePhase2(tableau);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
132	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.getIterator();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)tableau.getIterator();  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)tableau.getIterator();	  SimplexTableau    table    =(SimplexTableau)tableau.getValue();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
133	[BUG]  [BUGGY]  throw  new  OptimizationException( " ");  [CE]  <identifier>  expected  [FE]        IllegalArgumentException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  OptimizationException( " ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  OptimizationException( " ");	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
134	[BUG]  [BUGGY]  IllegalArgumentException.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  IllegalArgumentException.throw  new  IllegalArgumentException( " ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	IllegalArgumentException.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwables.throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
135	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  solve: "  +  table,  Table.class);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  solve: "  +  table,  Table.class);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  solve: "  +  table,  Table.class);	  throw    new    NoFeasibleSolutionException(   "   ",    Table.class);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
136	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  solve: "  +  table.getName());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  solve: "  +  table.getName());  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  solve: "  +  table.getName());	  throw    new    NoFeasibleSolutionException(   "   ",    Table.class);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
137	[BUG]  [BUGGY]  SimplexTableau  tableau  =(SimplexTableau)super.solvePhase(tableau,  epsilon,  pivotVal);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  tableau  =(SimplexTableau)super.solvePhase(tableau,  epsilon,  pivotVal);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  tableau  =(SimplexTableau)super.solvePhase(tableau,  epsilon,  pivotVal);	  SimplexTableau    tableau    =(SimplexTableau)super.solvePhase(tableau,    epsilon);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
138	[BUG]  [BUGGY]  SimplexTableau  tableau  =(SimplexTableau)super.solvePhase1(tableau,  epsilon);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  tableau  =(SimplexTableau)super.solvePhase1(tableau,  epsilon);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  tableau  =(SimplexTableau)super.solvePhase1(tableau,  epsilon);	  SimplexTableau    tableau    =(SimplexTableau)super.solvePhase(tableau,    epsilon);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
139	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(tableau.getEntry(0,  table.getRhsOffset())));  [CE]  <identifier>  expected  [FE]          IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  IllegalStateException( " ".equals(tableau.getEntry(0,  table.getRhsOffset())));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  IllegalStateException( " ".equals(tableau.getEntry(0,  table.getRhsOffset())));	  throw    new    IllegalStateException(       "       ");    Throw    new    IllegalStateException(       "       ");    	non-compiled	[CE]  <identifier>  expected	17	None	replace
140	[BUG]  [BUGGY]  new  NoFeasibleSolverException( " "));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  NoFeasibleSolverException( " "));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  NoFeasibleSolverException( " "));	  throw    new    NoFeasibleSolverException(   "   "));    	non-compiled	[CE]  <identifier>  expected	55	None	replace
141	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)tableau.getTables().clone();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimpleTableau)tableau.getTables().clone();  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimpleTableau)tableau.getTables().clone();	  SimplexTableau    table    =(SimpleTableau)tableau.clone();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
142	[BUG]  [BUGGY]  SimplexTableau  table  =(SimpleTableau)tableau.getTable();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimpleTableau)tableau.getTable();  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimpleTableau)tableau.getTable();	  SimplexTableau    table    =(SimpleTableau)tableau.clone();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
143	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(tableau.getNumArtificialVariables()));  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(tableau.getNumArtificialVariables()));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  IllegalArgumentException( " ".equals(tableau.getNumArtificialVariables()));	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  <identifier>  expected	31	None	replace
144	[BUG]  [BUGGY]  Tableau  table  =(Tableau)table.getTable();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Tableau  table  =(Tableau)table.getTable();  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Tableau  table  =(Tableau)table.getTable();	  Tableau    table    =    table.getTable();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
145	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(tableau));  [CE]  <identifier>  expected  [FE]        IllegalArgumentException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(tableau));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(tableau));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	19	None	replace
146	[BUG]  [BUGGY]  Throwables.throw  new  NoFeasibleSolutionException( "));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  NoFeasibleSolutionException( "));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  NoFeasibleSolutionException( "));	  Throwables.throw    new    NoFeasibleSolutionException(   "   "));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
147	[BUG]  [BUGGY]  solvePhase1(tableau,  epsilon,  DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  solvePhase1(tableau,  epsilon,  DEFAULT_EPSILON);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	solvePhase1(tableau,  epsilon,  DEFAULT_EPSILON);	  solvePhase1(tableau,    epsilon);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
148	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( " ",  Tableau.instance;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( " ",  Tableau.instance;  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( " ",  Tableau.instance;	  throw    new    NoFeasibleSolutionException(   "   "),    Tableau.instance;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
149	[BUG]  [BUGGY]  throw  new  NoFeasibleSolverException( "Phase1: "  +  TableUtils.stringValue(tableau));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolverException( "Phase1: "  +  TableUtils.stringValue(tableau));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolverException( "Phase1: "  +  TableUtils.stringValue(tableau));	  throw    new    NoFeasibleSolverException(   "Phase1:   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
150	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase(table);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase(table);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)super.solvePhase(table);	  SimplexTableau    table    =(SimplexTableau)tableau.solvePhase(super);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
151	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "The  Table  must  be  initialized. ",  Table.class);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "The  Table  must  be  initialized. ",  Table.class);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "The  Table  must  be  initialized. ",  Table.class);	  throw    new    NoFeasibleSolutionException(   "   ",    Table.class);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
152	[BUG]  [BUGGY]  throw  new  NoFeasibleSolverException( "The  Table  must  be  initialized. ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolverException( "The  Table  must  be  initialized. ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolverException( "The  Table  must  be  initialized. ");	  throw    new    NoFeasibleSolverException(   "The    table    must    be    initialized.   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
153	[BUG]  [BUGGY]  throw  new  NoFeasibleSolverException( "The  table  must  be  initialized: ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolverException( "The  table  must  be  initialized: ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolverException( "The  table  must  be  initialized: ");	  throw    new    NoFeasibleSolverException(   "The    table    must    be    initialized.   ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
154	[BUG]  [BUGGY]  throw  new  NoStateException( " ");  [CE]  <identifier>  expected  [FE]          IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoStateException( " ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoStateException( " ");	  throw    new    IllegalStateException(       "       ");    Throw    new    IllegalStateException(       "       ");    	non-compiled	[CE]  <identifier>  expected	17	None	replace
155	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types, ",  tableau);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types, ",  tableau);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types, ",  tableau);	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types,   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
156	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types, "  + "The  tableau  must  be  in  the  range  [ "  +  table.getRhsOffset()  + "] ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types, "  + "The  tableau  must  be  in  the  range  [ "  +  table.getRhsOffset()  + "] ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types, "  + "The  tableau  must  be  in  the  range  [ "  +  table.getRhsOffset()  + "] ");	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types,   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
157	[BUG]  [BUGGY]  new  NoFeasibleSolutionException( "Phase1  cannot  solve: ");  [CE]  <identifier>  expected  [FE]        IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  NoFeasibleSolutionException( "Phase1  cannot  solve: ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  NoFeasibleSolutionException( "Phase1  cannot  solve: ");	  new    NoFeasibleSolutionException(   "   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
158	[BUG]  [BUGGY]  new  NoFeasibleSolutionException( "Phase  1  must  be  initialized. ");  [CE]  <identifier>  expected  [FE]          IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  NoFeasibleSolutionException( "Phase  1  must  be  initialized. ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  NoFeasibleSolutionException( "Phase  1  must  be  initialized. ");	  new    NoFeasibleSolutionException(   "   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
159	[BUG]  [BUGGY]  new  IllegalStateException( " "));  [CE]  <identifier>  expected  [FE]        IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  IllegalStateException( " "));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  IllegalStateException( " "));	  throw    new    IllegalStateException(       "       ");    new    IllegalStateException(       "       ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
160	[BUG]  [BUGGY]  new  IllegalStateException( " ")  [CE]  <identifier>  expected  [FE]          IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  IllegalStateException( " ")  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  IllegalStateException( " ")	  throw    new    IllegalStateException(       "       ");    new    IllegalStateException(       "       ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
161	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(tableau);  [CE]  <identifier>  expected  [FE]          IllegalStateException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(tableau);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throwables.throw  new  IllegalStateException( " ").equals(tableau);	  Throwables.throw    new    IllegalStateException(   "   ".equals(tableau));    	non-compiled	[CE]  <identifier>  expected	12	None	replace
162	[BUG]  [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  epsilon,  DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  epsilon,  DEFAULT_EPSILON);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  table  =(SimplexTableau)super.solvePhase(tableau,  epsilon,  DEFAULT_EPSILON);	  SimplexTableau    tableau    =(SimplexTableau)super.solvePhase(tableau,    epsilon);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
163	[BUG]  [BUGGY]  SimplexTableau  tableau  =(SimplexTableau)super.solvePhase(tableau,  epsilon,  DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  SimplexTableau  tableau  =(SimplexTableau)super.solvePhase(tableau,  epsilon,  DEFAULT_EPSILON);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	SimplexTableau  tableau  =(SimplexTableau)super.solvePhase(tableau,  epsilon,  DEFAULT_EPSILON);	  SimplexTableau    tableau    =(SimplexTableau)super.solvePhase(tableau,    epsilon);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
164	[BUG]  [BUGGY]  Throw  new  NoFeasibleSolverException( " ")  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throw  new  NoFeasibleSolverException( " ")  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throw  new  NoFeasibleSolverException( " ")	  Throw    new    NoFeasibleSolverException(   "   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
165	[BUG]  [BUGGY]  Throw  new  NoFeasibleSolverException( " "));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throw  new  NoFeasibleSolverException( " "));  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throw  new  NoFeasibleSolverException( " "));	  Throw    new    NoFeasibleSolverException(   "   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
166	[BUG]  [BUGGY]  solvePhase1(tableau,  DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  solvePhase1(tableau,  DEFAULT_EPSILON);  [BUGGY]      return;  }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	solvePhase1(tableau,  DEFAULT_EPSILON);	  solvePhase1(tableau,    epsilon);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
167	[BUG]  [BUGGY]  Throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types. ");  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types. ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types. ");	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types.   ");    	non-compiled	[CE]  <identifier>  expected	22	None	replace
168	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types. ",  Table.DEFAULT_EPSILON);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types. ",  Table.DEFAULT_EPSILON);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types. ",  Table.DEFAULT_EPSILON);	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types.   ");    	non-compiled	[CE]  <identifier>  expected	22	None	replace
169	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types. ",  tableau);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types. ",  tableau);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Phase1  cannot  be  applied  to  given  types. ",  tableau);	  throw    new    NoFeasibleSolutionException(   "Phase1    cannot    be    applied    to    given    types.   ");    	non-compiled	[CE]  <identifier>  expected	22	None	replace
170	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "The  table  must  be  initialized. ",  table);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "The  table  must  be  initialized. ",  table);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "The  table  must  be  initialized. ",  table);	  throw    new    NoFeasibleSolutionException(   "   ",    table);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
171	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Can  not  solve  the  table: "  +  table);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Can  not  solve  the  table: "  +  table);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Can  not  solve  the  table: "  +  table);	  throw    new    NoFeasibleSolutionException(   "   ",    table);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
172	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Can  not  solve  the  table: "  +  table,  table);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Can  not  solve  the  table: "  +  table,  table);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Can  not  solve  the  table: "  +  table,  table);	  throw    new    NoFeasibleSolutionException(   "   ",    table);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
173	[BUG]  [BUGGY]  throw  new  NoFeasibleSolutionException( "Can  not  solve  the  table: "  +  table,  epsilon);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  throw  new  NoFeasibleSolutionException( "Can  not  solve  the  table: "  +  table,  epsilon);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	throw  new  NoFeasibleSolutionException( "Can  not  solve  the  table: "  +  table,  epsilon);	  throw    new    NoFeasibleSolutionException(   "   ",    table);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
174	[BUG]  [BUGGY]  new  IllegalArgumentException( " ")  [CE]  <identifier>  expected  [FE]        IllegalArgumentException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  IllegalArgumentException( " ")  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  IllegalArgumentException( " ")	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
175	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".);  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  new  IllegalArgumentException( " ".);  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	new  IllegalArgumentException( " ".);	  throw    new    IllegalArgumentException(       "       ");    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
176	[BUG]  [BUGGY]  Throw  new  NoFeasibleSolutionException( "The  table  must  be  initialized. ");  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      protected  void  solvePhase1(final  SimplexTableau  tableau)  throws  OptimizationException  {  if  (tableau.getNumArtificialVariables()  ==  0)  {      [BUGGY]  Throw  new  NoFeasibleSolutionException( "The  table  must  be  initialized. ");  [BUGGY]      }  while  (!isPhase1Solved(tableau))  {  doIteration(tableau);  }  if  (!MathUtils.equals(tableau.getEntry(0,  tableau.getRhsOffset()),  0,  epsilon))  {  throw  new  NoFeasibleSolutionException();  }  [CLASS]  SimplexSolver  [METHOD]  solvePhase1  [RETURN_TYPE]  void  SimplexTableau  tableau  [VARIABLES]  SimplexTableau  tableau  double  DEFAULT_EPSILON  entry  epsilon  minRatio  minValue  multiplier  pivotVal  ratio  rhs  boolean  	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.5773502691896258	169	169	1	replace	Throw  new  NoFeasibleSolutionException( "The  table  must  be  initialized. ");	  throw    new    NoFeasibleSolutionException(   "The    table    must    be    initialized.   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
