207	[BUG]    [BUGGY]    if    (MathUtils.compareTo(rhs,    0,    entry)    >=    0)    {    if    (MathUtils.compareTo(rhs,    0,    entry)    >>    0)    {    [CE]    illegal    start    of    expression    [FE]                AssertionError        [CONTEXT]        private    Integer    getPivotRow(final    int    col,    final    SimplexTableau    tableau)    {    double    minRatio    =    Double.MAX_VALUE;    Integer    minRatioPos    =    null;    for    (int    i    =    tableau.getNumObjectiveFunctions();    i    <    tableau.getHeight();    i++)    {    final    double    rhs    =    tableau.getEntry(i,    tableau.getWidth()    -    1);    final    double    entry    =    tableau.getEntry(i,    col);        [BUGGY]    if    (MathUtils.compareTo(rhs,    0,    entry)    >=    0)    {    if    (MathUtils.compareTo(rhs,    0,    entry)    >>    0)    {    [BUGGY]        final    double    ratio    =    rhs    /    entry;    if    (ratio    <    minRatio)    {    minRatio    =    ratio;    minRatioPos    =    i;    }    }    }    return    minRatioPos;    }    [CLASS]    SimplexSolver    [METHOD]    getPivotRow    [RETURN_TYPE]    Integer    final    int    col    SimplexTableau    tableau    [VARIABLES]    Integer    minRatioPos    boolean    SimplexTableau    tableau    double    DEFAULT_EPSILON    entry    epsilon    minRatio    minValue    ratio    rhs    int    col    i    	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2672612419124244	82	82	1	replace	if(entry  >=  DEFAULT_EPSILON)  {	  if    (MathUtils.compareTo(rhs,    0,    entry)    >=    0)    {    if    (MathUtils.compareTo(rhs,    0,    entry)    >>    0)    {    	plausible		43	0
207	[BUG]    [BUGGY]    if    (MathUtils.compareTo(rhs,    0,    entry)    >=    0)    {    if    (MathUtils.compareTo(rhs,    0,    entry)    >>    0)    {    [CE]    illegal    start    of    expression    [FE]                AssertionError        [CONTEXT]        private    Integer    getPivotRow(final    int    col,    final    SimplexTableau    tableau)    {    double    minRatio    =    Double.MAX_VALUE;    Integer    minRatioPos    =    null;    for    (int    i    =    tableau.getNumObjectiveFunctions();    i    <    tableau.getHeight();    i++)    {    final    double    rhs    =    tableau.getEntry(i,    tableau.getWidth()    -    1);    final    double    entry    =    tableau.getEntry(i,    col);        [BUGGY]    if    (MathUtils.compareTo(rhs,    0,    entry)    >=    0)    {    if    (MathUtils.compareTo(rhs,    0,    entry)    >>    0)    {    [BUGGY]        final    double    ratio    =    rhs    /    entry;    if    (ratio    <    minRatio)    {    minRatio    =    ratio;    minRatioPos    =    i;    }    }    }    return    minRatioPos;    }    [CLASS]    SimplexSolver    [METHOD]    getPivotRow    [RETURN_TYPE]    Integer    final    int    col    SimplexTableau    tableau    [VARIABLES]    Integer    minRatioPos    boolean    SimplexTableau    tableau    double    DEFAULT_EPSILON    entry    epsilon    minRatio    minValue    ratio    rhs    int    col    i    	projects/Math82/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java	0.2672612419124244	82	82	1	replace	if(entry  >=  0)  {	  if    (MathUtils.compareTo(rhs,    0,    entry)    >=    0)    {    if    (MathUtils.compareTo(rhs,    0,    entry)    >>    0)    {    	plausible		43	0
