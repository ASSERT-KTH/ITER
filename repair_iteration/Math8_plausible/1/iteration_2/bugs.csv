bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double>,  samples);  [CE]  >  expected  [FE]            ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double>,  samples);  [BUGGY]    this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double>,  samples);	      this(new    SortedList    <    Pair    <    T,    Double>));    	non-compiled	[CE]  >  expected	3	None	replace
2	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double>),  samples);  [CE]  >  expected  [FE]              ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double>),  samples);  [BUGGY]    this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double>),  samples);	      this(new    SortedList    <    Pair    <    T,    Double>));    	non-compiled	[CE]  >  expected	3	None	replace
3	[BUG]  [BUGGY]  this(new  Well19937c(),  samples,  null,  randomGenerator);  [CE]  cannot  find  symbol  randomGenerator  [FE]        ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  Well19937c(),  samples,  null,  randomGenerator);  [BUGGY]    }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  samples,  null,  randomGenerator);	  this(new    Well19937c(),    samples,    null);    	non-compiled	[CE]  cannot  find  symbol  randomGenerator	4	None	replace
4	[BUG]  [BUGGY]  this(new  SortedWell19937c(),  samples,  null);  [CE]  cannot  find  symbol  [FE]          ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  SortedWell19937c(),  samples,  null);  [BUGGY]    }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell19937c(),  samples,  null);	  this(new    Well19937c(),    samples,    null);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
5	[BUG]  [BUGGY]  this(new  Well19937(),  samples,  randomGenerator);  [CE]  cannot  find  symbol  [FE]        ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  Well19937(),  samples,  randomGenerator);  [BUGGY]    this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937(),  samples,  randomGenerator);	      this(new    Well19937(),    samples);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
6	[BUG]  [BUGGY]  this(new  Well19937(),  samples,  null);  [CE]  cannot  find  symbol  [FE]          ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  Well19937(),  samples,  null);  [BUGGY]    this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937(),  samples,  null);	      this(new    Well19937(),    samples);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
7	[BUG]  [BUGGY]  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedSingletons(singletons);  [CE]  cannot  find  symbol  randomGenerator  [FE]        ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedSingletons(singletons);  [BUGGY]    this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedSingletons(singletons);	      RandomGenerator    randomGenerator    =    new    RandomGenerator();    randomGenerator.setIndexedSingletons(singletons);    	non-compiled	[CE]  cannot  find  symbol  randomGenerator	7	None	replace
8	[BUG]  [BUGGY]  this(new  Well19937c(),  samples,  probability);  [CE]  cannot  find  symbol  probability  [FE]        ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  Well19937c(),  samples,  probability);  [BUGGY]    }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  samples,  probability);	  this(new    Well19937c(),    samples,    randomGenerator);    	non-compiled	[CE]  cannot  find  symbol  probability	6	None	replace
9	[BUG]  [BUGGY]  this(new  SortedWell19937c(),  samples,  randomGenerator);  [CE]  cannot  find  symbol  [FE]        ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  SortedWell19937c(),  samples,  randomGenerator);  [BUGGY]    }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell19937c(),  samples,  randomGenerator);	  this(new    SortedWell19937c(),    samples);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
10	[BUG]  [BUGGY]  this(new  SortedWell19937(),  samples,  randomGenerator);  [CE]  cannot  find  symbol  [FE]          ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  SortedWell19937(),  samples,  randomGenerator);  [BUGGY]    }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell19937(),  samples,  randomGenerator);	  this(new    SortedWell19937c(),    samples);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
11	[BUG]  [BUGGY]  this(new  Well2001c(),  samples,  null);  [CE]  cannot  find  symbol  [FE]          ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  Well2001c(),  samples,  null);  [BUGGY]    }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well2001c(),  samples,  null);	  this(new    Well2001c(),    samples);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
12	[BUG]  [BUGGY]  this(new  Well2001c(),  samples,  randomGenerator);  [CE]  cannot  find  symbol  [FE]            ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  Well2001c(),  samples,  randomGenerator);  [BUGGY]    }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well2001c(),  samples,  randomGenerator);	  this(new    Well2001c(),    samples);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
13	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  null);  [CE]  '('  or  '['  expected  [FE]        ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  null);  [BUGGY]    this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  null);	      this(new    SortedList    <    Pair    <    T,    Double    >=    samples);    	non-compiled	[CE]  '('  or  '['  expected	1	None	replace
14	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  false);  [CE]  '('  or  '['  expected  [FE]          ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  false);  [BUGGY]    this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  false);	      this(new    SortedList    <    Pair    <    T,    Double    >=    samples);    	non-compiled	[CE]  '('  or  '['  expected	1	None	replace
15	[BUG]  [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator(this);  randomGenerator.setIndexedField(this,  T,  0,  samples);  [CE]  RandomGenerator  is  abstract;  cannot  be  instantiated  [FE]          ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator(this);  randomGenerator.setIndexedField(this,  T,  0,  samples);  [BUGGY]    this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	RandomGenerator  randomGenerator  =  new  RandomGenerator(this);  randomGenerator.setIndexedField(this,  T,  0,  samples);	      RandomGenerator    randomGenerator    =    new    RandomGenerator();    randomGenerator.setIndexedField(this,    T,    0,    samples);    	non-compiled	[CE]  RandomGenerator  is  abstract;  cannot  be  instantiated	10	None	replace
16	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  randomGenerator);  [CE]  '('  or  '['  expected  [FE]        ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  randomGenerator);  [BUGGY]    this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  randomGenerator);	      this(new    SortedList    <    Pair    <    T,    Double    >=    samples);    	non-compiled	[CE]  '('  or  '['  expected	1	None	replace
17	[BUG]  [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedSingletons(selected);  [CE]  RandomGenerator  is  abstract;  cannot  be  instantiated  [FE]        ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedSingletons(selected);  [BUGGY]    this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	RandomGenerator  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedSingletons(selected);	      RandomGenerator    randomGenerator    =    new    RandomGenerator();    randomGenerator.setIndexedSingletons(singletons);    	non-compiled	[CE]  RandomGenerator  is  abstract;  cannot  be  instantiated	7	None	replace
18	[BUG]  [BUGGY]  this(new  Well19937c(),  samples,  0,  null);  [CE]  no  suitable  constructor  found  for  DiscreteDistribution(Well19937c,List<Pair<T,Double>>,int,<null>)  [FE]        ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  Well19937c(),  samples,  0,  null);  [BUGGY]    }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  samples,  0,  null);	  this(new    Well19937c(),    samples,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  DiscreteDistribution(Well19937c,List<Pair<T,Double>>,int,<null>)	4	None	replace
19	[BUG]  [BUGGY]  this(new  Well19937c(),  samples,  T);  [CE]  cannot  find  symbol  T  [FE]        ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  Well19937c(),  samples,  T);  [BUGGY]    }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  samples,  T);	  this(new    Well19937c(),    samples,    randomGenerator);    	non-compiled	[CE]  cannot  find  symbol  T	6	None	replace
20	[BUG]  [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  new  Double[]  {  }  );  [CE]  '('  or  '['  expected  [FE]          ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  new  Double[]  {  }  );  [BUGGY]    this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedList  <  Pair  <  T,  Double  >>  samples,  new  Double[]  {  }  );	      this(new    SortedList    <    Pair    <    T,    Double    >>    samples);    	non-compiled	[CE]  '('  or  '['  expected	2	None	replace
21	[BUG]  [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedField(this,  T,  1,  samples);  [CE]  RandomGenerator  is  abstract;  cannot  be  instantiated  [FE]          ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  RandomGenerator  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedField(this,  T,  1,  samples);  [BUGGY]    this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	RandomGenerator  randomGenerator  =  new  RandomGenerator();  randomGenerator.setIndexedField(this,  T,  1,  samples);	      RandomGenerator    randomGenerator    =    new    RandomGenerator();    randomGenerator.setIndexedField(this,    T,    0,    samples);    	non-compiled	[CE]  RandomGenerator  is  abstract;  cannot  be  instantiated	10	None	replace
22	[BUG]  [BUGGY]  this(new  Well19937c(),  samples,  randomizer);  [CE]  cannot  find  symbol  randomizer  [FE]        ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  Well19937c(),  samples,  randomizer);  [BUGGY]    }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937c(),  samples,  randomizer);	  this(new    Well19937c(),    samples,    randomGenerator);    	non-compiled	[CE]  cannot  find  symbol  randomizer	6	None	replace
23	[BUG]  [BUGGY]  this(new  Well19937(),  samples,  T);  [CE]  cannot  find  symbol  [FE]        ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  Well19937(),  samples,  T);  [BUGGY]    this(new  Well19937c(),  samples);  }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well19937(),  samples,  T);	      this(new    Well19937(),    samples);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
24	[BUG]  [BUGGY]  this(new  SortedWell19937(),  samples,  null);  [CE]  cannot  find  symbol  [FE]        ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  SortedWell19937(),  samples,  null);  [BUGGY]    }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  SortedWell19937(),  samples,  null);	  this(new    SortedWell19937c(),    samples);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
25	[BUG]  [BUGGY]  this(new  Well2001c(),  samples,  T);  [CE]  cannot  find  symbol  [FE]          ArrayStoreException    [CONTEXT]    public  DiscreteDistribution(final  List<Pair<T,  Double>>  samples)  throws  NotPositiveException,  MathArithmeticException,  MathIllegalArgumentException  {    [BUGGY]  this(new  Well2001c(),  samples,  T);  [BUGGY]    }  [CLASS]  DiscreteDistribution  [METHOD]  <init>  [RETURN_TYPE]  List)  Double>>  samples  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  RandomGenerator  random  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	1.0	69	69	1	replace	this(new  Well2001c(),  samples,  T);	  this(new    Well2001c(),    samples);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
