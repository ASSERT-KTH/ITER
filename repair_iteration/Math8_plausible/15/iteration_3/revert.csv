projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89singletons=newArrayList<T>(samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89singletons=newArrayList<T>(samples.size()-1);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89singletons=newLinkedList<T>(samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGeneratorrandomGenerator=rng.getRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGenerator<T>random=rng.getRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGenerator<Pair<T,Double>random=rng.getRandom();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGeneratorrandomGenerator=rng.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGeneratorrandomGenerator=newRandomGenerator(random);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89singletons=newArrayList<T>(samples.size()+1);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGenerator<T>random=rng.getRandomGenerator(null);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89Singlesingletons=newArrayList<T>(samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGeneratorrandomGenerator=rng,random.getRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89singletons=newArrayList<T>(samples.size()-1);singletons=newArrayList<T>(samples.size()-1);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89singletons=newArrayList<T>(samples.size()-1);RandomGenerator<T>singletons=newArrayList<T>(samples.size()-1);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89singletons=newArrayList<T>(samples.size()-1);RandomGenerator<T>random=random.next();singletons=newArrayList<T>(samples.size()-1);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGenerator<Pair<T,Double>sample=random.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGenerator<Pair<T,Double>random=rng.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGeneratorrandomGenerator=newRandomGenerator(rng);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGeneratorrandomGenerator=newRandomGenerator(random,rng);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89singletons=newArrayList<T>(samples.size()+1);singletons=newArrayList<T>(samples.size()+1);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89singletons=newArrayList<T>(samples.size()+1);RandomGenerator<T>singletons=newArrayList<T>(samples.size()+1);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89singletons=newArrayList<T>(samples.size()+1);RandomGenerator<T>random=random.next();singletons=newArrayList<T>(samples.size()+1);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89singletons=newArrayList<T>(samples.size()+1);Singletons=newArrayList<T>(samples.size()+1);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89singletons=newArrayList<T>(samples.size()+1);RandomGeneratorrandom=rng.getRandom();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89singletons=newArrayList<T>(samples.size()-1);Singletons=newArrayList<T>(samples.size()-1);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89singletons=newArrayList<T>(samples.size()-1);RandomGeneratorrandomGenerator=rng.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89Singletonssingletons=newArrayList<T>(samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGeneratorrandomGenerator=random.getRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89Single<T>singletons=newArrayList<T>(samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGeneratorrandomGenerator=rng.generateRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89Single<T>singletons=newLinkedList<T>(samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGenerator<T>random=random.next();singletons=newArrayList<T>(samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89Singlesingletons=newDouble[samples.size()];
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89Singlesingletons=newLinkedList<T>(samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89Singletonssingletons=newLinkedList<T>(samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGeneratorrandomGenerator=newRandomGenerator(rng,random);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGenerator<Pair<T,Double>sample=rng.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89Singletons=newArrayList<T>(samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGenerator<T>random=rng.getRandomGenerator(null,null);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGenerator<T>random=rng.getRandomGenerator(null,sample);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89singletons=newArrayList<T>(samples.size());Singletons=newArrayList<T>(samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGenerator<Pair<T,Double>random=sample.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGenerator<T>singletons=newArrayList<T>(samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGeneratorrandomGenerator=this.randomGenerator.getRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGeneratorrandomGenerator=random,rng.getRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89randomGenerator=rng.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89random=newArrayList<T>(samples.size());RandomGenerator<T>singletons=newArrayList<T>(samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGeneratorrandomGenerator=random.generateRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGeneratorrandom=rng.getRandom();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89random=rng.getRandom();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89singletons=newArrayList<T>(samples.size());RandomGeneratorrandom=rng.getRandom();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89singletons=newArrayList<T>(samples.size());RandomGeneratorrandomGenerator=rng.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGeneratorrandomGenerator=newRandomGenerator(random,random);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89Singletons<T>singletons=newArrayList<T>(samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGenerator<T>random=rng.getRandomGenerator(null,probs);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGenerator<Pair<T,Double>sample=random.getValues();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGenerator<T>singletons=newLinkedList<T>(samples.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGeneratorrandomGenerator=randomGenerator.generateRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89if(samples!=null){singletons=newArrayList<T>(samples.size());}else{finalList<T>samples=newArrayList<T>(samples.size());}
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89RandomGenerator<T>random=rng.getRandomGenerator(random);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89Single<T>singletons=newArrayList<T>(samples.size()-1);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java89singletons=newArrayList<T>(samples.size());RandomGeneratorrandomGenerator=randomGenerator.getValue();
