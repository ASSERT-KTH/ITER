projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java86throwsNotPositiveException,MathArithmeticException,MathIllegalArgumentException{
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java86throwsNotPositiveException,MathArithmeticException,DiscreteDistributionException{
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java86
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java86this(rng,newPair<T,Double>(samples.size()));
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java86this(rng,newPair<T,Double>(samples.size()-1));
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java86this(rng,newPair<T,Double>(probs));
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java86this(rng,null,null);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java86super(rng);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java86super(rng,samples);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java86throwsNotPositiveException,MathArithmeticException,MathIllegalArgumentException;
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java86RandomGeneratorrandomGenerator=rng.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java86RandomGeneratorrandomGenerator=rng.getRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java86RandomGeneratorrandomGenerator=newRandomGenerator(rng.getValue());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java86this.random=rng;
