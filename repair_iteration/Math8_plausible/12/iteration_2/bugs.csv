bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  sum.get(randomValue);  [CE]  double  cannot  be  dereferenced  [FE]        ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  return  sum.get(randomValue);  [BUGGY]    }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	return  sum.get(randomValue);	  return    samples.get(randomValue);    	non-compiled	[CE]  double  cannot  be  dereferenced	10	None	replace
2	[BUG]  [BUGGY]  return  sample.get(randomValue);  [CE]  cannot  find  symbol  sample  [FE]          ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  return  sample.get(randomValue);  [BUGGY]    }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	return  sample.get(randomValue);	  return    samples.get(randomValue);    	non-compiled	[CE]  cannot  find  symbol  sample	10	None	replace
3	[BUG]  [BUGGY]  randomGenerator  =  random.getGenerator();  sum  +=  randomGenerator.nextDouble();  [CE]  cannot  find  symbol  randomGenerator  [FE]            ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  randomGenerator  =  random.getGenerator();  sum  +=  randomGenerator.nextDouble();  [BUGGY]    return  singletons.get(i);  }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	randomGenerator  =  random.getGenerator();  sum  +=  randomGenerator.nextDouble();	      RandomGenerator    <    T>    randomGenerator    =    random.getGenerator();    sum    +=    randomGenerator.nextDouble();    	non-compiled	[CE]  cannot  find  symbol  randomGenerator	3	None	replace
4	[BUG]  [BUGGY]  return  sample(sum,  randomValue);  [CE]  no  suitable  method  found  for  sample(double,double)  [FE]          ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  return  sample(sum,  randomValue);  [BUGGY]    }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	return  sample(sum,  randomValue);	  return    sample(randomValue);    	non-compiled	[CE]  no  suitable  method  found  for  sample(double,double)	5	None	replace
5	[BUG]  [BUGGY]  return  sample(sum,  rng);  [CE]  cannot  find  symbol  rng  [FE]            ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  return  sample(sum,  rng);  [BUGGY]    }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	return  sample(sum,  rng);	  return    sample(randomValue);    	non-compiled	[CE]  cannot  find  symbol  rng	5	None	replace
6	[BUG]  [BUGGY]  RandomGenerator  <  T>  randomGenerator  =  random.getRandomGenerator();  [CE]  type  RandomGenerator  does  not  take  parameters  [FE]        ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  RandomGenerator  <  T>  randomGenerator  =  random.getRandomGenerator();  [BUGGY]    return  singletons.get(i);  }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	RandomGenerator  <  T>  randomGenerator  =  random.getRandomGenerator();	      RandomGenerator    <    T>    randomGenerator    =    random.getGenerator();    	non-compiled	[CE]  type  RandomGenerator  does  not  take  parameters	1	None	replace
7	[BUG]  [BUGGY]  RandomGenerator  randomGenerator  =  random.generator();  [CE]  cannot  find  symbol  [FE]            ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  RandomGenerator  randomGenerator  =  random.generator();  [BUGGY]    return  singletons.get(i);  }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	RandomGenerator  randomGenerator  =  random.generator();	      RandomGenerator    randomGenerator    =    random.getGenerator();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
8	[BUG]  [BUGGY]  return  randomValue.get(sum);  [CE]  double  cannot  be  dereferenced  [FE]        ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  return  randomValue.get(sum);  [BUGGY]    }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	return  randomValue.get(sum);	  return    randomValue.get(i);    	non-compiled	[CE]  double  cannot  be  dereferenced	9	None	replace
9	[BUG]  [BUGGY]  randomValue  =  sum.nextDouble();  [CE]  cannot  assign  a  value  to  final  variable  randomValue  [FE]        ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  randomValue  =  sum.nextDouble();  [BUGGY]    return  singletons.get(i);  }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	randomValue  =  sum.nextDouble();	      randomValue    =    random.nextDouble();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  randomValue	6	None	replace
10	[BUG]  [BUGGY]  randomValue  =  sum  +  random.nextDouble();  [CE]  cannot  assign  a  value  to  final  variable  randomValue  [FE]          ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  randomValue  =  sum  +  random.nextDouble();  [BUGGY]    return  singletons.get(i);  }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	randomValue  =  sum  +  random.nextDouble();	      randomValue    =    random.nextDouble();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  randomValue	6	None	replace
11	[BUG]  [BUGGY]  RandomGenerator  randomGenerator  =  random.nextRandom();  [CE]  cannot  find  symbol  [FE]          ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  RandomGenerator  randomGenerator  =  random.nextRandom();  [BUGGY]    return  singletons.get(i);  }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	RandomGenerator  randomGenerator  =  random.nextRandom();	      RandomGenerator    randomGenerator    =    random.nextDouble();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
12	[BUG]  [BUGGY]  RandomGenerator  randomGenerator  =  random.nextDouble(),  sum;  [CE]  incompatible  types  [FE]            ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  RandomGenerator  randomGenerator  =  random.nextDouble(),  sum;  [BUGGY]    return  singletons.get(i);  }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	RandomGenerator  randomGenerator  =  random.nextDouble(),  sum;	      RandomGenerator    randomGenerator    =    random.nextDouble();    	non-compiled	[CE]  incompatible  types	7	None	replace
13	[BUG]  [BUGGY]  RandomGenerator  <  T>  randomGenerator  =  random.nextRandom();  [CE]  type  RandomGenerator  does  not  take  parameters  [FE]          ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  RandomGenerator  <  T>  randomGenerator  =  random.nextRandom();  [BUGGY]    return  singletons.get(i);  }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	RandomGenerator  <  T>  randomGenerator  =  random.nextRandom();	      RandomGenerator    <    T>    randomGenerator    =    random.nextDouble();    	non-compiled	[CE]  type  RandomGenerator  does  not  take  parameters	2	None	replace
14	[BUG]  [BUGGY]  return  singletons.get(randomValue);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]        ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  return  singletons.get(randomValue);  [BUGGY]    }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	return  singletons.get(randomValue);	  return    samples.get(randomValue);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	10	None	replace
15	[BUG]  [BUGGY]  return  randomValues.get(randomValue);  [CE]  cannot  find  symbol  randomValues  [FE]          ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  return  randomValues.get(randomValue);  [BUGGY]    }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	return  randomValues.get(randomValue);	  return    samples.get(randomValue);    	non-compiled	[CE]  cannot  find  symbol  randomValues	10	None	replace
16	[BUG]  [BUGGY]  RandomGenerator  <  T>  randomGenerator  =  random.nextDouble()  +  sum;  [CE]  type  RandomGenerator  does  not  take  parameters  [FE]          ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  RandomGenerator  <  T>  randomGenerator  =  random.nextDouble()  +  sum;  [BUGGY]    return  singletons.get(i);  }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	RandomGenerator  <  T>  randomGenerator  =  random.nextDouble()  +  sum;	      RandomGenerator    <    T>    randomGenerator    =    random.nextDouble();    	non-compiled	[CE]  type  RandomGenerator  does  not  take  parameters	2	None	replace
17	[BUG]  [BUGGY]  final  RandomGenerator  <  T>  randomGenerator  =  random.getGenerator();  sum  +=  randomGenerator.nextDouble();  [CE]  type  RandomGenerator  does  not  take  parameters  [FE]            ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  final  RandomGenerator  <  T>  randomGenerator  =  random.getGenerator();  sum  +=  randomGenerator.nextDouble();  [BUGGY]    return  singletons.get(i);  }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	final  RandomGenerator  <  T>  randomGenerator  =  random.getGenerator();  sum  +=  randomGenerator.nextDouble();	      RandomGenerator    <    T>    randomGenerator    =    random.getGenerator();    sum    +=    randomGenerator.nextDouble();    	non-compiled	[CE]  type  RandomGenerator  does  not  take  parameters	3	None	replace
18	[BUG]  [BUGGY]  RandomGenerator  <  T>  randomGenerator  =  random.getGenerator(i);  [CE]  type  RandomGenerator  does  not  take  parameters  [FE]        ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  RandomGenerator  <  T>  randomGenerator  =  random.getGenerator(i);  [BUGGY]    return  singletons.get(i);  }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	RandomGenerator  <  T>  randomGenerator  =  random.getGenerator(i);	      RandomGenerator    <    T>    randomGenerator    =    random.getGenerator();    	non-compiled	[CE]  type  RandomGenerator  does  not  take  parameters	1	None	replace
19	[BUG]  [BUGGY]  return  randomValues.get(i);  [CE]  cannot  find  symbol  randomValues  [FE]        ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  return  randomValues.get(i);  [BUGGY]    }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	return  randomValues.get(i);	  return    samples.get(i);    	non-compiled	[CE]  cannot  find  symbol  randomValues	4	None	replace
20	[BUG]  [BUGGY]  RandomGenerator  randomGenerator  =  random.nextDouble()  +  sum;  [CE]  incompatible  types  [FE]          ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  RandomGenerator  randomGenerator  =  random.nextDouble()  +  sum;  [BUGGY]    return  singletons.get(i);  }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	RandomGenerator  randomGenerator  =  random.nextDouble()  +  sum;	      RandomGenerator    randomGenerator    =    random.nextDouble();    	non-compiled	[CE]  incompatible  types	7	None	replace
21	[BUG]  [BUGGY]  randomValue  =  rng.nextDouble();  [CE]  cannot  assign  a  value  to  final  variable  randomValue  [FE]        ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  randomValue  =  rng.nextDouble();  [BUGGY]    return  singletons.get(i);  }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	randomValue  =  rng.nextDouble();	      randomValue    =    random.nextDouble();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  randomValue	6	None	replace
22	[BUG]  [BUGGY]  return  sample(randomValue,  sum);  [CE]  no  suitable  method  found  for  sample(double,double)  [FE]          ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  return  sample(randomValue,  sum);  [BUGGY]    }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	return  sample(randomValue,  sum);	  return    sample(randomValue);    	non-compiled	[CE]  no  suitable  method  found  for  sample(double,double)	5	None	replace
23	[BUG]  [BUGGY]  return  samples.get(sum);  [CE]  cannot  find  symbol  samples  [FE]        ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  return  samples.get(sum);  [BUGGY]    }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	return  samples.get(sum);	  return    samples.get(randomValue);    	non-compiled	[CE]  cannot  find  symbol  samples	10	None	replace
24	[BUG]  [BUGGY]  return  sampleSingletons.get(randomValue);  [CE]  cannot  find  symbol  sampleSingletons  [FE]          ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  return  sampleSingletons.get(randomValue);  [BUGGY]    }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	return  sampleSingletons.get(randomValue);	  return    samples.get(randomValue);    	non-compiled	[CE]  cannot  find  symbol  sampleSingletons	10	None	replace
25	[BUG]  [BUGGY]  randomValue  =  Sum.nextDouble();  [CE]  cannot  assign  a  value  to  final  variable  randomValue  [FE]        ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  randomValue  =  Sum.nextDouble();  [BUGGY]    return  singletons.get(i);  }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	randomValue  =  Sum.nextDouble();	      randomValue    =    random.nextDouble();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  randomValue	6	None	replace
26	[BUG]  [BUGGY]  RandomGenerator  <  T>  randomGenerator  =  random.nextDouble()  -  sum;  [CE]  type  RandomGenerator  does  not  take  parameters  [FE]          ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  RandomGenerator  <  T>  randomGenerator  =  random.nextDouble()  -  sum;  [BUGGY]    return  singletons.get(i);  }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	RandomGenerator  <  T>  randomGenerator  =  random.nextDouble()  -  sum;	      RandomGenerator    <    T>    randomGenerator    =    random.nextDouble();    	non-compiled	[CE]  type  RandomGenerator  does  not  take  parameters	2	None	replace
27	[BUG]  [BUGGY]  RandomGenerator  <  T>  randomGenerator  =  random.nextGenerator();  [CE]  type  RandomGenerator  does  not  take  parameters  [FE]        ArrayStoreException    [CONTEXT]    public  T  sample()  {  final  double  randomValue  =  random.nextDouble();  double  sum  =  0;  for  (int  i  =  0;  i  <  probabilities.length;  i++)  {  sum  +=  probabilities[i];  if  (randomValue  <  sum)  {    [BUGGY]  RandomGenerator  <  T>  randomGenerator  =  random.nextGenerator();  [BUGGY]    return  singletons.get(i);  }  }    return  singletons.get(singletons.size()  -  1);  }  [CLASS]  DiscreteDistribution  [METHOD]  sample  [RETURN_TYPE]  T  [VARIABLES]  List  samples  singletons  boolean  double[]  probabilities  probs  RandomGenerator  random  rng  double  randomValue  sum  int  i  	projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java	0.7071067811865475	163	163	1	replace	RandomGenerator  <  T>  randomGenerator  =  random.nextGenerator();	      RandomGenerator    <    T>    randomGenerator    =    random.getGenerator();    	non-compiled	[CE]  type  RandomGenerator  does  not  take  parameters	1	None	replace
