projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java93finalPair<T,Double>sample=samples.get(i);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java93Pair<T,Double>sample=samples.get(i);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java93
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java93RandomGenerator<Pair<T,Double>sample=samples.get(i);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java93RandomGenerator<T>random=rng.getRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java93RandomGenerator<T>random=newRandomGenerator(random,random.nextDouble());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java93RandomGeneratorrandomGenerator=rng.getRandomGenerator();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java93RandomGeneratorrandomGenerator=rng.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java93RandomGeneratorrandomGenerator=rng.getRandomGenerator();probs[i]=randomGenerator.nextDouble();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java93finalPair<T,Double>sample=samples.get(i+1);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java93RandomGeneratorrandomGenerator=newRandomGenerator(samples[i]);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java93Pair<T,Double>sample=samples.get(i+1);
