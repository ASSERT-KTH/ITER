projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java98probs[i]=sample.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java98probs[i]=sample.getValue()+1;
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java98
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java98Pair<T,Double>sample=samples.get(i);
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java98RandomGenerator<T>randomGenerator=newRandomGenerator<T>(singletons.size());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java98Pair<T,Double>probs[]=sample.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java98probs[i]=sample.getKey();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java98RandomGeneratorrandomGenerator=RandomGenerator.getInstance();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java98Pair<T,Double>probs=sample.getValue();
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java98Pair<T,Double>probs=newPair<T,Double>(sample.getKey());
projects/Math8/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution.java98RandomGenerator<T>randomGenerator=RandomGenerator.getInstance();
